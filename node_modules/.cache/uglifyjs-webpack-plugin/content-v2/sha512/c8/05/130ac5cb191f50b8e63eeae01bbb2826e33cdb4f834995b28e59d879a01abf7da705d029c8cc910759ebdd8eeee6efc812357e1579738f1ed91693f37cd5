{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[1],Array(59).concat([function(module,exports){eval(\"/**\\n * @module zrender/core/util\\n */\\n// 用于处理merge时无法遍历Date等对象的问题\\nvar BUILTIN_OBJECT = {\\n  '[object Function]': 1,\\n  '[object RegExp]': 1,\\n  '[object Date]': 1,\\n  '[object Error]': 1,\\n  '[object CanvasGradient]': 1,\\n  '[object CanvasPattern]': 1,\\n  // For node-canvas\\n  '[object Image]': 1,\\n  '[object Canvas]': 1\\n};\\nvar TYPED_ARRAY = {\\n  '[object Int8Array]': 1,\\n  '[object Uint8Array]': 1,\\n  '[object Uint8ClampedArray]': 1,\\n  '[object Int16Array]': 1,\\n  '[object Uint16Array]': 1,\\n  '[object Int32Array]': 1,\\n  '[object Uint32Array]': 1,\\n  '[object Float32Array]': 1,\\n  '[object Float64Array]': 1\\n};\\nvar objToString = Object.prototype.toString;\\nvar arrayProto = Array.prototype;\\nvar nativeForEach = arrayProto.forEach;\\nvar nativeFilter = arrayProto.filter;\\nvar nativeSlice = arrayProto.slice;\\nvar nativeMap = arrayProto.map;\\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\\n\\nvar methods = {};\\n\\nfunction $override(name, fn) {\\n  // Clear ctx instance for different environment\\n  if (name === 'createCanvas') {\\n    _ctx = null;\\n  }\\n\\n  methods[name] = fn;\\n}\\n/**\\n * Those data types can be cloned:\\n *     Plain object, Array, TypedArray, number, string, null, undefined.\\n * Those data types will be assgined using the orginal data:\\n *     BUILTIN_OBJECT\\n * Instance of user defined class will be cloned to a plain object, without\\n * properties in prototype.\\n * Other data types is not supported (not sure what will happen).\\n *\\n * Caution: do not support clone Date, for performance consideration.\\n * (There might be a large number of date in `series.data`).\\n * So date should not be modified in and out of echarts.\\n *\\n * @param {*} source\\n * @return {*} new\\n */\\n\\n\\nfunction clone(source) {\\n  if (source == null || typeof source != 'object') {\\n    return source;\\n  }\\n\\n  var result = source;\\n  var typeStr = objToString.call(source);\\n\\n  if (typeStr === '[object Array]') {\\n    if (!isPrimitive(source)) {\\n      result = [];\\n\\n      for (var i = 0, len = source.length; i < len; i++) {\\n        result[i] = clone(source[i]);\\n      }\\n    }\\n  } else if (TYPED_ARRAY[typeStr]) {\\n    if (!isPrimitive(source)) {\\n      var Ctor = source.constructor;\\n\\n      if (source.constructor.from) {\\n        result = Ctor.from(source);\\n      } else {\\n        result = new Ctor(source.length);\\n\\n        for (var i = 0, len = source.length; i < len; i++) {\\n          result[i] = clone(source[i]);\\n        }\\n      }\\n    }\\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\\n    result = {};\\n\\n    for (var key in source) {\\n      if (source.hasOwnProperty(key)) {\\n        result[key] = clone(source[key]);\\n      }\\n    }\\n  }\\n\\n  return result;\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {*} target\\n * @param {*} source\\n * @param {boolean} [overwrite=false]\\n */\\n\\n\\nfunction merge(target, source, overwrite) {\\n  // We should escapse that source is string\\n  // and enter for ... in ...\\n  if (!isObject(source) || !isObject(target)) {\\n    return overwrite ? clone(source) : target;\\n  }\\n\\n  for (var key in source) {\\n    if (source.hasOwnProperty(key)) {\\n      var targetProp = target[key];\\n      var sourceProp = source[key];\\n\\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\\n        // 如果需要递归覆盖，就递归调用merge\\n        merge(targetProp, sourceProp, overwrite);\\n      } else if (overwrite || !(key in target)) {\\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\\n        target[key] = clone(source[key], true);\\n      }\\n    }\\n  }\\n\\n  return target;\\n}\\n/**\\n * @param {Array} targetAndSources The first item is target, and the rests are source.\\n * @param {boolean} [overwrite=false]\\n * @return {*} target\\n */\\n\\n\\nfunction mergeAll(targetAndSources, overwrite) {\\n  var result = targetAndSources[0];\\n\\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\\n    result = merge(result, targetAndSources[i], overwrite);\\n  }\\n\\n  return result;\\n}\\n/**\\n * @param {*} target\\n * @param {*} source\\n * @memberOf module:zrender/core/util\\n */\\n\\n\\nfunction extend(target, source) {\\n  for (var key in source) {\\n    if (source.hasOwnProperty(key)) {\\n      target[key] = source[key];\\n    }\\n  }\\n\\n  return target;\\n}\\n/**\\n * @param {*} target\\n * @param {*} source\\n * @param {boolean} [overlay=false]\\n * @memberOf module:zrender/core/util\\n */\\n\\n\\nfunction defaults(target, source, overlay) {\\n  for (var key in source) {\\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\\n      target[key] = source[key];\\n    }\\n  }\\n\\n  return target;\\n}\\n\\nvar createCanvas = function () {\\n  return methods.createCanvas();\\n};\\n\\nmethods.createCanvas = function () {\\n  return document.createElement('canvas');\\n}; // FIXME\\n\\n\\nvar _ctx;\\n\\nfunction getContext() {\\n  if (!_ctx) {\\n    // Use util.createCanvas instead of createCanvas\\n    // because createCanvas may be overwritten in different environment\\n    _ctx = createCanvas().getContext('2d');\\n  }\\n\\n  return _ctx;\\n}\\n/**\\n * 查询数组中元素的index\\n * @memberOf module:zrender/core/util\\n */\\n\\n\\nfunction indexOf(array, value) {\\n  if (array) {\\n    if (array.indexOf) {\\n      return array.indexOf(value);\\n    }\\n\\n    for (var i = 0, len = array.length; i < len; i++) {\\n      if (array[i] === value) {\\n        return i;\\n      }\\n    }\\n  }\\n\\n  return -1;\\n}\\n/**\\n * 构造类继承关系\\n *\\n * @memberOf module:zrender/core/util\\n * @param {Function} clazz 源类\\n * @param {Function} baseClazz 基类\\n */\\n\\n\\nfunction inherits(clazz, baseClazz) {\\n  var clazzPrototype = clazz.prototype;\\n\\n  function F() {}\\n\\n  F.prototype = baseClazz.prototype;\\n  clazz.prototype = new F();\\n\\n  for (var prop in clazzPrototype) {\\n    clazz.prototype[prop] = clazzPrototype[prop];\\n  }\\n\\n  clazz.prototype.constructor = clazz;\\n  clazz.superClass = baseClazz;\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {Object|Function} target\\n * @param {Object|Function} sorce\\n * @param {boolean} overlay\\n */\\n\\n\\nfunction mixin(target, source, overlay) {\\n  target = 'prototype' in target ? target.prototype : target;\\n  source = 'prototype' in source ? source.prototype : source;\\n  defaults(target, source, overlay);\\n}\\n/**\\n * Consider typed array.\\n * @param {Array|TypedArray} data\\n */\\n\\n\\nfunction isArrayLike(data) {\\n  if (!data) {\\n    return;\\n  }\\n\\n  if (typeof data == 'string') {\\n    return false;\\n  }\\n\\n  return typeof data.length == 'number';\\n}\\n/**\\n * 数组或对象遍历\\n * @memberOf module:zrender/core/util\\n * @param {Object|Array} obj\\n * @param {Function} cb\\n * @param {*} [context]\\n */\\n\\n\\nfunction each(obj, cb, context) {\\n  if (!(obj && cb)) {\\n    return;\\n  }\\n\\n  if (obj.forEach && obj.forEach === nativeForEach) {\\n    obj.forEach(cb, context);\\n  } else if (obj.length === +obj.length) {\\n    for (var i = 0, len = obj.length; i < len; i++) {\\n      cb.call(context, obj[i], i, obj);\\n    }\\n  } else {\\n    for (var key in obj) {\\n      if (obj.hasOwnProperty(key)) {\\n        cb.call(context, obj[key], key, obj);\\n      }\\n    }\\n  }\\n}\\n/**\\n * 数组映射\\n * @memberOf module:zrender/core/util\\n * @param {Array} obj\\n * @param {Function} cb\\n * @param {*} [context]\\n * @return {Array}\\n */\\n\\n\\nfunction map(obj, cb, context) {\\n  if (!(obj && cb)) {\\n    return;\\n  }\\n\\n  if (obj.map && obj.map === nativeMap) {\\n    return obj.map(cb, context);\\n  } else {\\n    var result = [];\\n\\n    for (var i = 0, len = obj.length; i < len; i++) {\\n      result.push(cb.call(context, obj[i], i, obj));\\n    }\\n\\n    return result;\\n  }\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {Array} obj\\n * @param {Function} cb\\n * @param {Object} [memo]\\n * @param {*} [context]\\n * @return {Array}\\n */\\n\\n\\nfunction reduce(obj, cb, memo, context) {\\n  if (!(obj && cb)) {\\n    return;\\n  }\\n\\n  if (obj.reduce && obj.reduce === nativeReduce) {\\n    return obj.reduce(cb, memo, context);\\n  } else {\\n    for (var i = 0, len = obj.length; i < len; i++) {\\n      memo = cb.call(context, memo, obj[i], i, obj);\\n    }\\n\\n    return memo;\\n  }\\n}\\n/**\\n * 数组过滤\\n * @memberOf module:zrender/core/util\\n * @param {Array} obj\\n * @param {Function} cb\\n * @param {*} [context]\\n * @return {Array}\\n */\\n\\n\\nfunction filter(obj, cb, context) {\\n  if (!(obj && cb)) {\\n    return;\\n  }\\n\\n  if (obj.filter && obj.filter === nativeFilter) {\\n    return obj.filter(cb, context);\\n  } else {\\n    var result = [];\\n\\n    for (var i = 0, len = obj.length; i < len; i++) {\\n      if (cb.call(context, obj[i], i, obj)) {\\n        result.push(obj[i]);\\n      }\\n    }\\n\\n    return result;\\n  }\\n}\\n/**\\n * 数组项查找\\n * @memberOf module:zrender/core/util\\n * @param {Array} obj\\n * @param {Function} cb\\n * @param {*} [context]\\n * @return {*}\\n */\\n\\n\\nfunction find(obj, cb, context) {\\n  if (!(obj && cb)) {\\n    return;\\n  }\\n\\n  for (var i = 0, len = obj.length; i < len; i++) {\\n    if (cb.call(context, obj[i], i, obj)) {\\n      return obj[i];\\n    }\\n  }\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {Function} func\\n * @param {*} context\\n * @return {Function}\\n */\\n\\n\\nfunction bind(func, context) {\\n  var args = nativeSlice.call(arguments, 2);\\n  return function () {\\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\\n  };\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {Function} func\\n * @return {Function}\\n */\\n\\n\\nfunction curry(func) {\\n  var args = nativeSlice.call(arguments, 1);\\n  return function () {\\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\\n  };\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {*} value\\n * @return {boolean}\\n */\\n\\n\\nfunction isArray(value) {\\n  return objToString.call(value) === '[object Array]';\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {*} value\\n * @return {boolean}\\n */\\n\\n\\nfunction isFunction(value) {\\n  return typeof value === 'function';\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {*} value\\n * @return {boolean}\\n */\\n\\n\\nfunction isString(value) {\\n  return objToString.call(value) === '[object String]';\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {*} value\\n * @return {boolean}\\n */\\n\\n\\nfunction isObject(value) {\\n  // Avoid a V8 JIT bug in Chrome 19-20.\\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\\n  var type = typeof value;\\n  return type === 'function' || !!value && type == 'object';\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {*} value\\n * @return {boolean}\\n */\\n\\n\\nfunction isBuiltInObject(value) {\\n  return !!BUILTIN_OBJECT[objToString.call(value)];\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {*} value\\n * @return {boolean}\\n */\\n\\n\\nfunction isTypedArray(value) {\\n  return !!TYPED_ARRAY[objToString.call(value)];\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {*} value\\n * @return {boolean}\\n */\\n\\n\\nfunction isDom(value) {\\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\\n}\\n/**\\n * Whether is exactly NaN. Notice isNaN('a') returns true.\\n * @param {*} value\\n * @return {boolean}\\n */\\n\\n\\nfunction eqNaN(value) {\\n  return value !== value;\\n}\\n/**\\n * If value1 is not null, then return value1, otherwise judget rest of values.\\n * Low performance.\\n * @memberOf module:zrender/core/util\\n * @return {*} Final value\\n */\\n\\n\\nfunction retrieve(values) {\\n  for (var i = 0, len = arguments.length; i < len; i++) {\\n    if (arguments[i] != null) {\\n      return arguments[i];\\n    }\\n  }\\n}\\n\\nfunction retrieve2(value0, value1) {\\n  return value0 != null ? value0 : value1;\\n}\\n\\nfunction retrieve3(value0, value1, value2) {\\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {Array} arr\\n * @param {number} startIndex\\n * @param {number} endIndex\\n * @return {Array}\\n */\\n\\n\\nfunction slice() {\\n  return Function.call.apply(nativeSlice, arguments);\\n}\\n/**\\n * Normalize css liked array configuration\\n * e.g.\\n *  3 => [3, 3, 3, 3]\\n *  [4, 2] => [4, 2, 4, 2]\\n *  [4, 3, 2] => [4, 3, 2, 3]\\n * @param {number|Array.<number>} val\\n * @return {Array.<number>}\\n */\\n\\n\\nfunction normalizeCssArray(val) {\\n  if (typeof val === 'number') {\\n    return [val, val, val, val];\\n  }\\n\\n  var len = val.length;\\n\\n  if (len === 2) {\\n    // vertical | horizontal\\n    return [val[0], val[1], val[0], val[1]];\\n  } else if (len === 3) {\\n    // top | horizontal | bottom\\n    return [val[0], val[1], val[2], val[1]];\\n  }\\n\\n  return val;\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {boolean} condition\\n * @param {string} message\\n */\\n\\n\\nfunction assert(condition, message) {\\n  if (!condition) {\\n    throw new Error(message);\\n  }\\n}\\n/**\\n * @memberOf module:zrender/core/util\\n * @param {string} str string to be trimed\\n * @return {string} trimed string\\n */\\n\\n\\nfunction trim(str) {\\n  if (str == null) {\\n    return null;\\n  } else if (typeof str.trim === 'function') {\\n    return str.trim();\\n  } else {\\n    return str.replace(/^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g, '');\\n  }\\n}\\n\\nvar primitiveKey = '__ec_primitive__';\\n/**\\n * Set an object as primitive to be ignored traversing children in clone or merge\\n */\\n\\nfunction setAsPrimitive(obj) {\\n  obj[primitiveKey] = true;\\n}\\n\\nfunction isPrimitive(obj) {\\n  return obj[primitiveKey];\\n}\\n/**\\n * @constructor\\n * @param {Object} obj Only apply `ownProperty`.\\n */\\n\\n\\nfunction HashMap(obj) {\\n  var isArr = isArray(obj); // Key should not be set on this, otherwise\\n  // methods get/set/... may be overrided.\\n\\n  this.data = {};\\n  var thisMap = this;\\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\\n\\n  function visit(value, key) {\\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\\n  }\\n}\\n\\nHashMap.prototype = {\\n  constructor: HashMap,\\n  // Do not provide `has` method to avoid defining what is `has`.\\n  // (We usually treat `null` and `undefined` as the same, different\\n  // from ES6 Map).\\n  get: function (key) {\\n    return this.data.hasOwnProperty(key) ? this.data[key] : null;\\n  },\\n  set: function (key, value) {\\n    // Comparing with invocation chaining, `return value` is more commonly\\n    // used in this case: `var someVal = map.set('a', genVal());`\\n    return this.data[key] = value;\\n  },\\n  // Although util.each can be performed on this hashMap directly, user\\n  // should not use the exposed keys, who are prefixed.\\n  each: function (cb, context) {\\n    context !== void 0 && (cb = bind(cb, context));\\n\\n    for (var key in this.data) {\\n      this.data.hasOwnProperty(key) && cb(this.data[key], key);\\n    }\\n  },\\n  // Do not use this method if performance sensitive.\\n  removeKey: function (key) {\\n    delete this.data[key];\\n  }\\n};\\n\\nfunction createHashMap(obj) {\\n  return new HashMap(obj);\\n}\\n\\nfunction concatArray(a, b) {\\n  var newArray = new a.constructor(a.length + b.length);\\n\\n  for (var i = 0; i < a.length; i++) {\\n    newArray[i] = a[i];\\n  }\\n\\n  var offset = a.length;\\n\\n  for (i = 0; i < b.length; i++) {\\n    newArray[i + offset] = b[i];\\n  }\\n\\n  return newArray;\\n}\\n\\nfunction noop() {}\\n\\nexports.$override = $override;\\nexports.clone = clone;\\nexports.merge = merge;\\nexports.mergeAll = mergeAll;\\nexports.extend = extend;\\nexports.defaults = defaults;\\nexports.createCanvas = createCanvas;\\nexports.getContext = getContext;\\nexports.indexOf = indexOf;\\nexports.inherits = inherits;\\nexports.mixin = mixin;\\nexports.isArrayLike = isArrayLike;\\nexports.each = each;\\nexports.map = map;\\nexports.reduce = reduce;\\nexports.filter = filter;\\nexports.find = find;\\nexports.bind = bind;\\nexports.curry = curry;\\nexports.isArray = isArray;\\nexports.isFunction = isFunction;\\nexports.isString = isString;\\nexports.isObject = isObject;\\nexports.isBuiltInObject = isBuiltInObject;\\nexports.isTypedArray = isTypedArray;\\nexports.isDom = isDom;\\nexports.eqNaN = eqNaN;\\nexports.retrieve = retrieve;\\nexports.retrieve2 = retrieve2;\\nexports.retrieve3 = retrieve3;\\nexports.slice = slice;\\nexports.normalizeCssArray = normalizeCssArray;\\nexports.assert = assert;\\nexports.trim = trim;\\nexports.setAsPrimitive = setAsPrimitive;\\nexports.isPrimitive = isPrimitive;\\nexports.createHashMap = createHashMap;\\nexports.concatArray = concatArray;\\nexports.noop = noop;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///59\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar env = __webpack_require__(66);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar each = zrUtil.each;\\nvar isObject = zrUtil.isObject;\\nvar isArray = zrUtil.isArray;\\n/**\\n * Make the name displayable. But we should\\n * make sure it is not duplicated with user\\n * specified name, so use '\\\\0';\\n */\\n\\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\\\0';\\n/**\\n * If value is not array, then translate it to array.\\n * @param  {*} value\\n * @return {Array} [value] or value\\n */\\n\\nfunction normalizeToArray(value) {\\n  return value instanceof Array ? value : value == null ? [] : [value];\\n}\\n/**\\n * Sync default option between normal and emphasis like `position` and `show`\\n * In case some one will write code like\\n *     label: {\\n *          show: false,\\n *          position: 'outside',\\n *          fontSize: 18\\n *     },\\n *     emphasis: {\\n *          label: { show: true }\\n *     }\\n * @param {Object} opt\\n * @param {string} key\\n * @param {Array.<string>} subOpts\\n */\\n\\n\\nfunction defaultEmphasis(opt, key, subOpts) {\\n  // Caution: performance sensitive.\\n  if (opt) {\\n    opt[key] = opt[key] || {};\\n    opt.emphasis = opt.emphasis || {};\\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\\n\\n    for (var i = 0, len = subOpts.length; i < len; i++) {\\n      var subOptName = subOpts[i];\\n\\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\\n      }\\n    }\\n  }\\n}\\n\\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\\n//     // FIXME: deprecated, check and remove it.\\n//     'textStyle'\\n// ]);\\n\\n/**\\n * The method do not ensure performance.\\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\\n * This helper method retieves value from data.\\n * @param {string|number|Date|Array|Object} dataItem\\n * @return {number|string|Date|Array.<number|string|Date>}\\n */\\n\\nfunction getDataItemValue(dataItem) {\\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\\n}\\n/**\\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\\n * This helper method determine if dataItem has extra option besides value\\n * @param {string|number|Date|Array|Object} dataItem\\n */\\n\\n\\nfunction isDataItemOption(dataItem) {\\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\\n}\\n/**\\n * Mapping to exists for merge.\\n *\\n * @public\\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\\n * @param {Object|Array.<Object>} newCptOptions\\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\\n *                          index of which is the same as exists.\\n */\\n\\n\\nfunction mappingToExists(exists, newCptOptions) {\\n  // Mapping by the order by original option (but not order of\\n  // new option) in merge mode. Because we should ensure\\n  // some specified index (like xAxisIndex) is consistent with\\n  // original option, which is easy to understand, espatially in\\n  // media query. And in most case, merge option is used to\\n  // update partial option but not be expected to change order.\\n  newCptOptions = (newCptOptions || []).slice();\\n  var result = zrUtil.map(exists || [], function (obj, index) {\\n    return {\\n      exist: obj\\n    };\\n  }); // Mapping by id or name if specified.\\n\\n  each(newCptOptions, function (cptOption, index) {\\n    if (!isObject(cptOption)) {\\n      return;\\n    } // id has highest priority.\\n\\n\\n    for (var i = 0; i < result.length; i++) {\\n      if (!result[i].option // Consider name: two map to one.\\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\\n        result[i].option = cptOption;\\n        newCptOptions[index] = null;\\n        return;\\n      }\\n    }\\n\\n    for (var i = 0; i < result.length; i++) {\\n      var exist = result[i].exist;\\n\\n      if (!result[i].option // Consider name: two map to one.\\n      // Can not match when both ids exist but different.\\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\\n        result[i].option = cptOption;\\n        newCptOptions[index] = null;\\n        return;\\n      }\\n    }\\n  }); // Otherwise mapping by index.\\n\\n  each(newCptOptions, function (cptOption, index) {\\n    if (!isObject(cptOption)) {\\n      return;\\n    }\\n\\n    var i = 0;\\n\\n    for (; i < result.length; i++) {\\n      var exist = result[i].exist;\\n\\n      if (!result[i].option // Existing model that already has id should be able to\\n      // mapped to (because after mapping performed model may\\n      // be assigned with a id, whish should not affect next\\n      // mapping), except those has inner id.\\n      && !isIdInner(exist) // Caution:\\n      // Do not overwrite id. But name can be overwritten,\\n      // because axis use name as 'show label text'.\\n      // 'exist' always has id and name and we dont\\n      // need to check it.\\n      && cptOption.id == null) {\\n        result[i].option = cptOption;\\n        break;\\n      }\\n    }\\n\\n    if (i >= result.length) {\\n      result.push({\\n        option: cptOption\\n      });\\n    }\\n  });\\n  return result;\\n}\\n/**\\n * Make id and name for mapping result (result of mappingToExists)\\n * into `keyInfo` field.\\n *\\n * @public\\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\\n *                          which order is the same as exists.\\n * @return {Array.<Object>} The input.\\n */\\n\\n\\nfunction makeIdAndName(mapResult) {\\n  // We use this id to hash component models and view instances\\n  // in echarts. id can be specified by user, or auto generated.\\n  // The id generation rule ensures new view instance are able\\n  // to mapped to old instance when setOption are called in\\n  // no-merge mode. So we generate model id by name and plus\\n  // type in view id.\\n  // name can be duplicated among components, which is convenient\\n  // to specify multi components (like series) by one name.\\n  // Ensure that each id is distinct.\\n  var idMap = zrUtil.createHashMap();\\n  each(mapResult, function (item, index) {\\n    var existCpt = item.exist;\\n    existCpt && idMap.set(existCpt.id, item);\\n  });\\n  each(mapResult, function (item, index) {\\n    var opt = item.option;\\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\\n    opt && opt.id != null && idMap.set(opt.id, item);\\n    !item.keyInfo && (item.keyInfo = {});\\n  }); // Make name and id.\\n\\n  each(mapResult, function (item, index) {\\n    var existCpt = item.exist;\\n    var opt = item.option;\\n    var keyInfo = item.keyInfo;\\n\\n    if (!isObject(opt)) {\\n      return;\\n    } // name can be overwitten. Consider case: axis.name = '20km'.\\n    // But id generated by name will not be changed, which affect\\n    // only in that case: setOption with 'not merge mode' and view\\n    // instance will be recreated, which can be accepted.\\n\\n\\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\\n    // because name may be used like in color pallet.\\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\\n\\n    if (existCpt) {\\n      keyInfo.id = existCpt.id;\\n    } else if (opt.id != null) {\\n      keyInfo.id = opt.id + '';\\n    } else {\\n      // Consider this situatoin:\\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\\n      // Series with the same name between optionA and optionB\\n      // should be mapped.\\n      var idNum = 0;\\n\\n      do {\\n        keyInfo.id = '\\\\0' + keyInfo.name + '\\\\0' + idNum++;\\n      } while (idMap.get(keyInfo.id));\\n    }\\n\\n    idMap.set(keyInfo.id, item);\\n  });\\n}\\n\\nfunction isNameSpecified(componentModel) {\\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\\n\\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\\n}\\n/**\\n * @public\\n * @param {Object} cptOption\\n * @return {boolean}\\n */\\n\\n\\nfunction isIdInner(cptOption) {\\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\\\0_ec_\\\\0') === 0;\\n}\\n/**\\n * A helper for removing duplicate items between batchA and batchB,\\n * and in themselves, and categorize by series.\\n *\\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\\n */\\n\\n\\nfunction compressBatches(batchA, batchB) {\\n  var mapA = {};\\n  var mapB = {};\\n  makeMap(batchA || [], mapA);\\n  makeMap(batchB || [], mapB, mapA);\\n  return [mapToArray(mapA), mapToArray(mapB)];\\n\\n  function makeMap(sourceBatch, map, otherMap) {\\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\\n      var seriesId = sourceBatch[i].seriesId;\\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\\n      var otherDataIndices = otherMap && otherMap[seriesId];\\n\\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\\n        var dataIndex = dataIndices[j];\\n\\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\\n          otherDataIndices[dataIndex] = null;\\n        } else {\\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\\n        }\\n      }\\n    }\\n  }\\n\\n  function mapToArray(map, isData) {\\n    var result = [];\\n\\n    for (var i in map) {\\n      if (map.hasOwnProperty(i) && map[i] != null) {\\n        if (isData) {\\n          result.push(+i);\\n        } else {\\n          var dataIndices = mapToArray(map[i], true);\\n          dataIndices.length && result.push({\\n            seriesId: i,\\n            dataIndex: dataIndices\\n          });\\n        }\\n      }\\n    }\\n\\n    return result;\\n  }\\n}\\n/**\\n * @param {module:echarts/data/List} data\\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\\n *                         each of which can be Array or primary type.\\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\\n */\\n\\n\\nfunction queryDataIndex(data, payload) {\\n  if (payload.dataIndexInside != null) {\\n    return payload.dataIndexInside;\\n  } else if (payload.dataIndex != null) {\\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\\n      return data.indexOfRawIndex(value);\\n    }) : data.indexOfRawIndex(payload.dataIndex);\\n  } else if (payload.name != null) {\\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\\n      return data.indexOfName(value);\\n    }) : data.indexOfName(payload.name);\\n  }\\n}\\n/**\\n * Enable property storage to any host object.\\n * Notice: Serialization is not supported.\\n *\\n * For example:\\n * var inner = zrUitl.makeInner();\\n *\\n * function some1(hostObj) {\\n *      inner(hostObj).someProperty = 1212;\\n *      ...\\n * }\\n * function some2() {\\n *      var fields = inner(this);\\n *      fields.someProperty1 = 1212;\\n *      fields.someProperty2 = 'xx';\\n *      ...\\n * }\\n *\\n * @return {Function}\\n */\\n\\n\\nfunction makeInner() {\\n  // Consider different scope by es module import.\\n  var key = '__\\\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\\n  return function (hostObj) {\\n    return hostObj[key] || (hostObj[key] = {});\\n  };\\n}\\n\\nvar innerUniqueIndex = 0;\\n/**\\n * @param {module:echarts/model/Global} ecModel\\n * @param {string|Object} finder\\n *        If string, e.g., 'geo', means {geoIndex: 0}.\\n *        If Object, could contain some of these properties below:\\n *        {\\n *            seriesIndex, seriesId, seriesName,\\n *            geoIndex, geoId, geoName,\\n *            bmapIndex, bmapId, bmapName,\\n *            xAxisIndex, xAxisId, xAxisName,\\n *            yAxisIndex, yAxisId, yAxisName,\\n *            gridIndex, gridId, gridName,\\n *            ... (can be extended)\\n *        }\\n *        Each properties can be number|string|Array.<number>|Array.<string>\\n *        For example, a finder could be\\n *        {\\n *            seriesIndex: 3,\\n *            geoId: ['aa', 'cc'],\\n *            gridName: ['xx', 'rr']\\n *        }\\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\\n *        If nothing or null/undefined specified, return nothing.\\n * @param {Object} [opt]\\n * @param {string} [opt.defaultMainType]\\n * @param {Array.<string>} [opt.includeMainTypes]\\n * @return {Object} result like:\\n *        {\\n *            seriesModels: [seriesModel1, seriesModel2],\\n *            seriesModel: seriesModel1, // The first model\\n *            geoModels: [geoModel1, geoModel2],\\n *            geoModel: geoModel1, // The first model\\n *            ...\\n *        }\\n */\\n\\nfunction parseFinder(ecModel, finder, opt) {\\n  if (zrUtil.isString(finder)) {\\n    var obj = {};\\n    obj[finder + 'Index'] = 0;\\n    finder = obj;\\n  }\\n\\n  var defaultMainType = opt && opt.defaultMainType;\\n\\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\\n    finder[defaultMainType + 'Index'] = 0;\\n  }\\n\\n  var result = {};\\n  each(finder, function (value, key) {\\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\\n\\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\\n      result[key] = value;\\n      return;\\n    }\\n\\n    var parsedKey = key.match(/^(\\\\w+)(Index|Id|Name)$/) || [];\\n    var mainType = parsedKey[1];\\n    var queryType = (parsedKey[2] || '').toLowerCase();\\n\\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\\n      return;\\n    }\\n\\n    var queryParam = {\\n      mainType: mainType\\n    };\\n\\n    if (queryType !== 'index' || value !== 'all') {\\n      queryParam[queryType] = value;\\n    }\\n\\n    var models = ecModel.queryComponents(queryParam);\\n    result[mainType + 'Models'] = models;\\n    result[mainType + 'Model'] = models[0];\\n  });\\n  return result;\\n}\\n\\nfunction has(obj, prop) {\\n  return obj && obj.hasOwnProperty(prop);\\n}\\n\\nfunction setAttribute(dom, key, value) {\\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\\n}\\n\\nfunction getAttribute(dom, key) {\\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\\n}\\n\\nfunction getTooltipRenderMode(renderModeOption) {\\n  if (renderModeOption === 'auto') {\\n    // Using html when `document` exists, use richText otherwise\\n    return env.domSupported ? 'html' : 'richText';\\n  } else {\\n    return renderModeOption || 'html';\\n  }\\n}\\n\\nexports.normalizeToArray = normalizeToArray;\\nexports.defaultEmphasis = defaultEmphasis;\\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\\nexports.getDataItemValue = getDataItemValue;\\nexports.isDataItemOption = isDataItemOption;\\nexports.mappingToExists = mappingToExists;\\nexports.makeIdAndName = makeIdAndName;\\nexports.isNameSpecified = isNameSpecified;\\nexports.isIdInner = isIdInner;\\nexports.compressBatches = compressBatches;\\nexports.queryDataIndex = queryDataIndex;\\nexports.makeInner = makeInner;\\nexports.parseFinder = parseFinder;\\nexports.setAttribute = setAttribute;\\nexports.getAttribute = getAttribute;\\nexports.getTooltipRenderMode = getTooltipRenderMode;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvdXRpbC9tb2RlbC5qcz9lMGQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDLFVBQVUsbUJBQU8sQ0FBQyxFQUFzQjs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksRUFBRTtBQUNkLFlBQVksTUFBTTtBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxlQUFlO0FBQzFCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEOztBQUVoRCx5Q0FBeUMsU0FBUztBQUNsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsOGFBQThhO0FBQzlhO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QixXQUFXLGVBQWUsZUFBZTtBQUN0RTtBQUNBLFdBQVcsZ0NBQWdDO0FBQzNDLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixXQUFXLGVBQWUsZUFBZTtBQUN0RTtBQUNBLFdBQVcsZ0NBQWdDO0FBQzNDOzs7QUFHQTtBQUNBLDREQUE0RDtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNEQUFzRDtBQUNqRSxXQUFXLHNCQUFzQjtBQUNqQyxZQUFZLGVBQWUsZ0JBQWdCLHdCQUF3QixJQUFJO0FBQ3ZFO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsRUFBRTs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTCxtQkFBbUIsbUJBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixtQkFBbUI7QUFDdEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsRUFBRTs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxVQUFVLG1CQUFtQjtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZSxnQkFBZ0Isd0JBQXdCLElBQUk7QUFDdEU7QUFDQSxZQUFZLGVBQWU7QUFDM0I7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsR0FBRyxFQUFFOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLHFCQUFxQixVQUFVLEdBQUcsVUFBVSxHQUFHLEdBQUc7QUFDbEQsb0JBQW9CLEdBQUcsR0FBRyxVQUFVLEdBQUcsVUFBVTtBQUNqRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBLGlDQUFpQzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZSxnQkFBZ0IsbUNBQW1DO0FBQzdFLFdBQVcsZUFBZSxnQkFBZ0IsbUNBQW1DO0FBQzdFLFlBQVksdUNBQXVDO0FBQ25EOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2Q0FBNkMsU0FBUztBQUN0RDtBQUNBO0FBQ0E7O0FBRUEsZ0RBQWdELFVBQVU7QUFDMUQ7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVCwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQyxXQUFXLE9BQU87QUFDbEI7QUFDQSxZQUFZLHNCQUFzQjtBQUNsQzs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyw0QkFBNEI7QUFDdkMsV0FBVyxjQUFjO0FBQ3pCLHlDQUF5QyxZQUFZO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLGVBQWU7QUFDMUIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNEJBQTRCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjYwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgZW52ID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvZW52XCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG52YXIgZWFjaCA9IHpyVXRpbC5lYWNoO1xudmFyIGlzT2JqZWN0ID0genJVdGlsLmlzT2JqZWN0O1xudmFyIGlzQXJyYXkgPSB6clV0aWwuaXNBcnJheTtcbi8qKlxuICogTWFrZSB0aGUgbmFtZSBkaXNwbGF5YWJsZS4gQnV0IHdlIHNob3VsZFxuICogbWFrZSBzdXJlIGl0IGlzIG5vdCBkdXBsaWNhdGVkIHdpdGggdXNlclxuICogc3BlY2lmaWVkIG5hbWUsIHNvIHVzZSAnXFwwJztcbiAqL1xuXG52YXIgRFVNTVlfQ09NUE9ORU5UX05BTUVfUFJFRklYID0gJ3Nlcmllc1xcMCc7XG4vKipcbiAqIElmIHZhbHVlIGlzIG5vdCBhcnJheSwgdGhlbiB0cmFuc2xhdGUgaXQgdG8gYXJyYXkuXG4gKiBAcGFyYW0gIHsqfSB2YWx1ZVxuICogQHJldHVybiB7QXJyYXl9IFt2YWx1ZV0gb3IgdmFsdWVcbiAqL1xuXG5mdW5jdGlvbiBub3JtYWxpemVUb0FycmF5KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIEFycmF5ID8gdmFsdWUgOiB2YWx1ZSA9PSBudWxsID8gW10gOiBbdmFsdWVdO1xufVxuLyoqXG4gKiBTeW5jIGRlZmF1bHQgb3B0aW9uIGJldHdlZW4gbm9ybWFsIGFuZCBlbXBoYXNpcyBsaWtlIGBwb3NpdGlvbmAgYW5kIGBzaG93YFxuICogSW4gY2FzZSBzb21lIG9uZSB3aWxsIHdyaXRlIGNvZGUgbGlrZVxuICogICAgIGxhYmVsOiB7XG4gKiAgICAgICAgICBzaG93OiBmYWxzZSxcbiAqICAgICAgICAgIHBvc2l0aW9uOiAnb3V0c2lkZScsXG4gKiAgICAgICAgICBmb250U2l6ZTogMThcbiAqICAgICB9LFxuICogICAgIGVtcGhhc2lzOiB7XG4gKiAgICAgICAgICBsYWJlbDogeyBzaG93OiB0cnVlIH1cbiAqICAgICB9XG4gKiBAcGFyYW0ge09iamVjdH0gb3B0XG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gKiBAcGFyYW0ge0FycmF5LjxzdHJpbmc+fSBzdWJPcHRzXG4gKi9cblxuXG5mdW5jdGlvbiBkZWZhdWx0RW1waGFzaXMob3B0LCBrZXksIHN1Yk9wdHMpIHtcbiAgLy8gQ2F1dGlvbjogcGVyZm9ybWFuY2Ugc2Vuc2l0aXZlLlxuICBpZiAob3B0KSB7XG4gICAgb3B0W2tleV0gPSBvcHRba2V5XSB8fCB7fTtcbiAgICBvcHQuZW1waGFzaXMgPSBvcHQuZW1waGFzaXMgfHwge307XG4gICAgb3B0LmVtcGhhc2lzW2tleV0gPSBvcHQuZW1waGFzaXNba2V5XSB8fCB7fTsgLy8gRGVmYXVsdCBlbXBoYXNpcyBvcHRpb24gZnJvbSBub3JtYWxcblxuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBzdWJPcHRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICB2YXIgc3ViT3B0TmFtZSA9IHN1Yk9wdHNbaV07XG5cbiAgICAgIGlmICghb3B0LmVtcGhhc2lzW2tleV0uaGFzT3duUHJvcGVydHkoc3ViT3B0TmFtZSkgJiYgb3B0W2tleV0uaGFzT3duUHJvcGVydHkoc3ViT3B0TmFtZSkpIHtcbiAgICAgICAgb3B0LmVtcGhhc2lzW2tleV1bc3ViT3B0TmFtZV0gPSBvcHRba2V5XVtzdWJPcHROYW1lXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxudmFyIFRFWFRfU1RZTEVfT1BUSU9OUyA9IFsnZm9udFN0eWxlJywgJ2ZvbnRXZWlnaHQnLCAnZm9udFNpemUnLCAnZm9udEZhbWlseScsICdyaWNoJywgJ3RhZycsICdjb2xvcicsICd0ZXh0Qm9yZGVyQ29sb3InLCAndGV4dEJvcmRlcldpZHRoJywgJ3dpZHRoJywgJ2hlaWdodCcsICdsaW5lSGVpZ2h0JywgJ2FsaWduJywgJ3ZlcnRpY2FsQWxpZ24nLCAnYmFzZWxpbmUnLCAnc2hhZG93Q29sb3InLCAnc2hhZG93Qmx1cicsICdzaGFkb3dPZmZzZXRYJywgJ3NoYWRvd09mZnNldFknLCAndGV4dFNoYWRvd0NvbG9yJywgJ3RleHRTaGFkb3dCbHVyJywgJ3RleHRTaGFkb3dPZmZzZXRYJywgJ3RleHRTaGFkb3dPZmZzZXRZJywgJ2JhY2tncm91bmRDb2xvcicsICdib3JkZXJDb2xvcicsICdib3JkZXJXaWR0aCcsICdib3JkZXJSYWRpdXMnLCAncGFkZGluZyddOyAvLyBtb2RlbFV0aWwuTEFCRUxfT1BUSU9OUyA9IG1vZGVsVXRpbC5URVhUX1NUWUxFX09QVElPTlMuY29uY2F0KFtcbi8vICAgICAncG9zaXRpb24nLCAnb2Zmc2V0JywgJ3JvdGF0ZScsICdvcmlnaW4nLCAnc2hvdycsICdkaXN0YW5jZScsICdmb3JtYXR0ZXInLFxuLy8gICAgICdmb250U3R5bGUnLCAnZm9udFdlaWdodCcsICdmb250U2l6ZScsICdmb250RmFtaWx5Jyxcbi8vICAgICAvLyBGSVhNRTogZGVwcmVjYXRlZCwgY2hlY2sgYW5kIHJlbW92ZSBpdC5cbi8vICAgICAndGV4dFN0eWxlJ1xuLy8gXSk7XG5cbi8qKlxuICogVGhlIG1ldGhvZCBkbyBub3QgZW5zdXJlIHBlcmZvcm1hbmNlLlxuICogZGF0YSBjb3VsZCBiZSBbMTIsIDIzMjMsIHt2YWx1ZTogMjIzfSwgWzEyMjEsIDIzXSwge3ZhbHVlOiBbMiwgMjNdfV1cbiAqIFRoaXMgaGVscGVyIG1ldGhvZCByZXRpZXZlcyB2YWx1ZSBmcm9tIGRhdGEuXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ8RGF0ZXxBcnJheXxPYmplY3R9IGRhdGFJdGVtXG4gKiBAcmV0dXJuIHtudW1iZXJ8c3RyaW5nfERhdGV8QXJyYXkuPG51bWJlcnxzdHJpbmd8RGF0ZT59XG4gKi9cblxuZnVuY3Rpb24gZ2V0RGF0YUl0ZW1WYWx1ZShkYXRhSXRlbSkge1xuICByZXR1cm4gaXNPYmplY3QoZGF0YUl0ZW0pICYmICFpc0FycmF5KGRhdGFJdGVtKSAmJiAhKGRhdGFJdGVtIGluc3RhbmNlb2YgRGF0ZSkgPyBkYXRhSXRlbS52YWx1ZSA6IGRhdGFJdGVtO1xufVxuLyoqXG4gKiBkYXRhIGNvdWxkIGJlIFsxMiwgMjMyMywge3ZhbHVlOiAyMjN9LCBbMTIyMSwgMjNdLCB7dmFsdWU6IFsyLCAyM119XVxuICogVGhpcyBoZWxwZXIgbWV0aG9kIGRldGVybWluZSBpZiBkYXRhSXRlbSBoYXMgZXh0cmEgb3B0aW9uIGJlc2lkZXMgdmFsdWVcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcnxEYXRlfEFycmF5fE9iamVjdH0gZGF0YUl0ZW1cbiAqL1xuXG5cbmZ1bmN0aW9uIGlzRGF0YUl0ZW1PcHRpb24oZGF0YUl0ZW0pIHtcbiAgcmV0dXJuIGlzT2JqZWN0KGRhdGFJdGVtKSAmJiAhKGRhdGFJdGVtIGluc3RhbmNlb2YgQXJyYXkpOyAvLyAvLyBtYXJrTGluZSBkYXRhIGNhbiBiZSBhcnJheVxuICAvLyAmJiAhKGRhdGFJdGVtWzBdICYmIGlzT2JqZWN0KGRhdGFJdGVtWzBdKSAmJiAhKGRhdGFJdGVtWzBdIGluc3RhbmNlb2YgQXJyYXkpKTtcbn1cbi8qKlxuICogTWFwcGluZyB0byBleGlzdHMgZm9yIG1lcmdlLlxuICpcbiAqIEBwdWJsaWNcbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD58QXJyYXkuPG1vZHVsZTplY2hhcnRzL21vZGVsL0NvbXBvbmVudD59IGV4aXN0c1xuICogQHBhcmFtIHtPYmplY3R8QXJyYXkuPE9iamVjdD59IG5ld0NwdE9wdGlvbnNcbiAqIEByZXR1cm4ge0FycmF5LjxPYmplY3Q+fSBSZXN1bHQsIGxpa2UgW3tleGlzdDogLi4uLCBvcHRpb246IC4uLn0sIHt9XSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCBvZiB3aGljaCBpcyB0aGUgc2FtZSBhcyBleGlzdHMuXG4gKi9cblxuXG5mdW5jdGlvbiBtYXBwaW5nVG9FeGlzdHMoZXhpc3RzLCBuZXdDcHRPcHRpb25zKSB7XG4gIC8vIE1hcHBpbmcgYnkgdGhlIG9yZGVyIGJ5IG9yaWdpbmFsIG9wdGlvbiAoYnV0IG5vdCBvcmRlciBvZlxuICAvLyBuZXcgb3B0aW9uKSBpbiBtZXJnZSBtb2RlLiBCZWNhdXNlIHdlIHNob3VsZCBlbnN1cmVcbiAgLy8gc29tZSBzcGVjaWZpZWQgaW5kZXggKGxpa2UgeEF4aXNJbmRleCkgaXMgY29uc2lzdGVudCB3aXRoXG4gIC8vIG9yaWdpbmFsIG9wdGlvbiwgd2hpY2ggaXMgZWFzeSB0byB1bmRlcnN0YW5kLCBlc3BhdGlhbGx5IGluXG4gIC8vIG1lZGlhIHF1ZXJ5LiBBbmQgaW4gbW9zdCBjYXNlLCBtZXJnZSBvcHRpb24gaXMgdXNlZCB0b1xuICAvLyB1cGRhdGUgcGFydGlhbCBvcHRpb24gYnV0IG5vdCBiZSBleHBlY3RlZCB0byBjaGFuZ2Ugb3JkZXIuXG4gIG5ld0NwdE9wdGlvbnMgPSAobmV3Q3B0T3B0aW9ucyB8fCBbXSkuc2xpY2UoKTtcbiAgdmFyIHJlc3VsdCA9IHpyVXRpbC5tYXAoZXhpc3RzIHx8IFtdLCBmdW5jdGlvbiAob2JqLCBpbmRleCkge1xuICAgIHJldHVybiB7XG4gICAgICBleGlzdDogb2JqXG4gICAgfTtcbiAgfSk7IC8vIE1hcHBpbmcgYnkgaWQgb3IgbmFtZSBpZiBzcGVjaWZpZWQuXG5cbiAgZWFjaChuZXdDcHRPcHRpb25zLCBmdW5jdGlvbiAoY3B0T3B0aW9uLCBpbmRleCkge1xuICAgIGlmICghaXNPYmplY3QoY3B0T3B0aW9uKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gaWQgaGFzIGhpZ2hlc3QgcHJpb3JpdHkuXG5cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoIXJlc3VsdFtpXS5vcHRpb24gLy8gQ29uc2lkZXIgbmFtZTogdHdvIG1hcCB0byBvbmUuXG4gICAgICAmJiBjcHRPcHRpb24uaWQgIT0gbnVsbCAmJiByZXN1bHRbaV0uZXhpc3QuaWQgPT09IGNwdE9wdGlvbi5pZCArICcnKSB7XG4gICAgICAgIHJlc3VsdFtpXS5vcHRpb24gPSBjcHRPcHRpb247XG4gICAgICAgIG5ld0NwdE9wdGlvbnNbaW5kZXhdID0gbnVsbDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZXhpc3QgPSByZXN1bHRbaV0uZXhpc3Q7XG5cbiAgICAgIGlmICghcmVzdWx0W2ldLm9wdGlvbiAvLyBDb25zaWRlciBuYW1lOiB0d28gbWFwIHRvIG9uZS5cbiAgICAgIC8vIENhbiBub3QgbWF0Y2ggd2hlbiBib3RoIGlkcyBleGlzdCBidXQgZGlmZmVyZW50LlxuICAgICAgJiYgKGV4aXN0LmlkID09IG51bGwgfHwgY3B0T3B0aW9uLmlkID09IG51bGwpICYmIGNwdE9wdGlvbi5uYW1lICE9IG51bGwgJiYgIWlzSWRJbm5lcihjcHRPcHRpb24pICYmICFpc0lkSW5uZXIoZXhpc3QpICYmIGV4aXN0Lm5hbWUgPT09IGNwdE9wdGlvbi5uYW1lICsgJycpIHtcbiAgICAgICAgcmVzdWx0W2ldLm9wdGlvbiA9IGNwdE9wdGlvbjtcbiAgICAgICAgbmV3Q3B0T3B0aW9uc1tpbmRleF0gPSBudWxsO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICB9KTsgLy8gT3RoZXJ3aXNlIG1hcHBpbmcgYnkgaW5kZXguXG5cbiAgZWFjaChuZXdDcHRPcHRpb25zLCBmdW5jdGlvbiAoY3B0T3B0aW9uLCBpbmRleCkge1xuICAgIGlmICghaXNPYmplY3QoY3B0T3B0aW9uKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBpID0gMDtcblxuICAgIGZvciAoOyBpIDwgcmVzdWx0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZXhpc3QgPSByZXN1bHRbaV0uZXhpc3Q7XG5cbiAgICAgIGlmICghcmVzdWx0W2ldLm9wdGlvbiAvLyBFeGlzdGluZyBtb2RlbCB0aGF0IGFscmVhZHkgaGFzIGlkIHNob3VsZCBiZSBhYmxlIHRvXG4gICAgICAvLyBtYXBwZWQgdG8gKGJlY2F1c2UgYWZ0ZXIgbWFwcGluZyBwZXJmb3JtZWQgbW9kZWwgbWF5XG4gICAgICAvLyBiZSBhc3NpZ25lZCB3aXRoIGEgaWQsIHdoaXNoIHNob3VsZCBub3QgYWZmZWN0IG5leHRcbiAgICAgIC8vIG1hcHBpbmcpLCBleGNlcHQgdGhvc2UgaGFzIGlubmVyIGlkLlxuICAgICAgJiYgIWlzSWRJbm5lcihleGlzdCkgLy8gQ2F1dGlvbjpcbiAgICAgIC8vIERvIG5vdCBvdmVyd3JpdGUgaWQuIEJ1dCBuYW1lIGNhbiBiZSBvdmVyd3JpdHRlbixcbiAgICAgIC8vIGJlY2F1c2UgYXhpcyB1c2UgbmFtZSBhcyAnc2hvdyBsYWJlbCB0ZXh0Jy5cbiAgICAgIC8vICdleGlzdCcgYWx3YXlzIGhhcyBpZCBhbmQgbmFtZSBhbmQgd2UgZG9udFxuICAgICAgLy8gbmVlZCB0byBjaGVjayBpdC5cbiAgICAgICYmIGNwdE9wdGlvbi5pZCA9PSBudWxsKSB7XG4gICAgICAgIHJlc3VsdFtpXS5vcHRpb24gPSBjcHRPcHRpb247XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpID49IHJlc3VsdC5sZW5ndGgpIHtcbiAgICAgIHJlc3VsdC5wdXNoKHtcbiAgICAgICAgb3B0aW9uOiBjcHRPcHRpb25cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIE1ha2UgaWQgYW5kIG5hbWUgZm9yIG1hcHBpbmcgcmVzdWx0IChyZXN1bHQgb2YgbWFwcGluZ1RvRXhpc3RzKVxuICogaW50byBga2V5SW5mb2AgZmllbGQuXG4gKlxuICogQHB1YmxpY1xuICogQHBhcmFtIHtBcnJheS48T2JqZWN0Pn0gUmVzdWx0LCBsaWtlIFt7ZXhpc3Q6IC4uLiwgb3B0aW9uOiAuLi59LCB7fV0sXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpY2ggb3JkZXIgaXMgdGhlIHNhbWUgYXMgZXhpc3RzLlxuICogQHJldHVybiB7QXJyYXkuPE9iamVjdD59IFRoZSBpbnB1dC5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1ha2VJZEFuZE5hbWUobWFwUmVzdWx0KSB7XG4gIC8vIFdlIHVzZSB0aGlzIGlkIHRvIGhhc2ggY29tcG9uZW50IG1vZGVscyBhbmQgdmlldyBpbnN0YW5jZXNcbiAgLy8gaW4gZWNoYXJ0cy4gaWQgY2FuIGJlIHNwZWNpZmllZCBieSB1c2VyLCBvciBhdXRvIGdlbmVyYXRlZC5cbiAgLy8gVGhlIGlkIGdlbmVyYXRpb24gcnVsZSBlbnN1cmVzIG5ldyB2aWV3IGluc3RhbmNlIGFyZSBhYmxlXG4gIC8vIHRvIG1hcHBlZCB0byBvbGQgaW5zdGFuY2Ugd2hlbiBzZXRPcHRpb24gYXJlIGNhbGxlZCBpblxuICAvLyBuby1tZXJnZSBtb2RlLiBTbyB3ZSBnZW5lcmF0ZSBtb2RlbCBpZCBieSBuYW1lIGFuZCBwbHVzXG4gIC8vIHR5cGUgaW4gdmlldyBpZC5cbiAgLy8gbmFtZSBjYW4gYmUgZHVwbGljYXRlZCBhbW9uZyBjb21wb25lbnRzLCB3aGljaCBpcyBjb252ZW5pZW50XG4gIC8vIHRvIHNwZWNpZnkgbXVsdGkgY29tcG9uZW50cyAobGlrZSBzZXJpZXMpIGJ5IG9uZSBuYW1lLlxuICAvLyBFbnN1cmUgdGhhdCBlYWNoIGlkIGlzIGRpc3RpbmN0LlxuICB2YXIgaWRNYXAgPSB6clV0aWwuY3JlYXRlSGFzaE1hcCgpO1xuICBlYWNoKG1hcFJlc3VsdCwgZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgdmFyIGV4aXN0Q3B0ID0gaXRlbS5leGlzdDtcbiAgICBleGlzdENwdCAmJiBpZE1hcC5zZXQoZXhpc3RDcHQuaWQsIGl0ZW0pO1xuICB9KTtcbiAgZWFjaChtYXBSZXN1bHQsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgIHZhciBvcHQgPSBpdGVtLm9wdGlvbjtcbiAgICB6clV0aWwuYXNzZXJ0KCFvcHQgfHwgb3B0LmlkID09IG51bGwgfHwgIWlkTWFwLmdldChvcHQuaWQpIHx8IGlkTWFwLmdldChvcHQuaWQpID09PSBpdGVtLCAnaWQgZHVwbGljYXRlczogJyArIChvcHQgJiYgb3B0LmlkKSk7XG4gICAgb3B0ICYmIG9wdC5pZCAhPSBudWxsICYmIGlkTWFwLnNldChvcHQuaWQsIGl0ZW0pO1xuICAgICFpdGVtLmtleUluZm8gJiYgKGl0ZW0ua2V5SW5mbyA9IHt9KTtcbiAgfSk7IC8vIE1ha2UgbmFtZSBhbmQgaWQuXG5cbiAgZWFjaChtYXBSZXN1bHQsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgIHZhciBleGlzdENwdCA9IGl0ZW0uZXhpc3Q7XG4gICAgdmFyIG9wdCA9IGl0ZW0ub3B0aW9uO1xuICAgIHZhciBrZXlJbmZvID0gaXRlbS5rZXlJbmZvO1xuXG4gICAgaWYgKCFpc09iamVjdChvcHQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBuYW1lIGNhbiBiZSBvdmVyd2l0dGVuLiBDb25zaWRlciBjYXNlOiBheGlzLm5hbWUgPSAnMjBrbScuXG4gICAgLy8gQnV0IGlkIGdlbmVyYXRlZCBieSBuYW1lIHdpbGwgbm90IGJlIGNoYW5nZWQsIHdoaWNoIGFmZmVjdFxuICAgIC8vIG9ubHkgaW4gdGhhdCBjYXNlOiBzZXRPcHRpb24gd2l0aCAnbm90IG1lcmdlIG1vZGUnIGFuZCB2aWV3XG4gICAgLy8gaW5zdGFuY2Ugd2lsbCBiZSByZWNyZWF0ZWQsIHdoaWNoIGNhbiBiZSBhY2NlcHRlZC5cblxuXG4gICAga2V5SW5mby5uYW1lID0gb3B0Lm5hbWUgIT0gbnVsbCA/IG9wdC5uYW1lICsgJycgOiBleGlzdENwdCA/IGV4aXN0Q3B0Lm5hbWUgLy8gQXZvaWQgZGlmZmZlcmVudCBzZXJpZXMgaGFzIHRoZSBzYW1lIG5hbWUsXG4gICAgLy8gYmVjYXVzZSBuYW1lIG1heSBiZSB1c2VkIGxpa2UgaW4gY29sb3IgcGFsbGV0LlxuICAgIDogRFVNTVlfQ09NUE9ORU5UX05BTUVfUFJFRklYICsgaW5kZXg7XG5cbiAgICBpZiAoZXhpc3RDcHQpIHtcbiAgICAgIGtleUluZm8uaWQgPSBleGlzdENwdC5pZDtcbiAgICB9IGVsc2UgaWYgKG9wdC5pZCAhPSBudWxsKSB7XG4gICAgICBrZXlJbmZvLmlkID0gb3B0LmlkICsgJyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIENvbnNpZGVyIHRoaXMgc2l0dWF0b2luOlxuICAgICAgLy8gIG9wdGlvbkE6IFt7bmFtZTogJ2EnfSwge25hbWU6ICdhJ30sIHsuLn1dXG4gICAgICAvLyAgb3B0aW9uQiBbey4ufSwge25hbWU6ICdhJ30sIHtuYW1lOiAnYSd9XVxuICAgICAgLy8gU2VyaWVzIHdpdGggdGhlIHNhbWUgbmFtZSBiZXR3ZWVuIG9wdGlvbkEgYW5kIG9wdGlvbkJcbiAgICAgIC8vIHNob3VsZCBiZSBtYXBwZWQuXG4gICAgICB2YXIgaWROdW0gPSAwO1xuXG4gICAgICBkbyB7XG4gICAgICAgIGtleUluZm8uaWQgPSAnXFwwJyArIGtleUluZm8ubmFtZSArICdcXDAnICsgaWROdW0rKztcbiAgICAgIH0gd2hpbGUgKGlkTWFwLmdldChrZXlJbmZvLmlkKSk7XG4gICAgfVxuXG4gICAgaWRNYXAuc2V0KGtleUluZm8uaWQsIGl0ZW0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaXNOYW1lU3BlY2lmaWVkKGNvbXBvbmVudE1vZGVsKSB7XG4gIHZhciBuYW1lID0gY29tcG9uZW50TW9kZWwubmFtZTsgLy8gSXMgc3BlY2lmaWVkIHdoZW4gYGluZGV4T2ZgIGdldCAtMSBvciA+IDAuXG5cbiAgcmV0dXJuICEhKG5hbWUgJiYgbmFtZS5pbmRleE9mKERVTU1ZX0NPTVBPTkVOVF9OQU1FX1BSRUZJWCkpO1xufVxuLyoqXG4gKiBAcHVibGljXG4gKiBAcGFyYW0ge09iamVjdH0gY3B0T3B0aW9uXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5cblxuZnVuY3Rpb24gaXNJZElubmVyKGNwdE9wdGlvbikge1xuICByZXR1cm4gaXNPYmplY3QoY3B0T3B0aW9uKSAmJiBjcHRPcHRpb24uaWQgJiYgKGNwdE9wdGlvbi5pZCArICcnKS5pbmRleE9mKCdcXDBfZWNfXFwwJykgPT09IDA7XG59XG4vKipcbiAqIEEgaGVscGVyIGZvciByZW1vdmluZyBkdXBsaWNhdGUgaXRlbXMgYmV0d2VlbiBiYXRjaEEgYW5kIGJhdGNoQixcbiAqIGFuZCBpbiB0aGVtc2VsdmVzLCBhbmQgY2F0ZWdvcml6ZSBieSBzZXJpZXMuXG4gKlxuICogQHBhcmFtIHtBcnJheS48T2JqZWN0Pn0gYmF0Y2hBIExpa2U6IFt7c2VyaWVzSWQ6IDIsIGRhdGFJbmRleDogWzMyLCA0LCA1XX0sIC4uLl1cbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGJhdGNoQiBMaWtlOiBbe3Nlcmllc0lkOiAyLCBkYXRhSW5kZXg6IFszMiwgNCwgNV19LCAuLi5dXG4gKiBAcmV0dXJuIHtBcnJheS48QXJyYXkuPE9iamVjdD4sIEFycmF5LjxPYmplY3Q+Pn0gcmVzdWx0OiBbcmVzdWx0QmF0Y2hBLCByZXN1bHRCYXRjaEJdXG4gKi9cblxuXG5mdW5jdGlvbiBjb21wcmVzc0JhdGNoZXMoYmF0Y2hBLCBiYXRjaEIpIHtcbiAgdmFyIG1hcEEgPSB7fTtcbiAgdmFyIG1hcEIgPSB7fTtcbiAgbWFrZU1hcChiYXRjaEEgfHwgW10sIG1hcEEpO1xuICBtYWtlTWFwKGJhdGNoQiB8fCBbXSwgbWFwQiwgbWFwQSk7XG4gIHJldHVybiBbbWFwVG9BcnJheShtYXBBKSwgbWFwVG9BcnJheShtYXBCKV07XG5cbiAgZnVuY3Rpb24gbWFrZU1hcChzb3VyY2VCYXRjaCwgbWFwLCBvdGhlck1hcCkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBzb3VyY2VCYXRjaC5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgdmFyIHNlcmllc0lkID0gc291cmNlQmF0Y2hbaV0uc2VyaWVzSWQ7XG4gICAgICB2YXIgZGF0YUluZGljZXMgPSBub3JtYWxpemVUb0FycmF5KHNvdXJjZUJhdGNoW2ldLmRhdGFJbmRleCk7XG4gICAgICB2YXIgb3RoZXJEYXRhSW5kaWNlcyA9IG90aGVyTWFwICYmIG90aGVyTWFwW3Nlcmllc0lkXTtcblxuICAgICAgZm9yICh2YXIgaiA9IDAsIGxlbmogPSBkYXRhSW5kaWNlcy5sZW5ndGg7IGogPCBsZW5qOyBqKyspIHtcbiAgICAgICAgdmFyIGRhdGFJbmRleCA9IGRhdGFJbmRpY2VzW2pdO1xuXG4gICAgICAgIGlmIChvdGhlckRhdGFJbmRpY2VzICYmIG90aGVyRGF0YUluZGljZXNbZGF0YUluZGV4XSkge1xuICAgICAgICAgIG90aGVyRGF0YUluZGljZXNbZGF0YUluZGV4XSA9IG51bGw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgKG1hcFtzZXJpZXNJZF0gfHwgKG1hcFtzZXJpZXNJZF0gPSB7fSkpW2RhdGFJbmRleF0gPSAxO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbWFwVG9BcnJheShtYXAsIGlzRGF0YSkge1xuICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgIGZvciAodmFyIGkgaW4gbWFwKSB7XG4gICAgICBpZiAobWFwLmhhc093blByb3BlcnR5KGkpICYmIG1hcFtpXSAhPSBudWxsKSB7XG4gICAgICAgIGlmIChpc0RhdGEpIHtcbiAgICAgICAgICByZXN1bHQucHVzaCgraSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGRhdGFJbmRpY2VzID0gbWFwVG9BcnJheShtYXBbaV0sIHRydWUpO1xuICAgICAgICAgIGRhdGFJbmRpY2VzLmxlbmd0aCAmJiByZXN1bHQucHVzaCh7XG4gICAgICAgICAgICBzZXJpZXNJZDogaSxcbiAgICAgICAgICAgIGRhdGFJbmRleDogZGF0YUluZGljZXNcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn1cbi8qKlxuICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9kYXRhL0xpc3R9IGRhdGFcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYXlsb2FkIENvbnRhaW5zIGRhdGFJbmRleCAobWVhbnMgcmF3SW5kZXgpIC8gZGF0YUluZGV4SW5zaWRlIC8gbmFtZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgZWFjaCBvZiB3aGljaCBjYW4gYmUgQXJyYXkgb3IgcHJpbWFyeSB0eXBlLlxuICogQHJldHVybiB7bnVtYmVyfEFycmF5LjxudW1iZXI+fSBkYXRhSW5kZXggSWYgbm90IGZvdW5kLCByZXR1cm4gdW5kZWZpbmVkL251bGwuXG4gKi9cblxuXG5mdW5jdGlvbiBxdWVyeURhdGFJbmRleChkYXRhLCBwYXlsb2FkKSB7XG4gIGlmIChwYXlsb2FkLmRhdGFJbmRleEluc2lkZSAhPSBudWxsKSB7XG4gICAgcmV0dXJuIHBheWxvYWQuZGF0YUluZGV4SW5zaWRlO1xuICB9IGVsc2UgaWYgKHBheWxvYWQuZGF0YUluZGV4ICE9IG51bGwpIHtcbiAgICByZXR1cm4genJVdGlsLmlzQXJyYXkocGF5bG9hZC5kYXRhSW5kZXgpID8genJVdGlsLm1hcChwYXlsb2FkLmRhdGFJbmRleCwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICByZXR1cm4gZGF0YS5pbmRleE9mUmF3SW5kZXgodmFsdWUpO1xuICAgIH0pIDogZGF0YS5pbmRleE9mUmF3SW5kZXgocGF5bG9hZC5kYXRhSW5kZXgpO1xuICB9IGVsc2UgaWYgKHBheWxvYWQubmFtZSAhPSBudWxsKSB7XG4gICAgcmV0dXJuIHpyVXRpbC5pc0FycmF5KHBheWxvYWQubmFtZSkgPyB6clV0aWwubWFwKHBheWxvYWQubmFtZSwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICByZXR1cm4gZGF0YS5pbmRleE9mTmFtZSh2YWx1ZSk7XG4gICAgfSkgOiBkYXRhLmluZGV4T2ZOYW1lKHBheWxvYWQubmFtZSk7XG4gIH1cbn1cbi8qKlxuICogRW5hYmxlIHByb3BlcnR5IHN0b3JhZ2UgdG8gYW55IGhvc3Qgb2JqZWN0LlxuICogTm90aWNlOiBTZXJpYWxpemF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQuXG4gKlxuICogRm9yIGV4YW1wbGU6XG4gKiB2YXIgaW5uZXIgPSB6clVpdGwubWFrZUlubmVyKCk7XG4gKlxuICogZnVuY3Rpb24gc29tZTEoaG9zdE9iaikge1xuICogICAgICBpbm5lcihob3N0T2JqKS5zb21lUHJvcGVydHkgPSAxMjEyO1xuICogICAgICAuLi5cbiAqIH1cbiAqIGZ1bmN0aW9uIHNvbWUyKCkge1xuICogICAgICB2YXIgZmllbGRzID0gaW5uZXIodGhpcyk7XG4gKiAgICAgIGZpZWxkcy5zb21lUHJvcGVydHkxID0gMTIxMjtcbiAqICAgICAgZmllbGRzLnNvbWVQcm9wZXJ0eTIgPSAneHgnO1xuICogICAgICAuLi5cbiAqIH1cbiAqXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqL1xuXG5cbmZ1bmN0aW9uIG1ha2VJbm5lcigpIHtcbiAgLy8gQ29uc2lkZXIgZGlmZmVyZW50IHNjb3BlIGJ5IGVzIG1vZHVsZSBpbXBvcnQuXG4gIHZhciBrZXkgPSAnX19cXDBlY19pbm5lcl8nICsgaW5uZXJVbmlxdWVJbmRleCsrICsgJ18nICsgTWF0aC5yYW5kb20oKS50b0ZpeGVkKDUpO1xuICByZXR1cm4gZnVuY3Rpb24gKGhvc3RPYmopIHtcbiAgICByZXR1cm4gaG9zdE9ialtrZXldIHx8IChob3N0T2JqW2tleV0gPSB7fSk7XG4gIH07XG59XG5cbnZhciBpbm5lclVuaXF1ZUluZGV4ID0gMDtcbi8qKlxuICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9tb2RlbC9HbG9iYWx9IGVjTW9kZWxcbiAqIEBwYXJhbSB7c3RyaW5nfE9iamVjdH0gZmluZGVyXG4gKiAgICAgICAgSWYgc3RyaW5nLCBlLmcuLCAnZ2VvJywgbWVhbnMge2dlb0luZGV4OiAwfS5cbiAqICAgICAgICBJZiBPYmplY3QsIGNvdWxkIGNvbnRhaW4gc29tZSBvZiB0aGVzZSBwcm9wZXJ0aWVzIGJlbG93OlxuICogICAgICAgIHtcbiAqICAgICAgICAgICAgc2VyaWVzSW5kZXgsIHNlcmllc0lkLCBzZXJpZXNOYW1lLFxuICogICAgICAgICAgICBnZW9JbmRleCwgZ2VvSWQsIGdlb05hbWUsXG4gKiAgICAgICAgICAgIGJtYXBJbmRleCwgYm1hcElkLCBibWFwTmFtZSxcbiAqICAgICAgICAgICAgeEF4aXNJbmRleCwgeEF4aXNJZCwgeEF4aXNOYW1lLFxuICogICAgICAgICAgICB5QXhpc0luZGV4LCB5QXhpc0lkLCB5QXhpc05hbWUsXG4gKiAgICAgICAgICAgIGdyaWRJbmRleCwgZ3JpZElkLCBncmlkTmFtZSxcbiAqICAgICAgICAgICAgLi4uIChjYW4gYmUgZXh0ZW5kZWQpXG4gKiAgICAgICAgfVxuICogICAgICAgIEVhY2ggcHJvcGVydGllcyBjYW4gYmUgbnVtYmVyfHN0cmluZ3xBcnJheS48bnVtYmVyPnxBcnJheS48c3RyaW5nPlxuICogICAgICAgIEZvciBleGFtcGxlLCBhIGZpbmRlciBjb3VsZCBiZVxuICogICAgICAgIHtcbiAqICAgICAgICAgICAgc2VyaWVzSW5kZXg6IDMsXG4gKiAgICAgICAgICAgIGdlb0lkOiBbJ2FhJywgJ2NjJ10sXG4gKiAgICAgICAgICAgIGdyaWROYW1lOiBbJ3h4JywgJ3JyJ11cbiAqICAgICAgICB9XG4gKiAgICAgICAgeHh4SW5kZXggY2FuIGJlIHNldCBhcyAnYWxsJyAobWVhbnMgYWxsIHh4eCkgb3IgJ25vbmUnIChtZWFucyBub3Qgc3BlY2lmeSlcbiAqICAgICAgICBJZiBub3RoaW5nIG9yIG51bGwvdW5kZWZpbmVkIHNwZWNpZmllZCwgcmV0dXJuIG5vdGhpbmcuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdF1cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0LmRlZmF1bHRNYWluVHlwZV1cbiAqIEBwYXJhbSB7QXJyYXkuPHN0cmluZz59IFtvcHQuaW5jbHVkZU1haW5UeXBlc11cbiAqIEByZXR1cm4ge09iamVjdH0gcmVzdWx0IGxpa2U6XG4gKiAgICAgICAge1xuICogICAgICAgICAgICBzZXJpZXNNb2RlbHM6IFtzZXJpZXNNb2RlbDEsIHNlcmllc01vZGVsMl0sXG4gKiAgICAgICAgICAgIHNlcmllc01vZGVsOiBzZXJpZXNNb2RlbDEsIC8vIFRoZSBmaXJzdCBtb2RlbFxuICogICAgICAgICAgICBnZW9Nb2RlbHM6IFtnZW9Nb2RlbDEsIGdlb01vZGVsMl0sXG4gKiAgICAgICAgICAgIGdlb01vZGVsOiBnZW9Nb2RlbDEsIC8vIFRoZSBmaXJzdCBtb2RlbFxuICogICAgICAgICAgICAuLi5cbiAqICAgICAgICB9XG4gKi9cblxuZnVuY3Rpb24gcGFyc2VGaW5kZXIoZWNNb2RlbCwgZmluZGVyLCBvcHQpIHtcbiAgaWYgKHpyVXRpbC5pc1N0cmluZyhmaW5kZXIpKSB7XG4gICAgdmFyIG9iaiA9IHt9O1xuICAgIG9ialtmaW5kZXIgKyAnSW5kZXgnXSA9IDA7XG4gICAgZmluZGVyID0gb2JqO1xuICB9XG5cbiAgdmFyIGRlZmF1bHRNYWluVHlwZSA9IG9wdCAmJiBvcHQuZGVmYXVsdE1haW5UeXBlO1xuXG4gIGlmIChkZWZhdWx0TWFpblR5cGUgJiYgIWhhcyhmaW5kZXIsIGRlZmF1bHRNYWluVHlwZSArICdJbmRleCcpICYmICFoYXMoZmluZGVyLCBkZWZhdWx0TWFpblR5cGUgKyAnSWQnKSAmJiAhaGFzKGZpbmRlciwgZGVmYXVsdE1haW5UeXBlICsgJ05hbWUnKSkge1xuICAgIGZpbmRlcltkZWZhdWx0TWFpblR5cGUgKyAnSW5kZXgnXSA9IDA7XG4gIH1cblxuICB2YXIgcmVzdWx0ID0ge307XG4gIGVhY2goZmluZGVyLCBmdW5jdGlvbiAodmFsdWUsIGtleSkge1xuICAgIHZhciB2YWx1ZSA9IGZpbmRlcltrZXldOyAvLyBFeGNsdWRlICdkYXRhSW5kZXgnIGFuZCBvdGhlciBpbGxnYWwga2V5cy5cblxuICAgIGlmIChrZXkgPT09ICdkYXRhSW5kZXgnIHx8IGtleSA9PT0gJ2RhdGFJbmRleEluc2lkZScpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHBhcnNlZEtleSA9IGtleS5tYXRjaCgvXihcXHcrKShJbmRleHxJZHxOYW1lKSQvKSB8fCBbXTtcbiAgICB2YXIgbWFpblR5cGUgPSBwYXJzZWRLZXlbMV07XG4gICAgdmFyIHF1ZXJ5VHlwZSA9IChwYXJzZWRLZXlbMl0gfHwgJycpLnRvTG93ZXJDYXNlKCk7XG5cbiAgICBpZiAoIW1haW5UeXBlIHx8ICFxdWVyeVR5cGUgfHwgdmFsdWUgPT0gbnVsbCB8fCBxdWVyeVR5cGUgPT09ICdpbmRleCcgJiYgdmFsdWUgPT09ICdub25lJyB8fCBvcHQgJiYgb3B0LmluY2x1ZGVNYWluVHlwZXMgJiYgenJVdGlsLmluZGV4T2Yob3B0LmluY2x1ZGVNYWluVHlwZXMsIG1haW5UeXBlKSA8IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgcXVlcnlQYXJhbSA9IHtcbiAgICAgIG1haW5UeXBlOiBtYWluVHlwZVxuICAgIH07XG5cbiAgICBpZiAocXVlcnlUeXBlICE9PSAnaW5kZXgnIHx8IHZhbHVlICE9PSAnYWxsJykge1xuICAgICAgcXVlcnlQYXJhbVtxdWVyeVR5cGVdID0gdmFsdWU7XG4gICAgfVxuXG4gICAgdmFyIG1vZGVscyA9IGVjTW9kZWwucXVlcnlDb21wb25lbnRzKHF1ZXJ5UGFyYW0pO1xuICAgIHJlc3VsdFttYWluVHlwZSArICdNb2RlbHMnXSA9IG1vZGVscztcbiAgICByZXN1bHRbbWFpblR5cGUgKyAnTW9kZWwnXSA9IG1vZGVsc1swXTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIGhhcyhvYmosIHByb3ApIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouaGFzT3duUHJvcGVydHkocHJvcCk7XG59XG5cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZShkb20sIGtleSwgdmFsdWUpIHtcbiAgZG9tLnNldEF0dHJpYnV0ZSA/IGRvbS5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSkgOiBkb21ba2V5XSA9IHZhbHVlO1xufVxuXG5mdW5jdGlvbiBnZXRBdHRyaWJ1dGUoZG9tLCBrZXkpIHtcbiAgcmV0dXJuIGRvbS5nZXRBdHRyaWJ1dGUgPyBkb20uZ2V0QXR0cmlidXRlKGtleSkgOiBkb21ba2V5XTtcbn1cblxuZnVuY3Rpb24gZ2V0VG9vbHRpcFJlbmRlck1vZGUocmVuZGVyTW9kZU9wdGlvbikge1xuICBpZiAocmVuZGVyTW9kZU9wdGlvbiA9PT0gJ2F1dG8nKSB7XG4gICAgLy8gVXNpbmcgaHRtbCB3aGVuIGBkb2N1bWVudGAgZXhpc3RzLCB1c2UgcmljaFRleHQgb3RoZXJ3aXNlXG4gICAgcmV0dXJuIGVudi5kb21TdXBwb3J0ZWQgPyAnaHRtbCcgOiAncmljaFRleHQnO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiByZW5kZXJNb2RlT3B0aW9uIHx8ICdodG1sJztcbiAgfVxufVxuXG5leHBvcnRzLm5vcm1hbGl6ZVRvQXJyYXkgPSBub3JtYWxpemVUb0FycmF5O1xuZXhwb3J0cy5kZWZhdWx0RW1waGFzaXMgPSBkZWZhdWx0RW1waGFzaXM7XG5leHBvcnRzLlRFWFRfU1RZTEVfT1BUSU9OUyA9IFRFWFRfU1RZTEVfT1BUSU9OUztcbmV4cG9ydHMuZ2V0RGF0YUl0ZW1WYWx1ZSA9IGdldERhdGFJdGVtVmFsdWU7XG5leHBvcnRzLmlzRGF0YUl0ZW1PcHRpb24gPSBpc0RhdGFJdGVtT3B0aW9uO1xuZXhwb3J0cy5tYXBwaW5nVG9FeGlzdHMgPSBtYXBwaW5nVG9FeGlzdHM7XG5leHBvcnRzLm1ha2VJZEFuZE5hbWUgPSBtYWtlSWRBbmROYW1lO1xuZXhwb3J0cy5pc05hbWVTcGVjaWZpZWQgPSBpc05hbWVTcGVjaWZpZWQ7XG5leHBvcnRzLmlzSWRJbm5lciA9IGlzSWRJbm5lcjtcbmV4cG9ydHMuY29tcHJlc3NCYXRjaGVzID0gY29tcHJlc3NCYXRjaGVzO1xuZXhwb3J0cy5xdWVyeURhdGFJbmRleCA9IHF1ZXJ5RGF0YUluZGV4O1xuZXhwb3J0cy5tYWtlSW5uZXIgPSBtYWtlSW5uZXI7XG5leHBvcnRzLnBhcnNlRmluZGVyID0gcGFyc2VGaW5kZXI7XG5leHBvcnRzLnNldEF0dHJpYnV0ZSA9IHNldEF0dHJpYnV0ZTtcbmV4cG9ydHMuZ2V0QXR0cmlidXRlID0gZ2V0QXR0cmlidXRlO1xuZXhwb3J0cy5nZXRUb29sdGlwUmVuZGVyTW9kZSA9IGdldFRvb2x0aXBSZW5kZXJNb2RlOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///60\\n\")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\\n// declaration is behind of the using position (for example in `Model.extent`,\\n// And tools like rollup can not analysis the dependency if not import).\\nvar dev; // In browser\\n\\nif (typeof window !== \\'undefined\\') {\\n  dev = window.__DEV__;\\n} // In node\\nelse if (typeof global !== \\'undefined\\') {\\n    dev = global.__DEV__;\\n  }\\n\\nif (typeof dev === \\'undefined\\') {\\n  dev = true;\\n}\\n\\nvar __DEV__ = dev;\\nexports.__DEV__ = __DEV__;\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(5)))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29uZmlnLmpzPzRlMDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7O0FBRVI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEIiLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuLy8gKDEpIFRoZSBjb2RlIGBpZiAoX19ERVZfXykgLi4uYCBjYW4gYmUgcmVtb3ZlZCBieSBidWlsZCB0b29sLlxuLy8gKDIpIElmIGludGVuZCB0byB1c2UgYF9fREVWX19gLCB0aGlzIG1vZHVsZSBzaG91bGQgYmUgaW1wb3J0ZWQuIFVzZSBhIGdsb2JhbFxuLy8gdmFyaWFibGUgYF9fREVWX19gIG1heSBjYXVzZSB0aGF0IG1pc3MgdGhlIGRlY2xhcmF0aW9uIChzZWUgIzY1MzUpLCBvciB0aGVcbi8vIGRlY2xhcmF0aW9uIGlzIGJlaGluZCBvZiB0aGUgdXNpbmcgcG9zaXRpb24gKGZvciBleGFtcGxlIGluIGBNb2RlbC5leHRlbnRgLFxuLy8gQW5kIHRvb2xzIGxpa2Ugcm9sbHVwIGNhbiBub3QgYW5hbHlzaXMgdGhlIGRlcGVuZGVuY3kgaWYgbm90IGltcG9ydCkuXG52YXIgZGV2OyAvLyBJbiBicm93c2VyXG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICBkZXYgPSB3aW5kb3cuX19ERVZfXztcbn0gLy8gSW4gbm9kZVxuZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBkZXYgPSBnbG9iYWwuX19ERVZfXztcbiAgfVxuXG5pZiAodHlwZW9mIGRldiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgZGV2ID0gdHJ1ZTtcbn1cblxudmFyIF9fREVWX18gPSBkZXY7XG5leHBvcnRzLl9fREVWX18gPSBfX0RFVl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///61\\n')},function(module,exports){eval(\"var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\\n/**\\n * 创建一个向量\\n * @param {number} [x=0]\\n * @param {number} [y=0]\\n * @return {Vector2}\\n */\\n\\nfunction create(x, y) {\\n  var out = new ArrayCtor(2);\\n\\n  if (x == null) {\\n    x = 0;\\n  }\\n\\n  if (y == null) {\\n    y = 0;\\n  }\\n\\n  out[0] = x;\\n  out[1] = y;\\n  return out;\\n}\\n/**\\n * 复制向量数据\\n * @param {Vector2} out\\n * @param {Vector2} v\\n * @return {Vector2}\\n */\\n\\n\\nfunction copy(out, v) {\\n  out[0] = v[0];\\n  out[1] = v[1];\\n  return out;\\n}\\n/**\\n * 克隆一个向量\\n * @param {Vector2} v\\n * @return {Vector2}\\n */\\n\\n\\nfunction clone(v) {\\n  var out = new ArrayCtor(2);\\n  out[0] = v[0];\\n  out[1] = v[1];\\n  return out;\\n}\\n/**\\n * 设置向量的两个项\\n * @param {Vector2} out\\n * @param {number} a\\n * @param {number} b\\n * @return {Vector2} 结果\\n */\\n\\n\\nfunction set(out, a, b) {\\n  out[0] = a;\\n  out[1] = b;\\n  return out;\\n}\\n/**\\n * 向量相加\\n * @param {Vector2} out\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n */\\n\\n\\nfunction add(out, v1, v2) {\\n  out[0] = v1[0] + v2[0];\\n  out[1] = v1[1] + v2[1];\\n  return out;\\n}\\n/**\\n * 向量缩放后相加\\n * @param {Vector2} out\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n * @param {number} a\\n */\\n\\n\\nfunction scaleAndAdd(out, v1, v2, a) {\\n  out[0] = v1[0] + v2[0] * a;\\n  out[1] = v1[1] + v2[1] * a;\\n  return out;\\n}\\n/**\\n * 向量相减\\n * @param {Vector2} out\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n */\\n\\n\\nfunction sub(out, v1, v2) {\\n  out[0] = v1[0] - v2[0];\\n  out[1] = v1[1] - v2[1];\\n  return out;\\n}\\n/**\\n * 向量长度\\n * @param {Vector2} v\\n * @return {number}\\n */\\n\\n\\nfunction len(v) {\\n  return Math.sqrt(lenSquare(v));\\n}\\n\\nvar length = len; // jshint ignore:line\\n\\n/**\\n * 向量长度平方\\n * @param {Vector2} v\\n * @return {number}\\n */\\n\\nfunction lenSquare(v) {\\n  return v[0] * v[0] + v[1] * v[1];\\n}\\n\\nvar lengthSquare = lenSquare;\\n/**\\n * 向量乘法\\n * @param {Vector2} out\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n */\\n\\nfunction mul(out, v1, v2) {\\n  out[0] = v1[0] * v2[0];\\n  out[1] = v1[1] * v2[1];\\n  return out;\\n}\\n/**\\n * 向量除法\\n * @param {Vector2} out\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n */\\n\\n\\nfunction div(out, v1, v2) {\\n  out[0] = v1[0] / v2[0];\\n  out[1] = v1[1] / v2[1];\\n  return out;\\n}\\n/**\\n * 向量点乘\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n * @return {number}\\n */\\n\\n\\nfunction dot(v1, v2) {\\n  return v1[0] * v2[0] + v1[1] * v2[1];\\n}\\n/**\\n * 向量缩放\\n * @param {Vector2} out\\n * @param {Vector2} v\\n * @param {number} s\\n */\\n\\n\\nfunction scale(out, v, s) {\\n  out[0] = v[0] * s;\\n  out[1] = v[1] * s;\\n  return out;\\n}\\n/**\\n * 向量归一化\\n * @param {Vector2} out\\n * @param {Vector2} v\\n */\\n\\n\\nfunction normalize(out, v) {\\n  var d = len(v);\\n\\n  if (d === 0) {\\n    out[0] = 0;\\n    out[1] = 0;\\n  } else {\\n    out[0] = v[0] / d;\\n    out[1] = v[1] / d;\\n  }\\n\\n  return out;\\n}\\n/**\\n * 计算向量间距离\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n * @return {number}\\n */\\n\\n\\nfunction distance(v1, v2) {\\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\\n}\\n\\nvar dist = distance;\\n/**\\n * 向量距离平方\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n * @return {number}\\n */\\n\\nfunction distanceSquare(v1, v2) {\\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\\n}\\n\\nvar distSquare = distanceSquare;\\n/**\\n * 求负向量\\n * @param {Vector2} out\\n * @param {Vector2} v\\n */\\n\\nfunction negate(out, v) {\\n  out[0] = -v[0];\\n  out[1] = -v[1];\\n  return out;\\n}\\n/**\\n * 插值两个点\\n * @param {Vector2} out\\n * @param {Vector2} v1\\n * @param {Vector2} v2\\n * @param {number} t\\n */\\n\\n\\nfunction lerp(out, v1, v2, t) {\\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\\n  return out;\\n}\\n/**\\n * 矩阵左乘向量\\n * @param {Vector2} out\\n * @param {Vector2} v\\n * @param {Vector2} m\\n */\\n\\n\\nfunction applyTransform(out, v, m) {\\n  var x = v[0];\\n  var y = v[1];\\n  out[0] = m[0] * x + m[2] * y + m[4];\\n  out[1] = m[1] * x + m[3] * y + m[5];\\n  return out;\\n}\\n/**\\n * 求两个向量最小值\\n * @param  {Vector2} out\\n * @param  {Vector2} v1\\n * @param  {Vector2} v2\\n */\\n\\n\\nfunction min(out, v1, v2) {\\n  out[0] = Math.min(v1[0], v2[0]);\\n  out[1] = Math.min(v1[1], v2[1]);\\n  return out;\\n}\\n/**\\n * 求两个向量最大值\\n * @param  {Vector2} out\\n * @param  {Vector2} v1\\n * @param  {Vector2} v2\\n */\\n\\n\\nfunction max(out, v1, v2) {\\n  out[0] = Math.max(v1[0], v2[0]);\\n  out[1] = Math.max(v1[1], v2[1]);\\n  return out;\\n}\\n\\nexports.create = create;\\nexports.copy = copy;\\nexports.clone = clone;\\nexports.set = set;\\nexports.add = add;\\nexports.scaleAndAdd = scaleAndAdd;\\nexports.sub = sub;\\nexports.len = len;\\nexports.length = length;\\nexports.lenSquare = lenSquare;\\nexports.lengthSquare = lengthSquare;\\nexports.mul = mul;\\nexports.div = div;\\nexports.dot = dot;\\nexports.scale = scale;\\nexports.normalize = normalize;\\nexports.distance = distance;\\nexports.dist = dist;\\nexports.distanceSquare = distanceSquare;\\nexports.distSquare = distSquare;\\nexports.negate = negate;\\nexports.lerp = lerp;\\nexports.applyTransform = applyTransform;\\nexports.min = min;\\nexports.max = max;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29yZS92ZWN0b3IuanM/NDAxYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFlBQVksUUFBUTtBQUNwQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLE9BQU87QUFDbEI7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsT0FBTztBQUNsQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25COzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25COzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI2Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBBcnJheUN0b3IgPSB0eXBlb2YgRmxvYXQzMkFycmF5ID09PSAndW5kZWZpbmVkJyA/IEFycmF5IDogRmxvYXQzMkFycmF5O1xuLyoqXG4gKiDliJvlu7rkuIDkuKrlkJHph49cbiAqIEBwYXJhbSB7bnVtYmVyfSBbeD0wXVxuICogQHBhcmFtIHtudW1iZXJ9IFt5PTBdXG4gKiBAcmV0dXJuIHtWZWN0b3IyfVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZSh4LCB5KSB7XG4gIHZhciBvdXQgPSBuZXcgQXJyYXlDdG9yKDIpO1xuXG4gIGlmICh4ID09IG51bGwpIHtcbiAgICB4ID0gMDtcbiAgfVxuXG4gIGlmICh5ID09IG51bGwpIHtcbiAgICB5ID0gMDtcbiAgfVxuXG4gIG91dFswXSA9IHg7XG4gIG91dFsxXSA9IHk7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIOWkjeWItuWQkemHj+aVsOaNrlxuICogQHBhcmFtIHtWZWN0b3IyfSBvdXRcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdlxuICogQHJldHVybiB7VmVjdG9yMn1cbiAqL1xuXG5cbmZ1bmN0aW9uIGNvcHkob3V0LCB2KSB7XG4gIG91dFswXSA9IHZbMF07XG4gIG91dFsxXSA9IHZbMV07XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIOWFi+mahuS4gOS4quWQkemHj1xuICogQHBhcmFtIHtWZWN0b3IyfSB2XG4gKiBAcmV0dXJuIHtWZWN0b3IyfVxuICovXG5cblxuZnVuY3Rpb24gY2xvbmUodikge1xuICB2YXIgb3V0ID0gbmV3IEFycmF5Q3RvcigyKTtcbiAgb3V0WzBdID0gdlswXTtcbiAgb3V0WzFdID0gdlsxXTtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxuICog6K6+572u5ZCR6YeP55qE5Lik5Liq6aG5XG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IG91dFxuICogQHBhcmFtIHtudW1iZXJ9IGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBiXG4gKiBAcmV0dXJuIHtWZWN0b3IyfSDnu5PmnpxcbiAqL1xuXG5cbmZ1bmN0aW9uIHNldChvdXQsIGEsIGIpIHtcbiAgb3V0WzBdID0gYTtcbiAgb3V0WzFdID0gYjtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxuICog5ZCR6YeP55u45YqgXG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IG91dFxuICogQHBhcmFtIHtWZWN0b3IyfSB2MVxuICogQHBhcmFtIHtWZWN0b3IyfSB2MlxuICovXG5cblxuZnVuY3Rpb24gYWRkKG91dCwgdjEsIHYyKSB7XG4gIG91dFswXSA9IHYxWzBdICsgdjJbMF07XG4gIG91dFsxXSA9IHYxWzFdICsgdjJbMV07XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIOWQkemHj+e8qeaUvuWQjuebuOWKoFxuICogQHBhcmFtIHtWZWN0b3IyfSBvdXRcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjFcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjJcbiAqIEBwYXJhbSB7bnVtYmVyfSBhXG4gKi9cblxuXG5mdW5jdGlvbiBzY2FsZUFuZEFkZChvdXQsIHYxLCB2MiwgYSkge1xuICBvdXRbMF0gPSB2MVswXSArIHYyWzBdICogYTtcbiAgb3V0WzFdID0gdjFbMV0gKyB2MlsxXSAqIGE7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIOWQkemHj+ebuOWHj1xuICogQHBhcmFtIHtWZWN0b3IyfSBvdXRcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjFcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjJcbiAqL1xuXG5cbmZ1bmN0aW9uIHN1YihvdXQsIHYxLCB2Mikge1xuICBvdXRbMF0gPSB2MVswXSAtIHYyWzBdO1xuICBvdXRbMV0gPSB2MVsxXSAtIHYyWzFdO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDlkJHph4/plb/luqZcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5cblxuZnVuY3Rpb24gbGVuKHYpIHtcbiAgcmV0dXJuIE1hdGguc3FydChsZW5TcXVhcmUodikpO1xufVxuXG52YXIgbGVuZ3RoID0gbGVuOyAvLyBqc2hpbnQgaWdub3JlOmxpbmVcblxuLyoqXG4gKiDlkJHph4/plb/luqblubPmlrlcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5cbmZ1bmN0aW9uIGxlblNxdWFyZSh2KSB7XG4gIHJldHVybiB2WzBdICogdlswXSArIHZbMV0gKiB2WzFdO1xufVxuXG52YXIgbGVuZ3RoU3F1YXJlID0gbGVuU3F1YXJlO1xuLyoqXG4gKiDlkJHph4/kuZjms5VcbiAqIEBwYXJhbSB7VmVjdG9yMn0gb3V0XG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IHYxXG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IHYyXG4gKi9cblxuZnVuY3Rpb24gbXVsKG91dCwgdjEsIHYyKSB7XG4gIG91dFswXSA9IHYxWzBdICogdjJbMF07XG4gIG91dFsxXSA9IHYxWzFdICogdjJbMV07XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIOWQkemHj+mZpOazlVxuICogQHBhcmFtIHtWZWN0b3IyfSBvdXRcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjFcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjJcbiAqL1xuXG5cbmZ1bmN0aW9uIGRpdihvdXQsIHYxLCB2Mikge1xuICBvdXRbMF0gPSB2MVswXSAvIHYyWzBdO1xuICBvdXRbMV0gPSB2MVsxXSAvIHYyWzFdO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDlkJHph4/ngrnkuZhcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjFcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjJcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuXG5cbmZ1bmN0aW9uIGRvdCh2MSwgdjIpIHtcbiAgcmV0dXJuIHYxWzBdICogdjJbMF0gKyB2MVsxXSAqIHYyWzFdO1xufVxuLyoqXG4gKiDlkJHph4/nvKnmlL5cbiAqIEBwYXJhbSB7VmVjdG9yMn0gb3V0XG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IHZcbiAqIEBwYXJhbSB7bnVtYmVyfSBzXG4gKi9cblxuXG5mdW5jdGlvbiBzY2FsZShvdXQsIHYsIHMpIHtcbiAgb3V0WzBdID0gdlswXSAqIHM7XG4gIG91dFsxXSA9IHZbMV0gKiBzO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDlkJHph4/lvZLkuIDljJZcbiAqIEBwYXJhbSB7VmVjdG9yMn0gb3V0XG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IHZcbiAqL1xuXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZShvdXQsIHYpIHtcbiAgdmFyIGQgPSBsZW4odik7XG5cbiAgaWYgKGQgPT09IDApIHtcbiAgICBvdXRbMF0gPSAwO1xuICAgIG91dFsxXSA9IDA7XG4gIH0gZWxzZSB7XG4gICAgb3V0WzBdID0gdlswXSAvIGQ7XG4gICAgb3V0WzFdID0gdlsxXSAvIGQ7XG4gIH1cblxuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDorqHnrpflkJHph4/pl7Tot53nprtcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjFcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdjJcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuXG5cbmZ1bmN0aW9uIGRpc3RhbmNlKHYxLCB2Mikge1xuICByZXR1cm4gTWF0aC5zcXJ0KCh2MVswXSAtIHYyWzBdKSAqICh2MVswXSAtIHYyWzBdKSArICh2MVsxXSAtIHYyWzFdKSAqICh2MVsxXSAtIHYyWzFdKSk7XG59XG5cbnZhciBkaXN0ID0gZGlzdGFuY2U7XG4vKipcbiAqIOWQkemHj+i3neemu+W5s+aWuVxuICogQHBhcmFtIHtWZWN0b3IyfSB2MVxuICogQHBhcmFtIHtWZWN0b3IyfSB2MlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5cbmZ1bmN0aW9uIGRpc3RhbmNlU3F1YXJlKHYxLCB2Mikge1xuICByZXR1cm4gKHYxWzBdIC0gdjJbMF0pICogKHYxWzBdIC0gdjJbMF0pICsgKHYxWzFdIC0gdjJbMV0pICogKHYxWzFdIC0gdjJbMV0pO1xufVxuXG52YXIgZGlzdFNxdWFyZSA9IGRpc3RhbmNlU3F1YXJlO1xuLyoqXG4gKiDmsYLotJ/lkJHph49cbiAqIEBwYXJhbSB7VmVjdG9yMn0gb3V0XG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IHZcbiAqL1xuXG5mdW5jdGlvbiBuZWdhdGUob3V0LCB2KSB7XG4gIG91dFswXSA9IC12WzBdO1xuICBvdXRbMV0gPSAtdlsxXTtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxuICog5o+S5YC85Lik5Liq54K5XG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IG91dFxuICogQHBhcmFtIHtWZWN0b3IyfSB2MVxuICogQHBhcmFtIHtWZWN0b3IyfSB2MlxuICogQHBhcmFtIHtudW1iZXJ9IHRcbiAqL1xuXG5cbmZ1bmN0aW9uIGxlcnAob3V0LCB2MSwgdjIsIHQpIHtcbiAgb3V0WzBdID0gdjFbMF0gKyB0ICogKHYyWzBdIC0gdjFbMF0pO1xuICBvdXRbMV0gPSB2MVsxXSArIHQgKiAodjJbMV0gLSB2MVsxXSk7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIOefqemYteW3puS5mOWQkemHj1xuICogQHBhcmFtIHtWZWN0b3IyfSBvdXRcbiAqIEBwYXJhbSB7VmVjdG9yMn0gdlxuICogQHBhcmFtIHtWZWN0b3IyfSBtXG4gKi9cblxuXG5mdW5jdGlvbiBhcHBseVRyYW5zZm9ybShvdXQsIHYsIG0pIHtcbiAgdmFyIHggPSB2WzBdO1xuICB2YXIgeSA9IHZbMV07XG4gIG91dFswXSA9IG1bMF0gKiB4ICsgbVsyXSAqIHkgKyBtWzRdO1xuICBvdXRbMV0gPSBtWzFdICogeCArIG1bM10gKiB5ICsgbVs1XTtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxuICog5rGC5Lik5Liq5ZCR6YeP5pyA5bCP5YC8XG4gKiBAcGFyYW0gIHtWZWN0b3IyfSBvdXRcbiAqIEBwYXJhbSAge1ZlY3RvcjJ9IHYxXG4gKiBAcGFyYW0gIHtWZWN0b3IyfSB2MlxuICovXG5cblxuZnVuY3Rpb24gbWluKG91dCwgdjEsIHYyKSB7XG4gIG91dFswXSA9IE1hdGgubWluKHYxWzBdLCB2MlswXSk7XG4gIG91dFsxXSA9IE1hdGgubWluKHYxWzFdLCB2MlsxXSk7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIOaxguS4pOS4quWQkemHj+acgOWkp+WAvFxuICogQHBhcmFtICB7VmVjdG9yMn0gb3V0XG4gKiBAcGFyYW0gIHtWZWN0b3IyfSB2MVxuICogQHBhcmFtICB7VmVjdG9yMn0gdjJcbiAqL1xuXG5cbmZ1bmN0aW9uIG1heChvdXQsIHYxLCB2Mikge1xuICBvdXRbMF0gPSBNYXRoLm1heCh2MVswXSwgdjJbMF0pO1xuICBvdXRbMV0gPSBNYXRoLm1heCh2MVsxXSwgdjJbMV0pO1xuICByZXR1cm4gb3V0O1xufVxuXG5leHBvcnRzLmNyZWF0ZSA9IGNyZWF0ZTtcbmV4cG9ydHMuY29weSA9IGNvcHk7XG5leHBvcnRzLmNsb25lID0gY2xvbmU7XG5leHBvcnRzLnNldCA9IHNldDtcbmV4cG9ydHMuYWRkID0gYWRkO1xuZXhwb3J0cy5zY2FsZUFuZEFkZCA9IHNjYWxlQW5kQWRkO1xuZXhwb3J0cy5zdWIgPSBzdWI7XG5leHBvcnRzLmxlbiA9IGxlbjtcbmV4cG9ydHMubGVuZ3RoID0gbGVuZ3RoO1xuZXhwb3J0cy5sZW5TcXVhcmUgPSBsZW5TcXVhcmU7XG5leHBvcnRzLmxlbmd0aFNxdWFyZSA9IGxlbmd0aFNxdWFyZTtcbmV4cG9ydHMubXVsID0gbXVsO1xuZXhwb3J0cy5kaXYgPSBkaXY7XG5leHBvcnRzLmRvdCA9IGRvdDtcbmV4cG9ydHMuc2NhbGUgPSBzY2FsZTtcbmV4cG9ydHMubm9ybWFsaXplID0gbm9ybWFsaXplO1xuZXhwb3J0cy5kaXN0YW5jZSA9IGRpc3RhbmNlO1xuZXhwb3J0cy5kaXN0ID0gZGlzdDtcbmV4cG9ydHMuZGlzdGFuY2VTcXVhcmUgPSBkaXN0YW5jZVNxdWFyZTtcbmV4cG9ydHMuZGlzdFNxdWFyZSA9IGRpc3RTcXVhcmU7XG5leHBvcnRzLm5lZ2F0ZSA9IG5lZ2F0ZTtcbmV4cG9ydHMubGVycCA9IGxlcnA7XG5leHBvcnRzLmFwcGx5VHJhbnNmb3JtID0gYXBwbHlUcmFuc2Zvcm07XG5leHBvcnRzLm1pbiA9IG1pbjtcbmV4cG9ydHMubWF4ID0gbWF4OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///62\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar pathTool = __webpack_require__(140);\\n\\nvar colorTool = __webpack_require__(82);\\n\\nvar matrix = __webpack_require__(74);\\n\\nvar vector = __webpack_require__(62);\\n\\nvar Path = __webpack_require__(64);\\n\\nvar Transformable = __webpack_require__(130);\\n\\nvar ZImage = __webpack_require__(102);\\n\\nexports.Image = ZImage;\\n\\nvar Group = __webpack_require__(81);\\n\\nexports.Group = Group;\\n\\nvar Text = __webpack_require__(105);\\n\\nexports.Text = Text;\\n\\nvar Circle = __webpack_require__(144);\\n\\nexports.Circle = Circle;\\n\\nvar Sector = __webpack_require__(214);\\n\\nexports.Sector = Sector;\\n\\nvar Ring = __webpack_require__(215);\\n\\nexports.Ring = Ring;\\n\\nvar Polygon = __webpack_require__(146);\\n\\nexports.Polygon = Polygon;\\n\\nvar Polyline = __webpack_require__(148);\\n\\nexports.Polyline = Polyline;\\n\\nvar Rect = __webpack_require__(149);\\n\\nexports.Rect = Rect;\\n\\nvar Line = __webpack_require__(150);\\n\\nexports.Line = Line;\\n\\nvar BezierCurve = __webpack_require__(218);\\n\\nexports.BezierCurve = BezierCurve;\\n\\nvar Arc = __webpack_require__(219);\\n\\nexports.Arc = Arc;\\n\\nvar CompoundPath = __webpack_require__(220);\\n\\nexports.CompoundPath = CompoundPath;\\n\\nvar LinearGradient = __webpack_require__(151);\\n\\nexports.LinearGradient = LinearGradient;\\n\\nvar RadialGradient = __webpack_require__(221);\\n\\nexports.RadialGradient = RadialGradient;\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\nexports.BoundingRect = BoundingRect;\\n\\nvar IncrementalDisplayable = __webpack_require__(222);\\n\\nexports.IncrementalDisplayable = IncrementalDisplayable;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar round = Math.round;\\nvar mathMax = Math.max;\\nvar mathMin = Math.min;\\nvar EMPTY_OBJ = {};\\n/**\\n * Extend shape with parameters\\n */\\n\\nfunction extendShape(opts) {\\n  return Path.extend(opts);\\n}\\n/**\\n * Extend path\\n */\\n\\n\\nfunction extendPath(pathData, opts) {\\n  return pathTool.extendFromString(pathData, opts);\\n}\\n/**\\n * Create a path element from path data string\\n * @param {string} pathData\\n * @param {Object} opts\\n * @param {module:zrender/core/BoundingRect} rect\\n * @param {string} [layout=cover] 'center' or 'cover'\\n */\\n\\n\\nfunction makePath(pathData, opts, rect, layout) {\\n  var path = pathTool.createFromString(pathData, opts);\\n\\n  if (rect) {\\n    if (layout === 'center') {\\n      rect = centerGraphic(rect, path.getBoundingRect());\\n    }\\n\\n    resizePath(path, rect);\\n  }\\n\\n  return path;\\n}\\n/**\\n * Create a image element from image url\\n * @param {string} imageUrl image url\\n * @param {Object} opts options\\n * @param {module:zrender/core/BoundingRect} rect constrain rect\\n * @param {string} [layout=cover] 'center' or 'cover'\\n */\\n\\n\\nfunction makeImage(imageUrl, rect, layout) {\\n  var path = new ZImage({\\n    style: {\\n      image: imageUrl,\\n      x: rect.x,\\n      y: rect.y,\\n      width: rect.width,\\n      height: rect.height\\n    },\\n    onload: function (img) {\\n      if (layout === 'center') {\\n        var boundingRect = {\\n          width: img.width,\\n          height: img.height\\n        };\\n        path.setStyle(centerGraphic(rect, boundingRect));\\n      }\\n    }\\n  });\\n  return path;\\n}\\n/**\\n * Get position of centered element in bounding box.\\n *\\n * @param  {Object} rect         element local bounding box\\n * @param  {Object} boundingRect constraint bounding box\\n * @return {Object} element position containing x, y, width, and height\\n */\\n\\n\\nfunction centerGraphic(rect, boundingRect) {\\n  // Set rect to center, keep width / height ratio.\\n  var aspect = boundingRect.width / boundingRect.height;\\n  var width = rect.height * aspect;\\n  var height;\\n\\n  if (width <= rect.width) {\\n    height = rect.height;\\n  } else {\\n    width = rect.width;\\n    height = width / aspect;\\n  }\\n\\n  var cx = rect.x + rect.width / 2;\\n  var cy = rect.y + rect.height / 2;\\n  return {\\n    x: cx - width / 2,\\n    y: cy - height / 2,\\n    width: width,\\n    height: height\\n  };\\n}\\n\\nvar mergePath = pathTool.mergePath;\\n/**\\n * Resize a path to fit the rect\\n * @param {module:zrender/graphic/Path} path\\n * @param {Object} rect\\n */\\n\\nfunction resizePath(path, rect) {\\n  if (!path.applyTransform) {\\n    return;\\n  }\\n\\n  var pathRect = path.getBoundingRect();\\n  var m = pathRect.calculateTransform(rect);\\n  path.applyTransform(m);\\n}\\n/**\\n * Sub pixel optimize line for canvas\\n *\\n * @param {Object} param\\n * @param {Object} [param.shape]\\n * @param {number} [param.shape.x1]\\n * @param {number} [param.shape.y1]\\n * @param {number} [param.shape.x2]\\n * @param {number} [param.shape.y2]\\n * @param {Object} [param.style]\\n * @param {number} [param.style.lineWidth]\\n * @return {Object} Modified param\\n */\\n\\n\\nfunction subPixelOptimizeLine(param) {\\n  var shape = param.shape;\\n  var lineWidth = param.style.lineWidth;\\n\\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\\n  }\\n\\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\\n  }\\n\\n  return param;\\n}\\n/**\\n * Sub pixel optimize rect for canvas\\n *\\n * @param {Object} param\\n * @param {Object} [param.shape]\\n * @param {number} [param.shape.x]\\n * @param {number} [param.shape.y]\\n * @param {number} [param.shape.width]\\n * @param {number} [param.shape.height]\\n * @param {Object} [param.style]\\n * @param {number} [param.style.lineWidth]\\n * @return {Object} Modified param\\n */\\n\\n\\nfunction subPixelOptimizeRect(param) {\\n  var shape = param.shape;\\n  var lineWidth = param.style.lineWidth;\\n  var originX = shape.x;\\n  var originY = shape.y;\\n  var originWidth = shape.width;\\n  var originHeight = shape.height;\\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\\n  return param;\\n}\\n/**\\n * Sub pixel optimize for canvas\\n *\\n * @param {number} position Coordinate, such as x, y\\n * @param {number} lineWidth Should be nonnegative integer.\\n * @param {boolean=} positiveOrNegative Default false (negative).\\n * @return {number} Optimized position.\\n */\\n\\n\\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\\n  // Assure that (position + lineWidth / 2) is near integer edge,\\n  // otherwise line will be fuzzy in canvas.\\n  var doubledPosition = round(position * 2);\\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\\n}\\n\\nfunction hasFillOrStroke(fillOrStroke) {\\n  return fillOrStroke != null && fillOrStroke !== 'none';\\n} // Most lifted color are duplicated.\\n\\n\\nvar liftedColorMap = zrUtil.createHashMap();\\nvar liftedColorCount = 0;\\n\\nfunction liftColor(color) {\\n  if (typeof color !== 'string') {\\n    return color;\\n  }\\n\\n  var liftedColor = liftedColorMap.get(color);\\n\\n  if (!liftedColor) {\\n    liftedColor = colorTool.lift(color, -0.1);\\n\\n    if (liftedColorCount < 10000) {\\n      liftedColorMap.set(color, liftedColor);\\n      liftedColorCount++;\\n    }\\n  }\\n\\n  return liftedColor;\\n}\\n\\nfunction cacheElementStl(el) {\\n  if (!el.__hoverStlDirty) {\\n    return;\\n  }\\n\\n  el.__hoverStlDirty = false;\\n  var hoverStyle = el.__hoverStl;\\n\\n  if (!hoverStyle) {\\n    el.__normalStl = null;\\n    return;\\n  }\\n\\n  var normalStyle = el.__normalStl = {};\\n  var elStyle = el.style;\\n\\n  for (var name in hoverStyle) {\\n    // See comment in `doSingleEnterHover`.\\n    if (hoverStyle[name] != null) {\\n      normalStyle[name] = elStyle[name];\\n    }\\n  } // Always cache fill and stroke to normalStyle for lifting color.\\n\\n\\n  normalStyle.fill = elStyle.fill;\\n  normalStyle.stroke = elStyle.stroke;\\n}\\n\\nfunction doSingleEnterHover(el) {\\n  var hoverStl = el.__hoverStl;\\n\\n  if (!hoverStl || el.__highlighted) {\\n    return;\\n  }\\n\\n  var useHoverLayer = el.useHoverLayer;\\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\\n  var zr = el.__zr;\\n\\n  if (!zr && useHoverLayer) {\\n    return;\\n  }\\n\\n  var elTarget = el;\\n  var targetStyle = el.style;\\n\\n  if (useHoverLayer) {\\n    elTarget = zr.addHover(el);\\n    targetStyle = elTarget.style;\\n  } // Consider case: only `position: 'top'` is set on emphasis, then text\\n  // color should be returned to `autoColor`, rather than remain '#fff'.\\n  // So we should rollback then apply again after style merging.\\n\\n\\n  rollbackDefaultTextStyle(targetStyle);\\n\\n  if (!useHoverLayer) {\\n    cacheElementStl(elTarget);\\n  } // styles can be:\\n  // {\\n  //    label: {\\n  //        show: false,\\n  //        position: 'outside',\\n  //        fontSize: 18\\n  //    },\\n  //    emphasis: {\\n  //        label: {\\n  //            show: true\\n  //        }\\n  //    }\\n  // },\\n  // where properties of `emphasis` may not appear in `normal`. We previously use\\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\\n  // But consider rich text and setOption in merge mode, it is impossible to cover\\n  // all properties in merge. So we use merge mode when setting style here, where\\n  // only properties that is not `null/undefined` can be set. The disadventage:\\n  // null/undefined can not be used to remove style any more in `emphasis`.\\n\\n\\n  targetStyle.extendFrom(hoverStl);\\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\\n  applyDefaultTextStyle(targetStyle);\\n\\n  if (!useHoverLayer) {\\n    el.dirty(false);\\n    el.z2 += 1;\\n  }\\n}\\n\\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\\n    targetStyle[prop] = liftColor(targetStyle[prop]);\\n  }\\n}\\n\\nfunction doSingleLeaveHover(el) {\\n  if (el.__highlighted) {\\n    doSingleRestoreHoverStyle(el);\\n    el.__highlighted = false;\\n  }\\n}\\n\\nfunction doSingleRestoreHoverStyle(el) {\\n  var highlighted = el.__highlighted;\\n\\n  if (highlighted === 'layer') {\\n    el.__zr && el.__zr.removeHover(el);\\n  } else if (highlighted) {\\n    var style = el.style;\\n    var normalStl = el.__normalStl;\\n\\n    if (normalStl) {\\n      rollbackDefaultTextStyle(style); // Consider null/undefined value, should use\\n      // `setStyle` but not `extendFrom(stl, true)`.\\n\\n      el.setStyle(normalStl);\\n      applyDefaultTextStyle(style);\\n      el.z2 -= 1;\\n    }\\n  }\\n}\\n\\nfunction traverseCall(el, method) {\\n  el.isGroup ? el.traverse(function (child) {\\n    !child.isGroup && method(child);\\n  }) : method(el);\\n}\\n/**\\n * Set hover style of element.\\n *\\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\\n * @param {Object|boolean} [hoverStl] The specified hover style.\\n *        If set as `false`, disable the hover style.\\n *        Similarly, The `el.hoverStyle` can alse be set\\n *        as `false` to disable the hover style.\\n *        Otherwise, use the default hover style if not provided.\\n * @param {Object} [opt]\\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`\\n */\\n\\n\\nfunction setElementHoverStyle(el, hoverStl) {\\n  hoverStl = el.__hoverStl = hoverStl !== false && (hoverStl || {});\\n  el.__hoverStlDirty = true;\\n\\n  if (el.__highlighted) {\\n    doSingleLeaveHover(el);\\n    doSingleEnterHover(el);\\n  }\\n}\\n/**\\n * Emphasis (called by API) has higher priority than `mouseover`.\\n * When element has been called to be entered emphasis, mouse over\\n * should not trigger the highlight effect (for example, animation\\n * scale) again, and `mouseout` should not downplay the highlight\\n * effect. So the listener of `mouseover` and `mouseout` should\\n * check `isInEmphasis`.\\n *\\n * @param {module:zrender/Element} el\\n * @return {boolean}\\n */\\n\\n\\nfunction isInEmphasis(el) {\\n  return el && el.__isEmphasisEntered;\\n}\\n\\nfunction onElementMouseOver(e) {\\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\\n    return;\\n  } // Only if element is not in emphasis status\\n\\n\\n  !this.__isEmphasisEntered && traverseCall(this, doSingleEnterHover);\\n}\\n\\nfunction onElementMouseOut(e) {\\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\\n    return;\\n  } // Only if element is not in emphasis status\\n\\n\\n  !this.__isEmphasisEntered && traverseCall(this, doSingleLeaveHover);\\n}\\n\\nfunction enterEmphasis() {\\n  this.__isEmphasisEntered = true;\\n  traverseCall(this, doSingleEnterHover);\\n}\\n\\nfunction leaveEmphasis() {\\n  this.__isEmphasisEntered = false;\\n  traverseCall(this, doSingleLeaveHover);\\n}\\n/**\\n * Set hover style of element.\\n *\\n * [Caveat]:\\n * This method can be called repeatly and achieve the same result.\\n *\\n * [Usage]:\\n * Call the method for a \\\"root\\\" element once. Do not call it for each descendants.\\n * If the descendants elemenets of a group has itself hover style different from the\\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\\n * not call this method for them.\\n *\\n * @param {module:zrender/Element} el\\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\\n * @param {Object} [opt]\\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`.\\n */\\n\\n\\nfunction setHoverStyle(el, hoverStyle, opt) {\\n  el.isGroup ? el.traverse(function (child) {\\n    // If element has sepcified hoverStyle, then use it instead of given hoverStyle\\n    // Often used when item group has a label element and it's hoverStyle is different\\n    !child.isGroup && setElementHoverStyle(child, child.hoverStyle || hoverStyle);\\n  }) : setElementHoverStyle(el, el.hoverStyle || hoverStyle);\\n  setAsHoverStyleTrigger(el, opt);\\n}\\n/**\\n * @param {Object|boolean} [opt] If `false`, means disable trigger.\\n * @param {boolean} [opt.hoverSilentOnTouch=false]\\n *        In touch device, mouseover event will be trigger on touchstart event\\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\\n *        conveniently use hoverStyle when tap on touch screen without additional\\n *        code for compatibility.\\n *        But if the chart/component has select feature, which usually also use\\n *        hoverStyle, there might be conflict between 'select-highlight' and\\n *        'hover-highlight' especially when roam is enabled (see geo for example).\\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\\n *        on touch device.\\n */\\n\\n\\nfunction setAsHoverStyleTrigger(el, opt) {\\n  var disable = opt === false;\\n  el.__hoverSilentOnTouch = opt != null && opt.hoverSilentOnTouch; // Simple optimize, since this method might be\\n  // called for each elements of a group in some cases.\\n\\n  if (!disable || el.__hoverStyleTrigger) {\\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\\n\\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\\n\\n    el[method]('emphasis', enterEmphasis)[method]('normal', leaveEmphasis);\\n    el.__hoverStyleTrigger = !disable;\\n  }\\n}\\n/**\\n * @param {Object|module:zrender/graphic/Style} normalStyle\\n * @param {Object} emphasisStyle\\n * @param {module:echarts/model/Model} normalModel\\n * @param {module:echarts/model/Model} emphasisModel\\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\\n * @param {string|Function} [opt.defaultText]\\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\\n * @param {Object} [normalSpecified]\\n * @param {Object} [emphasisSpecified]\\n */\\n\\n\\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\\n  opt = opt || EMPTY_OBJ;\\n  var labelFetcher = opt.labelFetcher;\\n  var labelDataIndex = opt.labelDataIndex;\\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\\n  // is not supported util someone requests.\\n\\n  var showNormal = normalModel.getShallow('show');\\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\\n\\n  var baseText;\\n\\n  if (showNormal || showEmphasis) {\\n    if (labelFetcher) {\\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\\n    }\\n\\n    if (baseText == null) {\\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\\n    }\\n  }\\n\\n  var normalStyleText = showNormal ? baseText : null;\\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\\n\\n  if (normalStyleText != null || emphasisStyleText != null) {\\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\\n    // values have to be set on `normalStyle`.\\n    // If we set default values on `emphasisStyle`, consider case:\\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\\n    // Then the 'red' will not work on emphasis.\\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\\n  }\\n\\n  normalStyle.text = normalStyleText;\\n  emphasisStyle.text = emphasisStyleText;\\n}\\n/**\\n * Set basic textStyle properties.\\n * @param {Object|module:zrender/graphic/Style} textStyle\\n * @param {module:echarts/model/Model} model\\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\\n * @param {boolean} [isEmphasis]\\n */\\n\\n\\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\\n\\n  return textStyle;\\n}\\n/**\\n * Set text option in the style.\\n * @deprecated\\n * @param {Object} textStyle\\n * @param {module:echarts/model/Model} labelModel\\n * @param {string|boolean} defaultColor Default text color.\\n *        If set as false, it will be processed as a emphasis style.\\n */\\n\\n\\nfunction setText(textStyle, labelModel, defaultColor) {\\n  var opt = {\\n    isRectText: true\\n  };\\n  var isEmphasis;\\n\\n  if (defaultColor === false) {\\n    isEmphasis = true;\\n  } else {\\n    // Support setting color as 'auto' to get visual color.\\n    opt.autoColor = defaultColor;\\n  }\\n\\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\\n}\\n/**\\n * {\\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\\n *      isRectText: boolean,\\n *      autoColor: string, specify a color when color is 'auto',\\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\\n *              If autoColor specified, it is used as default textFill.\\n *      useInsideStyle:\\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\\n *                  if `textFill` is not specified.\\n *              `false`: Do not use inside style.\\n *              `null/undefined`: use inside style if `isRectText` is true and\\n *                  `textFill` is not specified and textPosition contains `'inside'`.\\n *      forceRich: boolean\\n * }\\n */\\n\\n\\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\\n  opt = opt || EMPTY_OBJ;\\n\\n  if (opt.isRectText) {\\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\\n    // in bar series, and magric type should be considered.\\n\\n    textPosition === 'outside' && (textPosition = 'top');\\n    textStyle.textPosition = textPosition;\\n    textStyle.textOffset = textStyleModel.getShallow('offset');\\n    var labelRotate = textStyleModel.getShallow('rotate');\\n    labelRotate != null && (labelRotate *= Math.PI / 180);\\n    textStyle.textRotation = labelRotate;\\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\\n  }\\n\\n  var ecModel = textStyleModel.ecModel;\\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\\n  // {\\n  //     data: [{\\n  //         value: 12,\\n  //         label: {\\n  //             rich: {\\n  //                 // no 'a' here but using parent 'a'.\\n  //             }\\n  //         }\\n  //     }],\\n  //     rich: {\\n  //         a: { ... }\\n  //     }\\n  // }\\n\\n  var richItemNames = getRichItemNames(textStyleModel);\\n  var richResult;\\n\\n  if (richItemNames) {\\n    richResult = {};\\n\\n    for (var name in richItemNames) {\\n      if (richItemNames.hasOwnProperty(name)) {\\n        // Cascade is supported in rich.\\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\\n\\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\\n      }\\n    }\\n  }\\n\\n  textStyle.rich = richResult;\\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\\n\\n  if (opt.forceRich && !opt.textStyle) {\\n    opt.textStyle = {};\\n  }\\n\\n  return textStyle;\\n} // Consider case:\\n// {\\n//     data: [{\\n//         value: 12,\\n//         label: {\\n//             rich: {\\n//                 // no 'a' here but using parent 'a'.\\n//             }\\n//         }\\n//     }],\\n//     rich: {\\n//         a: { ... }\\n//     }\\n// }\\n\\n\\nfunction getRichItemNames(textStyleModel) {\\n  // Use object to remove duplicated names.\\n  var richItemNameMap;\\n\\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\\n\\n    if (rich) {\\n      richItemNameMap = richItemNameMap || {};\\n\\n      for (var name in rich) {\\n        if (rich.hasOwnProperty(name)) {\\n          richItemNameMap[name] = 1;\\n        }\\n      }\\n    }\\n\\n    textStyleModel = textStyleModel.parentModel;\\n  }\\n\\n  return richItemNameMap;\\n}\\n\\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\\n  // In merge mode, default value should not be given.\\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth); // Save original textPosition, because style.textPosition will be repalced by\\n  // real location (like [10, 30]) in zrender.\\n\\n  textStyle.insideRawTextPosition = textStyle.textPosition;\\n\\n  if (!isEmphasis) {\\n    if (isBlock) {\\n      textStyle.insideRollbackOpt = opt;\\n      applyDefaultTextStyle(textStyle);\\n    } // Set default finally.\\n\\n\\n    if (textStyle.textFill == null) {\\n      textStyle.textFill = opt.autoColor;\\n    }\\n  } // Do not use `getFont` here, because merge should be supported, where\\n  // part of these properties may be changed in emphasis style, and the\\n  // others should remain their original value got from normal style.\\n\\n\\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\\n  textStyle.textAlign = textStyleModel.getShallow('align');\\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\\n  textStyle.textWidth = textStyleModel.getShallow('width');\\n  textStyle.textHeight = textStyleModel.getShallow('height');\\n  textStyle.textTag = textStyleModel.getShallow('tag');\\n\\n  if (!isBlock || !opt.disableBox) {\\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\\n    textStyle.textPadding = textStyleModel.getShallow('padding');\\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\\n  }\\n\\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\\n}\\n\\nfunction getAutoColor(color, opt) {\\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\\n} // When text position is `inside` and `textFill` not specified, we\\n// provide a mechanism to auto make text border for better view. But\\n// text position changing when hovering or being emphasis should be\\n// considered, where the `insideRollback` enables to restore the style.\\n\\n\\nfunction applyDefaultTextStyle(textStyle) {\\n  var opt = textStyle.insideRollbackOpt; // Only insideRollbackOpt create (setTextStyleCommon used),\\n  // applyDefaultTextStyle works.\\n\\n  if (!opt || textStyle.textFill != null) {\\n    return;\\n  }\\n\\n  var useInsideStyle = opt.useInsideStyle;\\n  var textPosition = textStyle.insideRawTextPosition;\\n  var insideRollback;\\n  var autoColor = opt.autoColor;\\n\\n  if (useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\\n    insideRollback = {\\n      textFill: null,\\n      textStroke: textStyle.textStroke,\\n      textStrokeWidth: textStyle.textStrokeWidth\\n    };\\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\\n\\n    if (textStyle.textStroke == null) {\\n      textStyle.textStroke = autoColor;\\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\\n    }\\n  } else if (autoColor != null) {\\n    insideRollback = {\\n      textFill: null\\n    };\\n    textStyle.textFill = autoColor;\\n  } // Always set `insideRollback`, for clearing previous.\\n\\n\\n  if (insideRollback) {\\n    textStyle.insideRollback = insideRollback;\\n  }\\n}\\n\\nfunction rollbackDefaultTextStyle(style) {\\n  var insideRollback = style.insideRollback;\\n\\n  if (insideRollback) {\\n    style.textFill = insideRollback.textFill;\\n    style.textStroke = insideRollback.textStroke;\\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\\n    style.insideRollback = null;\\n  }\\n}\\n\\nfunction getFont(opt, ecModel) {\\n  // ecModel or default text style model.\\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\\n}\\n\\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\\n  if (typeof dataIndex === 'function') {\\n    cb = dataIndex;\\n    dataIndex = null;\\n  } // Do not check 'animation' property directly here. Consider this case:\\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\\n  // but its parent model (`seriesModel`) does.\\n\\n\\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\\n\\n  if (animationEnabled) {\\n    var postfix = isUpdate ? 'Update' : '';\\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\\n\\n    if (typeof animationDelay === 'function') {\\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\\n    }\\n\\n    if (typeof duration === 'function') {\\n      duration = duration(dataIndex);\\n    }\\n\\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\\n  } else {\\n    el.stopAnimation();\\n    el.attr(props);\\n    cb && cb();\\n  }\\n}\\n/**\\n * Update graphic element properties with or without animation according to the\\n * configuration in series.\\n *\\n * Caution: this method will stop previous animation.\\n * So if do not use this method to one element twice before\\n * animation starts, unless you know what you are doing.\\n *\\n * @param {module:zrender/Element} el\\n * @param {Object} props\\n * @param {module:echarts/model/Model} [animatableModel]\\n * @param {number} [dataIndex]\\n * @param {Function} [cb]\\n * @example\\n *     graphic.updateProps(el, {\\n *         position: [100, 100]\\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\\n *     // Or\\n *     graphic.updateProps(el, {\\n *         position: [100, 100]\\n *     }, seriesModel, function () { console.log('Animation done!'); });\\n */\\n\\n\\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\\n}\\n/**\\n * Init graphic element properties with or without animation according to the\\n * configuration in series.\\n *\\n * Caution: this method will stop previous animation.\\n * So if do not use this method to one element twice before\\n * animation starts, unless you know what you are doing.\\n *\\n * @param {module:zrender/Element} el\\n * @param {Object} props\\n * @param {module:echarts/model/Model} [animatableModel]\\n * @param {number} [dataIndex]\\n * @param {Function} cb\\n */\\n\\n\\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\\n}\\n/**\\n * Get transform matrix of target (param target),\\n * in coordinate of its ancestor (param ancestor)\\n *\\n * @param {module:zrender/mixin/Transformable} target\\n * @param {module:zrender/mixin/Transformable} [ancestor]\\n */\\n\\n\\nfunction getTransform(target, ancestor) {\\n  var mat = matrix.identity([]);\\n\\n  while (target && target !== ancestor) {\\n    matrix.mul(mat, target.getLocalTransform(), mat);\\n    target = target.parent;\\n  }\\n\\n  return mat;\\n}\\n/**\\n * Apply transform to an vertex.\\n * @param {Array.<number>} target [x, y]\\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\\n * @param {boolean=} invert Whether use invert matrix.\\n * @return {Array.<number>} [x, y]\\n */\\n\\n\\nfunction applyTransform(target, transform, invert) {\\n  if (transform && !zrUtil.isArrayLike(transform)) {\\n    transform = Transformable.getLocalTransform(transform);\\n  }\\n\\n  if (invert) {\\n    transform = matrix.invert([], transform);\\n  }\\n\\n  return vector.applyTransform([], target, transform);\\n}\\n/**\\n * @param {string} direction 'left' 'right' 'top' 'bottom'\\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\\n * @param {boolean=} invert Whether use invert matrix.\\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\\n */\\n\\n\\nfunction transformDirection(direction, transform, invert) {\\n  // Pick a base, ensure that transform result will not be (0, 0).\\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\\n  vertex = applyTransform(vertex, transform, invert);\\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\\n}\\n/**\\n * Apply group transition animation from g1 to g2.\\n * If no animatableModel, no animation.\\n */\\n\\n\\nfunction groupTransition(g1, g2, animatableModel, cb) {\\n  if (!g1 || !g2) {\\n    return;\\n  }\\n\\n  function getElMap(g) {\\n    var elMap = {};\\n    g.traverse(function (el) {\\n      if (!el.isGroup && el.anid) {\\n        elMap[el.anid] = el;\\n      }\\n    });\\n    return elMap;\\n  }\\n\\n  function getAnimatableProps(el) {\\n    var obj = {\\n      position: vector.clone(el.position),\\n      rotation: el.rotation\\n    };\\n\\n    if (el.shape) {\\n      obj.shape = zrUtil.extend({}, el.shape);\\n    }\\n\\n    return obj;\\n  }\\n\\n  var elMap1 = getElMap(g1);\\n  g2.traverse(function (el) {\\n    if (!el.isGroup && el.anid) {\\n      var oldEl = elMap1[el.anid];\\n\\n      if (oldEl) {\\n        var newProp = getAnimatableProps(el);\\n        el.attr(getAnimatableProps(oldEl));\\n        updateProps(el, newProp, animatableModel, el.dataIndex);\\n      } // else {\\n      //     if (el.previousProps) {\\n      //         graphic.updateProps\\n      //     }\\n      // }\\n\\n    }\\n  });\\n}\\n/**\\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\\n * @param {Object} rect {x, y, width, height}\\n * @return {Array.<Array.<number>>} A new clipped points.\\n */\\n\\n\\nfunction clipPointsByRect(points, rect) {\\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\\n  // and when element have border.\\n  return zrUtil.map(points, function (point) {\\n    var x = point[0];\\n    x = mathMax(x, rect.x);\\n    x = mathMin(x, rect.x + rect.width);\\n    var y = point[1];\\n    y = mathMax(y, rect.y);\\n    y = mathMin(y, rect.y + rect.height);\\n    return [x, y];\\n  });\\n}\\n/**\\n * @param {Object} targetRect {x, y, width, height}\\n * @param {Object} rect {x, y, width, height}\\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\\n */\\n\\n\\nfunction clipRectByRect(targetRect, rect) {\\n  var x = mathMax(targetRect.x, rect.x);\\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\\n  var y = mathMax(targetRect.y, rect.y);\\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\\n  // should be painted. So return undefined.\\n\\n  if (x2 >= x && y2 >= y) {\\n    return {\\n      x: x,\\n      y: y,\\n      width: x2 - x,\\n      height: y2 - y\\n    };\\n  }\\n}\\n/**\\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\\n * @param {Object} [rect] {x, y, width, height}\\n * @return {module:zrender/Element} Icon path or image element.\\n */\\n\\n\\nfunction createIcon(iconStr, opt, rect) {\\n  opt = zrUtil.extend({\\n    rectHover: true\\n  }, opt);\\n  var style = opt.style = {\\n    strokeNoScale: true\\n  };\\n  rect = rect || {\\n    x: -1,\\n    y: -1,\\n    width: 2,\\n    height: 2\\n  };\\n\\n  if (iconStr) {\\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\\n  }\\n}\\n\\nexports.extendShape = extendShape;\\nexports.extendPath = extendPath;\\nexports.makePath = makePath;\\nexports.makeImage = makeImage;\\nexports.mergePath = mergePath;\\nexports.resizePath = resizePath;\\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\\nexports.subPixelOptimize = subPixelOptimize;\\nexports.setElementHoverStyle = setElementHoverStyle;\\nexports.isInEmphasis = isInEmphasis;\\nexports.setHoverStyle = setHoverStyle;\\nexports.setAsHoverStyleTrigger = setAsHoverStyleTrigger;\\nexports.setLabelStyle = setLabelStyle;\\nexports.setTextStyle = setTextStyle;\\nexports.setText = setText;\\nexports.getFont = getFont;\\nexports.updateProps = updateProps;\\nexports.initProps = initProps;\\nexports.getTransform = getTransform;\\nexports.applyTransform = applyTransform;\\nexports.transformDirection = transformDirection;\\nexports.groupTransition = groupTransition;\\nexports.clipPointsByRect = clipPointsByRect;\\nexports.clipRectByRect = clipRectByRect;\\nexports.createIcon = createIcon;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///63\\n\")},function(module,exports,__webpack_require__){eval(\"var Displayable = __webpack_require__(88);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar PathProxy = __webpack_require__(89);\\n\\nvar pathContain = __webpack_require__(208);\\n\\nvar Pattern = __webpack_require__(135);\\n\\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\\nvar abs = Math.abs;\\nvar pathProxyForDraw = new PathProxy(true);\\n/**\\n * @alias module:zrender/graphic/Path\\n * @extends module:zrender/graphic/Displayable\\n * @constructor\\n * @param {Object} opts\\n */\\n\\nfunction Path(opts) {\\n  Displayable.call(this, opts);\\n  /**\\n   * @type {module:zrender/core/PathProxy}\\n   * @readOnly\\n   */\\n\\n  this.path = null;\\n}\\n\\nPath.prototype = {\\n  constructor: Path,\\n  type: 'path',\\n  __dirtyPath: true,\\n  strokeContainThreshold: 5,\\n  brush: function (ctx, prevEl) {\\n    var style = this.style;\\n    var path = this.path || pathProxyForDraw;\\n    var hasStroke = style.hasStroke();\\n    var hasFill = style.hasFill();\\n    var fill = style.fill;\\n    var stroke = style.stroke;\\n    var hasFillGradient = hasFill && !!fill.colorStops;\\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\\n    var hasFillPattern = hasFill && !!fill.image;\\n    var hasStrokePattern = hasStroke && !!stroke.image;\\n    style.bind(ctx, this, prevEl);\\n    this.setTransform(ctx);\\n\\n    if (this.__dirty) {\\n      var rect; // Update gradient because bounding rect may changed\\n\\n      if (hasFillGradient) {\\n        rect = rect || this.getBoundingRect();\\n        this._fillGradient = style.getGradient(ctx, fill, rect);\\n      }\\n\\n      if (hasStrokeGradient) {\\n        rect = rect || this.getBoundingRect();\\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\\n      }\\n    } // Use the gradient or pattern\\n\\n\\n    if (hasFillGradient) {\\n      // PENDING If may have affect the state\\n      ctx.fillStyle = this._fillGradient;\\n    } else if (hasFillPattern) {\\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\\n    }\\n\\n    if (hasStrokeGradient) {\\n      ctx.strokeStyle = this._strokeGradient;\\n    } else if (hasStrokePattern) {\\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\\n    }\\n\\n    var lineDash = style.lineDash;\\n    var lineDashOffset = style.lineDashOffset;\\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\\n\\n    var scale = this.getGlobalScale();\\n    path.setScale(scale[0], scale[1]); // Proxy context\\n    // Rebuild path in following 2 cases\\n    // 1. Path is dirty\\n    // 2. Path needs javascript implemented lineDash stroking.\\n    //    In this case, lineDash information will not be saved in PathProxy\\n\\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\\n      path.beginPath(ctx); // Setting line dash before build path\\n\\n      if (lineDash && !ctxLineDash) {\\n        path.setLineDash(lineDash);\\n        path.setLineDashOffset(lineDashOffset);\\n      }\\n\\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\\n\\n      if (this.path) {\\n        this.__dirtyPath = false;\\n      }\\n    } else {\\n      // Replay path building\\n      ctx.beginPath();\\n      this.path.rebuildPath(ctx);\\n    }\\n\\n    if (hasFill) {\\n      if (style.fillOpacity != null) {\\n        var originalGlobalAlpha = ctx.globalAlpha;\\n        ctx.globalAlpha = style.fillOpacity * style.opacity;\\n        path.fill(ctx);\\n        ctx.globalAlpha = originalGlobalAlpha;\\n      } else {\\n        path.fill(ctx);\\n      }\\n    }\\n\\n    if (lineDash && ctxLineDash) {\\n      ctx.setLineDash(lineDash);\\n      ctx.lineDashOffset = lineDashOffset;\\n    }\\n\\n    if (hasStroke) {\\n      if (style.strokeOpacity != null) {\\n        var originalGlobalAlpha = ctx.globalAlpha;\\n        ctx.globalAlpha = style.strokeOpacity * style.opacity;\\n        path.stroke(ctx);\\n        ctx.globalAlpha = originalGlobalAlpha;\\n      } else {\\n        path.stroke(ctx);\\n      }\\n    }\\n\\n    if (lineDash && ctxLineDash) {\\n      // PENDING\\n      // Remove lineDash\\n      ctx.setLineDash([]);\\n    } // Draw rect text\\n\\n\\n    if (style.text != null) {\\n      // Only restore transform when needs draw text.\\n      this.restoreTransform(ctx);\\n      this.drawRectText(ctx, this.getBoundingRect());\\n    }\\n  },\\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\\n  // Like in circle\\n  buildPath: function (ctx, shapeCfg, inBundle) {},\\n  createPathProxy: function () {\\n    this.path = new PathProxy();\\n  },\\n  getBoundingRect: function () {\\n    var rect = this._rect;\\n    var style = this.style;\\n    var needsUpdateRect = !rect;\\n\\n    if (needsUpdateRect) {\\n      var path = this.path;\\n\\n      if (!path) {\\n        // Create path on demand.\\n        path = this.path = new PathProxy();\\n      }\\n\\n      if (this.__dirtyPath) {\\n        path.beginPath();\\n        this.buildPath(path, this.shape, false);\\n      }\\n\\n      rect = path.getBoundingRect();\\n    }\\n\\n    this._rect = rect;\\n\\n    if (style.hasStroke()) {\\n      // Needs update rect with stroke lineWidth when\\n      // 1. Element changes scale or lineWidth\\n      // 2. Shape is changed\\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\\n\\n      if (this.__dirty || needsUpdateRect) {\\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\\n\\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\\n\\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\\n\\n        if (!style.hasFill()) {\\n          w = Math.max(w, this.strokeContainThreshold || 4);\\n        } // Consider line width\\n        // Line scale can't be 0;\\n\\n\\n        if (lineScale > 1e-10) {\\n          rectWithStroke.width += w / lineScale;\\n          rectWithStroke.height += w / lineScale;\\n          rectWithStroke.x -= w / lineScale / 2;\\n          rectWithStroke.y -= w / lineScale / 2;\\n        }\\n      } // Return rect with stroke\\n\\n\\n      return rectWithStroke;\\n    }\\n\\n    return rect;\\n  },\\n  contain: function (x, y) {\\n    var localPos = this.transformCoordToLocal(x, y);\\n    var rect = this.getBoundingRect();\\n    var style = this.style;\\n    x = localPos[0];\\n    y = localPos[1];\\n\\n    if (rect.contain(x, y)) {\\n      var pathData = this.path.data;\\n\\n      if (style.hasStroke()) {\\n        var lineWidth = style.lineWidth;\\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\\n\\n        if (lineScale > 1e-10) {\\n          // Only add extra hover lineWidth when there are no fill\\n          if (!style.hasFill()) {\\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\\n          }\\n\\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\\n            return true;\\n          }\\n        }\\n      }\\n\\n      if (style.hasFill()) {\\n        return pathContain.contain(pathData, x, y);\\n      }\\n    }\\n\\n    return false;\\n  },\\n\\n  /**\\n   * @param  {boolean} dirtyPath\\n   */\\n  dirty: function (dirtyPath) {\\n    if (dirtyPath == null) {\\n      dirtyPath = true;\\n    } // Only mark dirty, not mark clean\\n\\n\\n    if (dirtyPath) {\\n      this.__dirtyPath = dirtyPath;\\n      this._rect = null;\\n    }\\n\\n    this.__dirty = this.__dirtyText = true;\\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\\n\\n    if (this.__clipTarget) {\\n      this.__clipTarget.dirty();\\n    }\\n  },\\n\\n  /**\\n   * Alias for animate('shape')\\n   * @param {boolean} loop\\n   */\\n  animateShape: function (loop) {\\n    return this.animate('shape', loop);\\n  },\\n  // Overwrite attrKV\\n  attrKV: function (key, value) {\\n    // FIXME\\n    if (key === 'shape') {\\n      this.setShape(value);\\n      this.__dirtyPath = true;\\n      this._rect = null;\\n    } else {\\n      Displayable.prototype.attrKV.call(this, key, value);\\n    }\\n  },\\n\\n  /**\\n   * @param {Object|string} key\\n   * @param {*} value\\n   */\\n  setShape: function (key, value) {\\n    var shape = this.shape; // Path from string may not have shape\\n\\n    if (shape) {\\n      if (zrUtil.isObject(key)) {\\n        for (var name in key) {\\n          if (key.hasOwnProperty(name)) {\\n            shape[name] = key[name];\\n          }\\n        }\\n      } else {\\n        shape[key] = value;\\n      }\\n\\n      this.dirty(true);\\n    }\\n\\n    return this;\\n  },\\n  getLineScale: function () {\\n    var m = this.transform; // Get the line scale.\\n    // Determinant of `m` means how much the area is enlarged by the\\n    // transformation. So its square root can be used as a scale factor\\n    // for width.\\n\\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\\n  }\\n};\\n/**\\n * 扩展一个 Path element, 比如星形，圆等。\\n * Extend a path element\\n * @param {Object} props\\n * @param {string} props.type Path type\\n * @param {Function} props.init Initialize\\n * @param {Function} props.buildPath Overwrite buildPath method\\n * @param {Object} [props.style] Extended default style config\\n * @param {Object} [props.shape] Extended default shape config\\n */\\n\\nPath.extend = function (defaults) {\\n  var Sub = function (opts) {\\n    Path.call(this, opts);\\n\\n    if (defaults.style) {\\n      // Extend default style\\n      this.style.extendFrom(defaults.style, false);\\n    } // Extend default shape\\n\\n\\n    var defaultShape = defaults.shape;\\n\\n    if (defaultShape) {\\n      this.shape = this.shape || {};\\n      var thisShape = this.shape;\\n\\n      for (var name in defaultShape) {\\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\\n          thisShape[name] = defaultShape[name];\\n        }\\n      }\\n    }\\n\\n    defaults.init && defaults.init.call(this, opts);\\n  };\\n\\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\\n\\n  for (var name in defaults) {\\n    // Extending prototype values and methods\\n    if (name !== 'style' && name !== 'shape') {\\n      Sub.prototype[name] = defaults[name];\\n    }\\n  }\\n\\n  return Sub;\\n};\\n\\nzrUtil.inherits(Path, Displayable);\\nvar _default = Path;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///64\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar RADIAN_EPSILON = 1e-4;\\n\\nfunction _trim(str) {\\n  return str.replace(/^\\\\s+/, '').replace(/\\\\s+$/, '');\\n}\\n/**\\n * Linear mapping a value from domain to range\\n * @memberOf module:echarts/util/number\\n * @param  {(number|Array.<number>)} val\\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\\n * @param  {boolean} clamp\\n * @return {(number|Array.<number>}\\n */\\n\\n\\nfunction linearMap(val, domain, range, clamp) {\\n  var subDomain = domain[1] - domain[0];\\n  var subRange = range[1] - range[0];\\n\\n  if (subDomain === 0) {\\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\\n  } // Avoid accuracy problem in edge, such as\\n  // 146.39 - 62.83 === 83.55999999999999.\\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\\n  // It is a little verbose for efficiency considering this method\\n  // is a hotspot.\\n\\n\\n  if (clamp) {\\n    if (subDomain > 0) {\\n      if (val <= domain[0]) {\\n        return range[0];\\n      } else if (val >= domain[1]) {\\n        return range[1];\\n      }\\n    } else {\\n      if (val >= domain[0]) {\\n        return range[0];\\n      } else if (val <= domain[1]) {\\n        return range[1];\\n      }\\n    }\\n  } else {\\n    if (val === domain[0]) {\\n      return range[0];\\n    }\\n\\n    if (val === domain[1]) {\\n      return range[1];\\n    }\\n  }\\n\\n  return (val - domain[0]) / subDomain * subRange + range[0];\\n}\\n/**\\n * Convert a percent string to absolute number.\\n * Returns NaN if percent is not a valid string or number\\n * @memberOf module:echarts/util/number\\n * @param {string|number} percent\\n * @param {number} all\\n * @return {number}\\n */\\n\\n\\nfunction parsePercent(percent, all) {\\n  switch (percent) {\\n    case 'center':\\n    case 'middle':\\n      percent = '50%';\\n      break;\\n\\n    case 'left':\\n    case 'top':\\n      percent = '0%';\\n      break;\\n\\n    case 'right':\\n    case 'bottom':\\n      percent = '100%';\\n      break;\\n  }\\n\\n  if (typeof percent === 'string') {\\n    if (_trim(percent).match(/%$/)) {\\n      return parseFloat(percent) / 100 * all;\\n    }\\n\\n    return parseFloat(percent);\\n  }\\n\\n  return percent == null ? NaN : +percent;\\n}\\n/**\\n * (1) Fix rounding error of float numbers.\\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\\n *\\n * @param {number} x\\n * @param {number} [precision]\\n * @param {boolean} [returnStr]\\n * @return {number|string}\\n */\\n\\n\\nfunction round(x, precision, returnStr) {\\n  if (precision == null) {\\n    precision = 10;\\n  } // Avoid range error\\n\\n\\n  precision = Math.min(Math.max(0, precision), 20);\\n  x = (+x).toFixed(precision);\\n  return returnStr ? x : +x;\\n}\\n\\nfunction asc(arr) {\\n  arr.sort(function (a, b) {\\n    return a - b;\\n  });\\n  return arr;\\n}\\n/**\\n * Get precision\\n * @param {number} val\\n */\\n\\n\\nfunction getPrecision(val) {\\n  val = +val;\\n\\n  if (isNaN(val)) {\\n    return 0;\\n  } // It is much faster than methods converting number to string as follows\\n  //      var tmp = val.toString();\\n  //      return tmp.length - 1 - tmp.indexOf('.');\\n  // especially when precision is low\\n\\n\\n  var e = 1;\\n  var count = 0;\\n\\n  while (Math.round(val * e) / e !== val) {\\n    e *= 10;\\n    count++;\\n  }\\n\\n  return count;\\n}\\n/**\\n * @param {string|number} val\\n * @return {number}\\n */\\n\\n\\nfunction getPrecisionSafe(val) {\\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\\n\\n  var eIndex = str.indexOf('e');\\n\\n  if (eIndex > 0) {\\n    var precision = +str.slice(eIndex + 1);\\n    return precision < 0 ? -precision : 0;\\n  } else {\\n    var dotIndex = str.indexOf('.');\\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\\n  }\\n}\\n/**\\n * Minimal dicernible data precisioin according to a single pixel.\\n *\\n * @param {Array.<number>} dataExtent\\n * @param {Array.<number>} pixelExtent\\n * @return {number} precision\\n */\\n\\n\\nfunction getPixelPrecision(dataExtent, pixelExtent) {\\n  var log = Math.log;\\n  var LN10 = Math.LN10;\\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\\n\\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\\n  return !isFinite(precision) ? 20 : precision;\\n}\\n/**\\n * Get a data of given precision, assuring the sum of percentages\\n * in valueList is 1.\\n * The largest remainer method is used.\\n * https://en.wikipedia.org/wiki/Largest_remainder_method\\n *\\n * @param {Array.<number>} valueList a list of all data\\n * @param {number} idx index of the data to be processed in valueList\\n * @param {number} precision integer number showing digits of precision\\n * @return {number} percent ranging from 0 to 100\\n */\\n\\n\\nfunction getPercentWithPrecision(valueList, idx, precision) {\\n  if (!valueList[idx]) {\\n    return 0;\\n  }\\n\\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\\n    return acc + (isNaN(val) ? 0 : val);\\n  }, 0);\\n\\n  if (sum === 0) {\\n    return 0;\\n  }\\n\\n  var digits = Math.pow(10, precision);\\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\\n  });\\n  var targetSeats = digits * 100;\\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\\n    // Assign automatic seats.\\n    return Math.floor(votes);\\n  });\\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\\n    return acc + val;\\n  }, 0);\\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\\n    return votes - seats[idx];\\n  }); // Has remainding votes.\\n\\n  while (currentSum < targetSeats) {\\n    // Find next largest remainder.\\n    var max = Number.NEGATIVE_INFINITY;\\n    var maxId = null;\\n\\n    for (var i = 0, len = remainder.length; i < len; ++i) {\\n      if (remainder[i] > max) {\\n        max = remainder[i];\\n        maxId = i;\\n      }\\n    } // Add a vote to max remainder.\\n\\n\\n    ++seats[maxId];\\n    remainder[maxId] = 0;\\n    ++currentSum;\\n  }\\n\\n  return seats[idx] / digits;\\n} // Number.MAX_SAFE_INTEGER, ie do not support.\\n\\n\\nvar MAX_SAFE_INTEGER = 9007199254740991;\\n/**\\n * To 0 - 2 * PI, considering negative radian.\\n * @param {number} radian\\n * @return {number}\\n */\\n\\nfunction remRadian(radian) {\\n  var pi2 = Math.PI * 2;\\n  return (radian % pi2 + pi2) % pi2;\\n}\\n/**\\n * @param {type} radian\\n * @return {boolean}\\n */\\n\\n\\nfunction isRadianAroundZero(val) {\\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\\n}\\n/* eslint-disable */\\n\\n\\nvar TIME_REG = /^(?:(\\\\d{4})(?:[-\\\\/](\\\\d{1,2})(?:[-\\\\/](\\\\d{1,2})(?:[T ](\\\\d{1,2})(?::(\\\\d\\\\d)(?::(\\\\d\\\\d)(?:[.,](\\\\d+))?)?)?(Z|[\\\\+\\\\-]\\\\d\\\\d:?\\\\d\\\\d)?)?)?)?)?$/; // jshint ignore:line\\n\\n/* eslint-enable */\\n\\n/**\\n * @param {string|Date|number} value These values can be accepted:\\n *   + An instance of Date, represent a time in its own time zone.\\n *   + Or string in a subset of ISO 8601, only including:\\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\\n *     all of which will be treated as local time if time zone is not specified\\n *     (see <https://momentjs.com/>).\\n *   + Or other string format, including (all of which will be treated as loacal time):\\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\\n *   + a timestamp, which represent a time in UTC.\\n * @return {Date} date\\n */\\n\\nfunction parseDate(value) {\\n  if (value instanceof Date) {\\n    return value;\\n  } else if (typeof value === 'string') {\\n    // Different browsers parse date in different way, so we parse it manually.\\n    // Some other issues:\\n    // new Date('1970-01-01') is UTC,\\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\\n    // See issue #3623\\n    var match = TIME_REG.exec(value);\\n\\n    if (!match) {\\n      // return Invalid Date.\\n      return new Date(NaN);\\n    } // Use local time when no timezone offset specifed.\\n\\n\\n    if (!match[8]) {\\n      // match[n] can only be string or undefined.\\n      // But take care of '12' + 1 => '121'.\\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\\n    // For example, system timezone is set as \\\"Time Zone: America/Toronto\\\",\\n    // then these code will get different result:\\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\\n    // So we should not use `new Date`, but use `Date.UTC`.\\n    else {\\n        var hour = +match[4] || 0;\\n\\n        if (match[8].toUpperCase() !== 'Z') {\\n          hour -= match[8].slice(0, 3);\\n        }\\n\\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\\n      }\\n  } else if (value == null) {\\n    return new Date(NaN);\\n  }\\n\\n  return new Date(Math.round(value));\\n}\\n/**\\n * Quantity of a number. e.g. 0.1, 1, 10, 100\\n *\\n * @param  {number} val\\n * @return {number}\\n */\\n\\n\\nfunction quantity(val) {\\n  return Math.pow(10, quantityExponent(val));\\n}\\n\\nfunction quantityExponent(val) {\\n  return Math.floor(Math.log(val) / Math.LN10);\\n}\\n/**\\n * find a “nice” number approximately equal to x. Round the number if round = true,\\n * take ceiling if round = false. The primary observation is that the “nicest”\\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\\n *\\n * See \\\"Nice Numbers for Graph Labels\\\" of Graphic Gems.\\n *\\n * @param  {number} val Non-negative value.\\n * @param  {boolean} round\\n * @return {number}\\n */\\n\\n\\nfunction nice(val, round) {\\n  var exponent = quantityExponent(val);\\n  var exp10 = Math.pow(10, exponent);\\n  var f = val / exp10; // 1 <= f < 10\\n\\n  var nf;\\n\\n  if (round) {\\n    if (f < 1.5) {\\n      nf = 1;\\n    } else if (f < 2.5) {\\n      nf = 2;\\n    } else if (f < 4) {\\n      nf = 3;\\n    } else if (f < 7) {\\n      nf = 5;\\n    } else {\\n      nf = 10;\\n    }\\n  } else {\\n    if (f < 1) {\\n      nf = 1;\\n    } else if (f < 2) {\\n      nf = 2;\\n    } else if (f < 3) {\\n      nf = 3;\\n    } else if (f < 5) {\\n      nf = 5;\\n    } else {\\n      nf = 10;\\n    }\\n  }\\n\\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\\n  // 20 is the uppper bound of toFixed.\\n\\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\\n}\\n/**\\n * BSD 3-Clause\\n *\\n * Copyright (c) 2010-2015, Michael Bostock\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * The name Michael Bostock may not be used to endorse or promote products\\n *   derived from this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n/**\\n * @see <https://github.com/mbostock/d3/blob/master/src/arrays/quantile.js>\\n * @see <http://en.wikipedia.org/wiki/Quantile>\\n * @param {Array.<number>} ascArr\\n */\\n\\n\\nfunction quantile(ascArr, p) {\\n  var H = (ascArr.length - 1) * p + 1;\\n  var h = Math.floor(H);\\n  var v = +ascArr[h - 1];\\n  var e = H - h;\\n  return e ? v + e * (ascArr[h] - v) : v;\\n}\\n/**\\n * Order intervals asc, and split them when overlap.\\n * expect(numberUtil.reformIntervals([\\n *     {interval: [18, 62], close: [1, 1]},\\n *     {interval: [-Infinity, -70], close: [0, 0]},\\n *     {interval: [-70, -26], close: [1, 1]},\\n *     {interval: [-26, 18], close: [1, 1]},\\n *     {interval: [62, 150], close: [1, 1]},\\n *     {interval: [106, 150], close: [1, 1]},\\n *     {interval: [150, Infinity], close: [0, 0]}\\n * ])).toEqual([\\n *     {interval: [-Infinity, -70], close: [0, 0]},\\n *     {interval: [-70, -26], close: [1, 1]},\\n *     {interval: [-26, 18], close: [0, 1]},\\n *     {interval: [18, 62], close: [0, 1]},\\n *     {interval: [62, 150], close: [0, 1]},\\n *     {interval: [150, Infinity], close: [0, 0]}\\n * ]);\\n * @param {Array.<Object>} list, where `close` mean open or close\\n *        of the interval, and Infinity can be used.\\n * @return {Array.<Object>} The origin list, which has been reformed.\\n */\\n\\n\\nfunction reformIntervals(list) {\\n  list.sort(function (a, b) {\\n    return littleThan(a, b, 0) ? -1 : 1;\\n  });\\n  var curr = -Infinity;\\n  var currClose = 1;\\n\\n  for (var i = 0; i < list.length;) {\\n    var interval = list[i].interval;\\n    var close = list[i].close;\\n\\n    for (var lg = 0; lg < 2; lg++) {\\n      if (interval[lg] <= curr) {\\n        interval[lg] = curr;\\n        close[lg] = !lg ? 1 - currClose : 1;\\n      }\\n\\n      curr = interval[lg];\\n      currClose = close[lg];\\n    }\\n\\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\\n      list.splice(i, 1);\\n    } else {\\n      i++;\\n    }\\n  }\\n\\n  return list;\\n\\n  function littleThan(a, b, lg) {\\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\\n  }\\n}\\n/**\\n * parseFloat NaNs numeric-cast false positives (null|true|false|\\\"\\\")\\n * ...but misinterprets leading-number strings, particularly hex literals (\\\"0x...\\\")\\n * subtraction forces infinities to NaN\\n *\\n * @param {*} v\\n * @return {boolean}\\n */\\n\\n\\nfunction isNumeric(v) {\\n  return v - parseFloat(v) >= 0;\\n}\\n\\nexports.linearMap = linearMap;\\nexports.parsePercent = parsePercent;\\nexports.round = round;\\nexports.asc = asc;\\nexports.getPrecision = getPrecision;\\nexports.getPrecisionSafe = getPrecisionSafe;\\nexports.getPixelPrecision = getPixelPrecision;\\nexports.getPercentWithPrecision = getPercentWithPrecision;\\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\\nexports.remRadian = remRadian;\\nexports.isRadianAroundZero = isRadianAroundZero;\\nexports.parseDate = parseDate;\\nexports.quantity = quantity;\\nexports.nice = nice;\\nexports.quantile = quantile;\\nexports.reformIntervals = reformIntervals;\\nexports.isNumeric = isNumeric;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///65\\n\")},function(module,exports){eval(\"/**\\n * echarts设备环境识别\\n *\\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\\n * @author firede[firede@firede.us]\\n * @desc thanks zepto.\\n */\\nvar env = {};\\n\\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\\n  // In Weixin Application\\n  env = {\\n    browser: {},\\n    os: {},\\n    node: false,\\n    wxa: true,\\n    // Weixin Application\\n    canvasSupported: true,\\n    svgSupported: false,\\n    touchEventsSupported: true,\\n    domSupported: false\\n  };\\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\\n  // In worker\\n  env = {\\n    browser: {},\\n    os: {},\\n    node: false,\\n    worker: true,\\n    canvasSupported: true,\\n    domSupported: false\\n  };\\n} else if (typeof navigator === 'undefined') {\\n  // In node\\n  env = {\\n    browser: {},\\n    os: {},\\n    node: true,\\n    worker: false,\\n    // Assume canvas is supported\\n    canvasSupported: true,\\n    svgSupported: true,\\n    domSupported: false\\n  };\\n} else {\\n  env = detect(navigator.userAgent);\\n}\\n\\nvar _default = env; // Zepto.js\\n// (c) 2010-2013 Thomas Fuchs\\n// Zepto.js may be freely distributed under the MIT license.\\n\\nfunction detect(ua) {\\n  var os = {};\\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\\\/]{0,1}([\\\\d.]+)/);\\n  // var android = ua.match(/(Android);?[\\\\s\\\\/]+([\\\\d.]+)?/);\\n  // var ipad = ua.match(/(iPad).*OS\\\\s([\\\\d_]+)/);\\n  // var ipod = ua.match(/(iPod)(.*OS\\\\s([\\\\d_]+))?/);\\n  // var iphone = !ipad && ua.match(/(iPhone\\\\sOS)\\\\s([\\\\d_]+)/);\\n  // var webos = ua.match(/(webOS|hpwOS)[\\\\s\\\\/]([\\\\d.]+)/);\\n  // var touchpad = webos && ua.match(/TouchPad/);\\n  // var kindle = ua.match(/Kindle\\\\/([\\\\d.]+)/);\\n  // var silk = ua.match(/Silk\\\\/([\\\\d._]+)/);\\n  // var blackberry = ua.match(/(BlackBerry).*Version\\\\/([\\\\d.]+)/);\\n  // var bb10 = ua.match(/(BB10).*Version\\\\/([\\\\d.]+)/);\\n  // var rimtabletos = ua.match(/(RIM\\\\sTablet\\\\sOS)\\\\s([\\\\d.]+)/);\\n  // var playbook = ua.match(/PlayBook/);\\n  // var chrome = ua.match(/Chrome\\\\/([\\\\d.]+)/) || ua.match(/CriOS\\\\/([\\\\d.]+)/);\\n\\n  var firefox = ua.match(/Firefox\\\\/([\\\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\\\//) && !chrome;\\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\\n\\n  var ie = ua.match(/MSIE\\\\s([\\\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\\n  || ua.match(/Trident\\\\/.+?rv:(([\\\\d.]+))/);\\n  var edge = ua.match(/Edge\\\\/([\\\\d.]+)/); // IE 12 and 12+\\n\\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\\n  // - discern (more) between multiple browsers on android\\n  // - decide if kindle fire in silk mode is android or not\\n  // - Firefox on Android doesn't specify the Android version\\n  // - possibly devide in os, device and browser hashes\\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\\n  // if (android) os.android = true, os.version = android[2];\\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\\n  // if (webos) os.webos = true, os.version = webos[2];\\n  // if (touchpad) os.touchpad = true;\\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\\n  // if (playbook) browser.playbook = true;\\n  // if (kindle) os.kindle = true, os.version = kindle[1];\\n  // if (silk) browser.silk = true, browser.version = silk[1];\\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\\n\\n  if (firefox) {\\n    browser.firefox = true;\\n    browser.version = firefox[1];\\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\\n  // if (webview) browser.webview = true;\\n\\n\\n  if (ie) {\\n    browser.ie = true;\\n    browser.version = ie[1];\\n  }\\n\\n  if (edge) {\\n    browser.edge = true;\\n    browser.version = edge[1];\\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\\n  // not be set on win phone. So we do not consider Win Phone.\\n\\n\\n  if (weChat) {\\n    browser.weChat = true;\\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\\\/([\\\\d.]+)/)) ||\\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\\n\\n\\n  return {\\n    browser: browser,\\n    os: os,\\n    node: false,\\n    // 原生canvas支持，改极端点了\\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\\n    canvasSupported: !!document.createElement('canvas').getContext,\\n    svgSupported: typeof SVGRect !== 'undefined',\\n    // works on most browsers\\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\\n    // default, so we dont check navigator.maxTouchPoints for them here.\\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\\n    // <http://caniuse.com/#search=pointer%20event>.\\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\\n    // Although IE 10 supports pointer event, it use old style and is different from the\\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\\n    && (browser.edge || browser.ie && browser.version >= 11),\\n    // passiveSupported: detectPassiveSupport()\\n    domSupported: typeof document !== 'undefined'\\n  };\\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\\n// function detectPassiveSupport() {\\n//     // Test via a getter in the options object to see if the passive property is accessed\\n//     var supportsPassive = false;\\n//     try {\\n//         var opts = Object.defineProperty({}, 'passive', {\\n//             get: function() {\\n//                 supportsPassive = true;\\n//             }\\n//         });\\n//         window.addEventListener('testPassive', function() {}, opts);\\n//     } catch (e) {\\n//     }\\n//     return supportsPassive;\\n// }\\n\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29yZS9lbnYuanM/MjJkMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsZUFBZTtBQUNmLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7O0FBRUEsbUJBQW1CO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQix5Q0FBeUMsSUFBSTtBQUNoRSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDhDQUE4QztBQUM5Qzs7QUFFQSwyREFBMkQ7QUFDM0Q7QUFDQSx3Q0FBd0M7O0FBRXhDLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7O0FBR0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWiwrREFBK0Q7QUFDL0QsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7O0FBR0EiLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGVjaGFydHPorr7lpIfnjq/looPor4bliKtcbiAqXG4gKiBAZGVzYyBlY2hhcnRz5Z+65LqOQ2FudmFz77yM57qvSmF2YXNjcmlwdOWbvuihqOW6k++8jOaPkOS+m+ebtOingu+8jOeUn+WKqO+8jOWPr+S6pOS6ku+8jOWPr+S4quaAp+WMluWumuWItueahOaVsOaNrue7n+iuoeWbvuihqOOAglxuICogQGF1dGhvciBmaXJlZGVbZmlyZWRlQGZpcmVkZS51c11cbiAqIEBkZXNjIHRoYW5rcyB6ZXB0by5cbiAqL1xudmFyIGVudiA9IHt9O1xuXG5pZiAodHlwZW9mIHd4ID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygd3guZ2V0U3lzdGVtSW5mb1N5bmMgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gSW4gV2VpeGluIEFwcGxpY2F0aW9uXG4gIGVudiA9IHtcbiAgICBicm93c2VyOiB7fSxcbiAgICBvczoge30sXG4gICAgbm9kZTogZmFsc2UsXG4gICAgd3hhOiB0cnVlLFxuICAgIC8vIFdlaXhpbiBBcHBsaWNhdGlvblxuICAgIGNhbnZhc1N1cHBvcnRlZDogdHJ1ZSxcbiAgICBzdmdTdXBwb3J0ZWQ6IGZhbHNlLFxuICAgIHRvdWNoRXZlbnRzU3VwcG9ydGVkOiB0cnVlLFxuICAgIGRvbVN1cHBvcnRlZDogZmFsc2VcbiAgfTtcbn0gZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgLy8gSW4gd29ya2VyXG4gIGVudiA9IHtcbiAgICBicm93c2VyOiB7fSxcbiAgICBvczoge30sXG4gICAgbm9kZTogZmFsc2UsXG4gICAgd29ya2VyOiB0cnVlLFxuICAgIGNhbnZhc1N1cHBvcnRlZDogdHJ1ZSxcbiAgICBkb21TdXBwb3J0ZWQ6IGZhbHNlXG4gIH07XG59IGVsc2UgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgPT09ICd1bmRlZmluZWQnKSB7XG4gIC8vIEluIG5vZGVcbiAgZW52ID0ge1xuICAgIGJyb3dzZXI6IHt9LFxuICAgIG9zOiB7fSxcbiAgICBub2RlOiB0cnVlLFxuICAgIHdvcmtlcjogZmFsc2UsXG4gICAgLy8gQXNzdW1lIGNhbnZhcyBpcyBzdXBwb3J0ZWRcbiAgICBjYW52YXNTdXBwb3J0ZWQ6IHRydWUsXG4gICAgc3ZnU3VwcG9ydGVkOiB0cnVlLFxuICAgIGRvbVN1cHBvcnRlZDogZmFsc2VcbiAgfTtcbn0gZWxzZSB7XG4gIGVudiA9IGRldGVjdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbn1cblxudmFyIF9kZWZhdWx0ID0gZW52OyAvLyBaZXB0by5qc1xuLy8gKGMpIDIwMTAtMjAxMyBUaG9tYXMgRnVjaHNcbi8vIFplcHRvLmpzIG1heSBiZSBmcmVlbHkgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuXG5mdW5jdGlvbiBkZXRlY3QodWEpIHtcbiAgdmFyIG9zID0ge307XG4gIHZhciBicm93c2VyID0ge307IC8vIHZhciB3ZWJraXQgPSB1YS5tYXRjaCgvV2ViW2tLXWl0W1xcL117MCwxfShbXFxkLl0rKS8pO1xuICAvLyB2YXIgYW5kcm9pZCA9IHVhLm1hdGNoKC8oQW5kcm9pZCk7P1tcXHNcXC9dKyhbXFxkLl0rKT8vKTtcbiAgLy8gdmFyIGlwYWQgPSB1YS5tYXRjaCgvKGlQYWQpLipPU1xccyhbXFxkX10rKS8pO1xuICAvLyB2YXIgaXBvZCA9IHVhLm1hdGNoKC8oaVBvZCkoLipPU1xccyhbXFxkX10rKSk/Lyk7XG4gIC8vIHZhciBpcGhvbmUgPSAhaXBhZCAmJiB1YS5tYXRjaCgvKGlQaG9uZVxcc09TKVxccyhbXFxkX10rKS8pO1xuICAvLyB2YXIgd2Vib3MgPSB1YS5tYXRjaCgvKHdlYk9TfGhwd09TKVtcXHNcXC9dKFtcXGQuXSspLyk7XG4gIC8vIHZhciB0b3VjaHBhZCA9IHdlYm9zICYmIHVhLm1hdGNoKC9Ub3VjaFBhZC8pO1xuICAvLyB2YXIga2luZGxlID0gdWEubWF0Y2goL0tpbmRsZVxcLyhbXFxkLl0rKS8pO1xuICAvLyB2YXIgc2lsayA9IHVhLm1hdGNoKC9TaWxrXFwvKFtcXGQuX10rKS8pO1xuICAvLyB2YXIgYmxhY2tiZXJyeSA9IHVhLm1hdGNoKC8oQmxhY2tCZXJyeSkuKlZlcnNpb25cXC8oW1xcZC5dKykvKTtcbiAgLy8gdmFyIGJiMTAgPSB1YS5tYXRjaCgvKEJCMTApLipWZXJzaW9uXFwvKFtcXGQuXSspLyk7XG4gIC8vIHZhciByaW10YWJsZXRvcyA9IHVhLm1hdGNoKC8oUklNXFxzVGFibGV0XFxzT1MpXFxzKFtcXGQuXSspLyk7XG4gIC8vIHZhciBwbGF5Ym9vayA9IHVhLm1hdGNoKC9QbGF5Qm9vay8pO1xuICAvLyB2YXIgY2hyb21lID0gdWEubWF0Y2goL0Nocm9tZVxcLyhbXFxkLl0rKS8pIHx8IHVhLm1hdGNoKC9DcmlPU1xcLyhbXFxkLl0rKS8pO1xuXG4gIHZhciBmaXJlZm94ID0gdWEubWF0Y2goL0ZpcmVmb3hcXC8oW1xcZC5dKykvKTsgLy8gdmFyIHNhZmFyaSA9IHdlYmtpdCAmJiB1YS5tYXRjaCgvTW9iaWxlXFwvLykgJiYgIWNocm9tZTtcbiAgLy8gdmFyIHdlYnZpZXcgPSB1YS5tYXRjaCgvKGlQaG9uZXxpUG9kfGlQYWQpLipBcHBsZVdlYktpdCg/IS4qU2FmYXJpKS8pICYmICFjaHJvbWU7XG5cbiAgdmFyIGllID0gdWEubWF0Y2goL01TSUVcXHMoW1xcZC5dKykvKSAvLyBJRSAxMSBUcmlkZW50LzcuMDsgcnY6MTEuMFxuICB8fCB1YS5tYXRjaCgvVHJpZGVudFxcLy4rP3J2OigoW1xcZC5dKykpLyk7XG4gIHZhciBlZGdlID0gdWEubWF0Y2goL0VkZ2VcXC8oW1xcZC5dKykvKTsgLy8gSUUgMTIgYW5kIDEyK1xuXG4gIHZhciB3ZUNoYXQgPSAvbWljcm9tZXNzZW5nZXIvaS50ZXN0KHVhKTsgLy8gVG9kbzogY2xlYW4gdGhpcyB1cCB3aXRoIGEgYmV0dGVyIE9TL2Jyb3dzZXIgc2VwZXJhdGlvbjpcbiAgLy8gLSBkaXNjZXJuIChtb3JlKSBiZXR3ZWVuIG11bHRpcGxlIGJyb3dzZXJzIG9uIGFuZHJvaWRcbiAgLy8gLSBkZWNpZGUgaWYga2luZGxlIGZpcmUgaW4gc2lsayBtb2RlIGlzIGFuZHJvaWQgb3Igbm90XG4gIC8vIC0gRmlyZWZveCBvbiBBbmRyb2lkIGRvZXNuJ3Qgc3BlY2lmeSB0aGUgQW5kcm9pZCB2ZXJzaW9uXG4gIC8vIC0gcG9zc2libHkgZGV2aWRlIGluIG9zLCBkZXZpY2UgYW5kIGJyb3dzZXIgaGFzaGVzXG4gIC8vIGlmIChicm93c2VyLndlYmtpdCA9ICEhd2Via2l0KSBicm93c2VyLnZlcnNpb24gPSB3ZWJraXRbMV07XG4gIC8vIGlmIChhbmRyb2lkKSBvcy5hbmRyb2lkID0gdHJ1ZSwgb3MudmVyc2lvbiA9IGFuZHJvaWRbMl07XG4gIC8vIGlmIChpcGhvbmUgJiYgIWlwb2QpIG9zLmlvcyA9IG9zLmlwaG9uZSA9IHRydWUsIG9zLnZlcnNpb24gPSBpcGhvbmVbMl0ucmVwbGFjZSgvXy9nLCAnLicpO1xuICAvLyBpZiAoaXBhZCkgb3MuaW9zID0gb3MuaXBhZCA9IHRydWUsIG9zLnZlcnNpb24gPSBpcGFkWzJdLnJlcGxhY2UoL18vZywgJy4nKTtcbiAgLy8gaWYgKGlwb2QpIG9zLmlvcyA9IG9zLmlwb2QgPSB0cnVlLCBvcy52ZXJzaW9uID0gaXBvZFszXSA/IGlwb2RbM10ucmVwbGFjZSgvXy9nLCAnLicpIDogbnVsbDtcbiAgLy8gaWYgKHdlYm9zKSBvcy53ZWJvcyA9IHRydWUsIG9zLnZlcnNpb24gPSB3ZWJvc1syXTtcbiAgLy8gaWYgKHRvdWNocGFkKSBvcy50b3VjaHBhZCA9IHRydWU7XG4gIC8vIGlmIChibGFja2JlcnJ5KSBvcy5ibGFja2JlcnJ5ID0gdHJ1ZSwgb3MudmVyc2lvbiA9IGJsYWNrYmVycnlbMl07XG4gIC8vIGlmIChiYjEwKSBvcy5iYjEwID0gdHJ1ZSwgb3MudmVyc2lvbiA9IGJiMTBbMl07XG4gIC8vIGlmIChyaW10YWJsZXRvcykgb3MucmltdGFibGV0b3MgPSB0cnVlLCBvcy52ZXJzaW9uID0gcmltdGFibGV0b3NbMl07XG4gIC8vIGlmIChwbGF5Ym9vaykgYnJvd3Nlci5wbGF5Ym9vayA9IHRydWU7XG4gIC8vIGlmIChraW5kbGUpIG9zLmtpbmRsZSA9IHRydWUsIG9zLnZlcnNpb24gPSBraW5kbGVbMV07XG4gIC8vIGlmIChzaWxrKSBicm93c2VyLnNpbGsgPSB0cnVlLCBicm93c2VyLnZlcnNpb24gPSBzaWxrWzFdO1xuICAvLyBpZiAoIXNpbGsgJiYgb3MuYW5kcm9pZCAmJiB1YS5tYXRjaCgvS2luZGxlIEZpcmUvKSkgYnJvd3Nlci5zaWxrID0gdHJ1ZTtcbiAgLy8gaWYgKGNocm9tZSkgYnJvd3Nlci5jaHJvbWUgPSB0cnVlLCBicm93c2VyLnZlcnNpb24gPSBjaHJvbWVbMV07XG5cbiAgaWYgKGZpcmVmb3gpIHtcbiAgICBicm93c2VyLmZpcmVmb3ggPSB0cnVlO1xuICAgIGJyb3dzZXIudmVyc2lvbiA9IGZpcmVmb3hbMV07XG4gIH0gLy8gaWYgKHNhZmFyaSAmJiAodWEubWF0Y2goL1NhZmFyaS8pIHx8ICEhb3MuaW9zKSkgYnJvd3Nlci5zYWZhcmkgPSB0cnVlO1xuICAvLyBpZiAod2VidmlldykgYnJvd3Nlci53ZWJ2aWV3ID0gdHJ1ZTtcblxuXG4gIGlmIChpZSkge1xuICAgIGJyb3dzZXIuaWUgPSB0cnVlO1xuICAgIGJyb3dzZXIudmVyc2lvbiA9IGllWzFdO1xuICB9XG5cbiAgaWYgKGVkZ2UpIHtcbiAgICBicm93c2VyLmVkZ2UgPSB0cnVlO1xuICAgIGJyb3dzZXIudmVyc2lvbiA9IGVkZ2VbMV07XG4gIH0gLy8gSXQgaXMgZGlmZmljdWx0IHRvIGRldGVjdCBXZUNoYXQgaW4gV2luIFBob25lIHByZWNpc2VseSwgYmVjYXVzZSB1YSBjYW5cbiAgLy8gbm90IGJlIHNldCBvbiB3aW4gcGhvbmUuIFNvIHdlIGRvIG5vdCBjb25zaWRlciBXaW4gUGhvbmUuXG5cblxuICBpZiAod2VDaGF0KSB7XG4gICAgYnJvd3Nlci53ZUNoYXQgPSB0cnVlO1xuICB9IC8vIG9zLnRhYmxldCA9ICEhKGlwYWQgfHwgcGxheWJvb2sgfHwgKGFuZHJvaWQgJiYgIXVhLm1hdGNoKC9Nb2JpbGUvKSkgfHxcbiAgLy8gICAgIChmaXJlZm94ICYmIHVhLm1hdGNoKC9UYWJsZXQvKSkgfHwgKGllICYmICF1YS5tYXRjaCgvUGhvbmUvKSAmJiB1YS5tYXRjaCgvVG91Y2gvKSkpO1xuICAvLyBvcy5waG9uZSAgPSAhISghb3MudGFibGV0ICYmICFvcy5pcG9kICYmIChhbmRyb2lkIHx8IGlwaG9uZSB8fCB3ZWJvcyB8fFxuICAvLyAgICAgKGNocm9tZSAmJiB1YS5tYXRjaCgvQW5kcm9pZC8pKSB8fCAoY2hyb21lICYmIHVhLm1hdGNoKC9DcmlPU1xcLyhbXFxkLl0rKS8pKSB8fFxuICAvLyAgICAgKGZpcmVmb3ggJiYgdWEubWF0Y2goL01vYmlsZS8pKSB8fCAoaWUgJiYgdWEubWF0Y2goL1RvdWNoLykpKSk7XG5cblxuICByZXR1cm4ge1xuICAgIGJyb3dzZXI6IGJyb3dzZXIsXG4gICAgb3M6IG9zLFxuICAgIG5vZGU6IGZhbHNlLFxuICAgIC8vIOWOn+eUn2NhbnZhc+aUr+aMge+8jOaUueaegeerr+eCueS6hlxuICAgIC8vIGNhbnZhc1N1cHBvcnRlZCA6ICEoYnJvd3Nlci5pZSAmJiBwYXJzZUZsb2F0KGJyb3dzZXIudmVyc2lvbikgPCA5KVxuICAgIGNhbnZhc1N1cHBvcnRlZDogISFkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKS5nZXRDb250ZXh0LFxuICAgIHN2Z1N1cHBvcnRlZDogdHlwZW9mIFNWR1JlY3QgIT09ICd1bmRlZmluZWQnLFxuICAgIC8vIHdvcmtzIG9uIG1vc3QgYnJvd3NlcnNcbiAgICAvLyBJRTEwLzExIGRvZXMgbm90IHN1cHBvcnQgdG91Y2ggZXZlbnQsIGFuZCBNUyBFZGdlIHN1cHBvcnRzIHRoZW0gYnV0IG5vdCBieVxuICAgIC8vIGRlZmF1bHQsIHNvIHdlIGRvbnQgY2hlY2sgbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzIGZvciB0aGVtIGhlcmUuXG4gICAgdG91Y2hFdmVudHNTdXBwb3J0ZWQ6ICdvbnRvdWNoc3RhcnQnIGluIHdpbmRvdyAmJiAhYnJvd3Nlci5pZSAmJiAhYnJvd3Nlci5lZGdlLFxuICAgIC8vIDxodHRwOi8vY2FuaXVzZS5jb20vI3NlYXJjaD1wb2ludGVyJTIwZXZlbnQ+LlxuICAgIHBvaW50ZXJFdmVudHNTdXBwb3J0ZWQ6ICdvbnBvaW50ZXJkb3duJyBpbiB3aW5kb3cgLy8gRmlyZWZveCBzdXBwb3J0cyBwb2ludGVyIGJ1dCBub3QgYnkgZGVmYXVsdCwgb25seSBNUyBicm93c2VycyBhcmUgcmVsaWFibGUgb24gcG9pbnRlclxuICAgIC8vIGV2ZW50cyBjdXJyZW50bHkuIFNvIHdlIGRvbnQgdXNlIHRoYXQgb24gb3RoZXIgYnJvd3NlcnMgdW5sZXNzIHRlc3RlZCBzdWZmaWNpZW50bHkuXG4gICAgLy8gQWx0aG91Z2ggSUUgMTAgc3VwcG9ydHMgcG9pbnRlciBldmVudCwgaXQgdXNlIG9sZCBzdHlsZSBhbmQgaXMgZGlmZmVyZW50IGZyb20gdGhlXG4gICAgLy8gc3RhbmRhcmQuIFNvIHdlIGV4Y2x1ZGUgdGhhdC4gKElFIDEwIGlzIGhhcmRseSB1c2VkIG9uIHRvdWNoIGRldmljZSlcbiAgICAmJiAoYnJvd3Nlci5lZGdlIHx8IGJyb3dzZXIuaWUgJiYgYnJvd3Nlci52ZXJzaW9uID49IDExKSxcbiAgICAvLyBwYXNzaXZlU3VwcG9ydGVkOiBkZXRlY3RQYXNzaXZlU3VwcG9ydCgpXG4gICAgZG9tU3VwcG9ydGVkOiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gIH07XG59IC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vV0lDRy9FdmVudExpc3RlbmVyT3B0aW9ucy9ibG9iL2doLXBhZ2VzL2V4cGxhaW5lci5tZCNmZWF0dXJlLWRldGVjdGlvblxuLy8gZnVuY3Rpb24gZGV0ZWN0UGFzc2l2ZVN1cHBvcnQoKSB7XG4vLyAgICAgLy8gVGVzdCB2aWEgYSBnZXR0ZXIgaW4gdGhlIG9wdGlvbnMgb2JqZWN0IHRvIHNlZSBpZiB0aGUgcGFzc2l2ZSBwcm9wZXJ0eSBpcyBhY2Nlc3NlZFxuLy8gICAgIHZhciBzdXBwb3J0c1Bhc3NpdmUgPSBmYWxzZTtcbi8vICAgICB0cnkge1xuLy8gICAgICAgICB2YXIgb3B0cyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ3Bhc3NpdmUnLCB7XG4vLyAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuLy8gICAgICAgICAgICAgICAgIHN1cHBvcnRzUGFzc2l2ZSA9IHRydWU7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgIH0pO1xuLy8gICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndGVzdFBhc3NpdmUnLCBmdW5jdGlvbigpIHt9LCBvcHRzKTtcbi8vICAgICB9IGNhdGNoIChlKSB7XG4vLyAgICAgfVxuLy8gICAgIHJldHVybiBzdXBwb3J0c1Bhc3NpdmU7XG4vLyB9XG5cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///66\\n\")},function(module,exports,__webpack_require__){eval(\"var vec2 = __webpack_require__(62);\\n\\nvar matrix = __webpack_require__(74);\\n\\n/**\\n * @module echarts/core/BoundingRect\\n */\\nvar v2ApplyTransform = vec2.applyTransform;\\nvar mathMin = Math.min;\\nvar mathMax = Math.max;\\n/**\\n * @alias module:echarts/core/BoundingRect\\n */\\n\\nfunction BoundingRect(x, y, width, height) {\\n  if (width < 0) {\\n    x = x + width;\\n    width = -width;\\n  }\\n\\n  if (height < 0) {\\n    y = y + height;\\n    height = -height;\\n  }\\n  /**\\n   * @type {number}\\n   */\\n\\n\\n  this.x = x;\\n  /**\\n   * @type {number}\\n   */\\n\\n  this.y = y;\\n  /**\\n   * @type {number}\\n   */\\n\\n  this.width = width;\\n  /**\\n   * @type {number}\\n   */\\n\\n  this.height = height;\\n}\\n\\nBoundingRect.prototype = {\\n  constructor: BoundingRect,\\n\\n  /**\\n   * @param {module:echarts/core/BoundingRect} other\\n   */\\n  union: function (other) {\\n    var x = mathMin(other.x, this.x);\\n    var y = mathMin(other.y, this.y);\\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\\n    this.x = x;\\n    this.y = y;\\n  },\\n\\n  /**\\n   * @param {Array.<number>} m\\n   * @methods\\n   */\\n  applyTransform: function () {\\n    var lt = [];\\n    var rb = [];\\n    var lb = [];\\n    var rt = [];\\n    return function (m) {\\n      // In case usage like this\\n      // el.getBoundingRect().applyTransform(el.transform)\\n      // And element has no transform\\n      if (!m) {\\n        return;\\n      }\\n\\n      lt[0] = lb[0] = this.x;\\n      lt[1] = rt[1] = this.y;\\n      rb[0] = rt[0] = this.x + this.width;\\n      rb[1] = lb[1] = this.y + this.height;\\n      v2ApplyTransform(lt, lt, m);\\n      v2ApplyTransform(rb, rb, m);\\n      v2ApplyTransform(lb, lb, m);\\n      v2ApplyTransform(rt, rt, m);\\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\\n      this.width = maxX - this.x;\\n      this.height = maxY - this.y;\\n    };\\n  }(),\\n\\n  /**\\n   * Calculate matrix of transforming from self to target rect\\n   * @param  {module:zrender/core/BoundingRect} b\\n   * @return {Array.<number>}\\n   */\\n  calculateTransform: function (b) {\\n    var a = this;\\n    var sx = b.width / a.width;\\n    var sy = b.height / a.height;\\n    var m = matrix.create(); // 矩阵右乘\\n\\n    matrix.translate(m, m, [-a.x, -a.y]);\\n    matrix.scale(m, m, [sx, sy]);\\n    matrix.translate(m, m, [b.x, b.y]);\\n    return m;\\n  },\\n\\n  /**\\n   * @param {(module:echarts/core/BoundingRect|Object)} b\\n   * @return {boolean}\\n   */\\n  intersect: function (b) {\\n    if (!b) {\\n      return false;\\n    }\\n\\n    if (!(b instanceof BoundingRect)) {\\n      // Normalize negative width/height.\\n      b = BoundingRect.create(b);\\n    }\\n\\n    var a = this;\\n    var ax0 = a.x;\\n    var ax1 = a.x + a.width;\\n    var ay0 = a.y;\\n    var ay1 = a.y + a.height;\\n    var bx0 = b.x;\\n    var bx1 = b.x + b.width;\\n    var by0 = b.y;\\n    var by1 = b.y + b.height;\\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\\n  },\\n  contain: function (x, y) {\\n    var rect = this;\\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\\n  },\\n\\n  /**\\n   * @return {module:echarts/core/BoundingRect}\\n   */\\n  clone: function () {\\n    return new BoundingRect(this.x, this.y, this.width, this.height);\\n  },\\n\\n  /**\\n   * Copy from another rect\\n   */\\n  copy: function (other) {\\n    this.x = other.x;\\n    this.y = other.y;\\n    this.width = other.width;\\n    this.height = other.height;\\n  },\\n  plain: function () {\\n    return {\\n      x: this.x,\\n      y: this.y,\\n      width: this.width,\\n      height: this.height\\n    };\\n  }\\n};\\n/**\\n * @param {Object|module:zrender/core/BoundingRect} rect\\n * @param {number} rect.x\\n * @param {number} rect.y\\n * @param {number} rect.width\\n * @param {number} rect.height\\n * @return {module:zrender/core/BoundingRect}\\n */\\n\\nBoundingRect.create = function (rect) {\\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\\n};\\n\\nvar _default = BoundingRect;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29yZS9Cb3VuZGluZ1JlY3QuanM/OTg1MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsRUFBVTs7QUFFN0IsYUFBYSxtQkFBTyxDQUFDLEVBQVU7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGFBQWEsaUNBQWlDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsY0FBYyxpQ0FBaUM7QUFDL0MsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGFBQWEsMENBQTBDO0FBQ3ZELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3Q0FBd0M7QUFDbkQsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI2Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB2ZWMyID0gcmVxdWlyZShcIi4vdmVjdG9yXCIpO1xuXG52YXIgbWF0cml4ID0gcmVxdWlyZShcIi4vbWF0cml4XCIpO1xuXG4vKipcbiAqIEBtb2R1bGUgZWNoYXJ0cy9jb3JlL0JvdW5kaW5nUmVjdFxuICovXG52YXIgdjJBcHBseVRyYW5zZm9ybSA9IHZlYzIuYXBwbHlUcmFuc2Zvcm07XG52YXIgbWF0aE1pbiA9IE1hdGgubWluO1xudmFyIG1hdGhNYXggPSBNYXRoLm1heDtcbi8qKlxuICogQGFsaWFzIG1vZHVsZTplY2hhcnRzL2NvcmUvQm91bmRpbmdSZWN0XG4gKi9cblxuZnVuY3Rpb24gQm91bmRpbmdSZWN0KHgsIHksIHdpZHRoLCBoZWlnaHQpIHtcbiAgaWYgKHdpZHRoIDwgMCkge1xuICAgIHggPSB4ICsgd2lkdGg7XG4gICAgd2lkdGggPSAtd2lkdGg7XG4gIH1cblxuICBpZiAoaGVpZ2h0IDwgMCkge1xuICAgIHkgPSB5ICsgaGVpZ2h0O1xuICAgIGhlaWdodCA9IC1oZWlnaHQ7XG4gIH1cbiAgLyoqXG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuXG5cbiAgdGhpcy54ID0geDtcbiAgLyoqXG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuXG4gIHRoaXMueSA9IHk7XG4gIC8qKlxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cblxuICB0aGlzLndpZHRoID0gd2lkdGg7XG4gIC8qKlxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cblxuICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbn1cblxuQm91bmRpbmdSZWN0LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IEJvdW5kaW5nUmVjdCxcblxuICAvKipcbiAgICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9jb3JlL0JvdW5kaW5nUmVjdH0gb3RoZXJcbiAgICovXG4gIHVuaW9uOiBmdW5jdGlvbiAob3RoZXIpIHtcbiAgICB2YXIgeCA9IG1hdGhNaW4ob3RoZXIueCwgdGhpcy54KTtcbiAgICB2YXIgeSA9IG1hdGhNaW4ob3RoZXIueSwgdGhpcy55KTtcbiAgICB0aGlzLndpZHRoID0gbWF0aE1heChvdGhlci54ICsgb3RoZXIud2lkdGgsIHRoaXMueCArIHRoaXMud2lkdGgpIC0geDtcbiAgICB0aGlzLmhlaWdodCA9IG1hdGhNYXgob3RoZXIueSArIG90aGVyLmhlaWdodCwgdGhpcy55ICsgdGhpcy5oZWlnaHQpIC0geTtcbiAgICB0aGlzLnggPSB4O1xuICAgIHRoaXMueSA9IHk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7QXJyYXkuPG51bWJlcj59IG1cbiAgICogQG1ldGhvZHNcbiAgICovXG4gIGFwcGx5VHJhbnNmb3JtOiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGx0ID0gW107XG4gICAgdmFyIHJiID0gW107XG4gICAgdmFyIGxiID0gW107XG4gICAgdmFyIHJ0ID0gW107XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtKSB7XG4gICAgICAvLyBJbiBjYXNlIHVzYWdlIGxpa2UgdGhpc1xuICAgICAgLy8gZWwuZ2V0Qm91bmRpbmdSZWN0KCkuYXBwbHlUcmFuc2Zvcm0oZWwudHJhbnNmb3JtKVxuICAgICAgLy8gQW5kIGVsZW1lbnQgaGFzIG5vIHRyYW5zZm9ybVxuICAgICAgaWYgKCFtKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbHRbMF0gPSBsYlswXSA9IHRoaXMueDtcbiAgICAgIGx0WzFdID0gcnRbMV0gPSB0aGlzLnk7XG4gICAgICByYlswXSA9IHJ0WzBdID0gdGhpcy54ICsgdGhpcy53aWR0aDtcbiAgICAgIHJiWzFdID0gbGJbMV0gPSB0aGlzLnkgKyB0aGlzLmhlaWdodDtcbiAgICAgIHYyQXBwbHlUcmFuc2Zvcm0obHQsIGx0LCBtKTtcbiAgICAgIHYyQXBwbHlUcmFuc2Zvcm0ocmIsIHJiLCBtKTtcbiAgICAgIHYyQXBwbHlUcmFuc2Zvcm0obGIsIGxiLCBtKTtcbiAgICAgIHYyQXBwbHlUcmFuc2Zvcm0ocnQsIHJ0LCBtKTtcbiAgICAgIHRoaXMueCA9IG1hdGhNaW4obHRbMF0sIHJiWzBdLCBsYlswXSwgcnRbMF0pO1xuICAgICAgdGhpcy55ID0gbWF0aE1pbihsdFsxXSwgcmJbMV0sIGxiWzFdLCBydFsxXSk7XG4gICAgICB2YXIgbWF4WCA9IG1hdGhNYXgobHRbMF0sIHJiWzBdLCBsYlswXSwgcnRbMF0pO1xuICAgICAgdmFyIG1heFkgPSBtYXRoTWF4KGx0WzFdLCByYlsxXSwgbGJbMV0sIHJ0WzFdKTtcbiAgICAgIHRoaXMud2lkdGggPSBtYXhYIC0gdGhpcy54O1xuICAgICAgdGhpcy5oZWlnaHQgPSBtYXhZIC0gdGhpcy55O1xuICAgIH07XG4gIH0oKSxcblxuICAvKipcbiAgICogQ2FsY3VsYXRlIG1hdHJpeCBvZiB0cmFuc2Zvcm1pbmcgZnJvbSBzZWxmIHRvIHRhcmdldCByZWN0XG4gICAqIEBwYXJhbSAge21vZHVsZTp6cmVuZGVyL2NvcmUvQm91bmRpbmdSZWN0fSBiXG4gICAqIEByZXR1cm4ge0FycmF5LjxudW1iZXI+fVxuICAgKi9cbiAgY2FsY3VsYXRlVHJhbnNmb3JtOiBmdW5jdGlvbiAoYikge1xuICAgIHZhciBhID0gdGhpcztcbiAgICB2YXIgc3ggPSBiLndpZHRoIC8gYS53aWR0aDtcbiAgICB2YXIgc3kgPSBiLmhlaWdodCAvIGEuaGVpZ2h0O1xuICAgIHZhciBtID0gbWF0cml4LmNyZWF0ZSgpOyAvLyDnn6npmLXlj7PkuZhcblxuICAgIG1hdHJpeC50cmFuc2xhdGUobSwgbSwgWy1hLngsIC1hLnldKTtcbiAgICBtYXRyaXguc2NhbGUobSwgbSwgW3N4LCBzeV0pO1xuICAgIG1hdHJpeC50cmFuc2xhdGUobSwgbSwgW2IueCwgYi55XSk7XG4gICAgcmV0dXJuIG07XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7KG1vZHVsZTplY2hhcnRzL2NvcmUvQm91bmRpbmdSZWN0fE9iamVjdCl9IGJcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGludGVyc2VjdDogZnVuY3Rpb24gKGIpIHtcbiAgICBpZiAoIWIpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoIShiIGluc3RhbmNlb2YgQm91bmRpbmdSZWN0KSkge1xuICAgICAgLy8gTm9ybWFsaXplIG5lZ2F0aXZlIHdpZHRoL2hlaWdodC5cbiAgICAgIGIgPSBCb3VuZGluZ1JlY3QuY3JlYXRlKGIpO1xuICAgIH1cblxuICAgIHZhciBhID0gdGhpcztcbiAgICB2YXIgYXgwID0gYS54O1xuICAgIHZhciBheDEgPSBhLnggKyBhLndpZHRoO1xuICAgIHZhciBheTAgPSBhLnk7XG4gICAgdmFyIGF5MSA9IGEueSArIGEuaGVpZ2h0O1xuICAgIHZhciBieDAgPSBiLng7XG4gICAgdmFyIGJ4MSA9IGIueCArIGIud2lkdGg7XG4gICAgdmFyIGJ5MCA9IGIueTtcbiAgICB2YXIgYnkxID0gYi55ICsgYi5oZWlnaHQ7XG4gICAgcmV0dXJuICEoYXgxIDwgYngwIHx8IGJ4MSA8IGF4MCB8fCBheTEgPCBieTAgfHwgYnkxIDwgYXkwKTtcbiAgfSxcbiAgY29udGFpbjogZnVuY3Rpb24gKHgsIHkpIHtcbiAgICB2YXIgcmVjdCA9IHRoaXM7XG4gICAgcmV0dXJuIHggPj0gcmVjdC54ICYmIHggPD0gcmVjdC54ICsgcmVjdC53aWR0aCAmJiB5ID49IHJlY3QueSAmJiB5IDw9IHJlY3QueSArIHJlY3QuaGVpZ2h0O1xuICB9LFxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHttb2R1bGU6ZWNoYXJ0cy9jb3JlL0JvdW5kaW5nUmVjdH1cbiAgICovXG4gIGNsb25lOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIG5ldyBCb3VuZGluZ1JlY3QodGhpcy54LCB0aGlzLnksIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcbiAgfSxcblxuICAvKipcbiAgICogQ29weSBmcm9tIGFub3RoZXIgcmVjdFxuICAgKi9cbiAgY29weTogZnVuY3Rpb24gKG90aGVyKSB7XG4gICAgdGhpcy54ID0gb3RoZXIueDtcbiAgICB0aGlzLnkgPSBvdGhlci55O1xuICAgIHRoaXMud2lkdGggPSBvdGhlci53aWR0aDtcbiAgICB0aGlzLmhlaWdodCA9IG90aGVyLmhlaWdodDtcbiAgfSxcbiAgcGxhaW46IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgeDogdGhpcy54LFxuICAgICAgeTogdGhpcy55LFxuICAgICAgd2lkdGg6IHRoaXMud2lkdGgsXG4gICAgICBoZWlnaHQ6IHRoaXMuaGVpZ2h0XG4gICAgfTtcbiAgfVxufTtcbi8qKlxuICogQHBhcmFtIHtPYmplY3R8bW9kdWxlOnpyZW5kZXIvY29yZS9Cb3VuZGluZ1JlY3R9IHJlY3RcbiAqIEBwYXJhbSB7bnVtYmVyfSByZWN0LnhcbiAqIEBwYXJhbSB7bnVtYmVyfSByZWN0LnlcbiAqIEBwYXJhbSB7bnVtYmVyfSByZWN0LndpZHRoXG4gKiBAcGFyYW0ge251bWJlcn0gcmVjdC5oZWlnaHRcbiAqIEByZXR1cm4ge21vZHVsZTp6cmVuZGVyL2NvcmUvQm91bmRpbmdSZWN0fVxuICovXG5cbkJvdW5kaW5nUmVjdC5jcmVhdGUgPSBmdW5jdGlvbiAocmVjdCkge1xuICByZXR1cm4gbmV3IEJvdW5kaW5nUmVjdChyZWN0LngsIHJlY3QueSwgcmVjdC53aWR0aCwgcmVjdC5oZWlnaHQpO1xufTtcblxudmFyIF9kZWZhdWx0ID0gQm91bmRpbmdSZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///67\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar zrender = __webpack_require__(127);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar colorTool = __webpack_require__(82);\\n\\nvar env = __webpack_require__(66);\\n\\nvar timsort = __webpack_require__(100);\\n\\nvar Eventful = __webpack_require__(80);\\n\\nvar GlobalModel = __webpack_require__(139);\\n\\nvar ExtensionAPI = __webpack_require__(154);\\n\\nvar CoordinateSystemManager = __webpack_require__(107);\\n\\nvar OptionManager = __webpack_require__(226);\\n\\nvar backwardCompat = __webpack_require__(227);\\n\\nvar dataStack = __webpack_require__(229);\\n\\nvar ComponentModel = __webpack_require__(72);\\n\\nvar SeriesModel = __webpack_require__(155);\\n\\nvar ComponentView = __webpack_require__(156);\\n\\nvar ChartView = __webpack_require__(157);\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar modelUtil = __webpack_require__(60);\\n\\nvar _throttle = __webpack_require__(110);\\n\\nvar throttle = _throttle.throttle;\\n\\nvar seriesColor = __webpack_require__(231);\\n\\nvar aria = __webpack_require__(232);\\n\\nvar loadingDefault = __webpack_require__(234);\\n\\nvar Scheduler = __webpack_require__(235);\\n\\nvar lightTheme = __webpack_require__(236);\\n\\nvar darkTheme = __webpack_require__(237);\\n\\n__webpack_require__(238);\\n\\nvar mapDataStorage = __webpack_require__(239);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar assert = zrUtil.assert;\\nvar each = zrUtil.each;\\nvar isFunction = zrUtil.isFunction;\\nvar isObject = zrUtil.isObject;\\nvar parseClassType = ComponentModel.parseClassType;\\nvar version = '4.2.0';\\nvar dependencies = {\\n  zrender: '4.0.5'\\n};\\nvar TEST_FRAME_REMAIN_TIME = 1;\\nvar PRIORITY_PROCESSOR_FILTER = 1000;\\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\\nvar PRIORITY_VISUAL_LAYOUT = 1000;\\nvar PRIORITY_VISUAL_GLOBAL = 2000;\\nvar PRIORITY_VISUAL_CHART = 3000;\\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\\n// necessary?\\n\\nvar PRIORITY_VISUAL_BRUSH = 5000;\\nvar PRIORITY = {\\n  PROCESSOR: {\\n    FILTER: PRIORITY_PROCESSOR_FILTER,\\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\\n  },\\n  VISUAL: {\\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\\n    CHART: PRIORITY_VISUAL_CHART,\\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\\n    BRUSH: PRIORITY_VISUAL_BRUSH\\n  }\\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\\n// where they must not be invoked nestedly, except the only case: invoke\\n// dispatchAction with updateMethod \\\"none\\\" in main process.\\n// This flag is used to carry out this rule.\\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\\n\\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\\nvar OPTION_UPDATED = '__optionUpdated';\\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\\n\\nfunction createRegisterEventWithLowercaseName(method) {\\n  return function (eventName, handler, context) {\\n    // Event name is all lowercase\\n    eventName = eventName && eventName.toLowerCase();\\n    Eventful.prototype[method].call(this, eventName, handler, context);\\n  };\\n}\\n/**\\n * @module echarts~MessageCenter\\n */\\n\\n\\nfunction MessageCenter() {\\n  Eventful.call(this);\\n}\\n\\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\\nzrUtil.mixin(MessageCenter, Eventful);\\n/**\\n * @module echarts~ECharts\\n */\\n\\nfunction ECharts(dom, theme, opts) {\\n  opts = opts || {}; // Get theme by name\\n\\n  if (typeof theme === 'string') {\\n    theme = themeStorage[theme];\\n  }\\n  /**\\n   * @type {string}\\n   */\\n\\n\\n  this.id;\\n  /**\\n   * Group id\\n   * @type {string}\\n   */\\n\\n  this.group;\\n  /**\\n   * @type {HTMLElement}\\n   * @private\\n   */\\n\\n  this._dom = dom;\\n  var defaultRenderer = 'canvas';\\n\\n  /**\\n   * @type {module:zrender/ZRender}\\n   * @private\\n   */\\n  var zr = this._zr = zrender.init(dom, {\\n    renderer: opts.renderer || defaultRenderer,\\n    devicePixelRatio: opts.devicePixelRatio,\\n    width: opts.width,\\n    height: opts.height\\n  });\\n  /**\\n   * Expect 60 pfs.\\n   * @type {Function}\\n   * @private\\n   */\\n\\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\\n  var theme = zrUtil.clone(theme);\\n  theme && backwardCompat(theme, true);\\n  /**\\n   * @type {Object}\\n   * @private\\n   */\\n\\n  this._theme = theme;\\n  /**\\n   * @type {Array.<module:echarts/view/Chart>}\\n   * @private\\n   */\\n\\n  this._chartsViews = [];\\n  /**\\n   * @type {Object.<string, module:echarts/view/Chart>}\\n   * @private\\n   */\\n\\n  this._chartsMap = {};\\n  /**\\n   * @type {Array.<module:echarts/view/Component>}\\n   * @private\\n   */\\n\\n  this._componentsViews = [];\\n  /**\\n   * @type {Object.<string, module:echarts/view/Component>}\\n   * @private\\n   */\\n\\n  this._componentsMap = {};\\n  /**\\n   * @type {module:echarts/CoordinateSystem}\\n   * @private\\n   */\\n\\n  this._coordSysMgr = new CoordinateSystemManager();\\n  /**\\n   * @type {module:echarts/ExtensionAPI}\\n   * @private\\n   */\\n\\n  var api = this._api = createExtensionAPI(this); // Sort on demand\\n\\n  function prioritySortFunc(a, b) {\\n    return a.__prio - b.__prio;\\n  }\\n\\n  timsort(visualFuncs, prioritySortFunc);\\n  timsort(dataProcessorFuncs, prioritySortFunc);\\n  /**\\n   * @type {module:echarts/stream/Scheduler}\\n   */\\n\\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\\n  /**\\n   * @type {module:echarts~MessageCenter}\\n   * @private\\n   */\\n\\n  this._messageCenter = new MessageCenter(); // Init mouse events\\n\\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\\n\\n\\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\\n\\n  this._pendingActions = [];\\n  zr.animation.on('frame', this._onframe, this);\\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\\n\\n  zrUtil.setAsPrimitive(this);\\n}\\n\\nvar echartsProto = ECharts.prototype;\\n\\nechartsProto._onframe = function () {\\n  if (this._disposed) {\\n    return;\\n  }\\n\\n  var scheduler = this._scheduler; // Lazy update\\n\\n  if (this[OPTION_UPDATED]) {\\n    var silent = this[OPTION_UPDATED].silent;\\n    this[IN_MAIN_PROCESS] = true;\\n    prepare(this);\\n    updateMethods.update.call(this);\\n    this[IN_MAIN_PROCESS] = false;\\n    this[OPTION_UPDATED] = false;\\n    flushPendingActions.call(this, silent);\\n    triggerUpdatedEvent.call(this, silent);\\n  } // Avoid do both lazy update and progress in one frame.\\n  else if (scheduler.unfinished) {\\n      // Stream progress.\\n      var remainTime = TEST_FRAME_REMAIN_TIME;\\n      var ecModel = this._model;\\n      var api = this._api;\\n      scheduler.unfinished = false;\\n\\n      do {\\n        var startTime = +new Date();\\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\\n\\n        scheduler.performDataProcessorTasks(ecModel);\\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\\n        // each frame is not a good user experience. So we follow the rule that\\n        // the extent of the coordinate system is determin in the first frame (the\\n        // frame is executed immedietely after task reset.\\n        // this._coordSysMgr.update(ecModel, api);\\n        // console.log('--- ec frame visual ---', remainTime);\\n\\n        scheduler.performVisualTasks(ecModel);\\n        renderSeries(this, this._model, api, 'remain');\\n        remainTime -= +new Date() - startTime;\\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\\n\\n\\n      if (!scheduler.unfinished) {\\n        this._zr.flush();\\n      } // Else, zr flushing be ensue within the same frame,\\n      // because zr flushing is after onframe event.\\n\\n    }\\n};\\n/**\\n * @return {HTMLElement}\\n */\\n\\n\\nechartsProto.getDom = function () {\\n  return this._dom;\\n};\\n/**\\n * @return {module:zrender~ZRender}\\n */\\n\\n\\nechartsProto.getZr = function () {\\n  return this._zr;\\n};\\n/**\\n * Usage:\\n * chart.setOption(option, notMerge, lazyUpdate);\\n * chart.setOption(option, {\\n *     notMerge: ...,\\n *     lazyUpdate: ...,\\n *     silent: ...\\n * });\\n *\\n * @param {Object} option\\n * @param {Object|boolean} [opts] opts or notMerge.\\n * @param {boolean} [opts.notMerge=false]\\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\\n */\\n\\n\\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\\n  var silent;\\n\\n  if (isObject(notMerge)) {\\n    lazyUpdate = notMerge.lazyUpdate;\\n    silent = notMerge.silent;\\n    notMerge = notMerge.notMerge;\\n  }\\n\\n  this[IN_MAIN_PROCESS] = true;\\n\\n  if (!this._model || notMerge) {\\n    var optionManager = new OptionManager(this._api);\\n    var theme = this._theme;\\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\\n    ecModel.scheduler = this._scheduler;\\n    ecModel.init(null, null, theme, optionManager);\\n  }\\n\\n  this._model.setOption(option, optionPreprocessorFuncs);\\n\\n  if (lazyUpdate) {\\n    this[OPTION_UPDATED] = {\\n      silent: silent\\n    };\\n    this[IN_MAIN_PROCESS] = false;\\n  } else {\\n    prepare(this);\\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\\n    // fetched after `setOption`.\\n\\n    this._zr.flush();\\n\\n    this[OPTION_UPDATED] = false;\\n    this[IN_MAIN_PROCESS] = false;\\n    flushPendingActions.call(this, silent);\\n    triggerUpdatedEvent.call(this, silent);\\n  }\\n};\\n/**\\n * @DEPRECATED\\n */\\n\\n\\nechartsProto.setTheme = function () {\\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\\n};\\n/**\\n * @return {module:echarts/model/Global}\\n */\\n\\n\\nechartsProto.getModel = function () {\\n  return this._model;\\n};\\n/**\\n * @return {Object}\\n */\\n\\n\\nechartsProto.getOption = function () {\\n  return this._model && this._model.getOption();\\n};\\n/**\\n * @return {number}\\n */\\n\\n\\nechartsProto.getWidth = function () {\\n  return this._zr.getWidth();\\n};\\n/**\\n * @return {number}\\n */\\n\\n\\nechartsProto.getHeight = function () {\\n  return this._zr.getHeight();\\n};\\n/**\\n * @return {number}\\n */\\n\\n\\nechartsProto.getDevicePixelRatio = function () {\\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\\n};\\n/**\\n * Get canvas which has all thing rendered\\n * @param {Object} opts\\n * @param {string} [opts.backgroundColor]\\n * @return {string}\\n */\\n\\n\\nechartsProto.getRenderedCanvas = function (opts) {\\n  if (!env.canvasSupported) {\\n    return;\\n  }\\n\\n  opts = opts || {};\\n  opts.pixelRatio = opts.pixelRatio || 1;\\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\\n  // Stop animations\\n  // Never works before in init animation, so remove it.\\n  // zrUtil.each(list, function (el) {\\n  //     el.stopAnimation(true);\\n  // });\\n\\n  return zr.painter.getRenderedCanvas(opts);\\n};\\n/**\\n * Get svg data url\\n * @return {string}\\n */\\n\\n\\nechartsProto.getSvgDataUrl = function () {\\n  if (!env.svgSupported) {\\n    return;\\n  }\\n\\n  var zr = this._zr;\\n  var list = zr.storage.getDisplayList(); // Stop animations\\n\\n  zrUtil.each(list, function (el) {\\n    el.stopAnimation(true);\\n  });\\n  return zr.painter.pathToDataUrl();\\n};\\n/**\\n * @return {string}\\n * @param {Object} opts\\n * @param {string} [opts.type='png']\\n * @param {string} [opts.pixelRatio=1]\\n * @param {string} [opts.backgroundColor]\\n * @param {string} [opts.excludeComponents]\\n */\\n\\n\\nechartsProto.getDataURL = function (opts) {\\n  opts = opts || {};\\n  var excludeComponents = opts.excludeComponents;\\n  var ecModel = this._model;\\n  var excludesComponentViews = [];\\n  var self = this;\\n  each(excludeComponents, function (componentType) {\\n    ecModel.eachComponent({\\n      mainType: componentType\\n    }, function (component) {\\n      var view = self._componentsMap[component.__viewId];\\n\\n      if (!view.group.ignore) {\\n        excludesComponentViews.push(view);\\n        view.group.ignore = true;\\n      }\\n    });\\n  });\\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\\n  each(excludesComponentViews, function (view) {\\n    view.group.ignore = false;\\n  });\\n  return url;\\n};\\n/**\\n * @return {string}\\n * @param {Object} opts\\n * @param {string} [opts.type='png']\\n * @param {string} [opts.pixelRatio=1]\\n * @param {string} [opts.backgroundColor]\\n */\\n\\n\\nechartsProto.getConnectedDataURL = function (opts) {\\n  if (!env.canvasSupported) {\\n    return;\\n  }\\n\\n  var groupId = this.group;\\n  var mathMin = Math.min;\\n  var mathMax = Math.max;\\n  var MAX_NUMBER = Infinity;\\n\\n  if (connectedGroups[groupId]) {\\n    var left = MAX_NUMBER;\\n    var top = MAX_NUMBER;\\n    var right = -MAX_NUMBER;\\n    var bottom = -MAX_NUMBER;\\n    var canvasList = [];\\n    var dpr = opts && opts.pixelRatio || 1;\\n    zrUtil.each(instances, function (chart, id) {\\n      if (chart.group === groupId) {\\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\\n        var boundingRect = chart.getDom().getBoundingClientRect();\\n        left = mathMin(boundingRect.left, left);\\n        top = mathMin(boundingRect.top, top);\\n        right = mathMax(boundingRect.right, right);\\n        bottom = mathMax(boundingRect.bottom, bottom);\\n        canvasList.push({\\n          dom: canvas,\\n          left: boundingRect.left,\\n          top: boundingRect.top\\n        });\\n      }\\n    });\\n    left *= dpr;\\n    top *= dpr;\\n    right *= dpr;\\n    bottom *= dpr;\\n    var width = right - left;\\n    var height = bottom - top;\\n    var targetCanvas = zrUtil.createCanvas();\\n    targetCanvas.width = width;\\n    targetCanvas.height = height;\\n    var zr = zrender.init(targetCanvas);\\n    each(canvasList, function (item) {\\n      var img = new graphic.Image({\\n        style: {\\n          x: item.left * dpr - left,\\n          y: item.top * dpr - top,\\n          image: item.dom\\n        }\\n      });\\n      zr.add(img);\\n    });\\n    zr.refreshImmediately();\\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\\n  } else {\\n    return this.getDataURL(opts);\\n  }\\n};\\n/**\\n * Convert from logical coordinate system to pixel coordinate system.\\n * See CoordinateSystem#convertToPixel.\\n * @param {string|Object} finder\\n *        If string, e.g., 'geo', means {geoIndex: 0}.\\n *        If Object, could contain some of these properties below:\\n *        {\\n *            seriesIndex / seriesId / seriesName,\\n *            geoIndex / geoId, geoName,\\n *            bmapIndex / bmapId / bmapName,\\n *            xAxisIndex / xAxisId / xAxisName,\\n *            yAxisIndex / yAxisId / yAxisName,\\n *            gridIndex / gridId / gridName,\\n *            ... (can be extended)\\n *        }\\n * @param {Array|number} value\\n * @return {Array|number} result\\n */\\n\\n\\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\\n/**\\n * Convert from pixel coordinate system to logical coordinate system.\\n * See CoordinateSystem#convertFromPixel.\\n * @param {string|Object} finder\\n *        If string, e.g., 'geo', means {geoIndex: 0}.\\n *        If Object, could contain some of these properties below:\\n *        {\\n *            seriesIndex / seriesId / seriesName,\\n *            geoIndex / geoId / geoName,\\n *            bmapIndex / bmapId / bmapName,\\n *            xAxisIndex / xAxisId / xAxisName,\\n *            yAxisIndex / yAxisId / yAxisName\\n *            gridIndex / gridId / gridName,\\n *            ... (can be extended)\\n *        }\\n * @param {Array|number} value\\n * @return {Array|number} result\\n */\\n\\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\\n\\nfunction doConvertPixel(methodName, finder, value) {\\n  var ecModel = this._model;\\n\\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\\n\\n  var result;\\n  finder = modelUtil.parseFinder(ecModel, finder);\\n\\n  for (var i = 0; i < coordSysList.length; i++) {\\n    var coordSys = coordSysList[i];\\n\\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\\n      return result;\\n    }\\n  }\\n}\\n/**\\n * Is the specified coordinate systems or components contain the given pixel point.\\n * @param {string|Object} finder\\n *        If string, e.g., 'geo', means {geoIndex: 0}.\\n *        If Object, could contain some of these properties below:\\n *        {\\n *            seriesIndex / seriesId / seriesName,\\n *            geoIndex / geoId / geoName,\\n *            bmapIndex / bmapId / bmapName,\\n *            xAxisIndex / xAxisId / xAxisName,\\n *            yAxisIndex / yAxisId / yAxisName,\\n *            gridIndex / gridId / gridName,\\n *            ... (can be extended)\\n *        }\\n * @param {Array|number} value\\n * @return {boolean} result\\n */\\n\\n\\nechartsProto.containPixel = function (finder, value) {\\n  var ecModel = this._model;\\n  var result;\\n  finder = modelUtil.parseFinder(ecModel, finder);\\n  zrUtil.each(finder, function (models, key) {\\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\\n      var coordSys = model.coordinateSystem;\\n\\n      if (coordSys && coordSys.containPoint) {\\n        result |= !!coordSys.containPoint(value);\\n      } else if (key === 'seriesModels') {\\n        var view = this._chartsMap[model.__viewId];\\n\\n        if (view && view.containPoint) {\\n          result |= view.containPoint(value, model);\\n        } else {}\\n      } else {}\\n    }, this);\\n  }, this);\\n  return !!result;\\n};\\n/**\\n * Get visual from series or data.\\n * @param {string|Object} finder\\n *        If string, e.g., 'series', means {seriesIndex: 0}.\\n *        If Object, could contain some of these properties below:\\n *        {\\n *            seriesIndex / seriesId / seriesName,\\n *            dataIndex / dataIndexInside\\n *        }\\n *        If dataIndex is not specified, series visual will be fetched,\\n *        but not data item visual.\\n *        If all of seriesIndex, seriesId, seriesName are not specified,\\n *        visual will be fetched from first series.\\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\\n */\\n\\n\\nechartsProto.getVisual = function (finder, visualType) {\\n  var ecModel = this._model;\\n  finder = modelUtil.parseFinder(ecModel, finder, {\\n    defaultMainType: 'series'\\n  });\\n  var seriesModel = finder.seriesModel;\\n  var data = seriesModel.getData();\\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\\n};\\n/**\\n * Get view of corresponding component model\\n * @param  {module:echarts/model/Component} componentModel\\n * @return {module:echarts/view/Component}\\n */\\n\\n\\nechartsProto.getViewOfComponentModel = function (componentModel) {\\n  return this._componentsMap[componentModel.__viewId];\\n};\\n/**\\n * Get view of corresponding series model\\n * @param  {module:echarts/model/Series} seriesModel\\n * @return {module:echarts/view/Chart}\\n */\\n\\n\\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\\n  return this._chartsMap[seriesModel.__viewId];\\n};\\n\\nvar updateMethods = {\\n  prepareAndUpdate: function (payload) {\\n    prepare(this);\\n    updateMethods.update.call(this, payload);\\n  },\\n\\n  /**\\n   * @param {Object} payload\\n   * @private\\n   */\\n  update: function (payload) {\\n    // console.profile && console.profile('update');\\n    var ecModel = this._model;\\n    var api = this._api;\\n    var zr = this._zr;\\n    var coordSysMgr = this._coordSysMgr;\\n    var scheduler = this._scheduler; // update before setOption\\n\\n    if (!ecModel) {\\n      return;\\n    }\\n\\n    scheduler.restoreData(ecModel, payload);\\n    scheduler.performSeriesTasks(ecModel); // TODO\\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\\n    // Create new coordinate system each update\\n    // In LineView may save the old coordinate system and use it to get the orignal point\\n\\n    coordSysMgr.create(ecModel, api);\\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\\n    // stream modes after data processing, where the filtered data is used to\\n    // deteming whether use progressive rendering.\\n\\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\\n    // the drawback is the full coord info can not be fetched. Fortunately this full\\n    // coord is not requied in stream mode updater currently.\\n\\n    coordSysMgr.update(ecModel, api);\\n    clearColorPalette(ecModel);\\n    scheduler.performVisualTasks(ecModel, payload);\\n    render(this, ecModel, api, payload); // Set background\\n\\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\\n\\n    if (!env.canvasSupported) {\\n      var colorArr = colorTool.parse(backgroundColor);\\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\\n\\n      if (colorArr[3] === 0) {\\n        backgroundColor = 'transparent';\\n      }\\n    } else {\\n      zr.setBackgroundColor(backgroundColor);\\n    }\\n\\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\\n  },\\n\\n  /**\\n   * @param {Object} payload\\n   * @private\\n   */\\n  updateTransform: function (payload) {\\n    var ecModel = this._model;\\n    var ecIns = this;\\n    var api = this._api; // update before setOption\\n\\n    if (!ecModel) {\\n      return;\\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\\n\\n\\n    var componentDirtyList = [];\\n    ecModel.eachComponent(function (componentType, componentModel) {\\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\\n\\n      if (componentView && componentView.__alive) {\\n        if (componentView.updateTransform) {\\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\\n          result && result.update && componentDirtyList.push(componentView);\\n        } else {\\n          componentDirtyList.push(componentView);\\n        }\\n      }\\n    });\\n    var seriesDirtyMap = zrUtil.createHashMap();\\n    ecModel.eachSeries(function (seriesModel) {\\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\\n\\n      if (chartView.updateTransform) {\\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\\n      } else {\\n        seriesDirtyMap.set(seriesModel.uid, 1);\\n      }\\n    });\\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\\n\\n    this._scheduler.performVisualTasks(ecModel, payload, {\\n      setDirty: true,\\n      dirtyMap: seriesDirtyMap\\n    }); // Currently, not call render of components. Geo render cost a lot.\\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\\n\\n\\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\\n    performPostUpdateFuncs(ecModel, this._api);\\n  },\\n\\n  /**\\n   * @param {Object} payload\\n   * @private\\n   */\\n  updateView: function (payload) {\\n    var ecModel = this._model; // update before setOption\\n\\n    if (!ecModel) {\\n      return;\\n    }\\n\\n    ChartView.markUpdateMethod(payload, 'updateView');\\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\\n\\n    this._scheduler.performVisualTasks(ecModel, payload, {\\n      setDirty: true\\n    });\\n\\n    render(this, this._model, this._api, payload);\\n    performPostUpdateFuncs(ecModel, this._api);\\n  },\\n\\n  /**\\n   * @param {Object} payload\\n   * @private\\n   */\\n  updateVisual: function (payload) {\\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\\n    // // update before setOption\\n    // if (!ecModel) {\\n    //     return;\\n    // }\\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\\n    // clearColorPalette(ecModel);\\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\\n    // render(this, this._model, this._api, payload);\\n    // performPostUpdateFuncs(ecModel, this._api);\\n  },\\n\\n  /**\\n   * @param {Object} payload\\n   * @private\\n   */\\n  updateLayout: function (payload) {\\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\\n    // // update before setOption\\n    // if (!ecModel) {\\n    //     return;\\n    // }\\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\\n    // render(this, this._model, this._api, payload);\\n    // performPostUpdateFuncs(ecModel, this._api);\\n  }\\n};\\n\\nfunction prepare(ecIns) {\\n  var ecModel = ecIns._model;\\n  var scheduler = ecIns._scheduler;\\n  scheduler.restorePipelines(ecModel);\\n  scheduler.prepareStageTasks();\\n  prepareView(ecIns, 'component', ecModel, scheduler);\\n  prepareView(ecIns, 'chart', ecModel, scheduler);\\n  scheduler.plan();\\n}\\n/**\\n * @private\\n */\\n\\n\\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\\n  var ecModel = ecIns._model; // broadcast\\n\\n  if (!mainType) {\\n    // FIXME\\n    // Chart will not be update directly here, except set dirty.\\n    // But there is no such scenario now.\\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\\n    return;\\n  }\\n\\n  var query = {};\\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\\n  var condition = {\\n    mainType: mainType,\\n    query: query\\n  };\\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\\n\\n  var excludeSeriesId = payload.excludeSeriesId;\\n\\n  if (excludeSeriesId != null) {\\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\\n  } // If dispatchAction before setOption, do nothing.\\n\\n\\n  ecModel && ecModel.eachComponent(condition, function (model) {\\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\\n    }\\n  }, ecIns);\\n\\n  function callView(view) {\\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\\n  }\\n}\\n/**\\n * Resize the chart\\n * @param {Object} opts\\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\\n * @param {boolean} [opts.silent=false]\\n */\\n\\n\\nechartsProto.resize = function (opts) {\\n  this._zr.resize(opts);\\n\\n  var ecModel = this._model; // Resize loading effect\\n\\n  this._loadingFX && this._loadingFX.resize();\\n\\n  if (!ecModel) {\\n    return;\\n  }\\n\\n  var optionChanged = ecModel.resetOption('media');\\n  var silent = opts && opts.silent;\\n  this[IN_MAIN_PROCESS] = true;\\n  optionChanged && prepare(this);\\n  updateMethods.update.call(this);\\n  this[IN_MAIN_PROCESS] = false;\\n  flushPendingActions.call(this, silent);\\n  triggerUpdatedEvent.call(this, silent);\\n};\\n\\nfunction updateStreamModes(ecIns, ecModel) {\\n  var chartsMap = ecIns._chartsMap;\\n  var scheduler = ecIns._scheduler;\\n  ecModel.eachSeries(function (seriesModel) {\\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\\n  });\\n}\\n/**\\n * Show loading effect\\n * @param  {string} [name='default']\\n * @param  {Object} [cfg]\\n */\\n\\n\\nechartsProto.showLoading = function (name, cfg) {\\n  if (isObject(name)) {\\n    cfg = name;\\n    name = '';\\n  }\\n\\n  name = name || 'default';\\n  this.hideLoading();\\n\\n  if (!loadingEffects[name]) {\\n    return;\\n  }\\n\\n  var el = loadingEffects[name](this._api, cfg);\\n  var zr = this._zr;\\n  this._loadingFX = el;\\n  zr.add(el);\\n};\\n/**\\n * Hide loading effect\\n */\\n\\n\\nechartsProto.hideLoading = function () {\\n  this._loadingFX && this._zr.remove(this._loadingFX);\\n  this._loadingFX = null;\\n};\\n/**\\n * @param {Object} eventObj\\n * @return {Object}\\n */\\n\\n\\nechartsProto.makeActionFromEvent = function (eventObj) {\\n  var payload = zrUtil.extend({}, eventObj);\\n  payload.type = eventActionMap[eventObj.type];\\n  return payload;\\n};\\n/**\\n * @pubilc\\n * @param {Object} payload\\n * @param {string} [payload.type] Action type\\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\\n * @param {boolean} [opt.silent=false] Whether trigger events.\\n * @param {boolean} [opt.flush=undefined]\\n *                  true: Flush immediately, and then pixel in canvas can be fetched\\n *                      immediately. Caution: it might affect performance.\\n *                  false: Not not flush.\\n *                  undefined: Auto decide whether perform flush.\\n */\\n\\n\\nechartsProto.dispatchAction = function (payload, opt) {\\n  if (!isObject(opt)) {\\n    opt = {\\n      silent: !!opt\\n    };\\n  }\\n\\n  if (!actions[payload.type]) {\\n    return;\\n  } // Avoid dispatch action before setOption. Especially in `connect`.\\n\\n\\n  if (!this._model) {\\n    return;\\n  } // May dispatchAction in rendering procedure\\n\\n\\n  if (this[IN_MAIN_PROCESS]) {\\n    this._pendingActions.push(payload);\\n\\n    return;\\n  }\\n\\n  doDispatchAction.call(this, payload, opt.silent);\\n\\n  if (opt.flush) {\\n    this._zr.flush(true);\\n  } else if (opt.flush !== false && env.browser.weChat) {\\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\\n    // hang when sliding page (on touch event), which cause that zr does not\\n    // refresh util user interaction finished, which is not expected.\\n    // But `dispatchAction` may be called too frequently when pan on touch\\n    // screen, which impacts performance if do not throttle them.\\n    this._throttledZrFlush();\\n  }\\n\\n  flushPendingActions.call(this, opt.silent);\\n  triggerUpdatedEvent.call(this, opt.silent);\\n};\\n\\nfunction doDispatchAction(payload, silent) {\\n  var payloadType = payload.type;\\n  var escapeConnect = payload.escapeConnect;\\n  var actionWrap = actions[payloadType];\\n  var actionInfo = actionWrap.actionInfo;\\n  var cptType = (actionInfo.update || 'update').split(':');\\n  var updateMethod = cptType.pop();\\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\\n  this[IN_MAIN_PROCESS] = true;\\n  var payloads = [payload];\\n  var batched = false; // Batch action\\n\\n  if (payload.batch) {\\n    batched = true;\\n    payloads = zrUtil.map(payload.batch, function (item) {\\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\\n      item.batch = null;\\n      return item;\\n    });\\n  }\\n\\n  var eventObjBatch = [];\\n  var eventObj;\\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\\n  each(payloads, function (batchItem) {\\n    // Action can specify the event by return it.\\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\\n\\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\\n\\n    eventObj.type = actionInfo.event || eventObj.type;\\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\\n\\n    if (isHighDown) {\\n      // method, payload, mainType, subType\\n      updateDirectly(this, updateMethod, batchItem, 'series');\\n    } else if (cptType) {\\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\\n    }\\n  }, this);\\n\\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\\n    // Still dirty\\n    if (this[OPTION_UPDATED]) {\\n      // FIXME Pass payload ?\\n      prepare(this);\\n      updateMethods.update.call(this, payload);\\n      this[OPTION_UPDATED] = false;\\n    } else {\\n      updateMethods[updateMethod].call(this, payload);\\n    }\\n  } // Follow the rule of action batch\\n\\n\\n  if (batched) {\\n    eventObj = {\\n      type: actionInfo.event || payloadType,\\n      escapeConnect: escapeConnect,\\n      batch: eventObjBatch\\n    };\\n  } else {\\n    eventObj = eventObjBatch[0];\\n  }\\n\\n  this[IN_MAIN_PROCESS] = false;\\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\\n}\\n\\nfunction flushPendingActions(silent) {\\n  var pendingActions = this._pendingActions;\\n\\n  while (pendingActions.length) {\\n    var payload = pendingActions.shift();\\n    doDispatchAction.call(this, payload, silent);\\n  }\\n}\\n\\nfunction triggerUpdatedEvent(silent) {\\n  !silent && this.trigger('updated');\\n}\\n/**\\n * Event `rendered` is triggered when zr\\n * rendered. It is useful for realtime\\n * snapshot (reflect animation).\\n *\\n * Event `finished` is triggered when:\\n * (1) zrender rendering finished.\\n * (2) initial animation finished.\\n * (3) progressive rendering finished.\\n * (4) no pending action.\\n * (5) no delayed setOption needs to be processed.\\n */\\n\\n\\nfunction bindRenderedEvent(zr, ecIns) {\\n  zr.on('rendered', function () {\\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\\n    // so it should only be triggered when rendering indeed happend\\n    // in zrender. (Consider the case that dipatchAction is keep\\n    // triggering when mouse move).\\n\\n    if ( // Although zr is dirty if initial animation is not finished\\n    // and this checking is called on frame, we also check\\n    // animation finished for robustness.\\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\\n      ecIns.trigger('finished');\\n    }\\n  });\\n}\\n/**\\n * @param {Object} params\\n * @param {number} params.seriesIndex\\n * @param {Array|TypedArray} params.data\\n */\\n\\n\\nechartsProto.appendData = function (params) {\\n  var seriesIndex = params.seriesIndex;\\n  var ecModel = this.getModel();\\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\\n  // system, util some scenario require that. In the expected usage of\\n  // `appendData`, the initial extent of coordinate system should better\\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\\n  // the extent changed while `appendData`, the location of the painted\\n  // graphic elements have to be changed, which make the usage of\\n  // `appendData` meaningless.\\n\\n  this._scheduler.unfinished = true;\\n};\\n/**\\n * Register event\\n * @method\\n */\\n\\n\\nechartsProto.on = createRegisterEventWithLowercaseName('on');\\nechartsProto.off = createRegisterEventWithLowercaseName('off');\\nechartsProto.one = createRegisterEventWithLowercaseName('one');\\n/**\\n * Prepare view instances of charts and components\\n * @param  {module:echarts/model/Global} ecModel\\n * @private\\n */\\n\\nfunction prepareView(ecIns, type, ecModel, scheduler) {\\n  var isComponent = type === 'component';\\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\\n  var zr = ecIns._zr;\\n  var api = ecIns._api;\\n\\n  for (var i = 0; i < viewList.length; i++) {\\n    viewList[i].__alive = false;\\n  }\\n\\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\\n    componentType !== 'series' && doPrepare(model);\\n  }) : ecModel.eachSeries(doPrepare);\\n\\n  function doPrepare(model) {\\n    // Consider: id same and type changed.\\n    var viewId = '_ec_' + model.id + '_' + model.type;\\n    var view = viewMap[viewId];\\n\\n    if (!view) {\\n      var classType = parseClassType(model.type);\\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\\n      view = new Clazz();\\n      view.init(ecModel, api);\\n      viewMap[viewId] = view;\\n      viewList.push(view);\\n      zr.add(view.group);\\n    }\\n\\n    model.__viewId = view.__id = viewId;\\n    view.__alive = true;\\n    view.__model = model;\\n    view.group.__ecComponentInfo = {\\n      mainType: model.mainType,\\n      index: model.componentIndex\\n    };\\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\\n  }\\n\\n  for (var i = 0; i < viewList.length;) {\\n    var view = viewList[i];\\n\\n    if (!view.__alive) {\\n      !isComponent && view.renderTask.dispose();\\n      zr.remove(view.group);\\n      view.dispose(ecModel, api);\\n      viewList.splice(i, 1);\\n      delete viewMap[view.__id];\\n      view.__id = view.group.__ecComponentInfo = null;\\n    } else {\\n      i++;\\n    }\\n  }\\n} // /**\\n//  * Encode visual infomation from data after data processing\\n//  *\\n//  * @param {module:echarts/model/Global} ecModel\\n//  * @param {object} layout\\n//  * @param {boolean} [layoutFilter] `true`: only layout,\\n//  *                                 `false`: only not layout,\\n//  *                                 `null`/`undefined`: all.\\n//  * @param {string} taskBaseTag\\n//  * @private\\n//  */\\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\\n//     each(visualFuncs, function (visual, index) {\\n//         var isLayout = visual.isLayout;\\n//         if (layoutFilter == null\\n//             || (layoutFilter === false && !isLayout)\\n//             || (layoutFilter === true && isLayout)\\n//         ) {\\n//             visual.func(ecModel, api, payload);\\n//         }\\n//     });\\n// }\\n\\n\\nfunction clearColorPalette(ecModel) {\\n  ecModel.clearColorPalette();\\n  ecModel.eachSeries(function (seriesModel) {\\n    seriesModel.clearColorPalette();\\n  });\\n}\\n\\nfunction render(ecIns, ecModel, api, payload) {\\n  renderComponents(ecIns, ecModel, api, payload);\\n  each(ecIns._chartsViews, function (chart) {\\n    chart.__alive = false;\\n  });\\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\\n\\n  each(ecIns._chartsViews, function (chart) {\\n    if (!chart.__alive) {\\n      chart.remove(ecModel, api);\\n    }\\n  });\\n}\\n\\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\\n    var componentModel = componentView.__model;\\n    componentView.render(componentModel, ecModel, api, payload);\\n    updateZ(componentModel, componentView);\\n  });\\n}\\n/**\\n * Render each chart and component\\n * @private\\n */\\n\\n\\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\\n  // Render all charts\\n  var scheduler = ecIns._scheduler;\\n  var unfinished;\\n  ecModel.eachSeries(function (seriesModel) {\\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\\n    chartView.__alive = true;\\n    var renderTask = chartView.renderTask;\\n    scheduler.updatePayload(renderTask, payload);\\n\\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\\n      renderTask.dirty();\\n    }\\n\\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\\n    chartView.group.silent = !!seriesModel.get('silent');\\n    updateZ(seriesModel, chartView);\\n    updateBlend(seriesModel, chartView);\\n  });\\n  scheduler.unfinished |= unfinished; // If use hover layer\\n\\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\\n\\n  aria(ecIns._zr.dom, ecModel);\\n}\\n\\nfunction performPostUpdateFuncs(ecModel, api) {\\n  each(postUpdateFuncs, function (func) {\\n    func(ecModel, api);\\n  });\\n}\\n\\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\\n/**\\n * @private\\n */\\n\\nechartsProto._initEvents = function () {\\n  each(MOUSE_EVENT_NAMES, function (eveName) {\\n    this._zr.on(eveName, function (e) {\\n      var ecModel = this.getModel();\\n      var el = e.target;\\n      var params;\\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\\n\\n      if (isGlobalOut) {\\n        params = {};\\n      } else if (el && el.dataIndex != null) {\\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\\n      } // If element has custom eventData of components\\n      else if (el && el.eventData) {\\n          params = zrUtil.extend({}, el.eventData);\\n        } // Contract: if params prepared in mouse event,\\n      // these properties must be specified:\\n      // {\\n      //    componentType: string (component main type)\\n      //    componentIndex: number\\n      // }\\n      // Otherwise event query can not work.\\n\\n\\n      if (params) {\\n        var componentType = params.componentType;\\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\\n        // markLine/markPoint/markArea, the componentType is\\n        // 'markLine'/'markPoint'/'markArea', but we should better\\n        // enable them to be queried by seriesIndex, since their\\n        // option is set in each series.\\n\\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\\n          componentType = 'series';\\n          componentIndex = params.seriesIndex;\\n        }\\n\\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\\n        params.event = e;\\n        params.type = eveName;\\n        this._ecEventProcessor.eventInfo = {\\n          targetEl: el,\\n          packedEvent: params,\\n          model: model,\\n          view: view\\n        };\\n        this.trigger(eveName, params);\\n      }\\n    }, this);\\n  }, this);\\n  each(eventActionMap, function (actionType, eventType) {\\n    this._messageCenter.on(eventType, function (event) {\\n      this.trigger(eventType, event);\\n    }, this);\\n  }, this);\\n};\\n/**\\n * @return {boolean}\\n */\\n\\n\\nechartsProto.isDisposed = function () {\\n  return this._disposed;\\n};\\n/**\\n * Clear\\n */\\n\\n\\nechartsProto.clear = function () {\\n  this.setOption({\\n    series: []\\n  }, true);\\n};\\n/**\\n * Dispose instance\\n */\\n\\n\\nechartsProto.dispose = function () {\\n  if (this._disposed) {\\n    return;\\n  }\\n\\n  this._disposed = true;\\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\\n  var api = this._api;\\n  var ecModel = this._model;\\n  each(this._componentsViews, function (component) {\\n    component.dispose(ecModel, api);\\n  });\\n  each(this._chartsViews, function (chart) {\\n    chart.dispose(ecModel, api);\\n  }); // Dispose after all views disposed\\n\\n  this._zr.dispose();\\n\\n  delete instances[this.id];\\n};\\n\\nzrUtil.mixin(ECharts, Eventful);\\n\\nfunction updateHoverLayerStatus(zr, ecModel) {\\n  var storage = zr.storage;\\n  var elCount = 0;\\n  storage.traverse(function (el) {\\n    if (!el.isGroup) {\\n      elCount++;\\n    }\\n  });\\n\\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\\n    storage.traverse(function (el) {\\n      if (!el.isGroup) {\\n        // Don't switch back.\\n        el.useHoverLayer = true;\\n      }\\n    });\\n  }\\n}\\n/**\\n * Update chart progressive and blend.\\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\\n */\\n\\n\\nfunction updateBlend(seriesModel, chartView) {\\n  var blendMode = seriesModel.get('blendMode') || null;\\n  chartView.group.traverse(function (el) {\\n    // FIXME marker and other components\\n    if (!el.isGroup) {\\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\\n      if (el.style.blend !== blendMode) {\\n        el.setStyle('blend', blendMode);\\n      }\\n    }\\n\\n    if (el.eachPendingDisplayable) {\\n      el.eachPendingDisplayable(function (displayable) {\\n        displayable.setStyle('blend', blendMode);\\n      });\\n    }\\n  });\\n}\\n/**\\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\\n */\\n\\n\\nfunction updateZ(model, view) {\\n  var z = model.get('z');\\n  var zlevel = model.get('zlevel'); // Set z and zlevel\\n\\n  view.group.traverse(function (el) {\\n    if (el.type !== 'group') {\\n      z != null && (el.z = z);\\n      zlevel != null && (el.zlevel = zlevel);\\n    }\\n  });\\n}\\n\\nfunction createExtensionAPI(ecInstance) {\\n  var coordSysMgr = ecInstance._coordSysMgr;\\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\\n    // Inject methods\\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\\n    getComponentByElement: function (el) {\\n      while (el) {\\n        var modelInfo = el.__ecComponentInfo;\\n\\n        if (modelInfo != null) {\\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\\n        }\\n\\n        el = el.parent;\\n      }\\n    }\\n  });\\n}\\n/**\\n * @class\\n * Usage of query:\\n * `chart.on('click', query, handler);`\\n * The `query` can be:\\n * + The component type query string, only `mainType` or `mainType.subType`,\\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\\n * + The component query object, like:\\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\\n * + The data query object, like:\\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\\n * + The other query object (cmponent customized query), like:\\n *   `{element: 'some'}` (only available in custom series).\\n *\\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\\n * same as there is no such prop in the `query` object.\\n */\\n\\n\\nfunction EventProcessor() {\\n  // These info required: targetEl, packedEvent, model, view\\n  this.eventInfo;\\n}\\n\\nEventProcessor.prototype = {\\n  constructor: EventProcessor,\\n  normalizeQuery: function (query) {\\n    var cptQuery = {};\\n    var dataQuery = {};\\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\\n\\n    if (zrUtil.isString(query)) {\\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\\n\\n      cptQuery.mainType = condCptType.main || null;\\n      cptQuery.subType = condCptType.sub || null;\\n    } // `query` is an object, convert to {mainType, index, name, id}.\\n    else {\\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\\n        // can not be used in `compomentModel.filterForExposedEvent`.\\n        var suffixes = ['Index', 'Name', 'Id'];\\n        var dataKeys = {\\n          name: 1,\\n          dataIndex: 1,\\n          dataType: 1\\n        };\\n        zrUtil.each(query, function (val, key) {\\n          var reserved = false;\\n\\n          for (var i = 0; i < suffixes.length; i++) {\\n            var propSuffix = suffixes[i];\\n            var suffixPos = key.lastIndexOf(propSuffix);\\n\\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\\n\\n              if (mainType !== 'data') {\\n                cptQuery.mainType = mainType;\\n                cptQuery[propSuffix.toLowerCase()] = val;\\n                reserved = true;\\n              }\\n            }\\n          }\\n\\n          if (dataKeys.hasOwnProperty(key)) {\\n            dataQuery[key] = val;\\n            reserved = true;\\n          }\\n\\n          if (!reserved) {\\n            otherQuery[key] = val;\\n          }\\n        });\\n      }\\n\\n    return {\\n      cptQuery: cptQuery,\\n      dataQuery: dataQuery,\\n      otherQuery: otherQuery\\n    };\\n  },\\n  filter: function (eventType, query, args) {\\n    // They should be assigned before each trigger call.\\n    var eventInfo = this.eventInfo;\\n\\n    if (!eventInfo) {\\n      return true;\\n    }\\n\\n    var targetEl = eventInfo.targetEl;\\n    var packedEvent = eventInfo.packedEvent;\\n    var model = eventInfo.model;\\n    var view = eventInfo.view; // For event like 'globalout'.\\n\\n    if (!model || !view) {\\n      return true;\\n    }\\n\\n    var cptQuery = query.cptQuery;\\n    var dataQuery = query.dataQuery;\\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\\n\\n    function check(query, host, prop, propOnHost) {\\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\\n    }\\n  },\\n  afterTrigger: function () {\\n    // Make sure the eventInfo wont be used in next trigger.\\n    this.eventInfo = null;\\n  }\\n};\\n/**\\n * @type {Object} key: actionType.\\n * @inner\\n */\\n\\nvar actions = {};\\n/**\\n * Map eventType to actionType\\n * @type {Object}\\n */\\n\\nvar eventActionMap = {};\\n/**\\n * Data processor functions of each stage\\n * @type {Array.<Object.<string, Function>>}\\n * @inner\\n */\\n\\nvar dataProcessorFuncs = [];\\n/**\\n * @type {Array.<Function>}\\n * @inner\\n */\\n\\nvar optionPreprocessorFuncs = [];\\n/**\\n * @type {Array.<Function>}\\n * @inner\\n */\\n\\nvar postUpdateFuncs = [];\\n/**\\n * Visual encoding functions of each stage\\n * @type {Array.<Object.<string, Function>>}\\n */\\n\\nvar visualFuncs = [];\\n/**\\n * Theme storage\\n * @type {Object.<key, Object>}\\n */\\n\\nvar themeStorage = {};\\n/**\\n * Loading effects\\n */\\n\\nvar loadingEffects = {};\\nvar instances = {};\\nvar connectedGroups = {};\\nvar idBase = new Date() - 0;\\nvar groupIdBase = new Date() - 0;\\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\\n\\nfunction enableConnect(chart) {\\n  var STATUS_PENDING = 0;\\n  var STATUS_UPDATING = 1;\\n  var STATUS_UPDATED = 2;\\n  var STATUS_KEY = '__connectUpdateStatus';\\n\\n  function updateConnectedChartsStatus(charts, status) {\\n    for (var i = 0; i < charts.length; i++) {\\n      var otherChart = charts[i];\\n      otherChart[STATUS_KEY] = status;\\n    }\\n  }\\n\\n  each(eventActionMap, function (actionType, eventType) {\\n    chart._messageCenter.on(eventType, function (event) {\\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\\n        if (event && event.escapeConnect) {\\n          return;\\n        }\\n\\n        var action = chart.makeActionFromEvent(event);\\n        var otherCharts = [];\\n        each(instances, function (otherChart) {\\n          if (otherChart !== chart && otherChart.group === chart.group) {\\n            otherCharts.push(otherChart);\\n          }\\n        });\\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\\n        each(otherCharts, function (otherChart) {\\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\\n            otherChart.dispatchAction(action);\\n          }\\n        });\\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\\n      }\\n    });\\n  });\\n}\\n/**\\n * @param {HTMLElement} dom\\n * @param {Object} [theme]\\n * @param {Object} opts\\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\\n *                              Can be 'auto' (the same as null/undefined)\\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\\n *                               Can be 'auto' (the same as null/undefined)\\n */\\n\\n\\nfunction init(dom, theme, opts) {\\n  var existInstance = getInstanceByDom(dom);\\n\\n  if (existInstance) {\\n    return existInstance;\\n  }\\n\\n  var chart = new ECharts(dom, theme, opts);\\n  chart.id = 'ec_' + idBase++;\\n  instances[chart.id] = chart;\\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\\n  enableConnect(chart);\\n  return chart;\\n}\\n/**\\n * @return {string|Array.<module:echarts~ECharts>} groupId\\n */\\n\\n\\nfunction connect(groupId) {\\n  // Is array of charts\\n  if (zrUtil.isArray(groupId)) {\\n    var charts = groupId;\\n    groupId = null; // If any chart has group\\n\\n    each(charts, function (chart) {\\n      if (chart.group != null) {\\n        groupId = chart.group;\\n      }\\n    });\\n    groupId = groupId || 'g_' + groupIdBase++;\\n    each(charts, function (chart) {\\n      chart.group = groupId;\\n    });\\n  }\\n\\n  connectedGroups[groupId] = true;\\n  return groupId;\\n}\\n/**\\n * @DEPRECATED\\n * @return {string} groupId\\n */\\n\\n\\nfunction disConnect(groupId) {\\n  connectedGroups[groupId] = false;\\n}\\n/**\\n * @return {string} groupId\\n */\\n\\n\\nvar disconnect = disConnect;\\n/**\\n * Dispose a chart instance\\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\\n */\\n\\nfunction dispose(chart) {\\n  if (typeof chart === 'string') {\\n    chart = instances[chart];\\n  } else if (!(chart instanceof ECharts)) {\\n    // Try to treat as dom\\n    chart = getInstanceByDom(chart);\\n  }\\n\\n  if (chart instanceof ECharts && !chart.isDisposed()) {\\n    chart.dispose();\\n  }\\n}\\n/**\\n * @param  {HTMLElement} dom\\n * @return {echarts~ECharts}\\n */\\n\\n\\nfunction getInstanceByDom(dom) {\\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\\n}\\n/**\\n * @param {string} key\\n * @return {echarts~ECharts}\\n */\\n\\n\\nfunction getInstanceById(key) {\\n  return instances[key];\\n}\\n/**\\n * Register theme\\n */\\n\\n\\nfunction registerTheme(name, theme) {\\n  themeStorage[name] = theme;\\n}\\n/**\\n * Register option preprocessor\\n * @param {Function} preprocessorFunc\\n */\\n\\n\\nfunction registerPreprocessor(preprocessorFunc) {\\n  optionPreprocessorFuncs.push(preprocessorFunc);\\n}\\n/**\\n * @param {number} [priority=1000]\\n * @param {Object|Function} processor\\n */\\n\\n\\nfunction registerProcessor(priority, processor) {\\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\\n}\\n/**\\n * Register postUpdater\\n * @param {Function} postUpdateFunc\\n */\\n\\n\\nfunction registerPostUpdate(postUpdateFunc) {\\n  postUpdateFuncs.push(postUpdateFunc);\\n}\\n/**\\n * Usage:\\n * registerAction('someAction', 'someEvent', function () { ... });\\n * registerAction('someAction', function () { ... });\\n * registerAction(\\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\\n *     function () { ... }\\n * );\\n *\\n * @param {(string|Object)} actionInfo\\n * @param {string} actionInfo.type\\n * @param {string} [actionInfo.event]\\n * @param {string} [actionInfo.update]\\n * @param {string} [eventName]\\n * @param {Function} action\\n */\\n\\n\\nfunction registerAction(actionInfo, eventName, action) {\\n  if (typeof eventName === 'function') {\\n    action = eventName;\\n    eventName = '';\\n  }\\n\\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\\n    event: eventName\\n  }][0]; // Event name is all lowercase\\n\\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\\n  eventName = actionInfo.event; // Validate action type and event name.\\n\\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\\n\\n  if (!actions[actionType]) {\\n    actions[actionType] = {\\n      action: action,\\n      actionInfo: actionInfo\\n    };\\n  }\\n\\n  eventActionMap[eventName] = actionType;\\n}\\n/**\\n * @param {string} type\\n * @param {*} CoordinateSystem\\n */\\n\\n\\nfunction registerCoordinateSystem(type, CoordinateSystem) {\\n  CoordinateSystemManager.register(type, CoordinateSystem);\\n}\\n/**\\n * Get dimensions of specified coordinate system.\\n * @param {string} type\\n * @return {Array.<string|Object>}\\n */\\n\\n\\nfunction getCoordinateSystemDimensions(type) {\\n  var coordSysCreator = CoordinateSystemManager.get(type);\\n\\n  if (coordSysCreator) {\\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\\n  }\\n}\\n/**\\n * Layout is a special stage of visual encoding\\n * Most visual encoding like color are common for different chart\\n * But each chart has it's own layout algorithm\\n *\\n * @param {number} [priority=1000]\\n * @param {Function} layoutTask\\n */\\n\\n\\nfunction registerLayout(priority, layoutTask) {\\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\\n}\\n/**\\n * @param {number} [priority=3000]\\n * @param {module:echarts/stream/Task} visualTask\\n */\\n\\n\\nfunction registerVisual(priority, visualTask) {\\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\\n}\\n/**\\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\\n */\\n\\n\\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\\n  if (isFunction(priority) || isObject(priority)) {\\n    fn = priority;\\n    priority = defaultPriority;\\n  }\\n\\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\\n  stageHandler.__prio = priority;\\n  stageHandler.__raw = fn;\\n  targetList.push(stageHandler);\\n  return stageHandler;\\n}\\n/**\\n * @param {string} name\\n */\\n\\n\\nfunction registerLoading(name, loadingFx) {\\n  loadingEffects[name] = loadingFx;\\n}\\n/**\\n * @param {Object} opts\\n * @param {string} [superClass]\\n */\\n\\n\\nfunction extendComponentModel(opts\\n/*, superClass*/\\n) {\\n  // var Clazz = ComponentModel;\\n  // if (superClass) {\\n  //     var classType = parseClassType(superClass);\\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\\n  // }\\n  return ComponentModel.extend(opts);\\n}\\n/**\\n * @param {Object} opts\\n * @param {string} [superClass]\\n */\\n\\n\\nfunction extendComponentView(opts\\n/*, superClass*/\\n) {\\n  // var Clazz = ComponentView;\\n  // if (superClass) {\\n  //     var classType = parseClassType(superClass);\\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\\n  // }\\n  return ComponentView.extend(opts);\\n}\\n/**\\n * @param {Object} opts\\n * @param {string} [superClass]\\n */\\n\\n\\nfunction extendSeriesModel(opts\\n/*, superClass*/\\n) {\\n  // var Clazz = SeriesModel;\\n  // if (superClass) {\\n  //     superClass = 'series.' + superClass.replace('series.', '');\\n  //     var classType = parseClassType(superClass);\\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\\n  // }\\n  return SeriesModel.extend(opts);\\n}\\n/**\\n * @param {Object} opts\\n * @param {string} [superClass]\\n */\\n\\n\\nfunction extendChartView(opts\\n/*, superClass*/\\n) {\\n  // var Clazz = ChartView;\\n  // if (superClass) {\\n  //     superClass = superClass.replace('series.', '');\\n  //     var classType = parseClassType(superClass);\\n  //     Clazz = ChartView.getClass(classType.main, true);\\n  // }\\n  return ChartView.extend(opts);\\n}\\n/**\\n * ZRender need a canvas context to do measureText.\\n * But in node environment canvas may be created by node-canvas.\\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\\n *\\n * Be careful of using it in the browser.\\n *\\n * @param {Function} creator\\n * @example\\n *     var Canvas = require('canvas');\\n *     var echarts = require('echarts');\\n *     echarts.setCanvasCreator(function () {\\n *         // Small size is enough.\\n *         return new Canvas(32, 32);\\n *     });\\n */\\n\\n\\nfunction setCanvasCreator(creator) {\\n  zrUtil.$override('createCanvas', creator);\\n}\\n/**\\n * @param {string} mapName\\n * @param {Array.<Object>|Object|string} geoJson\\n * @param {Object} [specialAreas]\\n *\\n * @example GeoJSON\\n *     $.get('USA.json', function (geoJson) {\\n *         echarts.registerMap('USA', geoJson);\\n *         // Or\\n *         echarts.registerMap('USA', {\\n *             geoJson: geoJson,\\n *             specialAreas: {}\\n *         })\\n *     });\\n *\\n *     $.get('airport.svg', function (svg) {\\n *         echarts.registerMap('airport', {\\n *             svg: svg\\n *         }\\n *     });\\n *\\n *     echarts.registerMap('eu', [\\n *         {svg: eu-topographic.svg},\\n *         {geoJSON: eu.json}\\n *     ])\\n */\\n\\n\\nfunction registerMap(mapName, geoJson, specialAreas) {\\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\\n}\\n/**\\n * @param {string} mapName\\n * @return {Object}\\n */\\n\\n\\nfunction getMap(mapName) {\\n  // For backward compatibility, only return the first one.\\n  var records = mapDataStorage.retrieveMap(mapName);\\n  return records && records[0] && {\\n    geoJson: records[0].geoJSON,\\n    specialAreas: records[0].specialAreas\\n  };\\n}\\n\\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\\nregisterPreprocessor(backwardCompat);\\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\\nregisterLoading('default', loadingDefault); // Default actions\\n\\nregisterAction({\\n  type: 'highlight',\\n  event: 'highlight',\\n  update: 'highlight'\\n}, zrUtil.noop);\\nregisterAction({\\n  type: 'downplay',\\n  event: 'downplay',\\n  update: 'downplay'\\n}, zrUtil.noop); // Default theme\\n\\nregisterTheme('light', lightTheme);\\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\\n// be mounted on `echarts` is the extension `dataTool` is imported.\\n\\nvar dataTool = {};\\nexports.version = version;\\nexports.dependencies = dependencies;\\nexports.PRIORITY = PRIORITY;\\nexports.init = init;\\nexports.connect = connect;\\nexports.disConnect = disConnect;\\nexports.disconnect = disconnect;\\nexports.dispose = dispose;\\nexports.getInstanceByDom = getInstanceByDom;\\nexports.getInstanceById = getInstanceById;\\nexports.registerTheme = registerTheme;\\nexports.registerPreprocessor = registerPreprocessor;\\nexports.registerProcessor = registerProcessor;\\nexports.registerPostUpdate = registerPostUpdate;\\nexports.registerAction = registerAction;\\nexports.registerCoordinateSystem = registerCoordinateSystem;\\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\\nexports.registerLayout = registerLayout;\\nexports.registerVisual = registerVisual;\\nexports.registerLoading = registerLoading;\\nexports.extendComponentModel = extendComponentModel;\\nexports.extendComponentView = extendComponentView;\\nexports.extendSeriesModel = extendSeriesModel;\\nexports.extendChartView = extendChartView;\\nexports.setCanvasCreator = setCanvasCreator;\\nexports.registerMap = registerMap;\\nexports.getMap = getMap;\\nexports.dataTool = dataTool;\\nvar ___ec_export = __webpack_require__(242);\\n(function () {\\n    for (var key in ___ec_export) {\\n        if (___ec_export.hasOwnProperty(key)) {\\n            exports[key] = ___ec_export[key];\\n        }\\n    }\\n})();//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///68\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar textContain = __webpack_require__(76);\\n\\nvar numberUtil = __webpack_require__(65);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// import Text from 'zrender/src/graphic/Text';\\n\\n/**\\n * 每三位默认加,格式化\\n * @param {string|number} x\\n * @return {string}\\n */\\nfunction addCommas(x) {\\n  if (isNaN(x)) {\\n    return '-';\\n  }\\n\\n  x = (x + '').split('.');\\n  return x[0].replace(/(\\\\d{1,3})(?=(?:\\\\d{3})+(?!\\\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\\n}\\n/**\\n * @param {string} str\\n * @param {boolean} [upperCaseFirst=false]\\n * @return {string} str\\n */\\n\\n\\nfunction toCamelCase(str, upperCaseFirst) {\\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\\n    return group1.toUpperCase();\\n  });\\n\\n  if (upperCaseFirst && str) {\\n    str = str.charAt(0).toUpperCase() + str.slice(1);\\n  }\\n\\n  return str;\\n}\\n\\nvar normalizeCssArray = zrUtil.normalizeCssArray;\\nvar replaceReg = /([&<>\\\"'])/g;\\nvar replaceMap = {\\n  '&': '&amp;',\\n  '<': '&lt;',\\n  '>': '&gt;',\\n  '\\\"': '&quot;',\\n  '\\\\'': '&#39;'\\n};\\n\\nfunction encodeHTML(source) {\\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\\n    return replaceMap[c];\\n  });\\n}\\n\\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\\n\\nvar wrapVar = function (varName, seriesIdx) {\\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\\n};\\n/**\\n * Template formatter\\n * @param {string} tpl\\n * @param {Array.<Object>|Object} paramsList\\n * @param {boolean} [encode=false]\\n * @return {string}\\n */\\n\\n\\nfunction formatTpl(tpl, paramsList, encode) {\\n  if (!zrUtil.isArray(paramsList)) {\\n    paramsList = [paramsList];\\n  }\\n\\n  var seriesLen = paramsList.length;\\n\\n  if (!seriesLen) {\\n    return '';\\n  }\\n\\n  var $vars = paramsList[0].$vars || [];\\n\\n  for (var i = 0; i < $vars.length; i++) {\\n    var alias = TPL_VAR_ALIAS[i];\\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\\n  }\\n\\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\\n    for (var k = 0; k < $vars.length; k++) {\\n      var val = paramsList[seriesIdx][$vars[k]];\\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\\n    }\\n  }\\n\\n  return tpl;\\n}\\n/**\\n * simple Template formatter\\n *\\n * @param {string} tpl\\n * @param {Object} param\\n * @param {boolean} [encode=false]\\n * @return {string}\\n */\\n\\n\\nfunction formatTplSimple(tpl, param, encode) {\\n  zrUtil.each(param, function (value, key) {\\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\\n  });\\n  return tpl;\\n}\\n/**\\n * @param {Object|string} [opt] If string, means color.\\n * @param {string} [opt.color]\\n * @param {string} [opt.extraCssText]\\n * @param {string} [opt.type='item'] 'item' or 'subItem'\\n * @param {string} [opt.renderMode='html'] render mode of tooltip, 'html' or 'richText'\\n * @param {string} [opt.markerId='X'] id name for marker. If only one marker is in a rich text, this can be omitted.\\n * @return {string}\\n */\\n\\n\\nfunction getTooltipMarker(opt, extraCssText) {\\n  opt = zrUtil.isString(opt) ? {\\n    color: opt,\\n    extraCssText: extraCssText\\n  } : opt || {};\\n  var color = opt.color;\\n  var type = opt.type;\\n  var extraCssText = opt.extraCssText;\\n  var renderMode = opt.renderMode || 'html';\\n  var markerId = opt.markerId || 'X';\\n\\n  if (!color) {\\n    return '';\\n  }\\n\\n  if (renderMode === 'html') {\\n    return type === 'subItem' ? '<span style=\\\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\\\"></span>' : '<span style=\\\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\\\"></span>';\\n  } else {\\n    // Space for rich element marker\\n    return {\\n      renderMode: renderMode,\\n      content: '{marker' + markerId + '|}  ',\\n      style: {\\n        color: color\\n      }\\n    };\\n  }\\n}\\n\\nfunction pad(str, len) {\\n  str += '';\\n  return '0000'.substr(0, len - str.length) + str;\\n}\\n/**\\n * ISO Date format\\n * @param {string} tpl\\n * @param {number} value\\n * @param {boolean} [isUTC=false] Default in local time.\\n *           see `module:echarts/scale/Time`\\n *           and `module:echarts/util/number#parseDate`.\\n * @inner\\n */\\n\\n\\nfunction formatTime(tpl, value, isUTC) {\\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\\n    tpl = 'MM-dd\\\\nyyyy';\\n  }\\n\\n  var date = numberUtil.parseDate(value);\\n  var utc = isUTC ? 'UTC' : '';\\n  var y = date['get' + utc + 'FullYear']();\\n  var M = date['get' + utc + 'Month']() + 1;\\n  var d = date['get' + utc + 'Date']();\\n  var h = date['get' + utc + 'Hours']();\\n  var m = date['get' + utc + 'Minutes']();\\n  var s = date['get' + utc + 'Seconds']();\\n  var S = date['get' + utc + 'Milliseconds']();\\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\\n  return tpl;\\n}\\n/**\\n * Capital first\\n * @param {string} str\\n * @return {string}\\n */\\n\\n\\nfunction capitalFirst(str) {\\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\\n}\\n\\nvar truncateText = textContain.truncateText;\\nvar getTextRect = textContain.getBoundingRect;\\nexports.addCommas = addCommas;\\nexports.toCamelCase = toCamelCase;\\nexports.normalizeCssArray = normalizeCssArray;\\nexports.encodeHTML = encodeHTML;\\nexports.formatTpl = formatTpl;\\nexports.formatTplSimple = formatTplSimple;\\nexports.getTooltipMarker = getTooltipMarker;\\nexports.formatTime = formatTime;\\nexports.capitalFirst = capitalFirst;\\nexports.truncateText = truncateText;\\nexports.getTextRect = getTextRect;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///69\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar env = __webpack_require__(66);\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\n\\nvar _clazz = __webpack_require__(71);\\n\\nvar enableClassExtend = _clazz.enableClassExtend;\\nvar enableClassCheck = _clazz.enableClassCheck;\\n\\nvar lineStyleMixin = __webpack_require__(205);\\n\\nvar areaStyleMixin = __webpack_require__(206);\\n\\nvar textStyleMixin = __webpack_require__(207);\\n\\nvar itemStyleMixin = __webpack_require__(223);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @module echarts/model/Model\\n */\\nvar mixin = zrUtil.mixin;\\nvar inner = makeInner();\\n/**\\n * @alias module:echarts/model/Model\\n * @constructor\\n * @param {Object} option\\n * @param {module:echarts/model/Model} [parentModel]\\n * @param {module:echarts/model/Global} [ecModel]\\n */\\n\\nfunction Model(option, parentModel, ecModel) {\\n  /**\\n   * @type {module:echarts/model/Model}\\n   * @readOnly\\n   */\\n  this.parentModel = parentModel;\\n  /**\\n   * @type {module:echarts/model/Global}\\n   * @readOnly\\n   */\\n\\n  this.ecModel = ecModel;\\n  /**\\n   * @type {Object}\\n   * @protected\\n   */\\n\\n  this.option = option; // Simple optimization\\n  // if (this.init) {\\n  //     if (arguments.length <= 4) {\\n  //         this.init(option, parentModel, ecModel, extraOpt);\\n  //     }\\n  //     else {\\n  //         this.init.apply(this, arguments);\\n  //     }\\n  // }\\n}\\n\\nModel.prototype = {\\n  constructor: Model,\\n\\n  /**\\n   * Model 的初始化函数\\n   * @param {Object} option\\n   */\\n  init: null,\\n\\n  /**\\n   * 从新的 Option merge\\n   */\\n  mergeOption: function (option) {\\n    zrUtil.merge(this.option, option, true);\\n  },\\n\\n  /**\\n   * @param {string|Array.<string>} path\\n   * @param {boolean} [ignoreParent=false]\\n   * @return {*}\\n   */\\n  get: function (path, ignoreParent) {\\n    if (path == null) {\\n      return this.option;\\n    }\\n\\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\\n  },\\n\\n  /**\\n   * @param {string} key\\n   * @param {boolean} [ignoreParent=false]\\n   * @return {*}\\n   */\\n  getShallow: function (key, ignoreParent) {\\n    var option = this.option;\\n    var val = option == null ? option : option[key];\\n    var parentModel = !ignoreParent && getParent(this, key);\\n\\n    if (val == null && parentModel) {\\n      val = parentModel.getShallow(key);\\n    }\\n\\n    return val;\\n  },\\n\\n  /**\\n   * @param {string|Array.<string>} [path]\\n   * @param {module:echarts/model/Model} [parentModel]\\n   * @return {module:echarts/model/Model}\\n   */\\n  getModel: function (path, parentModel) {\\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\\n    var thisParentModel;\\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\\n    return new Model(obj, parentModel, this.ecModel);\\n  },\\n\\n  /**\\n   * If model has option\\n   */\\n  isEmpty: function () {\\n    return this.option == null;\\n  },\\n  restoreData: function () {},\\n  // Pending\\n  clone: function () {\\n    var Ctor = this.constructor;\\n    return new Ctor(zrUtil.clone(this.option));\\n  },\\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\\n  },\\n  // If path is null/undefined, return null/undefined.\\n  parsePath: function (path) {\\n    if (typeof path === \\'string\\') {\\n      path = path.split(\\'.\\');\\n    }\\n\\n    return path;\\n  },\\n\\n  /**\\n   * @param {Function} getParentMethod\\n   *        param {Array.<string>|string} path\\n   *        return {module:echarts/model/Model}\\n   */\\n  customizeGetParent: function (getParentMethod) {\\n    inner(this).getParent = getParentMethod;\\n  },\\n  isAnimationEnabled: function () {\\n    if (!env.node) {\\n      if (this.option.animation != null) {\\n        return !!this.option.animation;\\n      } else if (this.parentModel) {\\n        return this.parentModel.isAnimationEnabled();\\n      }\\n    }\\n  }\\n};\\n\\nfunction doGet(obj, pathArr, parentModel) {\\n  for (var i = 0; i < pathArr.length; i++) {\\n    // Ignore empty\\n    if (!pathArr[i]) {\\n      continue;\\n    } // obj could be number/string/... (like 0)\\n\\n\\n    obj = obj && typeof obj === \\'object\\' ? obj[pathArr[i]] : null;\\n\\n    if (obj == null) {\\n      break;\\n    }\\n  }\\n\\n  if (obj == null && parentModel) {\\n    obj = parentModel.get(pathArr);\\n  }\\n\\n  return obj;\\n} // `path` can be null/undefined\\n\\n\\nfunction getParent(model, path) {\\n  var getParentMethod = inner(model).getParent;\\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\\n} // Enable Model.extend.\\n\\n\\nenableClassExtend(Model);\\nenableClassCheck(Model);\\nmixin(Model, lineStyleMixin);\\nmixin(Model, areaStyleMixin);\\nmixin(Model, textStyleMixin);\\nmixin(Model, itemStyleMixin);\\nvar _default = Model;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///70\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar TYPE_DELIMITER = '.';\\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\\n/**\\n * Notice, parseClassType('') should returns {main: '', sub: ''}\\n * @public\\n */\\n\\nfunction parseClassType(componentType) {\\n  var ret = {\\n    main: '',\\n    sub: ''\\n  };\\n\\n  if (componentType) {\\n    componentType = componentType.split(TYPE_DELIMITER);\\n    ret.main = componentType[0] || '';\\n    ret.sub = componentType[1] || '';\\n  }\\n\\n  return ret;\\n}\\n/**\\n * @public\\n */\\n\\n\\nfunction checkClassType(componentType) {\\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \\\"' + componentType + '\\\" illegal');\\n}\\n/**\\n * @public\\n */\\n\\n\\nfunction enableClassExtend(RootClass, mandatoryMethods) {\\n  RootClass.$constructor = RootClass;\\n\\n  RootClass.extend = function (proto) {\\n    var superClass = this;\\n\\n    var ExtendedClass = function () {\\n      if (!proto.$constructor) {\\n        superClass.apply(this, arguments);\\n      } else {\\n        proto.$constructor.apply(this, arguments);\\n      }\\n    };\\n\\n    zrUtil.extend(ExtendedClass.prototype, proto);\\n    ExtendedClass.extend = this.extend;\\n    ExtendedClass.superCall = superCall;\\n    ExtendedClass.superApply = superApply;\\n    zrUtil.inherits(ExtendedClass, this);\\n    ExtendedClass.superClass = superClass;\\n    return ExtendedClass;\\n  };\\n}\\n\\nvar classBase = 0;\\n/**\\n * Can not use instanceof, consider different scope by\\n * cross domain or es module import in ec extensions.\\n * Mount a method \\\"isInstance()\\\" to Clz.\\n */\\n\\nfunction enableClassCheck(Clz) {\\n  var classAttr = ['__\\\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\\n  Clz.prototype[classAttr] = true;\\n\\n  Clz.isInstance = function (obj) {\\n    return !!(obj && obj[classAttr]);\\n  };\\n} // superCall should have class info, which can not be fetch from 'this'.\\n// Consider this case:\\n// class A has method f,\\n// class B inherits class A, overrides method f, f call superApply('f'),\\n// class C inherits class B, do not overrides method f,\\n// then when method of class C is called, dead loop occured.\\n\\n\\nfunction superCall(context, methodName) {\\n  var args = zrUtil.slice(arguments, 2);\\n  return this.superClass.prototype[methodName].apply(context, args);\\n}\\n\\nfunction superApply(context, methodName, args) {\\n  return this.superClass.prototype[methodName].apply(context, args);\\n}\\n/**\\n * @param {Object} entity\\n * @param {Object} options\\n * @param {boolean} [options.registerWhenExtend]\\n * @public\\n */\\n\\n\\nfunction enableClassManagement(entity, options) {\\n  options = options || {};\\n  /**\\n   * Component model classes\\n   * key: componentType,\\n   * value:\\n   *     componentClass, when componentType is 'xxx'\\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\\n   * @type {Object}\\n   */\\n\\n  var storage = {};\\n\\n  entity.registerClass = function (Clazz, componentType) {\\n    if (componentType) {\\n      checkClassType(componentType);\\n      componentType = parseClassType(componentType);\\n\\n      if (!componentType.sub) {\\n        storage[componentType.main] = Clazz;\\n      } else if (componentType.sub !== IS_CONTAINER) {\\n        var container = makeContainer(componentType);\\n        container[componentType.sub] = Clazz;\\n      }\\n    }\\n\\n    return Clazz;\\n  };\\n\\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\\n    var Clazz = storage[componentMainType];\\n\\n    if (Clazz && Clazz[IS_CONTAINER]) {\\n      Clazz = subType ? Clazz[subType] : null;\\n    }\\n\\n    if (throwWhenNotFound && !Clazz) {\\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\\n    }\\n\\n    return Clazz;\\n  };\\n\\n  entity.getClassesByMainType = function (componentType) {\\n    componentType = parseClassType(componentType);\\n    var result = [];\\n    var obj = storage[componentType.main];\\n\\n    if (obj && obj[IS_CONTAINER]) {\\n      zrUtil.each(obj, function (o, type) {\\n        type !== IS_CONTAINER && result.push(o);\\n      });\\n    } else {\\n      result.push(obj);\\n    }\\n\\n    return result;\\n  };\\n\\n  entity.hasClass = function (componentType) {\\n    // Just consider componentType.main.\\n    componentType = parseClassType(componentType);\\n    return !!storage[componentType.main];\\n  };\\n  /**\\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\\n   */\\n\\n\\n  entity.getAllClassMainTypes = function () {\\n    var types = [];\\n    zrUtil.each(storage, function (obj, type) {\\n      types.push(type);\\n    });\\n    return types;\\n  };\\n  /**\\n   * If a main type is container and has sub types\\n   * @param  {string}  mainType\\n   * @return {boolean}\\n   */\\n\\n\\n  entity.hasSubTypes = function (componentType) {\\n    componentType = parseClassType(componentType);\\n    var obj = storage[componentType.main];\\n    return obj && obj[IS_CONTAINER];\\n  };\\n\\n  entity.parseClassType = parseClassType;\\n\\n  function makeContainer(componentType) {\\n    var container = storage[componentType.main];\\n\\n    if (!container || !container[IS_CONTAINER]) {\\n      container = storage[componentType.main] = {};\\n      container[IS_CONTAINER] = true;\\n    }\\n\\n    return container;\\n  }\\n\\n  if (options.registerWhenExtend) {\\n    var originalExtend = entity.extend;\\n\\n    if (originalExtend) {\\n      entity.extend = function (proto) {\\n        var ExtendedClass = originalExtend.call(this, proto);\\n        return entity.registerClass(ExtendedClass, proto.type);\\n      };\\n    }\\n  }\\n\\n  return entity;\\n}\\n/**\\n * @param {string|Array.<string>} properties\\n */\\n\\n\\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\\n  // if (!zrUtil.isArray(properties)) {\\n  //     properties = properties != null ? [properties] : [];\\n  // }\\n  // zrUtil.each(properties, function (prop) {\\n  //     var value = obj[prop];\\n  //     Object.defineProperty\\n  //         && Object.defineProperty(obj, prop, {\\n  //             value: value, writable: false\\n  //         });\\n  //     zrUtil.isArray(obj[prop])\\n  //         && Object.freeze\\n  //         && Object.freeze(obj[prop]);\\n  // });\\n}\\n\\nexports.parseClassType = parseClassType;\\nexports.enableClassExtend = enableClassExtend;\\nexports.enableClassCheck = enableClassCheck;\\nexports.enableClassManagement = enableClassManagement;\\nexports.setReadOnly = setReadOnly;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvdXRpbC9jbGF6ei5qcz82MjVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBVzs7QUFFakM7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLEVBQXVCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZUFBZTtBQUM3Qjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckIsY0FBYztBQUNkOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDOzs7QUFHQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI3MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgX2NvbmZpZyA9IHJlcXVpcmUoXCIuLi9jb25maWdcIik7XG5cbnZhciBfX0RFVl9fID0gX2NvbmZpZy5fX0RFVl9fO1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIFRZUEVfREVMSU1JVEVSID0gJy4nO1xudmFyIElTX0NPTlRBSU5FUiA9ICdfX19FQ19fQ09NUE9ORU5UX19DT05UQUlORVJfX18nO1xuLyoqXG4gKiBOb3RpY2UsIHBhcnNlQ2xhc3NUeXBlKCcnKSBzaG91bGQgcmV0dXJucyB7bWFpbjogJycsIHN1YjogJyd9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gcGFyc2VDbGFzc1R5cGUoY29tcG9uZW50VHlwZSkge1xuICB2YXIgcmV0ID0ge1xuICAgIG1haW46ICcnLFxuICAgIHN1YjogJydcbiAgfTtcblxuICBpZiAoY29tcG9uZW50VHlwZSkge1xuICAgIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlLnNwbGl0KFRZUEVfREVMSU1JVEVSKTtcbiAgICByZXQubWFpbiA9IGNvbXBvbmVudFR5cGVbMF0gfHwgJyc7XG4gICAgcmV0LnN1YiA9IGNvbXBvbmVudFR5cGVbMV0gfHwgJyc7XG4gIH1cblxuICByZXR1cm4gcmV0O1xufVxuLyoqXG4gKiBAcHVibGljXG4gKi9cblxuXG5mdW5jdGlvbiBjaGVja0NsYXNzVHlwZShjb21wb25lbnRUeXBlKSB7XG4gIHpyVXRpbC5hc3NlcnQoL15bYS16QS1aMC05X10rKFsuXVthLXpBLVowLTlfXSspPyQvLnRlc3QoY29tcG9uZW50VHlwZSksICdjb21wb25lbnRUeXBlIFwiJyArIGNvbXBvbmVudFR5cGUgKyAnXCIgaWxsZWdhbCcpO1xufVxuLyoqXG4gKiBAcHVibGljXG4gKi9cblxuXG5mdW5jdGlvbiBlbmFibGVDbGFzc0V4dGVuZChSb290Q2xhc3MsIG1hbmRhdG9yeU1ldGhvZHMpIHtcbiAgUm9vdENsYXNzLiRjb25zdHJ1Y3RvciA9IFJvb3RDbGFzcztcblxuICBSb290Q2xhc3MuZXh0ZW5kID0gZnVuY3Rpb24gKHByb3RvKSB7XG4gICAgdmFyIHN1cGVyQ2xhc3MgPSB0aGlzO1xuXG4gICAgdmFyIEV4dGVuZGVkQ2xhc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXByb3RvLiRjb25zdHJ1Y3Rvcikge1xuICAgICAgICBzdXBlckNsYXNzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm90by4kY29uc3RydWN0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgenJVdGlsLmV4dGVuZChFeHRlbmRlZENsYXNzLnByb3RvdHlwZSwgcHJvdG8pO1xuICAgIEV4dGVuZGVkQ2xhc3MuZXh0ZW5kID0gdGhpcy5leHRlbmQ7XG4gICAgRXh0ZW5kZWRDbGFzcy5zdXBlckNhbGwgPSBzdXBlckNhbGw7XG4gICAgRXh0ZW5kZWRDbGFzcy5zdXBlckFwcGx5ID0gc3VwZXJBcHBseTtcbiAgICB6clV0aWwuaW5oZXJpdHMoRXh0ZW5kZWRDbGFzcywgdGhpcyk7XG4gICAgRXh0ZW5kZWRDbGFzcy5zdXBlckNsYXNzID0gc3VwZXJDbGFzcztcbiAgICByZXR1cm4gRXh0ZW5kZWRDbGFzcztcbiAgfTtcbn1cblxudmFyIGNsYXNzQmFzZSA9IDA7XG4vKipcbiAqIENhbiBub3QgdXNlIGluc3RhbmNlb2YsIGNvbnNpZGVyIGRpZmZlcmVudCBzY29wZSBieVxuICogY3Jvc3MgZG9tYWluIG9yIGVzIG1vZHVsZSBpbXBvcnQgaW4gZWMgZXh0ZW5zaW9ucy5cbiAqIE1vdW50IGEgbWV0aG9kIFwiaXNJbnN0YW5jZSgpXCIgdG8gQ2x6LlxuICovXG5cbmZ1bmN0aW9uIGVuYWJsZUNsYXNzQ2hlY2soQ2x6KSB7XG4gIHZhciBjbGFzc0F0dHIgPSBbJ19fXFwwaXNfY2x6JywgY2xhc3NCYXNlKyssIE1hdGgucmFuZG9tKCkudG9GaXhlZCgzKV0uam9pbignXycpO1xuICBDbHoucHJvdG90eXBlW2NsYXNzQXR0cl0gPSB0cnVlO1xuXG4gIENsei5pc0luc3RhbmNlID0gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiAhIShvYmogJiYgb2JqW2NsYXNzQXR0cl0pO1xuICB9O1xufSAvLyBzdXBlckNhbGwgc2hvdWxkIGhhdmUgY2xhc3MgaW5mbywgd2hpY2ggY2FuIG5vdCBiZSBmZXRjaCBmcm9tICd0aGlzJy5cbi8vIENvbnNpZGVyIHRoaXMgY2FzZTpcbi8vIGNsYXNzIEEgaGFzIG1ldGhvZCBmLFxuLy8gY2xhc3MgQiBpbmhlcml0cyBjbGFzcyBBLCBvdmVycmlkZXMgbWV0aG9kIGYsIGYgY2FsbCBzdXBlckFwcGx5KCdmJyksXG4vLyBjbGFzcyBDIGluaGVyaXRzIGNsYXNzIEIsIGRvIG5vdCBvdmVycmlkZXMgbWV0aG9kIGYsXG4vLyB0aGVuIHdoZW4gbWV0aG9kIG9mIGNsYXNzIEMgaXMgY2FsbGVkLCBkZWFkIGxvb3Agb2NjdXJlZC5cblxuXG5mdW5jdGlvbiBzdXBlckNhbGwoY29udGV4dCwgbWV0aG9kTmFtZSkge1xuICB2YXIgYXJncyA9IHpyVXRpbC5zbGljZShhcmd1bWVudHMsIDIpO1xuICByZXR1cm4gdGhpcy5zdXBlckNsYXNzLnByb3RvdHlwZVttZXRob2ROYW1lXS5hcHBseShjb250ZXh0LCBhcmdzKTtcbn1cblxuZnVuY3Rpb24gc3VwZXJBcHBseShjb250ZXh0LCBtZXRob2ROYW1lLCBhcmdzKSB7XG4gIHJldHVybiB0aGlzLnN1cGVyQ2xhc3MucHJvdG90eXBlW21ldGhvZE5hbWVdLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xufVxuLyoqXG4gKiBAcGFyYW0ge09iamVjdH0gZW50aXR5XG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5yZWdpc3RlcldoZW5FeHRlbmRdXG4gKiBAcHVibGljXG4gKi9cblxuXG5mdW5jdGlvbiBlbmFibGVDbGFzc01hbmFnZW1lbnQoZW50aXR5LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAvKipcbiAgICogQ29tcG9uZW50IG1vZGVsIGNsYXNzZXNcbiAgICoga2V5OiBjb21wb25lbnRUeXBlLFxuICAgKiB2YWx1ZTpcbiAgICogICAgIGNvbXBvbmVudENsYXNzLCB3aGVuIGNvbXBvbmVudFR5cGUgaXMgJ3h4eCdcbiAgICogICAgIG9yIE9iamVjdC48c3ViS2V5LCBjb21wb25lbnRDbGFzcz4sIHdoZW4gY29tcG9uZW50VHlwZSBpcyAneHh4Lnl5J1xuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKi9cblxuICB2YXIgc3RvcmFnZSA9IHt9O1xuXG4gIGVudGl0eS5yZWdpc3RlckNsYXNzID0gZnVuY3Rpb24gKENsYXp6LCBjb21wb25lbnRUeXBlKSB7XG4gICAgaWYgKGNvbXBvbmVudFR5cGUpIHtcbiAgICAgIGNoZWNrQ2xhc3NUeXBlKGNvbXBvbmVudFR5cGUpO1xuICAgICAgY29tcG9uZW50VHlwZSA9IHBhcnNlQ2xhc3NUeXBlKGNvbXBvbmVudFR5cGUpO1xuXG4gICAgICBpZiAoIWNvbXBvbmVudFR5cGUuc3ViKSB7XG4gICAgICAgIHN0b3JhZ2VbY29tcG9uZW50VHlwZS5tYWluXSA9IENsYXp6O1xuICAgICAgfSBlbHNlIGlmIChjb21wb25lbnRUeXBlLnN1YiAhPT0gSVNfQ09OVEFJTkVSKSB7XG4gICAgICAgIHZhciBjb250YWluZXIgPSBtYWtlQ29udGFpbmVyKGNvbXBvbmVudFR5cGUpO1xuICAgICAgICBjb250YWluZXJbY29tcG9uZW50VHlwZS5zdWJdID0gQ2xheno7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIENsYXp6O1xuICB9O1xuXG4gIGVudGl0eS5nZXRDbGFzcyA9IGZ1bmN0aW9uIChjb21wb25lbnRNYWluVHlwZSwgc3ViVHlwZSwgdGhyb3dXaGVuTm90Rm91bmQpIHtcbiAgICB2YXIgQ2xhenogPSBzdG9yYWdlW2NvbXBvbmVudE1haW5UeXBlXTtcblxuICAgIGlmIChDbGF6eiAmJiBDbGF6eltJU19DT05UQUlORVJdKSB7XG4gICAgICBDbGF6eiA9IHN1YlR5cGUgPyBDbGF6eltzdWJUeXBlXSA6IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKHRocm93V2hlbk5vdEZvdW5kICYmICFDbGF6eikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCFzdWJUeXBlID8gY29tcG9uZW50TWFpblR5cGUgKyAnLicgKyAndHlwZSBzaG91bGQgYmUgc3BlY2lmaWVkLicgOiAnQ29tcG9uZW50ICcgKyBjb21wb25lbnRNYWluVHlwZSArICcuJyArIChzdWJUeXBlIHx8ICcnKSArICcgbm90IGV4aXN0cy4gTG9hZCBpdCBmaXJzdC4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gQ2xheno7XG4gIH07XG5cbiAgZW50aXR5LmdldENsYXNzZXNCeU1haW5UeXBlID0gZnVuY3Rpb24gKGNvbXBvbmVudFR5cGUpIHtcbiAgICBjb21wb25lbnRUeXBlID0gcGFyc2VDbGFzc1R5cGUoY29tcG9uZW50VHlwZSk7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBvYmogPSBzdG9yYWdlW2NvbXBvbmVudFR5cGUubWFpbl07XG5cbiAgICBpZiAob2JqICYmIG9ialtJU19DT05UQUlORVJdKSB7XG4gICAgICB6clV0aWwuZWFjaChvYmosIGZ1bmN0aW9uIChvLCB0eXBlKSB7XG4gICAgICAgIHR5cGUgIT09IElTX0NPTlRBSU5FUiAmJiByZXN1bHQucHVzaChvKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQucHVzaChvYmopO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgZW50aXR5Lmhhc0NsYXNzID0gZnVuY3Rpb24gKGNvbXBvbmVudFR5cGUpIHtcbiAgICAvLyBKdXN0IGNvbnNpZGVyIGNvbXBvbmVudFR5cGUubWFpbi5cbiAgICBjb21wb25lbnRUeXBlID0gcGFyc2VDbGFzc1R5cGUoY29tcG9uZW50VHlwZSk7XG4gICAgcmV0dXJuICEhc3RvcmFnZVtjb21wb25lbnRUeXBlLm1haW5dO1xuICB9O1xuICAvKipcbiAgICogQHJldHVybiB7QXJyYXkuPHN0cmluZz59IExpa2UgWydhYScsICdiYiddLCBidXQgY2FuIG5vdCBiZSBbJ2FhLnh4J11cbiAgICovXG5cblxuICBlbnRpdHkuZ2V0QWxsQ2xhc3NNYWluVHlwZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHR5cGVzID0gW107XG4gICAgenJVdGlsLmVhY2goc3RvcmFnZSwgZnVuY3Rpb24gKG9iaiwgdHlwZSkge1xuICAgICAgdHlwZXMucHVzaCh0eXBlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gdHlwZXM7XG4gIH07XG4gIC8qKlxuICAgKiBJZiBhIG1haW4gdHlwZSBpcyBjb250YWluZXIgYW5kIGhhcyBzdWIgdHlwZXNcbiAgICogQHBhcmFtICB7c3RyaW5nfSAgbWFpblR5cGVcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG5cblxuICBlbnRpdHkuaGFzU3ViVHlwZXMgPSBmdW5jdGlvbiAoY29tcG9uZW50VHlwZSkge1xuICAgIGNvbXBvbmVudFR5cGUgPSBwYXJzZUNsYXNzVHlwZShjb21wb25lbnRUeXBlKTtcbiAgICB2YXIgb2JqID0gc3RvcmFnZVtjb21wb25lbnRUeXBlLm1haW5dO1xuICAgIHJldHVybiBvYmogJiYgb2JqW0lTX0NPTlRBSU5FUl07XG4gIH07XG5cbiAgZW50aXR5LnBhcnNlQ2xhc3NUeXBlID0gcGFyc2VDbGFzc1R5cGU7XG5cbiAgZnVuY3Rpb24gbWFrZUNvbnRhaW5lcihjb21wb25lbnRUeXBlKSB7XG4gICAgdmFyIGNvbnRhaW5lciA9IHN0b3JhZ2VbY29tcG9uZW50VHlwZS5tYWluXTtcblxuICAgIGlmICghY29udGFpbmVyIHx8ICFjb250YWluZXJbSVNfQ09OVEFJTkVSXSkge1xuICAgICAgY29udGFpbmVyID0gc3RvcmFnZVtjb21wb25lbnRUeXBlLm1haW5dID0ge307XG4gICAgICBjb250YWluZXJbSVNfQ09OVEFJTkVSXSA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbiAgfVxuXG4gIGlmIChvcHRpb25zLnJlZ2lzdGVyV2hlbkV4dGVuZCkge1xuICAgIHZhciBvcmlnaW5hbEV4dGVuZCA9IGVudGl0eS5leHRlbmQ7XG5cbiAgICBpZiAob3JpZ2luYWxFeHRlbmQpIHtcbiAgICAgIGVudGl0eS5leHRlbmQgPSBmdW5jdGlvbiAocHJvdG8pIHtcbiAgICAgICAgdmFyIEV4dGVuZGVkQ2xhc3MgPSBvcmlnaW5hbEV4dGVuZC5jYWxsKHRoaXMsIHByb3RvKTtcbiAgICAgICAgcmV0dXJuIGVudGl0eS5yZWdpc3RlckNsYXNzKEV4dGVuZGVkQ2xhc3MsIHByb3RvLnR5cGUpO1xuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZW50aXR5O1xufVxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ3xBcnJheS48c3RyaW5nPn0gcHJvcGVydGllc1xuICovXG5cblxuZnVuY3Rpb24gc2V0UmVhZE9ubHkob2JqLCBwcm9wZXJ0aWVzKSB7Ly8gRklYTUUgSXQgc2VlbXMgYnJva2VuIGluIElFOCBzaW11bGF0aW9uIG9mIElFMTFcbiAgLy8gaWYgKCF6clV0aWwuaXNBcnJheShwcm9wZXJ0aWVzKSkge1xuICAvLyAgICAgcHJvcGVydGllcyA9IHByb3BlcnRpZXMgIT0gbnVsbCA/IFtwcm9wZXJ0aWVzXSA6IFtdO1xuICAvLyB9XG4gIC8vIHpyVXRpbC5lYWNoKHByb3BlcnRpZXMsIGZ1bmN0aW9uIChwcm9wKSB7XG4gIC8vICAgICB2YXIgdmFsdWUgPSBvYmpbcHJvcF07XG4gIC8vICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHlcbiAgLy8gICAgICAgICAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBwcm9wLCB7XG4gIC8vICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSwgd3JpdGFibGU6IGZhbHNlXG4gIC8vICAgICAgICAgfSk7XG4gIC8vICAgICB6clV0aWwuaXNBcnJheShvYmpbcHJvcF0pXG4gIC8vICAgICAgICAgJiYgT2JqZWN0LmZyZWV6ZVxuICAvLyAgICAgICAgICYmIE9iamVjdC5mcmVlemUob2JqW3Byb3BdKTtcbiAgLy8gfSk7XG59XG5cbmV4cG9ydHMucGFyc2VDbGFzc1R5cGUgPSBwYXJzZUNsYXNzVHlwZTtcbmV4cG9ydHMuZW5hYmxlQ2xhc3NFeHRlbmQgPSBlbmFibGVDbGFzc0V4dGVuZDtcbmV4cG9ydHMuZW5hYmxlQ2xhc3NDaGVjayA9IGVuYWJsZUNsYXNzQ2hlY2s7XG5leHBvcnRzLmVuYWJsZUNsYXNzTWFuYWdlbWVudCA9IGVuYWJsZUNsYXNzTWFuYWdlbWVudDtcbmV4cG9ydHMuc2V0UmVhZE9ubHkgPSBzZXRSZWFkT25seTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///71\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Model = __webpack_require__(70);\\n\\nvar componentUtil = __webpack_require__(90);\\n\\nvar _clazz = __webpack_require__(71);\\n\\nvar enableClassManagement = _clazz.enableClassManagement;\\nvar parseClassType = _clazz.parseClassType;\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\n\\nvar layout = __webpack_require__(78);\\n\\nvar boxLayoutMixin = __webpack_require__(224);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Component model\\n *\\n * @module echarts/model/Component\\n */\\nvar inner = makeInner();\\n/**\\n * @alias module:echarts/model/Component\\n * @constructor\\n * @param {Object} option\\n * @param {module:echarts/model/Model} parentModel\\n * @param {module:echarts/model/Model} ecModel\\n */\\n\\nvar ComponentModel = Model.extend({\\n  type: 'component',\\n\\n  /**\\n   * @readOnly\\n   * @type {string}\\n   */\\n  id: '',\\n\\n  /**\\n   * Because simplified concept is probably better, series.name (or component.name)\\n   * has been having too many resposibilities:\\n   * (1) Generating id (which requires name in option should not be modified).\\n   * (2) As an index to mapping series when merging option or calling API (a name\\n   * can refer to more then one components, which is convinient is some case).\\n   * (3) Display.\\n   * @readOnly\\n   */\\n  name: '',\\n\\n  /**\\n   * @readOnly\\n   * @type {string}\\n   */\\n  mainType: '',\\n\\n  /**\\n   * @readOnly\\n   * @type {string}\\n   */\\n  subType: '',\\n\\n  /**\\n   * @readOnly\\n   * @type {number}\\n   */\\n  componentIndex: 0,\\n\\n  /**\\n   * @type {Object}\\n   * @protected\\n   */\\n  defaultOption: null,\\n\\n  /**\\n   * @type {module:echarts/model/Global}\\n   * @readOnly\\n   */\\n  ecModel: null,\\n\\n  /**\\n   * key: componentType\\n   * value:  Component model list, can not be null.\\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\\n   * @readOnly\\n   */\\n  dependentModels: [],\\n\\n  /**\\n   * @type {string}\\n   * @readOnly\\n   */\\n  uid: null,\\n\\n  /**\\n   * Support merge layout params.\\n   * Only support 'box' now (left/right/top/bottom/width/height).\\n   * @type {string|Object} Object can be {ignoreSize: true}\\n   * @readOnly\\n   */\\n  layoutMode: null,\\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\\n    Model.call(this, option, parentModel, ecModel, extraOpt);\\n    this.uid = componentUtil.getUID('ec_cpt_model');\\n  },\\n  init: function (option, parentModel, ecModel, extraOpt) {\\n    this.mergeDefaultAndTheme(option, ecModel);\\n  },\\n  mergeDefaultAndTheme: function (option, ecModel) {\\n    var layoutMode = this.layoutMode;\\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\\n    var themeModel = ecModel.getTheme();\\n    zrUtil.merge(option, themeModel.get(this.mainType));\\n    zrUtil.merge(option, this.getDefaultOption());\\n\\n    if (layoutMode) {\\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\\n    }\\n  },\\n  mergeOption: function (option, extraOpt) {\\n    zrUtil.merge(this.option, option, true);\\n    var layoutMode = this.layoutMode;\\n\\n    if (layoutMode) {\\n      layout.mergeLayoutParam(this.option, option, layoutMode);\\n    }\\n  },\\n  // Hooker after init or mergeOption\\n  optionUpdated: function (newCptOption, isInit) {},\\n  getDefaultOption: function () {\\n    var fields = inner(this);\\n\\n    if (!fields.defaultOption) {\\n      var optList = [];\\n      var Class = this.constructor;\\n\\n      while (Class) {\\n        var opt = Class.prototype.defaultOption;\\n        opt && optList.push(opt);\\n        Class = Class.superClass;\\n      }\\n\\n      var defaultOption = {};\\n\\n      for (var i = optList.length - 1; i >= 0; i--) {\\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\\n      }\\n\\n      fields.defaultOption = defaultOption;\\n    }\\n\\n    return fields.defaultOption;\\n  },\\n  getReferringComponents: function (mainType) {\\n    return this.ecModel.queryComponents({\\n      mainType: mainType,\\n      index: this.get(mainType + 'Index', true),\\n      id: this.get(mainType + 'Id', true)\\n    });\\n  }\\n}); // Reset ComponentModel.extend, add preConstruct.\\n// clazzUtil.enableClassExtend(\\n//     ComponentModel,\\n//     function (option, parentModel, ecModel, extraOpt) {\\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\\n//         zrUtil.extend(this, extraOpt);\\n//         this.uid = componentUtil.getUID('componentModel');\\n//         // this.setReadOnly([\\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\\n//         //     'dependentModels', 'componentIndex'\\n//         // ]);\\n//     }\\n// );\\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\\n\\nenableClassManagement(ComponentModel, {\\n  registerWhenExtend: true\\n});\\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\\n\\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\\n\\nfunction getDependencies(componentType) {\\n  var deps = [];\\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\\n    deps = deps.concat(Clazz.prototype.dependencies || []);\\n  }); // Ensure main type.\\n\\n  deps = zrUtil.map(deps, function (type) {\\n    return parseClassType(type).main;\\n  }); // Hack dataset for convenience.\\n\\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\\n    deps.unshift('dataset');\\n  }\\n\\n  return deps;\\n}\\n\\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\\nvar _default = ComponentModel;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///72\\n\")},,function(module,exports){eval(\"/**\\n * 3x2矩阵操作类\\n * @exports zrender/tool/matrix\\n */\\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\\n/**\\n * Create a identity matrix.\\n * @return {Float32Array|Array.<number>}\\n */\\n\\nfunction create() {\\n  var out = new ArrayCtor(6);\\n  identity(out);\\n  return out;\\n}\\n/**\\n * 设置矩阵为单位矩阵\\n * @param {Float32Array|Array.<number>} out\\n */\\n\\n\\nfunction identity(out) {\\n  out[0] = 1;\\n  out[1] = 0;\\n  out[2] = 0;\\n  out[3] = 1;\\n  out[4] = 0;\\n  out[5] = 0;\\n  return out;\\n}\\n/**\\n * 复制矩阵\\n * @param {Float32Array|Array.<number>} out\\n * @param {Float32Array|Array.<number>} m\\n */\\n\\n\\nfunction copy(out, m) {\\n  out[0] = m[0];\\n  out[1] = m[1];\\n  out[2] = m[2];\\n  out[3] = m[3];\\n  out[4] = m[4];\\n  out[5] = m[5];\\n  return out;\\n}\\n/**\\n * 矩阵相乘\\n * @param {Float32Array|Array.<number>} out\\n * @param {Float32Array|Array.<number>} m1\\n * @param {Float32Array|Array.<number>} m2\\n */\\n\\n\\nfunction mul(out, m1, m2) {\\n  // Consider matrix.mul(m, m2, m);\\n  // where out is the same as m2.\\n  // So use temp variable to escape error.\\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\\n  out[0] = out0;\\n  out[1] = out1;\\n  out[2] = out2;\\n  out[3] = out3;\\n  out[4] = out4;\\n  out[5] = out5;\\n  return out;\\n}\\n/**\\n * 平移变换\\n * @param {Float32Array|Array.<number>} out\\n * @param {Float32Array|Array.<number>} a\\n * @param {Float32Array|Array.<number>} v\\n */\\n\\n\\nfunction translate(out, a, v) {\\n  out[0] = a[0];\\n  out[1] = a[1];\\n  out[2] = a[2];\\n  out[3] = a[3];\\n  out[4] = a[4] + v[0];\\n  out[5] = a[5] + v[1];\\n  return out;\\n}\\n/**\\n * 旋转变换\\n * @param {Float32Array|Array.<number>} out\\n * @param {Float32Array|Array.<number>} a\\n * @param {number} rad\\n */\\n\\n\\nfunction rotate(out, a, rad) {\\n  var aa = a[0];\\n  var ac = a[2];\\n  var atx = a[4];\\n  var ab = a[1];\\n  var ad = a[3];\\n  var aty = a[5];\\n  var st = Math.sin(rad);\\n  var ct = Math.cos(rad);\\n  out[0] = aa * ct + ab * st;\\n  out[1] = -aa * st + ab * ct;\\n  out[2] = ac * ct + ad * st;\\n  out[3] = -ac * st + ct * ad;\\n  out[4] = ct * atx + st * aty;\\n  out[5] = ct * aty - st * atx;\\n  return out;\\n}\\n/**\\n * 缩放变换\\n * @param {Float32Array|Array.<number>} out\\n * @param {Float32Array|Array.<number>} a\\n * @param {Float32Array|Array.<number>} v\\n */\\n\\n\\nfunction scale(out, a, v) {\\n  var vx = v[0];\\n  var vy = v[1];\\n  out[0] = a[0] * vx;\\n  out[1] = a[1] * vy;\\n  out[2] = a[2] * vx;\\n  out[3] = a[3] * vy;\\n  out[4] = a[4] * vx;\\n  out[5] = a[5] * vy;\\n  return out;\\n}\\n/**\\n * 求逆矩阵\\n * @param {Float32Array|Array.<number>} out\\n * @param {Float32Array|Array.<number>} a\\n */\\n\\n\\nfunction invert(out, a) {\\n  var aa = a[0];\\n  var ac = a[2];\\n  var atx = a[4];\\n  var ab = a[1];\\n  var ad = a[3];\\n  var aty = a[5];\\n  var det = aa * ad - ab * ac;\\n\\n  if (!det) {\\n    return null;\\n  }\\n\\n  det = 1.0 / det;\\n  out[0] = ad * det;\\n  out[1] = -ab * det;\\n  out[2] = -ac * det;\\n  out[3] = aa * det;\\n  out[4] = (ac * aty - ad * atx) * det;\\n  out[5] = (ab * atx - aa * aty) * det;\\n  return out;\\n}\\n/**\\n * Clone a new matrix.\\n * @param {Float32Array|Array.<number>} a\\n */\\n\\n\\nfunction clone(a) {\\n  var b = create();\\n  copy(b, a);\\n  return b;\\n}\\n\\nexports.create = create;\\nexports.identity = identity;\\nexports.copy = copy;\\nexports.mul = mul;\\nexports.translate = translate;\\nexports.rotate = rotate;\\nexports.scale = scale;\\nexports.invert = invert;\\nexports.clone = clone;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29yZS9tYXRyaXguanM/MTY4NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0QkFBNEI7QUFDdkMsV0FBVyw0QkFBNEI7QUFDdkM7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QyxXQUFXLDRCQUE0QjtBQUN2QyxXQUFXLDRCQUE0QjtBQUN2Qzs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsNEJBQTRCO0FBQ3ZDOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0QkFBNEI7QUFDdkMsV0FBVyw0QkFBNEI7QUFDdkMsV0FBVyxPQUFPO0FBQ2xCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsNEJBQTRCO0FBQ3ZDOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsNEJBQTRCO0FBQ3ZDOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0QkFBNEI7QUFDdkM7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ijc0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAzeDLnn6npmLXmk43kvZznsbtcbiAqIEBleHBvcnRzIHpyZW5kZXIvdG9vbC9tYXRyaXhcbiAqL1xudmFyIEFycmF5Q3RvciA9IHR5cGVvZiBGbG9hdDMyQXJyYXkgPT09ICd1bmRlZmluZWQnID8gQXJyYXkgOiBGbG9hdDMyQXJyYXk7XG4vKipcbiAqIENyZWF0ZSBhIGlkZW50aXR5IG1hdHJpeC5cbiAqIEByZXR1cm4ge0Zsb2F0MzJBcnJheXxBcnJheS48bnVtYmVyPn1cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGUoKSB7XG4gIHZhciBvdXQgPSBuZXcgQXJyYXlDdG9yKDYpO1xuICBpZGVudGl0eShvdXQpO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDorr7nva7nn6npmLXkuLrljZXkvY3nn6npmLVcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBvdXRcbiAqL1xuXG5cbmZ1bmN0aW9uIGlkZW50aXR5KG91dCkge1xuICBvdXRbMF0gPSAxO1xuICBvdXRbMV0gPSAwO1xuICBvdXRbMl0gPSAwO1xuICBvdXRbM10gPSAxO1xuICBvdXRbNF0gPSAwO1xuICBvdXRbNV0gPSAwO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDlpI3liLbnn6npmLVcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBvdXRcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBtXG4gKi9cblxuXG5mdW5jdGlvbiBjb3B5KG91dCwgbSkge1xuICBvdXRbMF0gPSBtWzBdO1xuICBvdXRbMV0gPSBtWzFdO1xuICBvdXRbMl0gPSBtWzJdO1xuICBvdXRbM10gPSBtWzNdO1xuICBvdXRbNF0gPSBtWzRdO1xuICBvdXRbNV0gPSBtWzVdO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDnn6npmLXnm7jkuZhcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBvdXRcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBtMVxuICogQHBhcmFtIHtGbG9hdDMyQXJyYXl8QXJyYXkuPG51bWJlcj59IG0yXG4gKi9cblxuXG5mdW5jdGlvbiBtdWwob3V0LCBtMSwgbTIpIHtcbiAgLy8gQ29uc2lkZXIgbWF0cml4Lm11bChtLCBtMiwgbSk7XG4gIC8vIHdoZXJlIG91dCBpcyB0aGUgc2FtZSBhcyBtMi5cbiAgLy8gU28gdXNlIHRlbXAgdmFyaWFibGUgdG8gZXNjYXBlIGVycm9yLlxuICB2YXIgb3V0MCA9IG0xWzBdICogbTJbMF0gKyBtMVsyXSAqIG0yWzFdO1xuICB2YXIgb3V0MSA9IG0xWzFdICogbTJbMF0gKyBtMVszXSAqIG0yWzFdO1xuICB2YXIgb3V0MiA9IG0xWzBdICogbTJbMl0gKyBtMVsyXSAqIG0yWzNdO1xuICB2YXIgb3V0MyA9IG0xWzFdICogbTJbMl0gKyBtMVszXSAqIG0yWzNdO1xuICB2YXIgb3V0NCA9IG0xWzBdICogbTJbNF0gKyBtMVsyXSAqIG0yWzVdICsgbTFbNF07XG4gIHZhciBvdXQ1ID0gbTFbMV0gKiBtMls0XSArIG0xWzNdICogbTJbNV0gKyBtMVs1XTtcbiAgb3V0WzBdID0gb3V0MDtcbiAgb3V0WzFdID0gb3V0MTtcbiAgb3V0WzJdID0gb3V0MjtcbiAgb3V0WzNdID0gb3V0MztcbiAgb3V0WzRdID0gb3V0NDtcbiAgb3V0WzVdID0gb3V0NTtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxuICog5bmz56e75Y+Y5o2iXG4gKiBAcGFyYW0ge0Zsb2F0MzJBcnJheXxBcnJheS48bnVtYmVyPn0gb3V0XG4gKiBAcGFyYW0ge0Zsb2F0MzJBcnJheXxBcnJheS48bnVtYmVyPn0gYVxuICogQHBhcmFtIHtGbG9hdDMyQXJyYXl8QXJyYXkuPG51bWJlcj59IHZcbiAqL1xuXG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZShvdXQsIGEsIHYpIHtcbiAgb3V0WzBdID0gYVswXTtcbiAgb3V0WzFdID0gYVsxXTtcbiAgb3V0WzJdID0gYVsyXTtcbiAgb3V0WzNdID0gYVszXTtcbiAgb3V0WzRdID0gYVs0XSArIHZbMF07XG4gIG91dFs1XSA9IGFbNV0gKyB2WzFdO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDml4vovazlj5jmjaJcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBvdXRcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBhXG4gKiBAcGFyYW0ge251bWJlcn0gcmFkXG4gKi9cblxuXG5mdW5jdGlvbiByb3RhdGUob3V0LCBhLCByYWQpIHtcbiAgdmFyIGFhID0gYVswXTtcbiAgdmFyIGFjID0gYVsyXTtcbiAgdmFyIGF0eCA9IGFbNF07XG4gIHZhciBhYiA9IGFbMV07XG4gIHZhciBhZCA9IGFbM107XG4gIHZhciBhdHkgPSBhWzVdO1xuICB2YXIgc3QgPSBNYXRoLnNpbihyYWQpO1xuICB2YXIgY3QgPSBNYXRoLmNvcyhyYWQpO1xuICBvdXRbMF0gPSBhYSAqIGN0ICsgYWIgKiBzdDtcbiAgb3V0WzFdID0gLWFhICogc3QgKyBhYiAqIGN0O1xuICBvdXRbMl0gPSBhYyAqIGN0ICsgYWQgKiBzdDtcbiAgb3V0WzNdID0gLWFjICogc3QgKyBjdCAqIGFkO1xuICBvdXRbNF0gPSBjdCAqIGF0eCArIHN0ICogYXR5O1xuICBvdXRbNV0gPSBjdCAqIGF0eSAtIHN0ICogYXR4O1xuICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiDnvKnmlL7lj5jmjaJcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBvdXRcbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBhXG4gKiBAcGFyYW0ge0Zsb2F0MzJBcnJheXxBcnJheS48bnVtYmVyPn0gdlxuICovXG5cblxuZnVuY3Rpb24gc2NhbGUob3V0LCBhLCB2KSB7XG4gIHZhciB2eCA9IHZbMF07XG4gIHZhciB2eSA9IHZbMV07XG4gIG91dFswXSA9IGFbMF0gKiB2eDtcbiAgb3V0WzFdID0gYVsxXSAqIHZ5O1xuICBvdXRbMl0gPSBhWzJdICogdng7XG4gIG91dFszXSA9IGFbM10gKiB2eTtcbiAgb3V0WzRdID0gYVs0XSAqIHZ4O1xuICBvdXRbNV0gPSBhWzVdICogdnk7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIOaxgumAhuefqemYtVxuICogQHBhcmFtIHtGbG9hdDMyQXJyYXl8QXJyYXkuPG51bWJlcj59IG91dFxuICogQHBhcmFtIHtGbG9hdDMyQXJyYXl8QXJyYXkuPG51bWJlcj59IGFcbiAqL1xuXG5cbmZ1bmN0aW9uIGludmVydChvdXQsIGEpIHtcbiAgdmFyIGFhID0gYVswXTtcbiAgdmFyIGFjID0gYVsyXTtcbiAgdmFyIGF0eCA9IGFbNF07XG4gIHZhciBhYiA9IGFbMV07XG4gIHZhciBhZCA9IGFbM107XG4gIHZhciBhdHkgPSBhWzVdO1xuICB2YXIgZGV0ID0gYWEgKiBhZCAtIGFiICogYWM7XG5cbiAgaWYgKCFkZXQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGRldCA9IDEuMCAvIGRldDtcbiAgb3V0WzBdID0gYWQgKiBkZXQ7XG4gIG91dFsxXSA9IC1hYiAqIGRldDtcbiAgb3V0WzJdID0gLWFjICogZGV0O1xuICBvdXRbM10gPSBhYSAqIGRldDtcbiAgb3V0WzRdID0gKGFjICogYXR5IC0gYWQgKiBhdHgpICogZGV0O1xuICBvdXRbNV0gPSAoYWIgKiBhdHggLSBhYSAqIGF0eSkgKiBkZXQ7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcbiAqIENsb25lIGEgbmV3IG1hdHJpeC5cbiAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fEFycmF5LjxudW1iZXI+fSBhXG4gKi9cblxuXG5mdW5jdGlvbiBjbG9uZShhKSB7XG4gIHZhciBiID0gY3JlYXRlKCk7XG4gIGNvcHkoYiwgYSk7XG4gIHJldHVybiBiO1xufVxuXG5leHBvcnRzLmNyZWF0ZSA9IGNyZWF0ZTtcbmV4cG9ydHMuaWRlbnRpdHkgPSBpZGVudGl0eTtcbmV4cG9ydHMuY29weSA9IGNvcHk7XG5leHBvcnRzLm11bCA9IG11bDtcbmV4cG9ydHMudHJhbnNsYXRlID0gdHJhbnNsYXRlO1xuZXhwb3J0cy5yb3RhdGUgPSByb3RhdGU7XG5leHBvcnRzLnNjYWxlID0gc2NhbGU7XG5leHBvcnRzLmludmVydCA9IGludmVydDtcbmV4cG9ydHMuY2xvbmUgPSBjbG9uZTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///74\\n\")},function(module,exports,__webpack_require__){eval(\"var Eventful = __webpack_require__(80);\\n\\nexports.Dispatcher = Eventful;\\n\\nvar env = __webpack_require__(66);\\n\\n/**\\n * 事件辅助类\\n * @module zrender/core/event\\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n */\\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\\n\\nfunction getBoundingClientRect(el) {\\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\\n    left: 0,\\n    top: 0\\n  };\\n} // `calculate` is optional, default false\\n\\n\\nfunction clientToLocal(el, e, out, calculate) {\\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\\n  // to the padding edge of the target element. The only browser using this convention\\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\\n  // not support the properties.\\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\\n  // In zr painter.dom, padding edge equals to border edge.\\n  // FIXME\\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\\n  // is too complex. So css-transfrom dont support in this case temporarily.\\n\\n  if (calculate || !env.canvasSupported) {\\n    defaultGetZrXY(el, e, out);\\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\\n  // zoom-factor, overflow / opacity layers, transforms ...)\\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\\n  // BTW3, In ff, offsetX/offsetY is always 0.\\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\\n      out.zrX = e.layerX;\\n      out.zrY = e.layerY;\\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\\n    else if (e.offsetX != null) {\\n        out.zrX = e.offsetX;\\n        out.zrY = e.offsetY;\\n      } // For some other device, e.g., IOS safari.\\n      else {\\n          defaultGetZrXY(el, e, out);\\n        }\\n\\n  return out;\\n}\\n\\nfunction defaultGetZrXY(el, e, out) {\\n  // This well-known method below does not support css transform.\\n  var box = getBoundingClientRect(el);\\n  out.zrX = e.clientX - box.left;\\n  out.zrY = e.clientY - box.top;\\n}\\n/**\\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\\n * `calculate` is optional, default false.\\n */\\n\\n\\nfunction normalizeEvent(el, e, calculate) {\\n  e = e || window.event;\\n\\n  if (e.zrX != null) {\\n    return e;\\n  }\\n\\n  var eventType = e.type;\\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\\n\\n  if (!isTouch) {\\n    clientToLocal(el, e, e, calculate);\\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\\n  } else {\\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\\n    touch && clientToLocal(el, touch, e, calculate);\\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\\n  // If e.which has been defined, if may be readonly,\\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\\n\\n\\n  var button = e.button;\\n\\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\\n  }\\n\\n  return e;\\n}\\n/**\\n * @param {HTMLElement} el\\n * @param {string} name\\n * @param {Function} handler\\n */\\n\\n\\nfunction addEventListener(el, name, handler) {\\n  if (isDomLevel2) {\\n    // Reproduct the console warning:\\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\\n    // Consider marking event handler as 'passive' to make the page more responsive.\\n    // Just set console log level: verbose in chrome dev tool.\\n    // then the warning log will be printed when addEventListener called.\\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\\n    // listener delegate all of the upper events of element. Some of those events need\\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\\n    // Before passive can be adopted, these issues should be considered:\\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\\n    // passive or not.\\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\\n    // compatibility should be handled.\\n    // var opts = (env.passiveSupported && name === 'mousewheel')\\n    //     ? {passive: true}\\n    //     // By default, the third param of el.addEventListener is `capture: false`.\\n    //     : void 0;\\n    // el.addEventListener(name, handler /* , opts */);\\n    el.addEventListener(name, handler);\\n  } else {\\n    el.attachEvent('on' + name, handler);\\n  }\\n}\\n\\nfunction removeEventListener(el, name, handler) {\\n  if (isDomLevel2) {\\n    el.removeEventListener(name, handler);\\n  } else {\\n    el.detachEvent('on' + name, handler);\\n  }\\n}\\n/**\\n * preventDefault and stopPropagation.\\n * Notice: do not do that in zrender. Upper application\\n * do that if necessary.\\n *\\n * @memberOf module:zrender/core/event\\n * @method\\n * @param {Event} e : event对象\\n */\\n\\n\\nvar stop = isDomLevel2 ? function (e) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n  e.cancelBubble = true;\\n} : function (e) {\\n  e.returnValue = false;\\n  e.cancelBubble = true;\\n};\\n\\nfunction notLeftMouse(e) {\\n  // If e.which is undefined, considered as left mouse event.\\n  return e.which > 1;\\n} // 做向上兼容\\n\\n\\nexports.clientToLocal = clientToLocal;\\nexports.normalizeEvent = normalizeEvent;\\nexports.addEventListener = addEventListener;\\nexports.removeEventListener = removeEventListener;\\nexports.stop = stop;\\nexports.notLeftMouse = notLeftMouse;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///75\\n\")},function(module,exports,__webpack_require__){eval(\"var BoundingRect = __webpack_require__(67);\\n\\nvar imageHelper = __webpack_require__(103);\\n\\nvar _util = __webpack_require__(59);\\n\\nvar getContext = _util.getContext;\\nvar extend = _util.extend;\\nvar retrieve2 = _util.retrieve2;\\nvar retrieve3 = _util.retrieve3;\\nvar trim = _util.trim;\\nvar textWidthCache = {};\\nvar textWidthCacheCounter = 0;\\nvar TEXT_CACHE_MAX = 5000;\\nvar STYLE_REG = /\\\\{([a-zA-Z0-9_]+)\\\\|([^}]*)\\\\}/g;\\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\\n\\nvar methods = {};\\n\\nfunction $override(name, fn) {\\n  methods[name] = fn;\\n}\\n/**\\n * @public\\n * @param {string} text\\n * @param {string} font\\n * @return {number} width\\n */\\n\\n\\nfunction getWidth(text, font) {\\n  font = font || DEFAULT_FONT;\\n  var key = text + ':' + font;\\n\\n  if (textWidthCache[key]) {\\n    return textWidthCache[key];\\n  }\\n\\n  var textLines = (text + '').split('\\\\n');\\n  var width = 0;\\n\\n  for (var i = 0, l = textLines.length; i < l; i++) {\\n    // textContain.measureText may be overrided in SVG or VML\\n    width = Math.max(measureText(textLines[i], font).width, width);\\n  }\\n\\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\\n    textWidthCacheCounter = 0;\\n    textWidthCache = {};\\n  }\\n\\n  textWidthCacheCounter++;\\n  textWidthCache[key] = width;\\n  return width;\\n}\\n/**\\n * @public\\n * @param {string} text\\n * @param {string} font\\n * @param {string} [textAlign='left']\\n * @param {string} [textVerticalAlign='top']\\n * @param {Array.<number>} [textPadding]\\n * @param {Object} [rich]\\n * @param {Object} [truncate]\\n * @return {Object} {x, y, width, height, lineHeight}\\n */\\n\\n\\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\\n}\\n\\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\\n  var outerWidth = getWidth(text, font);\\n\\n  if (textPadding) {\\n    outerWidth += textPadding[1] + textPadding[3];\\n  }\\n\\n  var outerHeight = contentBlock.outerHeight;\\n  var x = adjustTextX(0, outerWidth, textAlign);\\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\\n  rect.lineHeight = contentBlock.lineHeight;\\n  return rect;\\n}\\n\\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\\n  var contentBlock = parseRichText(text, {\\n    rich: rich,\\n    truncate: truncate,\\n    font: font,\\n    textAlign: textAlign,\\n    textPadding: textPadding\\n  });\\n  var outerWidth = contentBlock.outerWidth;\\n  var outerHeight = contentBlock.outerHeight;\\n  var x = adjustTextX(0, outerWidth, textAlign);\\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\\n  return new BoundingRect(x, y, outerWidth, outerHeight);\\n}\\n/**\\n * @public\\n * @param {number} x\\n * @param {number} width\\n * @param {string} [textAlign='left']\\n * @return {number} Adjusted x.\\n */\\n\\n\\nfunction adjustTextX(x, width, textAlign) {\\n  // FIXME Right to left language\\n  if (textAlign === 'right') {\\n    x -= width;\\n  } else if (textAlign === 'center') {\\n    x -= width / 2;\\n  }\\n\\n  return x;\\n}\\n/**\\n * @public\\n * @param {number} y\\n * @param {number} height\\n * @param {string} [textVerticalAlign='top']\\n * @return {number} Adjusted y.\\n */\\n\\n\\nfunction adjustTextY(y, height, textVerticalAlign) {\\n  if (textVerticalAlign === 'middle') {\\n    y -= height / 2;\\n  } else if (textVerticalAlign === 'bottom') {\\n    y -= height;\\n  }\\n\\n  return y;\\n}\\n/**\\n * @public\\n * @param {stirng} textPosition\\n * @param {Object} rect {x, y, width, height}\\n * @param {number} distance\\n * @return {Object} {x, y, textAlign, textVerticalAlign}\\n */\\n\\n\\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\\n  var x = rect.x;\\n  var y = rect.y;\\n  var height = rect.height;\\n  var width = rect.width;\\n  var halfHeight = height / 2;\\n  var textAlign = 'left';\\n  var textVerticalAlign = 'top';\\n\\n  switch (textPosition) {\\n    case 'left':\\n      x -= distance;\\n      y += halfHeight;\\n      textAlign = 'right';\\n      textVerticalAlign = 'middle';\\n      break;\\n\\n    case 'right':\\n      x += distance + width;\\n      y += halfHeight;\\n      textVerticalAlign = 'middle';\\n      break;\\n\\n    case 'top':\\n      x += width / 2;\\n      y -= distance;\\n      textAlign = 'center';\\n      textVerticalAlign = 'bottom';\\n      break;\\n\\n    case 'bottom':\\n      x += width / 2;\\n      y += height + distance;\\n      textAlign = 'center';\\n      break;\\n\\n    case 'inside':\\n      x += width / 2;\\n      y += halfHeight;\\n      textAlign = 'center';\\n      textVerticalAlign = 'middle';\\n      break;\\n\\n    case 'insideLeft':\\n      x += distance;\\n      y += halfHeight;\\n      textVerticalAlign = 'middle';\\n      break;\\n\\n    case 'insideRight':\\n      x += width - distance;\\n      y += halfHeight;\\n      textAlign = 'right';\\n      textVerticalAlign = 'middle';\\n      break;\\n\\n    case 'insideTop':\\n      x += width / 2;\\n      y += distance;\\n      textAlign = 'center';\\n      break;\\n\\n    case 'insideBottom':\\n      x += width / 2;\\n      y += height - distance;\\n      textAlign = 'center';\\n      textVerticalAlign = 'bottom';\\n      break;\\n\\n    case 'insideTopLeft':\\n      x += distance;\\n      y += distance;\\n      break;\\n\\n    case 'insideTopRight':\\n      x += width - distance;\\n      y += distance;\\n      textAlign = 'right';\\n      break;\\n\\n    case 'insideBottomLeft':\\n      x += distance;\\n      y += height - distance;\\n      textVerticalAlign = 'bottom';\\n      break;\\n\\n    case 'insideBottomRight':\\n      x += width - distance;\\n      y += height - distance;\\n      textAlign = 'right';\\n      textVerticalAlign = 'bottom';\\n      break;\\n  }\\n\\n  return {\\n    x: x,\\n    y: y,\\n    textAlign: textAlign,\\n    textVerticalAlign: textVerticalAlign\\n  };\\n}\\n/**\\n * Show ellipsis if overflow.\\n *\\n * @public\\n * @param  {string} text\\n * @param  {string} containerWidth\\n * @param  {string} font\\n * @param  {number} [ellipsis='...']\\n * @param  {Object} [options]\\n * @param  {number} [options.maxIterations=3]\\n * @param  {number} [options.minChar=0] If truncate result are less\\n *                  then minChar, ellipsis will not show, which is\\n *                  better for user hint in some cases.\\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\\n * @return {string}\\n */\\n\\n\\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\\n  if (!containerWidth) {\\n    return '';\\n  }\\n\\n  var textLines = (text + '').split('\\\\n');\\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\\n  // It is not appropriate that every line has '...' when truncate multiple lines.\\n\\n  for (var i = 0, len = textLines.length; i < len; i++) {\\n    textLines[i] = truncateSingleLine(textLines[i], options);\\n  }\\n\\n  return textLines.join('\\\\n');\\n}\\n\\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\\n  options = extend({}, options);\\n  options.font = font;\\n  var ellipsis = retrieve2(ellipsis, '...');\\n  options.maxIterations = retrieve2(options.maxIterations, 2);\\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\\n  // Other languages?\\n\\n  options.cnCharWidth = getWidth('国', font); // FIXME\\n  // Consider proportional font?\\n\\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\\n\\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\\n\\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\\n    contentWidth -= ascCharWidth;\\n  }\\n\\n  var ellipsisWidth = getWidth(ellipsis);\\n\\n  if (ellipsisWidth > contentWidth) {\\n    ellipsis = '';\\n    ellipsisWidth = 0;\\n  }\\n\\n  contentWidth = containerWidth - ellipsisWidth;\\n  options.ellipsis = ellipsis;\\n  options.ellipsisWidth = ellipsisWidth;\\n  options.contentWidth = contentWidth;\\n  options.containerWidth = containerWidth;\\n  return options;\\n}\\n\\nfunction truncateSingleLine(textLine, options) {\\n  var containerWidth = options.containerWidth;\\n  var font = options.font;\\n  var contentWidth = options.contentWidth;\\n\\n  if (!containerWidth) {\\n    return '';\\n  }\\n\\n  var lineWidth = getWidth(textLine, font);\\n\\n  if (lineWidth <= containerWidth) {\\n    return textLine;\\n  }\\n\\n  for (var j = 0;; j++) {\\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\\n      textLine += options.ellipsis;\\n      break;\\n    }\\n\\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\\n    textLine = textLine.substr(0, subLength);\\n    lineWidth = getWidth(textLine, font);\\n  }\\n\\n  if (textLine === '') {\\n    textLine = options.placeholder;\\n  }\\n\\n  return textLine;\\n}\\n\\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\\n  var width = 0;\\n  var i = 0;\\n\\n  for (var len = text.length; i < len && width < contentWidth; i++) {\\n    var charCode = text.charCodeAt(i);\\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\\n  }\\n\\n  return i;\\n}\\n/**\\n * @public\\n * @param {string} font\\n * @return {number} line height\\n */\\n\\n\\nfunction getLineHeight(font) {\\n  // FIXME A rough approach.\\n  return getWidth('国', font);\\n}\\n/**\\n * @public\\n * @param {string} text\\n * @param {string} font\\n * @return {Object} width\\n */\\n\\n\\nfunction measureText(text, font) {\\n  return methods.measureText(text, font);\\n} // Avoid assign to an exported variable, for transforming to cjs.\\n\\n\\nmethods.measureText = function (text, font) {\\n  var ctx = getContext();\\n  ctx.font = font || DEFAULT_FONT;\\n  return ctx.measureText(text);\\n};\\n/**\\n * @public\\n * @param {string} text\\n * @param {string} font\\n * @param {Object} [truncate]\\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\\n *  Notice: for performance, do not calculate outerWidth util needed.\\n */\\n\\n\\nfunction parsePlainText(text, font, padding, truncate) {\\n  text != null && (text += '');\\n  var lineHeight = getLineHeight(font);\\n  var lines = text ? text.split('\\\\n') : [];\\n  var height = lines.length * lineHeight;\\n  var outerHeight = height;\\n\\n  if (padding) {\\n    outerHeight += padding[0] + padding[2];\\n  }\\n\\n  if (text && truncate) {\\n    var truncOuterHeight = truncate.outerHeight;\\n    var truncOuterWidth = truncate.outerWidth;\\n\\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\\n      text = '';\\n      lines = [];\\n    } else if (truncOuterWidth != null) {\\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\\n        minChar: truncate.minChar,\\n        placeholder: truncate.placeholder\\n      }); // FIXME\\n      // It is not appropriate that every line has '...' when truncate multiple lines.\\n\\n      for (var i = 0, len = lines.length; i < len; i++) {\\n        lines[i] = truncateSingleLine(lines[i], options);\\n      }\\n    }\\n  }\\n\\n  return {\\n    lines: lines,\\n    height: height,\\n    outerHeight: outerHeight,\\n    lineHeight: lineHeight\\n  };\\n}\\n/**\\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\\n * Also consider 'bbbb{a|xxx\\\\nzzz}xxxx\\\\naaaa'.\\n *\\n * @public\\n * @param {string} text\\n * @param {Object} style\\n * @return {Object} block\\n * {\\n *      width,\\n *      height,\\n *      lines: [{\\n *          lineHeight,\\n *          width,\\n *          tokens: [[{\\n *              styleName,\\n *              text,\\n *              width,      // include textPadding\\n *              height,     // include textPadding\\n *              textWidth, // pure text width\\n *              textHeight, // pure text height\\n *              lineHeihgt,\\n *              font,\\n *              textAlign,\\n *              textVerticalAlign\\n *          }], [...], ...]\\n *      }, ...]\\n * }\\n * If styleName is undefined, it is plain text.\\n */\\n\\n\\nfunction parseRichText(text, style) {\\n  var contentBlock = {\\n    lines: [],\\n    width: 0,\\n    height: 0\\n  };\\n  text != null && (text += '');\\n\\n  if (!text) {\\n    return contentBlock;\\n  }\\n\\n  var lastIndex = STYLE_REG.lastIndex = 0;\\n  var result;\\n\\n  while ((result = STYLE_REG.exec(text)) != null) {\\n    var matchedIndex = result.index;\\n\\n    if (matchedIndex > lastIndex) {\\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\\n    }\\n\\n    pushTokens(contentBlock, result[2], result[1]);\\n    lastIndex = STYLE_REG.lastIndex;\\n  }\\n\\n  if (lastIndex < text.length) {\\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\\n  }\\n\\n  var lines = contentBlock.lines;\\n  var contentHeight = 0;\\n  var contentWidth = 0; // For `textWidth: 100%`\\n\\n  var pendingList = [];\\n  var stlPadding = style.textPadding;\\n  var truncate = style.truncate;\\n  var truncateWidth = truncate && truncate.outerWidth;\\n  var truncateHeight = truncate && truncate.outerHeight;\\n\\n  if (stlPadding) {\\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\\n  } // Calculate layout info of tokens.\\n\\n\\n  for (var i = 0; i < lines.length; i++) {\\n    var line = lines[i];\\n    var lineHeight = 0;\\n    var lineWidth = 0;\\n\\n    for (var j = 0; j < line.tokens.length; j++) {\\n      var token = line.tokens[j];\\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\\n\\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\\n\\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\\n\\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\\n      // as box height of the block.\\n      tokenStyle.textHeight, getLineHeight(font));\\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\\n      token.height = tokenHeight;\\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\\n\\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\\n        return {\\n          lines: [],\\n          width: 0,\\n          height: 0\\n        };\\n      }\\n\\n      token.textWidth = getWidth(token.text, font);\\n      var tokenWidth = tokenStyle.textWidth;\\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\\n      // line when box width is needed to be auto.\\n\\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\\n        token.percentWidth = tokenWidth;\\n        pendingList.push(token);\\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\\n        // and it is too complicated.\\n      } else {\\n        if (tokenWidthNotSpecified) {\\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\\n          // `getBoundingRect()` will not get correct result.\\n\\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\\n          // (1) If image is not loaded, it will be loaded at render phase and call\\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\\n          // image, and then the right size will be calculated here at the next tick.\\n          // See `graphic/helper/text.js`.\\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\\n          // use `imageHelper.findExistImage` to find cached image.\\n          // `imageHelper.findExistImage` will always be called here before\\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\\n          // which ensures that image will not be rendered before correct size calcualted.\\n\\n          if (bgImg) {\\n            bgImg = imageHelper.findExistImage(bgImg);\\n\\n            if (imageHelper.isImageReady(bgImg)) {\\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\\n            }\\n          }\\n        }\\n\\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\\n        tokenWidth += paddingW;\\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\\n\\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\\n            token.text = '';\\n            token.textWidth = tokenWidth = 0;\\n          } else {\\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\\n              minChar: truncate.minChar\\n            });\\n            token.textWidth = getWidth(token.text, font);\\n            tokenWidth = token.textWidth + paddingW;\\n          }\\n        }\\n      }\\n\\n      lineWidth += token.width = tokenWidth;\\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\\n    }\\n\\n    line.width = lineWidth;\\n    line.lineHeight = lineHeight;\\n    contentHeight += lineHeight;\\n    contentWidth = Math.max(contentWidth, lineWidth);\\n  }\\n\\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\\n\\n  if (stlPadding) {\\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\\n  }\\n\\n  for (var i = 0; i < pendingList.length; i++) {\\n    var token = pendingList[i];\\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\\n\\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\\n  }\\n\\n  return contentBlock;\\n}\\n\\nfunction pushTokens(block, str, styleName) {\\n  var isEmptyStr = str === '';\\n  var strs = str.split('\\\\n');\\n  var lines = block.lines;\\n\\n  for (var i = 0; i < strs.length; i++) {\\n    var text = strs[i];\\n    var token = {\\n      styleName: styleName,\\n      text: text,\\n      isLineHolder: !text && !isEmptyStr\\n    }; // The first token should be appended to the last line.\\n\\n    if (!i) {\\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\\n        tokens: []\\n      })).tokens; // Consider cases:\\n      // (1) ''.split('\\\\n') => ['', '\\\\n', ''], the '' at the first item\\n      // (which is a placeholder) should be replaced by new token.\\n      // (2) A image backage, where token likes {a|}.\\n      // (3) A redundant '' will affect textAlign in line.\\n      // (4) tokens with the same tplName should not be merged, because\\n      // they should be displayed in different box (with border and padding).\\n\\n      var tokensLen = tokens.length;\\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \\\"lineHolder\\\" or\\n      // \\\"emptyStr\\\". Otherwise a redundant '' will affect textAlign in line.\\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\\n    } // Other tokens always start a new line.\\n    else {\\n        // If there is '', insert it as a placeholder.\\n        lines.push({\\n          tokens: [token]\\n        });\\n      }\\n  }\\n}\\n\\nfunction makeFont(style) {\\n  // FIXME in node-canvas fontWeight is before fontStyle\\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\\n  style.fontFamily || 'sans-serif'].join(' ');\\n  return font && trim(font) || style.textFont || style.font;\\n}\\n\\nexports.DEFAULT_FONT = DEFAULT_FONT;\\nexports.$override = $override;\\nexports.getWidth = getWidth;\\nexports.getBoundingRect = getBoundingRect;\\nexports.adjustTextX = adjustTextX;\\nexports.adjustTextY = adjustTextY;\\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\\nexports.truncateText = truncateText;\\nexports.getLineHeight = getLineHeight;\\nexports.measureText = measureText;\\nexports.parsePlainText = parsePlainText;\\nexports.parseRichText = parseRichText;\\nexports.makeFont = makeFont;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///76\\n\")},function(module,exports,__webpack_require__){eval(\"var _vector = __webpack_require__(62);\\n\\nvar v2Create = _vector.create;\\nvar v2DistSquare = _vector.distSquare;\\n\\n/**\\n * 曲线辅助模块\\n * @module zrender/core/curve\\n * @author pissang(https://www.github.com/pissang)\\n */\\nvar mathPow = Math.pow;\\nvar mathSqrt = Math.sqrt;\\nvar EPSILON = 1e-8;\\nvar EPSILON_NUMERIC = 1e-4;\\nvar THREE_SQRT = mathSqrt(3);\\nvar ONE_THIRD = 1 / 3; // 临时变量\\n\\nvar _v0 = v2Create();\\n\\nvar _v1 = v2Create();\\n\\nvar _v2 = v2Create();\\n\\nfunction isAroundZero(val) {\\n  return val > -EPSILON && val < EPSILON;\\n}\\n\\nfunction isNotAroundZero(val) {\\n  return val > EPSILON || val < -EPSILON;\\n}\\n/**\\n * 计算三次贝塞尔值\\n * @memberOf module:zrender/core/curve\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} p3\\n * @param  {number} t\\n * @return {number}\\n */\\n\\n\\nfunction cubicAt(p0, p1, p2, p3, t) {\\n  var onet = 1 - t;\\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\\n}\\n/**\\n * 计算三次贝塞尔导数值\\n * @memberOf module:zrender/core/curve\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} p3\\n * @param  {number} t\\n * @return {number}\\n */\\n\\n\\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\\n  var onet = 1 - t;\\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\\n}\\n/**\\n * 计算三次贝塞尔方程根，使用盛金公式\\n * @memberOf module:zrender/core/curve\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} p3\\n * @param  {number} val\\n * @param  {Array.<number>} roots\\n * @return {number} 有效根数目\\n */\\n\\n\\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\\n  // Evaluate roots of cubic functions\\n  var a = p3 + 3 * (p1 - p2) - p0;\\n  var b = 3 * (p2 - p1 * 2 + p0);\\n  var c = 3 * (p1 - p0);\\n  var d = p0 - val;\\n  var A = b * b - 3 * a * c;\\n  var B = b * c - 9 * a * d;\\n  var C = c * c - 3 * b * d;\\n  var n = 0;\\n\\n  if (isAroundZero(A) && isAroundZero(B)) {\\n    if (isAroundZero(b)) {\\n      roots[0] = 0;\\n    } else {\\n      var t1 = -c / b; //t1, t2, t3, b is not zero\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        roots[n++] = t1;\\n      }\\n    }\\n  } else {\\n    var disc = B * B - 4 * A * C;\\n\\n    if (isAroundZero(disc)) {\\n      var K = B / A;\\n      var t1 = -b / a + K; // t1, a is not zero\\n\\n      var t2 = -K / 2; // t2, t3\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        roots[n++] = t1;\\n      }\\n\\n      if (t2 >= 0 && t2 <= 1) {\\n        roots[n++] = t2;\\n      }\\n    } else if (disc > 0) {\\n      var discSqrt = mathSqrt(disc);\\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\\n\\n      if (Y1 < 0) {\\n        Y1 = -mathPow(-Y1, ONE_THIRD);\\n      } else {\\n        Y1 = mathPow(Y1, ONE_THIRD);\\n      }\\n\\n      if (Y2 < 0) {\\n        Y2 = -mathPow(-Y2, ONE_THIRD);\\n      } else {\\n        Y2 = mathPow(Y2, ONE_THIRD);\\n      }\\n\\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        roots[n++] = t1;\\n      }\\n    } else {\\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\\n      var theta = Math.acos(T) / 3;\\n      var ASqrt = mathSqrt(A);\\n      var tmp = Math.cos(theta);\\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        roots[n++] = t1;\\n      }\\n\\n      if (t2 >= 0 && t2 <= 1) {\\n        roots[n++] = t2;\\n      }\\n\\n      if (t3 >= 0 && t3 <= 1) {\\n        roots[n++] = t3;\\n      }\\n    }\\n  }\\n\\n  return n;\\n}\\n/**\\n * 计算三次贝塞尔方程极限值的位置\\n * @memberOf module:zrender/core/curve\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} p3\\n * @param  {Array.<number>} extrema\\n * @return {number} 有效数目\\n */\\n\\n\\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\\n  var c = 3 * p1 - 3 * p0;\\n  var n = 0;\\n\\n  if (isAroundZero(a)) {\\n    if (isNotAroundZero(b)) {\\n      var t1 = -c / b;\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        extrema[n++] = t1;\\n      }\\n    }\\n  } else {\\n    var disc = b * b - 4 * a * c;\\n\\n    if (isAroundZero(disc)) {\\n      extrema[0] = -b / (2 * a);\\n    } else if (disc > 0) {\\n      var discSqrt = mathSqrt(disc);\\n      var t1 = (-b + discSqrt) / (2 * a);\\n      var t2 = (-b - discSqrt) / (2 * a);\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        extrema[n++] = t1;\\n      }\\n\\n      if (t2 >= 0 && t2 <= 1) {\\n        extrema[n++] = t2;\\n      }\\n    }\\n  }\\n\\n  return n;\\n}\\n/**\\n * 细分三次贝塞尔曲线\\n * @memberOf module:zrender/core/curve\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} p3\\n * @param  {number} t\\n * @param  {Array.<number>} out\\n */\\n\\n\\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\\n  var p01 = (p1 - p0) * t + p0;\\n  var p12 = (p2 - p1) * t + p1;\\n  var p23 = (p3 - p2) * t + p2;\\n  var p012 = (p12 - p01) * t + p01;\\n  var p123 = (p23 - p12) * t + p12;\\n  var p0123 = (p123 - p012) * t + p012; // Seg0\\n\\n  out[0] = p0;\\n  out[1] = p01;\\n  out[2] = p012;\\n  out[3] = p0123; // Seg1\\n\\n  out[4] = p0123;\\n  out[5] = p123;\\n  out[6] = p23;\\n  out[7] = p3;\\n}\\n/**\\n * 投射点到三次贝塞尔曲线上，返回投射距离。\\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\\n * @param {number} x0\\n * @param {number} y0\\n * @param {number} x1\\n * @param {number} y1\\n * @param {number} x2\\n * @param {number} y2\\n * @param {number} x3\\n * @param {number} y3\\n * @param {number} x\\n * @param {number} y\\n * @param {Array.<number>} [out] 投射点\\n * @return {number}\\n */\\n\\n\\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\\n  // http://pomax.github.io/bezierinfo/#projections\\n  var t;\\n  var interval = 0.005;\\n  var d = Infinity;\\n  var prev;\\n  var next;\\n  var d1;\\n  var d2;\\n  _v0[0] = x;\\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\\n  // PENDING\\n\\n  for (var _t = 0; _t < 1; _t += 0.05) {\\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\\n    d1 = v2DistSquare(_v0, _v1);\\n\\n    if (d1 < d) {\\n      t = _t;\\n      d = d1;\\n    }\\n  }\\n\\n  d = Infinity; // At most 32 iteration\\n\\n  for (var i = 0; i < 32; i++) {\\n    if (interval < EPSILON_NUMERIC) {\\n      break;\\n    }\\n\\n    prev = t - interval;\\n    next = t + interval; // t - interval\\n\\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\\n    d1 = v2DistSquare(_v1, _v0);\\n\\n    if (prev >= 0 && d1 < d) {\\n      t = prev;\\n      d = d1;\\n    } else {\\n      // t + interval\\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\\n      d2 = v2DistSquare(_v2, _v0);\\n\\n      if (next <= 1 && d2 < d) {\\n        t = next;\\n        d = d2;\\n      } else {\\n        interval *= 0.5;\\n      }\\n    }\\n  } // t\\n\\n\\n  if (out) {\\n    out[0] = cubicAt(x0, x1, x2, x3, t);\\n    out[1] = cubicAt(y0, y1, y2, y3, t);\\n  } // console.log(interval, i);\\n\\n\\n  return mathSqrt(d);\\n}\\n/**\\n * 计算二次方贝塞尔值\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} t\\n * @return {number}\\n */\\n\\n\\nfunction quadraticAt(p0, p1, p2, t) {\\n  var onet = 1 - t;\\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\\n}\\n/**\\n * 计算二次方贝塞尔导数值\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} t\\n * @return {number}\\n */\\n\\n\\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\\n}\\n/**\\n * 计算二次方贝塞尔方程根\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} t\\n * @param  {Array.<number>} roots\\n * @return {number} 有效根数目\\n */\\n\\n\\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\\n  var a = p0 - 2 * p1 + p2;\\n  var b = 2 * (p1 - p0);\\n  var c = p0 - val;\\n  var n = 0;\\n\\n  if (isAroundZero(a)) {\\n    if (isNotAroundZero(b)) {\\n      var t1 = -c / b;\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        roots[n++] = t1;\\n      }\\n    }\\n  } else {\\n    var disc = b * b - 4 * a * c;\\n\\n    if (isAroundZero(disc)) {\\n      var t1 = -b / (2 * a);\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        roots[n++] = t1;\\n      }\\n    } else if (disc > 0) {\\n      var discSqrt = mathSqrt(disc);\\n      var t1 = (-b + discSqrt) / (2 * a);\\n      var t2 = (-b - discSqrt) / (2 * a);\\n\\n      if (t1 >= 0 && t1 <= 1) {\\n        roots[n++] = t1;\\n      }\\n\\n      if (t2 >= 0 && t2 <= 1) {\\n        roots[n++] = t2;\\n      }\\n    }\\n  }\\n\\n  return n;\\n}\\n/**\\n * 计算二次贝塞尔方程极限值\\n * @memberOf module:zrender/core/curve\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @return {number}\\n */\\n\\n\\nfunction quadraticExtremum(p0, p1, p2) {\\n  var divider = p0 + p2 - 2 * p1;\\n\\n  if (divider === 0) {\\n    // p1 is center of p0 and p2\\n    return 0.5;\\n  } else {\\n    return (p0 - p1) / divider;\\n  }\\n}\\n/**\\n * 细分二次贝塞尔曲线\\n * @memberOf module:zrender/core/curve\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} t\\n * @param  {Array.<number>} out\\n */\\n\\n\\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\\n  var p01 = (p1 - p0) * t + p0;\\n  var p12 = (p2 - p1) * t + p1;\\n  var p012 = (p12 - p01) * t + p01; // Seg0\\n\\n  out[0] = p0;\\n  out[1] = p01;\\n  out[2] = p012; // Seg1\\n\\n  out[3] = p012;\\n  out[4] = p12;\\n  out[5] = p2;\\n}\\n/**\\n * 投射点到二次贝塞尔曲线上，返回投射距离。\\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\\n * @param {number} x0\\n * @param {number} y0\\n * @param {number} x1\\n * @param {number} y1\\n * @param {number} x2\\n * @param {number} y2\\n * @param {number} x\\n * @param {number} y\\n * @param {Array.<number>} out 投射点\\n * @return {number}\\n */\\n\\n\\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\\n  // http://pomax.github.io/bezierinfo/#projections\\n  var t;\\n  var interval = 0.005;\\n  var d = Infinity;\\n  _v0[0] = x;\\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\\n  // PENDING\\n\\n  for (var _t = 0; _t < 1; _t += 0.05) {\\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\\n    var d1 = v2DistSquare(_v0, _v1);\\n\\n    if (d1 < d) {\\n      t = _t;\\n      d = d1;\\n    }\\n  }\\n\\n  d = Infinity; // At most 32 iteration\\n\\n  for (var i = 0; i < 32; i++) {\\n    if (interval < EPSILON_NUMERIC) {\\n      break;\\n    }\\n\\n    var prev = t - interval;\\n    var next = t + interval; // t - interval\\n\\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\\n    var d1 = v2DistSquare(_v1, _v0);\\n\\n    if (prev >= 0 && d1 < d) {\\n      t = prev;\\n      d = d1;\\n    } else {\\n      // t + interval\\n      _v2[0] = quadraticAt(x0, x1, x2, next);\\n      _v2[1] = quadraticAt(y0, y1, y2, next);\\n      var d2 = v2DistSquare(_v2, _v0);\\n\\n      if (next <= 1 && d2 < d) {\\n        t = next;\\n        d = d2;\\n      } else {\\n        interval *= 0.5;\\n      }\\n    }\\n  } // t\\n\\n\\n  if (out) {\\n    out[0] = quadraticAt(x0, x1, x2, t);\\n    out[1] = quadraticAt(y0, y1, y2, t);\\n  } // console.log(interval, i);\\n\\n\\n  return mathSqrt(d);\\n}\\n\\nexports.cubicAt = cubicAt;\\nexports.cubicDerivativeAt = cubicDerivativeAt;\\nexports.cubicRootAt = cubicRootAt;\\nexports.cubicExtrema = cubicExtrema;\\nexports.cubicSubdivide = cubicSubdivide;\\nexports.cubicProjectPoint = cubicProjectPoint;\\nexports.quadraticAt = quadraticAt;\\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\\nexports.quadraticRootAt = quadraticRootAt;\\nexports.quadraticExtremum = quadraticExtremum;\\nexports.quadraticSubdivide = quadraticSubdivide;\\nexports.quadraticProjectPoint = quadraticProjectPoint;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///77\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\nvar _number = __webpack_require__(65);\\n\\nvar parsePercent = _number.parsePercent;\\n\\nvar formatUtil = __webpack_require__(69);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// Layout helpers for each component positioning\\nvar each = zrUtil.each;\\n/**\\n * @public\\n */\\n\\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\\n/**\\n * @public\\n */\\n\\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\\n\\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\\n  var x = 0;\\n  var y = 0;\\n\\n  if (maxWidth == null) {\\n    maxWidth = Infinity;\\n  }\\n\\n  if (maxHeight == null) {\\n    maxHeight = Infinity;\\n  }\\n\\n  var currentLineMaxSize = 0;\\n  group.eachChild(function (child, idx) {\\n    var position = child.position;\\n    var rect = child.getBoundingRect();\\n    var nextChild = group.childAt(idx + 1);\\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\\n    var nextX;\\n    var nextY;\\n\\n    if (orient === 'horizontal') {\\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\\n      // FIXME compare before adding gap?\\n\\n      if (nextX > maxWidth || child.newline) {\\n        x = 0;\\n        nextX = moveX;\\n        y += currentLineMaxSize + gap;\\n        currentLineMaxSize = rect.height;\\n      } else {\\n        // FIXME: consider rect.y is not `0`?\\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\\n      }\\n    } else {\\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\\n\\n      if (nextY > maxHeight || child.newline) {\\n        x += currentLineMaxSize + gap;\\n        y = 0;\\n        nextY = moveY;\\n        currentLineMaxSize = rect.width;\\n      } else {\\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\\n      }\\n    }\\n\\n    if (child.newline) {\\n      return;\\n    }\\n\\n    position[0] = x;\\n    position[1] = y;\\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\\n  });\\n}\\n/**\\n * VBox or HBox layouting\\n * @param {string} orient\\n * @param {module:zrender/container/Group} group\\n * @param {number} gap\\n * @param {number} [width=Infinity]\\n * @param {number} [height=Infinity]\\n */\\n\\n\\nvar box = boxLayout;\\n/**\\n * VBox layouting\\n * @param {module:zrender/container/Group} group\\n * @param {number} gap\\n * @param {number} [width=Infinity]\\n * @param {number} [height=Infinity]\\n */\\n\\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\\n/**\\n * HBox layouting\\n * @param {module:zrender/container/Group} group\\n * @param {number} gap\\n * @param {number} [width=Infinity]\\n * @param {number} [height=Infinity]\\n */\\n\\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\\n/**\\n * If x or x2 is not specified or 'center' 'left' 'right',\\n * the width would be as long as possible.\\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\\n * the height would be as long as possible.\\n *\\n * @param {Object} positionInfo\\n * @param {number|string} [positionInfo.x]\\n * @param {number|string} [positionInfo.y]\\n * @param {number|string} [positionInfo.x2]\\n * @param {number|string} [positionInfo.y2]\\n * @param {Object} containerRect {width, height}\\n * @param {string|number} margin\\n * @return {Object} {width, height}\\n */\\n\\nfunction getAvailableSize(positionInfo, containerRect, margin) {\\n  var containerWidth = containerRect.width;\\n  var containerHeight = containerRect.height;\\n  var x = parsePercent(positionInfo.x, containerWidth);\\n  var y = parsePercent(positionInfo.y, containerHeight);\\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\\n  margin = formatUtil.normalizeCssArray(margin || 0);\\n  return {\\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\\n  };\\n}\\n/**\\n * Parse position info.\\n *\\n * @param {Object} positionInfo\\n * @param {number|string} [positionInfo.left]\\n * @param {number|string} [positionInfo.top]\\n * @param {number|string} [positionInfo.right]\\n * @param {number|string} [positionInfo.bottom]\\n * @param {number|string} [positionInfo.width]\\n * @param {number|string} [positionInfo.height]\\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\\n * @param {Object} containerRect\\n * @param {string|number} [margin]\\n *\\n * @return {module:zrender/core/BoundingRect}\\n */\\n\\n\\nfunction getLayoutRect(positionInfo, containerRect, margin) {\\n  margin = formatUtil.normalizeCssArray(margin || 0);\\n  var containerWidth = containerRect.width;\\n  var containerHeight = containerRect.height;\\n  var left = parsePercent(positionInfo.left, containerWidth);\\n  var top = parsePercent(positionInfo.top, containerHeight);\\n  var right = parsePercent(positionInfo.right, containerWidth);\\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\\n  var width = parsePercent(positionInfo.width, containerWidth);\\n  var height = parsePercent(positionInfo.height, containerHeight);\\n  var verticalMargin = margin[2] + margin[0];\\n  var horizontalMargin = margin[1] + margin[3];\\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\\n\\n  if (isNaN(width)) {\\n    width = containerWidth - right - horizontalMargin - left;\\n  }\\n\\n  if (isNaN(height)) {\\n    height = containerHeight - bottom - verticalMargin - top;\\n  }\\n\\n  if (aspect != null) {\\n    // If width and height are not given\\n    // 1. Graph should not exceeds the container\\n    // 2. Aspect must be keeped\\n    // 3. Graph should take the space as more as possible\\n    // FIXME\\n    // Margin is not considered, because there is no case that both\\n    // using margin and aspect so far.\\n    if (isNaN(width) && isNaN(height)) {\\n      if (aspect > containerWidth / containerHeight) {\\n        width = containerWidth * 0.8;\\n      } else {\\n        height = containerHeight * 0.8;\\n      }\\n    } // Calculate width or height with given aspect\\n\\n\\n    if (isNaN(width)) {\\n      width = aspect * height;\\n    }\\n\\n    if (isNaN(height)) {\\n      height = width / aspect;\\n    }\\n  } // If left is not specified, calculate left from right and width\\n\\n\\n  if (isNaN(left)) {\\n    left = containerWidth - right - width - horizontalMargin;\\n  }\\n\\n  if (isNaN(top)) {\\n    top = containerHeight - bottom - height - verticalMargin;\\n  } // Align left and top\\n\\n\\n  switch (positionInfo.left || positionInfo.right) {\\n    case 'center':\\n      left = containerWidth / 2 - width / 2 - margin[3];\\n      break;\\n\\n    case 'right':\\n      left = containerWidth - width - horizontalMargin;\\n      break;\\n  }\\n\\n  switch (positionInfo.top || positionInfo.bottom) {\\n    case 'middle':\\n    case 'center':\\n      top = containerHeight / 2 - height / 2 - margin[0];\\n      break;\\n\\n    case 'bottom':\\n      top = containerHeight - height - verticalMargin;\\n      break;\\n  } // If something is wrong and left, top, width, height are calculated as NaN\\n\\n\\n  left = left || 0;\\n  top = top || 0;\\n\\n  if (isNaN(width)) {\\n    // Width may be NaN if only one value is given except width\\n    width = containerWidth - horizontalMargin - left - (right || 0);\\n  }\\n\\n  if (isNaN(height)) {\\n    // Height may be NaN if only one value is given except height\\n    height = containerHeight - verticalMargin - top - (bottom || 0);\\n  }\\n\\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\\n  rect.margin = margin;\\n  return rect;\\n}\\n/**\\n * Position a zr element in viewport\\n *  Group position is specified by either\\n *  {left, top}, {right, bottom}\\n *  If all properties exists, right and bottom will be igonred.\\n *\\n * Logic:\\n *     1. Scale (against origin point in parent coord)\\n *     2. Rotate (against origin point in parent coord)\\n *     3. Traslate (with el.position by this method)\\n * So this method only fixes the last step 'Traslate', which does not affect\\n * scaling and rotating.\\n *\\n * If be called repeatly with the same input el, the same result will be gotten.\\n *\\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\\n * @param {Object} positionInfo\\n * @param {number|string} [positionInfo.left]\\n * @param {number|string} [positionInfo.top]\\n * @param {number|string} [positionInfo.right]\\n * @param {number|string} [positionInfo.bottom]\\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\\n * @param {Object} containerRect\\n * @param {string|number} margin\\n * @param {Object} [opt]\\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\\n * @param {Array.<number>} [opt.boundingMode='all']\\n *        Specify how to calculate boundingRect when locating.\\n *        'all': Position the boundingRect that is transformed and uioned\\n *               both itself and its descendants.\\n *               This mode simplies confine the elements in the bounding\\n *               of their container (e.g., using 'right: 0').\\n *        'raw': Position the boundingRect that is not transformed and only itself.\\n *               This mode is useful when you want a element can overflow its\\n *               container. (Consider a rotated circle needs to be located in a corner.)\\n *               In this mode positionInfo.width/height can only be number.\\n */\\n\\n\\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\\n  var h = !opt || !opt.hv || opt.hv[0];\\n  var v = !opt || !opt.hv || opt.hv[1];\\n  var boundingMode = opt && opt.boundingMode || 'all';\\n\\n  if (!h && !v) {\\n    return;\\n  }\\n\\n  var rect;\\n\\n  if (boundingMode === 'raw') {\\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\\n  } else {\\n    rect = el.getBoundingRect();\\n\\n    if (el.needLocalTransform()) {\\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\\n      // which should not be modified.\\n\\n      rect = rect.clone();\\n      rect.applyTransform(transform);\\n    }\\n  } // The real width and height can not be specified but calculated by the given el.\\n\\n\\n  positionInfo = getLayoutRect(zrUtil.defaults({\\n    width: rect.width,\\n    height: rect.height\\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\\n  // (see zrender/core/Transformable#getLocalTransform),\\n  // we can just only modify el.position to get final result.\\n\\n  var elPos = el.position;\\n  var dx = h ? positionInfo.x - rect.x : 0;\\n  var dy = v ? positionInfo.y - rect.y : 0;\\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\\n}\\n/**\\n * @param {Object} option Contains some of the properties in HV_NAMES.\\n * @param {number} hvIdx 0: horizontal; 1: vertical.\\n */\\n\\n\\nfunction sizeCalculable(option, hvIdx) {\\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\\n}\\n/**\\n * Consider Case:\\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\\n * through setOption or media query, using normal zrUtil.merge will cause\\n * {right: 0} does not take effect.\\n *\\n * @example\\n * ComponentModel.extend({\\n *     init: function () {\\n *         ...\\n *         var inputPositionParams = layout.getLayoutParams(option);\\n *         this.mergeOption(inputPositionParams);\\n *     },\\n *     mergeOption: function (newOption) {\\n *         newOption && zrUtil.merge(thisOption, newOption, true);\\n *         layout.mergeLayoutParam(thisOption, newOption);\\n *     }\\n * });\\n *\\n * @param {Object} targetOption\\n * @param {Object} newOption\\n * @param {Object|string} [opt]\\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\\n *  that width (or height) should not be calculated by left and right (or top and bottom).\\n */\\n\\n\\nfunction mergeLayoutParam(targetOption, newOption, opt) {\\n  !zrUtil.isObject(opt) && (opt = {});\\n  var ignoreSize = opt.ignoreSize;\\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\\n  var hResult = merge(HV_NAMES[0], 0);\\n  var vResult = merge(HV_NAMES[1], 1);\\n  copy(HV_NAMES[0], targetOption, hResult);\\n  copy(HV_NAMES[1], targetOption, vResult);\\n\\n  function merge(names, hvIdx) {\\n    var newParams = {};\\n    var newValueCount = 0;\\n    var merged = {};\\n    var mergedValueCount = 0;\\n    var enoughParamNumber = 2;\\n    each(names, function (name) {\\n      merged[name] = targetOption[name];\\n    });\\n    each(names, function (name) {\\n      // Consider case: newOption.width is null, which is\\n      // set by user for removing width setting.\\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\\n      hasValue(newParams, name) && newValueCount++;\\n      hasValue(merged, name) && mergedValueCount++;\\n    });\\n\\n    if (ignoreSize[hvIdx]) {\\n      // Only one of left/right is premitted to exist.\\n      if (hasValue(newOption, names[1])) {\\n        merged[names[2]] = null;\\n      } else if (hasValue(newOption, names[2])) {\\n        merged[names[1]] = null;\\n      }\\n\\n      return merged;\\n    } // Case: newOption: {width: ..., right: ...},\\n    // or targetOption: {right: ...} and newOption: {width: ...},\\n    // There is no conflict when merged only has params count\\n    // little than enoughParamNumber.\\n\\n\\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\\n      return merged;\\n    } // Case: newOption: {width: ..., right: ...},\\n    // Than we can make sure user only want those two, and ignore\\n    // all origin params in targetOption.\\n    else if (newValueCount >= enoughParamNumber) {\\n        return newParams;\\n      } else {\\n        // Chose another param from targetOption by priority.\\n        for (var i = 0; i < names.length; i++) {\\n          var name = names[i];\\n\\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\\n            newParams[name] = targetOption[name];\\n            break;\\n          }\\n        }\\n\\n        return newParams;\\n      }\\n  }\\n\\n  function hasProp(obj, name) {\\n    return obj.hasOwnProperty(name);\\n  }\\n\\n  function hasValue(obj, name) {\\n    return obj[name] != null && obj[name] !== 'auto';\\n  }\\n\\n  function copy(names, target, source) {\\n    each(names, function (name) {\\n      target[name] = source[name];\\n    });\\n  }\\n}\\n/**\\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\\n * @param {Object} source\\n * @return {Object} Result contains those props.\\n */\\n\\n\\nfunction getLayoutParams(source) {\\n  return copyLayoutParams({}, source);\\n}\\n/**\\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\\n * @param {Object} source\\n * @return {Object} Result contains those props.\\n */\\n\\n\\nfunction copyLayoutParams(target, source) {\\n  source && target && each(LOCATION_PARAMS, function (name) {\\n    source.hasOwnProperty(name) && (target[name] = source[name]);\\n  });\\n  return target;\\n}\\n\\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\\nexports.HV_NAMES = HV_NAMES;\\nexports.box = box;\\nexports.vbox = vbox;\\nexports.hbox = hbox;\\nexports.getAvailableSize = getAvailableSize;\\nexports.getLayoutRect = getLayoutRect;\\nexports.positionElement = positionElement;\\nexports.sizeCalculable = sizeCalculable;\\nexports.mergeLayoutParam = mergeLayoutParam;\\nexports.getLayoutParams = getLayoutParams;\\nexports.copyLayoutParams = copyLayoutParams;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///78\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar each = _util.each;\\nvar isString = _util.isString;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Note that it is too complicated to support 3d stack by value\\n * (have to create two-dimension inverted index), so in 3d case\\n * we just support that stacked by index.\\n *\\n * @param {module:echarts/model/Series} seriesModel\\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\\n *        The input dimensionInfoList will be modified.\\n * @param {Object} [opt]\\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\\n * @param {boolean} [opt.byIndex=false]\\n * @return {Object} calculationInfo\\n * {\\n *     stackedDimension: string\\n *     stackedByDimension: string\\n *     isStackedByIndex: boolean\\n *     stackedOverDimension: string\\n *     stackResultDimension: string\\n * }\\n */\\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\\n  opt = opt || {};\\n  var byIndex = opt.byIndex;\\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\\n\\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\\n  var stackedByDimInfo;\\n  var stackedDimInfo;\\n  var stackResultDimension;\\n  var stackedOverDimension;\\n  each(dimensionInfoList, function (dimensionInfo, index) {\\n    if (isString(dimensionInfo)) {\\n      dimensionInfoList[index] = dimensionInfo = {\\n        name: dimensionInfo\\n      };\\n    }\\n\\n    if (mayStack && !dimensionInfo.isExtraCoord) {\\n      // Find the first ordinal dimension as the stackedByDimInfo.\\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\\n        stackedByDimInfo = dimensionInfo;\\n      } // Find the first stackable dimension as the stackedDimInfo.\\n\\n\\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\\n        stackedDimInfo = dimensionInfo;\\n      }\\n    }\\n  });\\n\\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\\n    // Compatible with previous design, value axis (time axis) only stack by index.\\n    // It may make sense if the user provides elaborately constructed data.\\n    byIndex = true;\\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\\n  // might not be a good way.\\n\\n\\n  if (stackedDimInfo) {\\n    // Use a weird name that not duplicated with other names.\\n    stackResultDimension = '__\\\\0ecstackresult';\\n    stackedOverDimension = '__\\\\0ecstackedover'; // Create inverted index to fast query index by value.\\n\\n    if (stackedByDimInfo) {\\n      stackedByDimInfo.createInvertedIndices = true;\\n    }\\n\\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\\n    var stackedDimType = stackedDimInfo.type;\\n    var stackedDimCoordIndex = 0;\\n    each(dimensionInfoList, function (dimensionInfo) {\\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\\n        stackedDimCoordIndex++;\\n      }\\n    });\\n    dimensionInfoList.push({\\n      name: stackResultDimension,\\n      coordDim: stackedDimCoordDim,\\n      coordDimIndex: stackedDimCoordIndex,\\n      type: stackedDimType,\\n      isExtraCoord: true,\\n      isCalculationCoord: true\\n    });\\n    stackedDimCoordIndex++;\\n    dimensionInfoList.push({\\n      name: stackedOverDimension,\\n      // This dimension contains stack base (generally, 0), so do not set it as\\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\\n      coordDim: stackedOverDimension,\\n      coordDimIndex: stackedDimCoordIndex,\\n      type: stackedDimType,\\n      isExtraCoord: true,\\n      isCalculationCoord: true\\n    });\\n  }\\n\\n  return {\\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\\n    isStackedByIndex: byIndex,\\n    stackedOverDimension: stackedOverDimension,\\n    stackResultDimension: stackResultDimension\\n  };\\n}\\n/**\\n * @param {module:echarts/data/List} data\\n * @param {string} stackedDim\\n */\\n\\n\\nfunction isDimensionStacked(data, stackedDim\\n/*, stackedByDim*/\\n) {\\n  // Each single series only maps to one pair of axis. So we do not need to\\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\\n  //     stackedByDim != null\\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\\n  //         : data.getCalculationInfo('isStackedByIndex')\\n  // );\\n}\\n/**\\n * @param {module:echarts/data/List} data\\n * @param {string} targetDim\\n * @param {string} [stackedByDim] If not input this parameter, check whether\\n *                                stacked by index.\\n * @return {string} dimension\\n */\\n\\n\\nfunction getStackedDimension(data, targetDim) {\\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\\n}\\n\\nexports.enableDataStack = enableDataStack;\\nexports.isDimensionStacked = isDimensionStacked;\\nexports.getStackedDimension = getStackedDimension;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///79\\n\")},function(module,exports){eval(\"/**\\n * Event Mixin\\n * @module zrender/mixin/Eventful\\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n *         pissang (https://www.github.com/pissang)\\n */\\nvar arrySlice = Array.prototype.slice;\\n/**\\n * Event dispatcher.\\n *\\n * @alias module:zrender/mixin/Eventful\\n * @constructor\\n * @param {Object} [eventProcessor] The object eventProcessor is the scope when\\n *        `eventProcessor.xxx` called.\\n * @param {Function} [eventProcessor.normalizeQuery]\\n *        param: {string|Object} Raw query.\\n *        return: {string|Object} Normalized query.\\n * @param {Function} [eventProcessor.filter] Event will be dispatched only\\n *        if it returns `true`.\\n *        param: {string} eventType\\n *        param: {string|Object} query\\n *        return: {boolean}\\n * @param {Function} [eventProcessor.afterTrigger] Call after all handlers called.\\n *        param: {string} eventType\\n */\\n\\nvar Eventful = function (eventProcessor) {\\n  this._$handlers = {};\\n  this._$eventProcessor = eventProcessor;\\n};\\n\\nEventful.prototype = {\\n  constructor: Eventful,\\n\\n  /**\\n   * The handler can only be triggered once, then removed.\\n   *\\n   * @param {string} event The event name.\\n   * @param {string|Object} [query] Condition used on event filter.\\n   * @param {Function} handler The event handler.\\n   * @param {Object} context\\n   */\\n  one: function (event, query, handler, context) {\\n    var _h = this._$handlers;\\n\\n    if (typeof query === 'function') {\\n      context = handler;\\n      handler = query;\\n      query = null;\\n    }\\n\\n    if (!handler || !event) {\\n      return this;\\n    }\\n\\n    query = normalizeQuery(this, query);\\n\\n    if (!_h[event]) {\\n      _h[event] = [];\\n    }\\n\\n    for (var i = 0; i < _h[event].length; i++) {\\n      if (_h[event][i].h === handler) {\\n        return this;\\n      }\\n    }\\n\\n    _h[event].push({\\n      h: handler,\\n      one: true,\\n      query: query,\\n      ctx: context || this\\n    });\\n\\n    return this;\\n  },\\n\\n  /**\\n   * Bind a handler.\\n   *\\n   * @param {string} event The event name.\\n   * @param {string|Object} [query] Condition used on event filter.\\n   * @param {Function} handler The event handler.\\n   * @param {Object} [context]\\n   */\\n  on: function (event, query, handler, context) {\\n    var _h = this._$handlers;\\n\\n    if (typeof query === 'function') {\\n      context = handler;\\n      handler = query;\\n      query = null;\\n    }\\n\\n    if (!handler || !event) {\\n      return this;\\n    }\\n\\n    query = normalizeQuery(this, query);\\n\\n    if (!_h[event]) {\\n      _h[event] = [];\\n    }\\n\\n    for (var i = 0; i < _h[event].length; i++) {\\n      if (_h[event][i].h === handler) {\\n        return this;\\n      }\\n    }\\n\\n    _h[event].push({\\n      h: handler,\\n      one: false,\\n      query: query,\\n      ctx: context || this\\n    });\\n\\n    return this;\\n  },\\n\\n  /**\\n   * Whether any handler has bound.\\n   *\\n   * @param  {string}  event\\n   * @return {boolean}\\n   */\\n  isSilent: function (event) {\\n    var _h = this._$handlers;\\n    return _h[event] && _h[event].length;\\n  },\\n\\n  /**\\n   * Unbind a event.\\n   *\\n   * @param {string} event The event name.\\n   * @param {Function} [handler] The event handler.\\n   */\\n  off: function (event, handler) {\\n    var _h = this._$handlers;\\n\\n    if (!event) {\\n      this._$handlers = {};\\n      return this;\\n    }\\n\\n    if (handler) {\\n      if (_h[event]) {\\n        var newList = [];\\n\\n        for (var i = 0, l = _h[event].length; i < l; i++) {\\n          if (_h[event][i].h !== handler) {\\n            newList.push(_h[event][i]);\\n          }\\n        }\\n\\n        _h[event] = newList;\\n      }\\n\\n      if (_h[event] && _h[event].length === 0) {\\n        delete _h[event];\\n      }\\n    } else {\\n      delete _h[event];\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * Dispatch a event.\\n   *\\n   * @param {string} type The event name.\\n   */\\n  trigger: function (type) {\\n    var _h = this._$handlers[type];\\n    var eventProcessor = this._$eventProcessor;\\n\\n    if (_h) {\\n      var args = arguments;\\n      var argLen = args.length;\\n\\n      if (argLen > 3) {\\n        args = arrySlice.call(args, 1);\\n      }\\n\\n      var len = _h.length;\\n\\n      for (var i = 0; i < len;) {\\n        var hItem = _h[i];\\n\\n        if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\\n          i++;\\n          continue;\\n        } // Optimize advise from backbone\\n\\n\\n        switch (argLen) {\\n          case 1:\\n            hItem.h.call(hItem.ctx);\\n            break;\\n\\n          case 2:\\n            hItem.h.call(hItem.ctx, args[1]);\\n            break;\\n\\n          case 3:\\n            hItem.h.call(hItem.ctx, args[1], args[2]);\\n            break;\\n\\n          default:\\n            // have more than 2 given arguments\\n            hItem.h.apply(hItem.ctx, args);\\n            break;\\n        }\\n\\n        if (hItem.one) {\\n          _h.splice(i, 1);\\n\\n          len--;\\n        } else {\\n          i++;\\n        }\\n      }\\n    }\\n\\n    eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\\n    return this;\\n  },\\n\\n  /**\\n   * Dispatch a event with context, which is specified at the last parameter.\\n   *\\n   * @param {string} type The event name.\\n   */\\n  triggerWithContext: function (type) {\\n    var _h = this._$handlers[type];\\n    var eventProcessor = this._$eventProcessor;\\n\\n    if (_h) {\\n      var args = arguments;\\n      var argLen = args.length;\\n\\n      if (argLen > 4) {\\n        args = arrySlice.call(args, 1, args.length - 1);\\n      }\\n\\n      var ctx = args[args.length - 1];\\n      var len = _h.length;\\n\\n      for (var i = 0; i < len;) {\\n        var hItem = _h[i];\\n\\n        if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\\n          i++;\\n          continue;\\n        } // Optimize advise from backbone\\n\\n\\n        switch (argLen) {\\n          case 1:\\n            hItem.h.call(ctx);\\n            break;\\n\\n          case 2:\\n            hItem.h.call(ctx, args[1]);\\n            break;\\n\\n          case 3:\\n            hItem.h.call(ctx, args[1], args[2]);\\n            break;\\n\\n          default:\\n            // have more than 2 given arguments\\n            hItem.h.apply(ctx, args);\\n            break;\\n        }\\n\\n        if (hItem.one) {\\n          _h.splice(i, 1);\\n\\n          len--;\\n        } else {\\n          i++;\\n        }\\n      }\\n    }\\n\\n    eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\\n    return this;\\n  }\\n};\\n\\nfunction normalizeQuery(host, query) {\\n  var eventProcessor = host._$eventProcessor;\\n\\n  if (query != null && eventProcessor && eventProcessor.normalizeQuery) {\\n    query = eventProcessor.normalizeQuery(query);\\n  }\\n\\n  return query;\\n} // ----------------------\\n// The events in zrender\\n// ----------------------\\n\\n/**\\n * @event module:zrender/mixin/Eventful#onclick\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#onmouseover\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#onmouseout\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#onmousemove\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#onmousewheel\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#onmousedown\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#onmouseup\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#ondrag\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#ondragstart\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#ondragend\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#ondragenter\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#ondragleave\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#ondragover\\n * @type {Function}\\n * @default null\\n */\\n\\n/**\\n * @event module:zrender/mixin/Eventful#ondrop\\n * @type {Function}\\n * @default null\\n */\\n\\n\\nvar _default = Eventful;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///80\\n\")},function(module,exports,__webpack_require__){eval(\"var zrUtil = __webpack_require__(59);\\n\\nvar Element = __webpack_require__(129);\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\n/**\\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\\n * @module zrender/graphic/Group\\n * @example\\n *     var Group = require('zrender/container/Group');\\n *     var Circle = require('zrender/graphic/shape/Circle');\\n *     var g = new Group();\\n *     g.position[0] = 100;\\n *     g.position[1] = 100;\\n *     g.add(new Circle({\\n *         style: {\\n *             x: 100,\\n *             y: 100,\\n *             r: 20,\\n *         }\\n *     }));\\n *     zr.add(g);\\n */\\n\\n/**\\n * @alias module:zrender/graphic/Group\\n * @constructor\\n * @extends module:zrender/mixin/Transformable\\n * @extends module:zrender/mixin/Eventful\\n */\\nvar Group = function (opts) {\\n  opts = opts || {};\\n  Element.call(this, opts);\\n\\n  for (var key in opts) {\\n    if (opts.hasOwnProperty(key)) {\\n      this[key] = opts[key];\\n    }\\n  }\\n\\n  this._children = [];\\n  this.__storage = null;\\n  this.__dirty = true;\\n};\\n\\nGroup.prototype = {\\n  constructor: Group,\\n  isGroup: true,\\n\\n  /**\\n   * @type {string}\\n   */\\n  type: 'group',\\n\\n  /**\\n   * 所有子孙元素是否响应鼠标事件\\n   * @name module:/zrender/container/Group#silent\\n   * @type {boolean}\\n   * @default false\\n   */\\n  silent: false,\\n\\n  /**\\n   * @return {Array.<module:zrender/Element>}\\n   */\\n  children: function () {\\n    return this._children.slice();\\n  },\\n\\n  /**\\n   * 获取指定 index 的儿子节点\\n   * @param  {number} idx\\n   * @return {module:zrender/Element}\\n   */\\n  childAt: function (idx) {\\n    return this._children[idx];\\n  },\\n\\n  /**\\n   * 获取指定名字的儿子节点\\n   * @param  {string} name\\n   * @return {module:zrender/Element}\\n   */\\n  childOfName: function (name) {\\n    var children = this._children;\\n\\n    for (var i = 0; i < children.length; i++) {\\n      if (children[i].name === name) {\\n        return children[i];\\n      }\\n    }\\n  },\\n\\n  /**\\n   * @return {number}\\n   */\\n  childCount: function () {\\n    return this._children.length;\\n  },\\n\\n  /**\\n   * 添加子节点到最后\\n   * @param {module:zrender/Element} child\\n   */\\n  add: function (child) {\\n    if (child && child !== this && child.parent !== this) {\\n      this._children.push(child);\\n\\n      this._doAdd(child);\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * 添加子节点在 nextSibling 之前\\n   * @param {module:zrender/Element} child\\n   * @param {module:zrender/Element} nextSibling\\n   */\\n  addBefore: function (child, nextSibling) {\\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\\n      var children = this._children;\\n      var idx = children.indexOf(nextSibling);\\n\\n      if (idx >= 0) {\\n        children.splice(idx, 0, child);\\n\\n        this._doAdd(child);\\n      }\\n    }\\n\\n    return this;\\n  },\\n  _doAdd: function (child) {\\n    if (child.parent) {\\n      child.parent.remove(child);\\n    }\\n\\n    child.parent = this;\\n    var storage = this.__storage;\\n    var zr = this.__zr;\\n\\n    if (storage && storage !== child.__storage) {\\n      storage.addToStorage(child);\\n\\n      if (child instanceof Group) {\\n        child.addChildrenToStorage(storage);\\n      }\\n    }\\n\\n    zr && zr.refresh();\\n  },\\n\\n  /**\\n   * 移除子节点\\n   * @param {module:zrender/Element} child\\n   */\\n  remove: function (child) {\\n    var zr = this.__zr;\\n    var storage = this.__storage;\\n    var children = this._children;\\n    var idx = zrUtil.indexOf(children, child);\\n\\n    if (idx < 0) {\\n      return this;\\n    }\\n\\n    children.splice(idx, 1);\\n    child.parent = null;\\n\\n    if (storage) {\\n      storage.delFromStorage(child);\\n\\n      if (child instanceof Group) {\\n        child.delChildrenFromStorage(storage);\\n      }\\n    }\\n\\n    zr && zr.refresh();\\n    return this;\\n  },\\n\\n  /**\\n   * 移除所有子节点\\n   */\\n  removeAll: function () {\\n    var children = this._children;\\n    var storage = this.__storage;\\n    var child;\\n    var i;\\n\\n    for (i = 0; i < children.length; i++) {\\n      child = children[i];\\n\\n      if (storage) {\\n        storage.delFromStorage(child);\\n\\n        if (child instanceof Group) {\\n          child.delChildrenFromStorage(storage);\\n        }\\n      }\\n\\n      child.parent = null;\\n    }\\n\\n    children.length = 0;\\n    return this;\\n  },\\n\\n  /**\\n   * 遍历所有子节点\\n   * @param  {Function} cb\\n   * @param  {}   context\\n   */\\n  eachChild: function (cb, context) {\\n    var children = this._children;\\n\\n    for (var i = 0; i < children.length; i++) {\\n      var child = children[i];\\n      cb.call(context, child, i);\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * 深度优先遍历所有子孙节点\\n   * @param  {Function} cb\\n   * @param  {}   context\\n   */\\n  traverse: function (cb, context) {\\n    for (var i = 0; i < this._children.length; i++) {\\n      var child = this._children[i];\\n      cb.call(context, child);\\n\\n      if (child.type === 'group') {\\n        child.traverse(cb, context);\\n      }\\n    }\\n\\n    return this;\\n  },\\n  addChildrenToStorage: function (storage) {\\n    for (var i = 0; i < this._children.length; i++) {\\n      var child = this._children[i];\\n      storage.addToStorage(child);\\n\\n      if (child instanceof Group) {\\n        child.addChildrenToStorage(storage);\\n      }\\n    }\\n  },\\n  delChildrenFromStorage: function (storage) {\\n    for (var i = 0; i < this._children.length; i++) {\\n      var child = this._children[i];\\n      storage.delFromStorage(child);\\n\\n      if (child instanceof Group) {\\n        child.delChildrenFromStorage(storage);\\n      }\\n    }\\n  },\\n  dirty: function () {\\n    this.__dirty = true;\\n    this.__zr && this.__zr.refresh();\\n    return this;\\n  },\\n\\n  /**\\n   * @return {module:zrender/core/BoundingRect}\\n   */\\n  getBoundingRect: function (includeChildren) {\\n    // TODO Caching\\n    var rect = null;\\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\\n    var children = includeChildren || this._children;\\n    var tmpMat = [];\\n\\n    for (var i = 0; i < children.length; i++) {\\n      var child = children[i];\\n\\n      if (child.ignore || child.invisible) {\\n        continue;\\n      }\\n\\n      var childRect = child.getBoundingRect();\\n      var transform = child.getLocalTransform(tmpMat); // TODO\\n      // The boundingRect cacluated by transforming original\\n      // rect may be bigger than the actual bundingRect when rotation\\n      // is used. (Consider a circle rotated aginst its center, where\\n      // the actual boundingRect should be the same as that not be\\n      // rotated.) But we can not find better approach to calculate\\n      // actual boundingRect yet, considering performance.\\n\\n      if (transform) {\\n        tmpRect.copy(childRect);\\n        tmpRect.applyTransform(transform);\\n        rect = rect || tmpRect.clone();\\n        rect.union(tmpRect);\\n      } else {\\n        rect = rect || childRect.clone();\\n        rect.union(childRect);\\n      }\\n    }\\n\\n    return rect || tmpRect;\\n  }\\n};\\nzrUtil.inherits(Group, Element);\\nvar _default = Group;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///81\\n\")},function(module,exports,__webpack_require__){eval(\"var LRU = __webpack_require__(132);\\n\\nvar kCSSColorTable = {\\n  'transparent': [0, 0, 0, 0],\\n  'aliceblue': [240, 248, 255, 1],\\n  'antiquewhite': [250, 235, 215, 1],\\n  'aqua': [0, 255, 255, 1],\\n  'aquamarine': [127, 255, 212, 1],\\n  'azure': [240, 255, 255, 1],\\n  'beige': [245, 245, 220, 1],\\n  'bisque': [255, 228, 196, 1],\\n  'black': [0, 0, 0, 1],\\n  'blanchedalmond': [255, 235, 205, 1],\\n  'blue': [0, 0, 255, 1],\\n  'blueviolet': [138, 43, 226, 1],\\n  'brown': [165, 42, 42, 1],\\n  'burlywood': [222, 184, 135, 1],\\n  'cadetblue': [95, 158, 160, 1],\\n  'chartreuse': [127, 255, 0, 1],\\n  'chocolate': [210, 105, 30, 1],\\n  'coral': [255, 127, 80, 1],\\n  'cornflowerblue': [100, 149, 237, 1],\\n  'cornsilk': [255, 248, 220, 1],\\n  'crimson': [220, 20, 60, 1],\\n  'cyan': [0, 255, 255, 1],\\n  'darkblue': [0, 0, 139, 1],\\n  'darkcyan': [0, 139, 139, 1],\\n  'darkgoldenrod': [184, 134, 11, 1],\\n  'darkgray': [169, 169, 169, 1],\\n  'darkgreen': [0, 100, 0, 1],\\n  'darkgrey': [169, 169, 169, 1],\\n  'darkkhaki': [189, 183, 107, 1],\\n  'darkmagenta': [139, 0, 139, 1],\\n  'darkolivegreen': [85, 107, 47, 1],\\n  'darkorange': [255, 140, 0, 1],\\n  'darkorchid': [153, 50, 204, 1],\\n  'darkred': [139, 0, 0, 1],\\n  'darksalmon': [233, 150, 122, 1],\\n  'darkseagreen': [143, 188, 143, 1],\\n  'darkslateblue': [72, 61, 139, 1],\\n  'darkslategray': [47, 79, 79, 1],\\n  'darkslategrey': [47, 79, 79, 1],\\n  'darkturquoise': [0, 206, 209, 1],\\n  'darkviolet': [148, 0, 211, 1],\\n  'deeppink': [255, 20, 147, 1],\\n  'deepskyblue': [0, 191, 255, 1],\\n  'dimgray': [105, 105, 105, 1],\\n  'dimgrey': [105, 105, 105, 1],\\n  'dodgerblue': [30, 144, 255, 1],\\n  'firebrick': [178, 34, 34, 1],\\n  'floralwhite': [255, 250, 240, 1],\\n  'forestgreen': [34, 139, 34, 1],\\n  'fuchsia': [255, 0, 255, 1],\\n  'gainsboro': [220, 220, 220, 1],\\n  'ghostwhite': [248, 248, 255, 1],\\n  'gold': [255, 215, 0, 1],\\n  'goldenrod': [218, 165, 32, 1],\\n  'gray': [128, 128, 128, 1],\\n  'green': [0, 128, 0, 1],\\n  'greenyellow': [173, 255, 47, 1],\\n  'grey': [128, 128, 128, 1],\\n  'honeydew': [240, 255, 240, 1],\\n  'hotpink': [255, 105, 180, 1],\\n  'indianred': [205, 92, 92, 1],\\n  'indigo': [75, 0, 130, 1],\\n  'ivory': [255, 255, 240, 1],\\n  'khaki': [240, 230, 140, 1],\\n  'lavender': [230, 230, 250, 1],\\n  'lavenderblush': [255, 240, 245, 1],\\n  'lawngreen': [124, 252, 0, 1],\\n  'lemonchiffon': [255, 250, 205, 1],\\n  'lightblue': [173, 216, 230, 1],\\n  'lightcoral': [240, 128, 128, 1],\\n  'lightcyan': [224, 255, 255, 1],\\n  'lightgoldenrodyellow': [250, 250, 210, 1],\\n  'lightgray': [211, 211, 211, 1],\\n  'lightgreen': [144, 238, 144, 1],\\n  'lightgrey': [211, 211, 211, 1],\\n  'lightpink': [255, 182, 193, 1],\\n  'lightsalmon': [255, 160, 122, 1],\\n  'lightseagreen': [32, 178, 170, 1],\\n  'lightskyblue': [135, 206, 250, 1],\\n  'lightslategray': [119, 136, 153, 1],\\n  'lightslategrey': [119, 136, 153, 1],\\n  'lightsteelblue': [176, 196, 222, 1],\\n  'lightyellow': [255, 255, 224, 1],\\n  'lime': [0, 255, 0, 1],\\n  'limegreen': [50, 205, 50, 1],\\n  'linen': [250, 240, 230, 1],\\n  'magenta': [255, 0, 255, 1],\\n  'maroon': [128, 0, 0, 1],\\n  'mediumaquamarine': [102, 205, 170, 1],\\n  'mediumblue': [0, 0, 205, 1],\\n  'mediumorchid': [186, 85, 211, 1],\\n  'mediumpurple': [147, 112, 219, 1],\\n  'mediumseagreen': [60, 179, 113, 1],\\n  'mediumslateblue': [123, 104, 238, 1],\\n  'mediumspringgreen': [0, 250, 154, 1],\\n  'mediumturquoise': [72, 209, 204, 1],\\n  'mediumvioletred': [199, 21, 133, 1],\\n  'midnightblue': [25, 25, 112, 1],\\n  'mintcream': [245, 255, 250, 1],\\n  'mistyrose': [255, 228, 225, 1],\\n  'moccasin': [255, 228, 181, 1],\\n  'navajowhite': [255, 222, 173, 1],\\n  'navy': [0, 0, 128, 1],\\n  'oldlace': [253, 245, 230, 1],\\n  'olive': [128, 128, 0, 1],\\n  'olivedrab': [107, 142, 35, 1],\\n  'orange': [255, 165, 0, 1],\\n  'orangered': [255, 69, 0, 1],\\n  'orchid': [218, 112, 214, 1],\\n  'palegoldenrod': [238, 232, 170, 1],\\n  'palegreen': [152, 251, 152, 1],\\n  'paleturquoise': [175, 238, 238, 1],\\n  'palevioletred': [219, 112, 147, 1],\\n  'papayawhip': [255, 239, 213, 1],\\n  'peachpuff': [255, 218, 185, 1],\\n  'peru': [205, 133, 63, 1],\\n  'pink': [255, 192, 203, 1],\\n  'plum': [221, 160, 221, 1],\\n  'powderblue': [176, 224, 230, 1],\\n  'purple': [128, 0, 128, 1],\\n  'red': [255, 0, 0, 1],\\n  'rosybrown': [188, 143, 143, 1],\\n  'royalblue': [65, 105, 225, 1],\\n  'saddlebrown': [139, 69, 19, 1],\\n  'salmon': [250, 128, 114, 1],\\n  'sandybrown': [244, 164, 96, 1],\\n  'seagreen': [46, 139, 87, 1],\\n  'seashell': [255, 245, 238, 1],\\n  'sienna': [160, 82, 45, 1],\\n  'silver': [192, 192, 192, 1],\\n  'skyblue': [135, 206, 235, 1],\\n  'slateblue': [106, 90, 205, 1],\\n  'slategray': [112, 128, 144, 1],\\n  'slategrey': [112, 128, 144, 1],\\n  'snow': [255, 250, 250, 1],\\n  'springgreen': [0, 255, 127, 1],\\n  'steelblue': [70, 130, 180, 1],\\n  'tan': [210, 180, 140, 1],\\n  'teal': [0, 128, 128, 1],\\n  'thistle': [216, 191, 216, 1],\\n  'tomato': [255, 99, 71, 1],\\n  'turquoise': [64, 224, 208, 1],\\n  'violet': [238, 130, 238, 1],\\n  'wheat': [245, 222, 179, 1],\\n  'white': [255, 255, 255, 1],\\n  'whitesmoke': [245, 245, 245, 1],\\n  'yellow': [255, 255, 0, 1],\\n  'yellowgreen': [154, 205, 50, 1]\\n};\\n\\nfunction clampCssByte(i) {\\n  // Clamp to integer 0 .. 255.\\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\\n\\n  return i < 0 ? 0 : i > 255 ? 255 : i;\\n}\\n\\nfunction clampCssAngle(i) {\\n  // Clamp to integer 0 .. 360.\\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\\n\\n  return i < 0 ? 0 : i > 360 ? 360 : i;\\n}\\n\\nfunction clampCssFloat(f) {\\n  // Clamp to float 0.0 .. 1.0.\\n  return f < 0 ? 0 : f > 1 ? 1 : f;\\n}\\n\\nfunction parseCssInt(str) {\\n  // int or percentage.\\n  if (str.length && str.charAt(str.length - 1) === '%') {\\n    return clampCssByte(parseFloat(str) / 100 * 255);\\n  }\\n\\n  return clampCssByte(parseInt(str, 10));\\n}\\n\\nfunction parseCssFloat(str) {\\n  // float or percentage.\\n  if (str.length && str.charAt(str.length - 1) === '%') {\\n    return clampCssFloat(parseFloat(str) / 100);\\n  }\\n\\n  return clampCssFloat(parseFloat(str));\\n}\\n\\nfunction cssHueToRgb(m1, m2, h) {\\n  if (h < 0) {\\n    h += 1;\\n  } else if (h > 1) {\\n    h -= 1;\\n  }\\n\\n  if (h * 6 < 1) {\\n    return m1 + (m2 - m1) * h * 6;\\n  }\\n\\n  if (h * 2 < 1) {\\n    return m2;\\n  }\\n\\n  if (h * 3 < 2) {\\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\\n  }\\n\\n  return m1;\\n}\\n\\nfunction lerpNumber(a, b, p) {\\n  return a + (b - a) * p;\\n}\\n\\nfunction setRgba(out, r, g, b, a) {\\n  out[0] = r;\\n  out[1] = g;\\n  out[2] = b;\\n  out[3] = a;\\n  return out;\\n}\\n\\nfunction copyRgba(out, a) {\\n  out[0] = a[0];\\n  out[1] = a[1];\\n  out[2] = a[2];\\n  out[3] = a[3];\\n  return out;\\n}\\n\\nvar colorCache = new LRU(20);\\nvar lastRemovedArr = null;\\n\\nfunction putToCache(colorStr, rgbaArr) {\\n  // Reuse removed array\\n  if (lastRemovedArr) {\\n    copyRgba(lastRemovedArr, rgbaArr);\\n  }\\n\\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\\n}\\n/**\\n * @param {string} colorStr\\n * @param {Array.<number>} out\\n * @return {Array.<number>}\\n * @memberOf module:zrender/util/color\\n */\\n\\n\\nfunction parse(colorStr, rgbaArr) {\\n  if (!colorStr) {\\n    return;\\n  }\\n\\n  rgbaArr = rgbaArr || [];\\n  var cached = colorCache.get(colorStr);\\n\\n  if (cached) {\\n    return copyRgba(rgbaArr, cached);\\n  } // colorStr may be not string\\n\\n\\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\\n\\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\\n\\n  if (str in kCSSColorTable) {\\n    copyRgba(rgbaArr, kCSSColorTable[str]);\\n    putToCache(colorStr, rgbaArr);\\n    return rgbaArr;\\n  } // #abc and #abc123 syntax.\\n\\n\\n  if (str.charAt(0) === '#') {\\n    if (str.length === 4) {\\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\\n\\n      if (!(iv >= 0 && iv <= 0xfff)) {\\n        setRgba(rgbaArr, 0, 0, 0, 1);\\n        return; // Covers NaN.\\n      }\\n\\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\\n      putToCache(colorStr, rgbaArr);\\n      return rgbaArr;\\n    } else if (str.length === 7) {\\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\\n\\n      if (!(iv >= 0 && iv <= 0xffffff)) {\\n        setRgba(rgbaArr, 0, 0, 0, 1);\\n        return; // Covers NaN.\\n      }\\n\\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\\n      putToCache(colorStr, rgbaArr);\\n      return rgbaArr;\\n    }\\n\\n    return;\\n  }\\n\\n  var op = str.indexOf('('),\\n      ep = str.indexOf(')');\\n\\n  if (op !== -1 && ep + 1 === str.length) {\\n    var fname = str.substr(0, op);\\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\\n    var alpha = 1; // To allow case fallthrough.\\n\\n    switch (fname) {\\n      case 'rgba':\\n        if (params.length !== 4) {\\n          setRgba(rgbaArr, 0, 0, 0, 1);\\n          return;\\n        }\\n\\n        alpha = parseCssFloat(params.pop());\\n      // jshint ignore:line\\n      // Fall through.\\n\\n      case 'rgb':\\n        if (params.length !== 3) {\\n          setRgba(rgbaArr, 0, 0, 0, 1);\\n          return;\\n        }\\n\\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\\n        putToCache(colorStr, rgbaArr);\\n        return rgbaArr;\\n\\n      case 'hsla':\\n        if (params.length !== 4) {\\n          setRgba(rgbaArr, 0, 0, 0, 1);\\n          return;\\n        }\\n\\n        params[3] = parseCssFloat(params[3]);\\n        hsla2rgba(params, rgbaArr);\\n        putToCache(colorStr, rgbaArr);\\n        return rgbaArr;\\n\\n      case 'hsl':\\n        if (params.length !== 3) {\\n          setRgba(rgbaArr, 0, 0, 0, 1);\\n          return;\\n        }\\n\\n        hsla2rgba(params, rgbaArr);\\n        putToCache(colorStr, rgbaArr);\\n        return rgbaArr;\\n\\n      default:\\n        return;\\n    }\\n  }\\n\\n  setRgba(rgbaArr, 0, 0, 0, 1);\\n  return;\\n}\\n/**\\n * @param {Array.<number>} hsla\\n * @param {Array.<number>} rgba\\n * @return {Array.<number>} rgba\\n */\\n\\n\\nfunction hsla2rgba(hsla, rgba) {\\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\\n  // NOTE(deanm): According to the CSS spec s/l should only be\\n  // percentages, but we don't bother and let float or percentage.\\n\\n  var s = parseCssFloat(hsla[1]);\\n  var l = parseCssFloat(hsla[2]);\\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\\n  var m1 = l * 2 - m2;\\n  rgba = rgba || [];\\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\\n\\n  if (hsla.length === 4) {\\n    rgba[3] = hsla[3];\\n  }\\n\\n  return rgba;\\n}\\n/**\\n * @param {Array.<number>} rgba\\n * @return {Array.<number>} hsla\\n */\\n\\n\\nfunction rgba2hsla(rgba) {\\n  if (!rgba) {\\n    return;\\n  } // RGB from 0 to 255\\n\\n\\n  var R = rgba[0] / 255;\\n  var G = rgba[1] / 255;\\n  var B = rgba[2] / 255;\\n  var vMin = Math.min(R, G, B); // Min. value of RGB\\n\\n  var vMax = Math.max(R, G, B); // Max. value of RGB\\n\\n  var delta = vMax - vMin; // Delta RGB value\\n\\n  var L = (vMax + vMin) / 2;\\n  var H;\\n  var S; // HSL results from 0 to 1\\n\\n  if (delta === 0) {\\n    H = 0;\\n    S = 0;\\n  } else {\\n    if (L < 0.5) {\\n      S = delta / (vMax + vMin);\\n    } else {\\n      S = delta / (2 - vMax - vMin);\\n    }\\n\\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\\n\\n    if (R === vMax) {\\n      H = deltaB - deltaG;\\n    } else if (G === vMax) {\\n      H = 1 / 3 + deltaR - deltaB;\\n    } else if (B === vMax) {\\n      H = 2 / 3 + deltaG - deltaR;\\n    }\\n\\n    if (H < 0) {\\n      H += 1;\\n    }\\n\\n    if (H > 1) {\\n      H -= 1;\\n    }\\n  }\\n\\n  var hsla = [H * 360, S, L];\\n\\n  if (rgba[3] != null) {\\n    hsla.push(rgba[3]);\\n  }\\n\\n  return hsla;\\n}\\n/**\\n * @param {string} color\\n * @param {number} level\\n * @return {string}\\n * @memberOf module:zrender/util/color\\n */\\n\\n\\nfunction lift(color, level) {\\n  var colorArr = parse(color);\\n\\n  if (colorArr) {\\n    for (var i = 0; i < 3; i++) {\\n      if (level < 0) {\\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\\n      } else {\\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\\n      }\\n\\n      if (colorArr[i] > 255) {\\n        colorArr[i] = 255;\\n      } else if (color[i] < 0) {\\n        colorArr[i] = 0;\\n      }\\n    }\\n\\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\\n  }\\n}\\n/**\\n * @param {string} color\\n * @return {string}\\n * @memberOf module:zrender/util/color\\n */\\n\\n\\nfunction toHex(color) {\\n  var colorArr = parse(color);\\n\\n  if (colorArr) {\\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\\n  }\\n}\\n/**\\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\\n * @param {number} normalizedValue A float between 0 and 1.\\n * @param {Array.<Array.<number>>} colors List of rgba color array\\n * @param {Array.<number>} [out] Mapped gba color array\\n * @return {Array.<number>} will be null/undefined if input illegal.\\n */\\n\\n\\nfunction fastLerp(normalizedValue, colors, out) {\\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\\n    return;\\n  }\\n\\n  out = out || [];\\n  var value = normalizedValue * (colors.length - 1);\\n  var leftIndex = Math.floor(value);\\n  var rightIndex = Math.ceil(value);\\n  var leftColor = colors[leftIndex];\\n  var rightColor = colors[rightIndex];\\n  var dv = value - leftIndex;\\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\\n  return out;\\n}\\n/**\\n * @deprecated\\n */\\n\\n\\nvar fastMapToColor = fastLerp;\\n/**\\n * @param {number} normalizedValue A float between 0 and 1.\\n * @param {Array.<string>} colors Color list.\\n * @param {boolean=} fullOutput Default false.\\n * @return {(string|Object)} Result color. If fullOutput,\\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\\n * @memberOf module:zrender/util/color\\n */\\n\\nfunction lerp(normalizedValue, colors, fullOutput) {\\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\\n    return;\\n  }\\n\\n  var value = normalizedValue * (colors.length - 1);\\n  var leftIndex = Math.floor(value);\\n  var rightIndex = Math.ceil(value);\\n  var leftColor = parse(colors[leftIndex]);\\n  var rightColor = parse(colors[rightIndex]);\\n  var dv = value - leftIndex;\\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\\n  return fullOutput ? {\\n    color: color,\\n    leftIndex: leftIndex,\\n    rightIndex: rightIndex,\\n    value: value\\n  } : color;\\n}\\n/**\\n * @deprecated\\n */\\n\\n\\nvar mapToColor = lerp;\\n/**\\n * @param {string} color\\n * @param {number=} h 0 ~ 360, ignore when null.\\n * @param {number=} s 0 ~ 1, ignore when null.\\n * @param {number=} l 0 ~ 1, ignore when null.\\n * @return {string} Color string in rgba format.\\n * @memberOf module:zrender/util/color\\n */\\n\\nfunction modifyHSL(color, h, s, l) {\\n  color = parse(color);\\n\\n  if (color) {\\n    color = rgba2hsla(color);\\n    h != null && (color[0] = clampCssAngle(h));\\n    s != null && (color[1] = parseCssFloat(s));\\n    l != null && (color[2] = parseCssFloat(l));\\n    return stringify(hsla2rgba(color), 'rgba');\\n  }\\n}\\n/**\\n * @param {string} color\\n * @param {number=} alpha 0 ~ 1\\n * @return {string} Color string in rgba format.\\n * @memberOf module:zrender/util/color\\n */\\n\\n\\nfunction modifyAlpha(color, alpha) {\\n  color = parse(color);\\n\\n  if (color && alpha != null) {\\n    color[3] = clampCssFloat(alpha);\\n    return stringify(color, 'rgba');\\n  }\\n}\\n/**\\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\\n * @param {string} type 'rgba', 'hsva', ...\\n * @return {string} Result color. (If input illegal, return undefined).\\n */\\n\\n\\nfunction stringify(arrColor, type) {\\n  if (!arrColor || !arrColor.length) {\\n    return;\\n  }\\n\\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\\n\\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\\n    colorStr += ',' + arrColor[3];\\n  }\\n\\n  return type + '(' + colorStr + ')';\\n}\\n\\nexports.parse = parse;\\nexports.lift = lift;\\nexports.toHex = toHex;\\nexports.fastLerp = fastLerp;\\nexports.fastMapToColor = fastMapToColor;\\nexports.lerp = lerp;\\nexports.mapToColor = mapToColor;\\nexports.modifyHSL = modifyHSL;\\nexports.modifyAlpha = modifyAlpha;\\nexports.stringify = stringify;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///82\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar createHashMap = _util.createHashMap;\\nvar isTypedArray = _util.isTypedArray;\\n\\nvar _clazz = __webpack_require__(71);\\n\\nvar enableClassCheck = _clazz.enableClassCheck;\\n\\nvar _sourceType = __webpack_require__(84);\\n\\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * [sourceFormat]\\n *\\n * + \\\"original\\\":\\n * This format is only used in series.data, where\\n * itemStyle can be specified in data item.\\n *\\n * + \\\"arrayRows\\\":\\n * [\\n *     ['product', 'score', 'amount'],\\n *     ['Matcha Latte', 89.3, 95.8],\\n *     ['Milk Tea', 92.1, 89.4],\\n *     ['Cheese Cocoa', 94.4, 91.2],\\n *     ['Walnut Brownie', 85.4, 76.9]\\n * ]\\n *\\n * + \\\"objectRows\\\":\\n * [\\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\\n * ]\\n *\\n * + \\\"keyedColumns\\\":\\n * {\\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\\n *     'count': [823, 235, 1042, 988],\\n *     'score': [95.8, 81.4, 91.2, 76.9]\\n * }\\n *\\n * + \\\"typedArray\\\"\\n *\\n * + \\\"unknown\\\"\\n */\\n\\n/**\\n * @constructor\\n * @param {Object} fields\\n * @param {string} fields.sourceFormat\\n * @param {Array|Object} fields.fromDataset\\n * @param {Array|Object} [fields.data]\\n * @param {string} [seriesLayoutBy='column']\\n * @param {Array.<Object|string>} [dimensionsDefine]\\n * @param {Objet|HashMap} [encodeDefine]\\n * @param {number} [startIndex=0]\\n * @param {number} [dimensionsDetectCount]\\n */\\nfunction Source(fields) {\\n  /**\\n   * @type {boolean}\\n   */\\n  this.fromDataset = fields.fromDataset;\\n  /**\\n   * Not null/undefined.\\n   * @type {Array|Object}\\n   */\\n\\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\\n  /**\\n   * See also \\\"detectSourceFormat\\\".\\n   * Not null/undefined.\\n   * @type {string}\\n   */\\n\\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\\n  /**\\n   * 'row' or 'column'\\n   * Not null/undefined.\\n   * @type {string} seriesLayoutBy\\n   */\\n\\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\\n  /**\\n   * dimensions definition in option.\\n   * can be null/undefined.\\n   * @type {Array.<Object|string>}\\n   */\\n\\n  this.dimensionsDefine = fields.dimensionsDefine;\\n  /**\\n   * encode definition in option.\\n   * can be null/undefined.\\n   * @type {Objet|HashMap}\\n   */\\n\\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\\n  /**\\n   * Not null/undefined, uint.\\n   * @type {number}\\n   */\\n\\n  this.startIndex = fields.startIndex || 0;\\n  /**\\n   * Can be null/undefined (when unknown), uint.\\n   * @type {number}\\n   */\\n\\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\\n}\\n/**\\n * Wrap original series data for some compatibility cases.\\n */\\n\\n\\nSource.seriesDataToSource = function (data) {\\n  return new Source({\\n    data: data,\\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\\n    fromDataset: false\\n  });\\n};\\n\\nenableClassCheck(Source);\\nvar _default = Source;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///83\\n\")},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// Avoid typo.\\nvar SOURCE_FORMAT_ORIGINAL = 'original';\\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\\n\\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\\nvar SERIES_LAYOUT_BY_ROW = 'row';\\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvZGF0YS9oZWxwZXIvc291cmNlVHlwZS5qcz85M2QwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuLy8gQXZvaWQgdHlwby5cbnZhciBTT1VSQ0VfRk9STUFUX09SSUdJTkFMID0gJ29yaWdpbmFsJztcbnZhciBTT1VSQ0VfRk9STUFUX0FSUkFZX1JPV1MgPSAnYXJyYXlSb3dzJztcbnZhciBTT1VSQ0VfRk9STUFUX09CSkVDVF9ST1dTID0gJ29iamVjdFJvd3MnO1xudmFyIFNPVVJDRV9GT1JNQVRfS0VZRURfQ09MVU1OUyA9ICdrZXllZENvbHVtbnMnO1xudmFyIFNPVVJDRV9GT1JNQVRfVU5LTk9XTiA9ICd1bmtub3duJzsgLy8gPz8/IENIQU5HRSBBIE5BTUVcblxudmFyIFNPVVJDRV9GT1JNQVRfVFlQRURfQVJSQVkgPSAndHlwZWRBcnJheSc7XG52YXIgU0VSSUVTX0xBWU9VVF9CWV9DT0xVTU4gPSAnY29sdW1uJztcbnZhciBTRVJJRVNfTEFZT1VUX0JZX1JPVyA9ICdyb3cnO1xuZXhwb3J0cy5TT1VSQ0VfRk9STUFUX09SSUdJTkFMID0gU09VUkNFX0ZPUk1BVF9PUklHSU5BTDtcbmV4cG9ydHMuU09VUkNFX0ZPUk1BVF9BUlJBWV9ST1dTID0gU09VUkNFX0ZPUk1BVF9BUlJBWV9ST1dTO1xuZXhwb3J0cy5TT1VSQ0VfRk9STUFUX09CSkVDVF9ST1dTID0gU09VUkNFX0ZPUk1BVF9PQkpFQ1RfUk9XUztcbmV4cG9ydHMuU09VUkNFX0ZPUk1BVF9LRVlFRF9DT0xVTU5TID0gU09VUkNFX0ZPUk1BVF9LRVlFRF9DT0xVTU5TO1xuZXhwb3J0cy5TT1VSQ0VfRk9STUFUX1VOS05PV04gPSBTT1VSQ0VfRk9STUFUX1VOS05PV047XG5leHBvcnRzLlNPVVJDRV9GT1JNQVRfVFlQRURfQVJSQVkgPSBTT1VSQ0VfRk9STUFUX1RZUEVEX0FSUkFZO1xuZXhwb3J0cy5TRVJJRVNfTEFZT1VUX0JZX0NPTFVNTiA9IFNFUklFU19MQVlPVVRfQllfQ09MVU1OO1xuZXhwb3J0cy5TRVJJRVNfTEFZT1VUX0JZX1JPVyA9IFNFUklFU19MQVlPVVRfQllfUk9XOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///84\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar _util = __webpack_require__(59);\\n\\nvar isTypedArray = _util.isTypedArray;\\nvar extend = _util.extend;\\nvar assert = _util.assert;\\nvar each = _util.each;\\nvar isObject = _util.isObject;\\n\\nvar _model = __webpack_require__(60);\\n\\nvar getDataItemValue = _model.getDataItemValue;\\nvar isDataItemOption = _model.isDataItemOption;\\n\\nvar _number = __webpack_require__(65);\\n\\nvar parseDate = _number.parseDate;\\n\\nvar Source = __webpack_require__(83);\\n\\nvar _sourceType = __webpack_require__(84);\\n\\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// TODO\\n// ??? refactor? check the outer usage of data provider.\\n// merge with defaultDimValueGetter?\\n\\n/**\\n * If normal array used, mutable chunk size is supported.\\n * If typed array used, chunk size must be fixed.\\n */\\nfunction DefaultDataProvider(source, dimSize) {\\n  if (!Source.isInstance(source)) {\\n    source = Source.seriesDataToSource(source);\\n  }\\n\\n  this._source = source;\\n  var data = this._data = source.data;\\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\\n\\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\\n    this._offset = 0;\\n    this._dimSize = dimSize;\\n    this._data = data;\\n  }\\n\\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\\n  extend(this, methods);\\n}\\n\\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\\n\\nproviderProto.pure = false; // If data is persistent and will not be released after use.\\n\\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\\n\\nproviderProto.getSource = function () {\\n  return this._source;\\n};\\n\\nvar providerMethods = {\\n  'arrayRows_column': {\\n    pure: true,\\n    count: function () {\\n      return Math.max(0, this._data.length - this._source.startIndex);\\n    },\\n    getItem: function (idx) {\\n      return this._data[idx + this._source.startIndex];\\n    },\\n    appendData: appendDataSimply\\n  },\\n  'arrayRows_row': {\\n    pure: true,\\n    count: function () {\\n      var row = this._data[0];\\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\\n    },\\n    getItem: function (idx) {\\n      idx += this._source.startIndex;\\n      var item = [];\\n      var data = this._data;\\n\\n      for (var i = 0; i < data.length; i++) {\\n        var row = data[i];\\n        item.push(row ? row[idx] : null);\\n      }\\n\\n      return item;\\n    },\\n    appendData: function () {\\n      throw new Error('Do not support appendData when set seriesLayoutBy: \\\"row\\\".');\\n    }\\n  },\\n  'objectRows': {\\n    pure: true,\\n    count: countSimply,\\n    getItem: getItemSimply,\\n    appendData: appendDataSimply\\n  },\\n  'keyedColumns': {\\n    pure: true,\\n    count: function () {\\n      var dimName = this._source.dimensionsDefine[0].name;\\n      var col = this._data[dimName];\\n      return col ? col.length : 0;\\n    },\\n    getItem: function (idx) {\\n      var item = [];\\n      var dims = this._source.dimensionsDefine;\\n\\n      for (var i = 0; i < dims.length; i++) {\\n        var col = this._data[dims[i].name];\\n        item.push(col ? col[idx] : null);\\n      }\\n\\n      return item;\\n    },\\n    appendData: function (newData) {\\n      var data = this._data;\\n      each(newData, function (newCol, key) {\\n        var oldCol = data[key] || (data[key] = []);\\n\\n        for (var i = 0; i < (newCol || []).length; i++) {\\n          oldCol.push(newCol[i]);\\n        }\\n      });\\n    }\\n  },\\n  'original': {\\n    count: countSimply,\\n    getItem: getItemSimply,\\n    appendData: appendDataSimply\\n  },\\n  'typedArray': {\\n    persistent: false,\\n    pure: true,\\n    count: function () {\\n      return this._data ? this._data.length / this._dimSize : 0;\\n    },\\n    getItem: function (idx, out) {\\n      idx = idx - this._offset;\\n      out = out || [];\\n      var offset = this._dimSize * idx;\\n\\n      for (var i = 0; i < this._dimSize; i++) {\\n        out[i] = this._data[offset + i];\\n      }\\n\\n      return out;\\n    },\\n    appendData: function (newData) {\\n      this._data = newData;\\n    },\\n    // Clean self if data is already used.\\n    clean: function () {\\n      // PENDING\\n      this._offset += this.count();\\n      this._data = null;\\n    }\\n  }\\n};\\n\\nfunction countSimply() {\\n  return this._data.length;\\n}\\n\\nfunction getItemSimply(idx) {\\n  return this._data[idx];\\n}\\n\\nfunction appendDataSimply(newData) {\\n  for (var i = 0; i < newData.length; i++) {\\n    this._data.push(newData[i]);\\n  }\\n}\\n\\nvar rawValueGetters = {\\n  arrayRows: getRawValueSimply,\\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\\n    return dimIndex != null ? dataItem[dimName] : dataItem;\\n  },\\n  keyedColumns: getRawValueSimply,\\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\\n    // FIXME\\n    // In some case (markpoint in geo (geo-map.html)), dataItem\\n    // is {coord: [...]}\\n    var value = getDataItemValue(dataItem);\\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\\n  },\\n  typedArray: getRawValueSimply\\n};\\n\\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\\n}\\n\\nvar defaultDimValueGetters = {\\n  arrayRows: getDimValueSimply,\\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\\n  },\\n  keyedColumns: getDimValueSimply,\\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\\n    // If dataItem is an plain object with no value field, the var `value`\\n    // will be assigned with the object, but it will be tread correctly\\n    // in the `convertDataValue`.\\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\\n\\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\\n      this.hasItemOption = true;\\n    }\\n\\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\\n    : value, this._dimensionInfos[dimName]);\\n  },\\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\\n    return dataItem[dimIndex];\\n  }\\n};\\n\\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\\n}\\n/**\\n * This helper method convert value in data.\\n * @param {string|number|Date} value\\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\\n *        If \\\"dimInfo.ordinalParseAndSave\\\", ordinal value can be parsed.\\n */\\n\\n\\nfunction converDataValue(value, dimInfo) {\\n  // Performance sensitive.\\n  var dimType = dimInfo && dimInfo.type;\\n\\n  if (dimType === 'ordinal') {\\n    // If given value is a category string\\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\\n  }\\n\\n  if (dimType === 'time' // spead up when using timestamp\\n  && typeof value !== 'number' && value != null && value !== '-') {\\n    value = +parseDate(value);\\n  } // dimType defaults 'number'.\\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\\n  // parse to NaN.\\n\\n\\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\\n  // If object, also parse to NaN\\n  : +value;\\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\\n// Consider persistent.\\n// Caution: why use raw value to display on label or tooltip?\\n// A reason is to avoid format. For example time value we do not know\\n// how to format is expected. More over, if stack is used, calculated\\n// value may be 0.91000000001, which have brings trouble to display.\\n// TODO: consider how to treat null/undefined/NaN when display?\\n\\n/**\\n * @param {module:echarts/data/List} data\\n * @param {number} dataIndex\\n * @param {string|number} [dim] dimName or dimIndex\\n * @return {Array.<number>|string|number} can be null/undefined.\\n */\\n\\n\\nfunction retrieveRawValue(data, dataIndex, dim) {\\n  if (!data) {\\n    return;\\n  } // Consider data may be not persistent.\\n\\n\\n  var dataItem = data.getRawDataItem(dataIndex);\\n\\n  if (dataItem == null) {\\n    return;\\n  }\\n\\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\\n  var dimName;\\n  var dimIndex;\\n  var dimInfo = data.getDimensionInfo(dim);\\n\\n  if (dimInfo) {\\n    dimName = dimInfo.name;\\n    dimIndex = dimInfo.index;\\n  }\\n\\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\\n}\\n/**\\n * Compatible with some cases (in pie, map) like:\\n * data: [{name: 'xx', value: 5, selected: true}, ...]\\n * where only sourceFormat is 'original' and 'objectRows' supported.\\n *\\n * ??? TODO\\n * Supported detail options in data item when using 'arrayRows'.\\n *\\n * @param {module:echarts/data/List} data\\n * @param {number} dataIndex\\n * @param {string} attr like 'selected'\\n */\\n\\n\\nfunction retrieveRawAttr(data, dataIndex, attr) {\\n  if (!data) {\\n    return;\\n  }\\n\\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\\n\\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\\n    return;\\n  }\\n\\n  var dataItem = data.getRawDataItem(dataIndex);\\n\\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\\n    dataItem = null;\\n  }\\n\\n  if (dataItem) {\\n    return dataItem[attr];\\n  }\\n}\\n\\nexports.DefaultDataProvider = DefaultDataProvider;\\nexports.defaultDimValueGetters = defaultDimValueGetters;\\nexports.retrieveRawValue = retrieveRawValue;\\nexports.retrieveRawAttr = retrieveRawAttr;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///85\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar OrdinalScale = __webpack_require__(245);\\n\\nvar IntervalScale = __webpack_require__(112);\\n\\nvar Scale = __webpack_require__(92);\\n\\nvar numberUtil = __webpack_require__(65);\\n\\nvar _barGrid = __webpack_require__(246);\\n\\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\\nvar makeColumnLayout = _barGrid.makeColumnLayout;\\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\n__webpack_require__(247);\\n\\n__webpack_require__(248);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Get axis scale extent before niced.\\n * Item of returned array can only be number (including Infinity and NaN).\\n */\\nfunction getScaleExtent(scale, model) {\\n  var scaleType = scale.type;\\n  var min = model.getMin();\\n  var max = model.getMax();\\n  var fixMin = min != null;\\n  var fixMax = max != null;\\n  var originalExtent = scale.getExtent();\\n  var axisDataLen;\\n  var boundaryGap;\\n  var span;\\n\\n  if (scaleType === 'ordinal') {\\n    axisDataLen = model.getCategories().length;\\n  } else {\\n    boundaryGap = model.get('boundaryGap');\\n\\n    if (!zrUtil.isArray(boundaryGap)) {\\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\\n    }\\n\\n    if (typeof boundaryGap[0] === 'boolean') {\\n      boundaryGap = [0, 0];\\n    }\\n\\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\\n  // which is the most common case), these cases should be ensured:\\n  // (1) For 'ordinal', show all axis.data.\\n  // (2) For others:\\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\\n  //      disabled).\\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\\n  //      be the result that originalExtent enlarged by boundaryGap.\\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\\n  // FIXME\\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\\n  // that the results processed by boundaryGap are positive/negative?\\n\\n\\n  if (min == null) {\\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\\n  }\\n\\n  if (max == null) {\\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\\n  }\\n\\n  if (min === 'dataMin') {\\n    min = originalExtent[0];\\n  } else if (typeof min === 'function') {\\n    min = min({\\n      min: originalExtent[0],\\n      max: originalExtent[1]\\n    });\\n  }\\n\\n  if (max === 'dataMax') {\\n    max = originalExtent[1];\\n  } else if (typeof max === 'function') {\\n    max = max({\\n      min: originalExtent[0],\\n      max: originalExtent[1]\\n    });\\n  }\\n\\n  (min == null || !isFinite(min)) && (min = NaN);\\n  (max == null || !isFinite(max)) && (max = NaN);\\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\\n\\n  if (model.getNeedCrossZero()) {\\n    // Axis is over zero and min is not set\\n    if (min > 0 && max > 0 && !fixMin) {\\n      min = 0;\\n    } // Axis is under zero and max is not set\\n\\n\\n    if (min < 0 && max < 0 && !fixMax) {\\n      max = 0;\\n    }\\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\\n  // is base axis\\n  // FIXME\\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\\n  //     Should not depend on series type `bar`?\\n  // (3) Fix that might overlap when using dataZoom.\\n  // (4) Consider other chart types using `barGrid`?\\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\\n\\n\\n  var ecModel = model.ecModel;\\n\\n  if (ecModel && scaleType === 'time'\\n  /*|| scaleType === 'interval' */\\n  ) {\\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\\n    var isBaseAxisAndHasBarSeries;\\n    zrUtil.each(barSeriesModels, function (seriesModel) {\\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\\n    });\\n\\n    if (isBaseAxisAndHasBarSeries) {\\n      // Calculate placement of bars on axis\\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\\n\\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\\n      min = adjustedScale.min;\\n      max = adjustedScale.max;\\n    }\\n  }\\n\\n  return [min, max];\\n}\\n\\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\\n  // Get Axis Length\\n  var axisExtent = model.axis.getExtent();\\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\\n\\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\\n\\n  if (barsOnCurrentAxis === undefined) {\\n    return {\\n      min: min,\\n      max: max\\n    };\\n  }\\n\\n  var minOverflow = Infinity;\\n  zrUtil.each(barsOnCurrentAxis, function (item) {\\n    minOverflow = Math.min(item.offset, minOverflow);\\n  });\\n  var maxOverflow = -Infinity;\\n  zrUtil.each(barsOnCurrentAxis, function (item) {\\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\\n  });\\n  minOverflow = Math.abs(minOverflow);\\n  maxOverflow = Math.abs(maxOverflow);\\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\\n\\n  var oldRange = max - min;\\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\\n  return {\\n    min: min,\\n    max: max\\n  };\\n}\\n\\nfunction niceScaleExtent(scale, model) {\\n  var extent = getScaleExtent(scale, model);\\n  var fixMin = model.getMin() != null;\\n  var fixMax = model.getMax() != null;\\n  var splitNumber = model.get('splitNumber');\\n\\n  if (scale.type === 'log') {\\n    scale.base = model.get('logBase');\\n  }\\n\\n  var scaleType = scale.type;\\n  scale.setExtent(extent[0], extent[1]);\\n  scale.niceExtent({\\n    splitNumber: splitNumber,\\n    fixMin: fixMin,\\n    fixMax: fixMax,\\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\\n  }); // If some one specified the min, max. And the default calculated interval\\n  // is not good enough. He can specify the interval. It is often appeared\\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\\n  // to be 60.\\n  // FIXME\\n\\n  var interval = model.get('interval');\\n\\n  if (interval != null) {\\n    scale.setInterval && scale.setInterval(interval);\\n  }\\n}\\n/**\\n * @param {module:echarts/model/Model} model\\n * @param {string} [axisType] Default retrieve from model.type\\n * @return {module:echarts/scale/*}\\n */\\n\\n\\nfunction createScaleByModel(model, axisType) {\\n  axisType = axisType || model.get('type');\\n\\n  if (axisType) {\\n    switch (axisType) {\\n      // Buildin scale\\n      case 'category':\\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\\n\\n      case 'value':\\n        return new IntervalScale();\\n      // Extended scale, like time and log\\n\\n      default:\\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\\n    }\\n  }\\n}\\n/**\\n * Check if the axis corss 0\\n */\\n\\n\\nfunction ifAxisCrossZero(axis) {\\n  var dataExtent = axis.scale.getExtent();\\n  var min = dataExtent[0];\\n  var max = dataExtent[1];\\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\\n}\\n/**\\n * @param {module:echarts/coord/Axis} axis\\n * @return {Function} Label formatter function.\\n *         param: {number} tickValue,\\n *         param: {number} idx, the index in all ticks.\\n *                         If category axis, this param is not requied.\\n *         return: {string} label string.\\n */\\n\\n\\nfunction makeLabelFormatter(axis) {\\n  var labelFormatter = axis.getLabelModel().get('formatter');\\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\\n\\n  if (typeof labelFormatter === 'string') {\\n    labelFormatter = function (tpl) {\\n      return function (val) {\\n        // For category axis, get raw value; for numeric axis,\\n        // get foramtted label like '1,333,444'.\\n        val = axis.scale.getLabel(val);\\n        return tpl.replace('{value}', val != null ? val : '');\\n      };\\n    }(labelFormatter); // Consider empty array\\n\\n\\n    return labelFormatter;\\n  } else if (typeof labelFormatter === 'function') {\\n    return function (tickValue, idx) {\\n      // The original intention of `idx` is \\\"the index of the tick in all ticks\\\".\\n      // But the previous implementation of category axis do not consider the\\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\\n      // `1`, then the ticks \\\"name5\\\", \\\"name7\\\", \\\"name9\\\" are displayed, where the\\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\\n      // the definition here for back compatibility.\\n      if (categoryTickStart != null) {\\n        idx = tickValue - categoryTickStart;\\n      }\\n\\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\\n    };\\n  } else {\\n    return function (tick) {\\n      return axis.scale.getLabel(tick);\\n    };\\n  }\\n}\\n\\nfunction getAxisRawValue(axis, value) {\\n  // In category axis with data zoom, tick is not the original\\n  // index of axis.data. So tick should not be exposed to user\\n  // in category axis.\\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\\n}\\n/**\\n * @param {module:echarts/coord/Axis} axis\\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\\n */\\n\\n\\nfunction estimateLabelUnionRect(axis) {\\n  var axisModel = axis.model;\\n  var scale = axis.scale;\\n\\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\\n    return;\\n  }\\n\\n  var isCategory = axis.type === 'category';\\n  var realNumberScaleTicks;\\n  var tickCount;\\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\\n\\n  if (isCategory) {\\n    tickCount = scale.count();\\n  } else {\\n    realNumberScaleTicks = scale.getTicks();\\n    tickCount = realNumberScaleTicks.length;\\n  }\\n\\n  var axisLabelModel = axis.getLabelModel();\\n  var labelFormatter = makeLabelFormatter(axis);\\n  var rect;\\n  var step = 1; // Simple optimization for large amount of labels\\n\\n  if (tickCount > 40) {\\n    step = Math.ceil(tickCount / 40);\\n  }\\n\\n  for (var i = 0; i < tickCount; i += step) {\\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\\n    var label = labelFormatter(tickValue);\\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\\n    rect ? rect.union(singleRect) : rect = singleRect;\\n  }\\n\\n  return rect;\\n}\\n\\nfunction rotateTextRect(textRect, rotate) {\\n  var rotateRadians = rotate * Math.PI / 180;\\n  var boundingBox = textRect.plain();\\n  var beforeWidth = boundingBox.width;\\n  var beforeHeight = boundingBox.height;\\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\\n  return rotatedRect;\\n}\\n\\nexports.getScaleExtent = getScaleExtent;\\nexports.niceScaleExtent = niceScaleExtent;\\nexports.createScaleByModel = createScaleByModel;\\nexports.ifAxisCrossZero = ifAxisCrossZero;\\nexports.makeLabelFormatter = makeLabelFormatter;\\nexports.getAxisRawValue = getAxisRawValue;\\nexports.estimateLabelUnionRect = estimateLabelUnionRect;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///86\\n\")},function(module,exports){eval(\"var dpr = 1; // If in browser environment\\n\\nif (typeof window !== 'undefined') {\\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\\n}\\n/**\\n * config默认配置项\\n * @exports zrender/config\\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n */\\n\\n/**\\n * debug日志选项：catchBrushException为true下有效\\n * 0 : 不生成debug数据，发布用\\n * 1 : 异常抛出，调试用\\n * 2 : 控制台输出，调试用\\n */\\n\\n\\nvar debugMode = 0; // retina 屏幕优化\\n\\nvar devicePixelRatio = dpr;\\nexports.debugMode = debugMode;\\nexports.devicePixelRatio = devicePixelRatio;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29uZmlnLmpzPzJjZjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0Esa0JBQWtCOztBQUVsQjtBQUNBO0FBQ0EiLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZHByID0gMTsgLy8gSWYgaW4gYnJvd3NlciBlbnZpcm9ubWVudFxuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgZHByID0gTWF0aC5tYXgod2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMSwgMSk7XG59XG4vKipcbiAqIGNvbmZpZ+m7mOiupOmFjee9rumhuVxuICogQGV4cG9ydHMgenJlbmRlci9jb25maWdcbiAqIEBhdXRob3IgS2VuZXIgKEBLZW5lci3mnpfls7AsIGtlbmVyLmxpbmZlbmdAZ21haWwuY29tKVxuICovXG5cbi8qKlxuICogZGVidWfml6Xlv5fpgInpobnvvJpjYXRjaEJydXNoRXhjZXB0aW9u5Li6dHJ1ZeS4i+acieaViFxuICogMCA6IOS4jeeUn+aIkGRlYnVn5pWw5o2u77yM5Y+R5biD55SoXG4gKiAxIDog5byC5bi45oqb5Ye677yM6LCD6K+V55SoXG4gKiAyIDog5o6n5Yi25Y+w6L6T5Ye677yM6LCD6K+V55SoXG4gKi9cblxuXG52YXIgZGVidWdNb2RlID0gMDsgLy8gcmV0aW5hIOWxj+W5leS8mOWMllxuXG52YXIgZGV2aWNlUGl4ZWxSYXRpbyA9IGRwcjtcbmV4cG9ydHMuZGVidWdNb2RlID0gZGVidWdNb2RlO1xuZXhwb3J0cy5kZXZpY2VQaXhlbFJhdGlvID0gZGV2aWNlUGl4ZWxSYXRpbzsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///87\\n\")},function(module,exports,__webpack_require__){eval(\"var zrUtil = __webpack_require__(59);\\n\\nvar Style = __webpack_require__(101);\\n\\nvar Element = __webpack_require__(129);\\n\\nvar RectText = __webpack_require__(201);\\n\\n/**\\n * 可绘制的图形基类\\n * Base class of all displayable graphic objects\\n * @module zrender/graphic/Displayable\\n */\\n\\n/**\\n * @alias module:zrender/graphic/Displayable\\n * @extends module:zrender/Element\\n * @extends module:zrender/graphic/mixin/RectText\\n */\\nfunction Displayable(opts) {\\n  opts = opts || {};\\n  Element.call(this, opts); // Extend properties\\n\\n  for (var name in opts) {\\n    if (opts.hasOwnProperty(name) && name !== 'style') {\\n      this[name] = opts[name];\\n    }\\n  }\\n  /**\\n   * @type {module:zrender/graphic/Style}\\n   */\\n\\n\\n  this.style = new Style(opts.style, this);\\n  this._rect = null; // Shapes for cascade clipping.\\n\\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\\n  // Stateful.call(this, opts);\\n}\\n\\nDisplayable.prototype = {\\n  constructor: Displayable,\\n  type: 'displayable',\\n\\n  /**\\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\\n   * Dirty flag. From which painter will determine if this displayable object needs brush\\n   * @name module:zrender/graphic/Displayable#__dirty\\n   * @type {boolean}\\n   */\\n  __dirty: true,\\n\\n  /**\\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\\n   * @name module:/zrender/graphic/Displayable#invisible\\n   * @type {boolean}\\n   * @default false\\n   */\\n  invisible: false,\\n\\n  /**\\n   * @name module:/zrender/graphic/Displayable#z\\n   * @type {number}\\n   * @default 0\\n   */\\n  z: 0,\\n\\n  /**\\n   * @name module:/zrender/graphic/Displayable#z\\n   * @type {number}\\n   * @default 0\\n   */\\n  z2: 0,\\n\\n  /**\\n   * z层level，决定绘画在哪层canvas中\\n   * @name module:/zrender/graphic/Displayable#zlevel\\n   * @type {number}\\n   * @default 0\\n   */\\n  zlevel: 0,\\n\\n  /**\\n   * 是否可拖拽\\n   * @name module:/zrender/graphic/Displayable#draggable\\n   * @type {boolean}\\n   * @default false\\n   */\\n  draggable: false,\\n\\n  /**\\n   * 是否正在拖拽\\n   * @name module:/zrender/graphic/Displayable#draggable\\n   * @type {boolean}\\n   * @default false\\n   */\\n  dragging: false,\\n\\n  /**\\n   * 是否相应鼠标事件\\n   * @name module:/zrender/graphic/Displayable#silent\\n   * @type {boolean}\\n   * @default false\\n   */\\n  silent: false,\\n\\n  /**\\n   * If enable culling\\n   * @type {boolean}\\n   * @default false\\n   */\\n  culling: false,\\n\\n  /**\\n   * Mouse cursor when hovered\\n   * @name module:/zrender/graphic/Displayable#cursor\\n   * @type {string}\\n   */\\n  cursor: 'pointer',\\n\\n  /**\\n   * If hover area is bounding rect\\n   * @name module:/zrender/graphic/Displayable#rectHover\\n   * @type {string}\\n   */\\n  rectHover: false,\\n\\n  /**\\n   * Render the element progressively when the value >= 0,\\n   * usefull for large data.\\n   * @type {boolean}\\n   */\\n  progressive: false,\\n\\n  /**\\n   * @type {boolean}\\n   */\\n  incremental: false,\\n\\n  /**\\n   * Scale ratio for global scale.\\n   * @type {boolean}\\n   */\\n  globalScaleRatio: 1,\\n  beforeBrush: function (ctx) {},\\n  afterBrush: function (ctx) {},\\n\\n  /**\\n   * 图形绘制方法\\n   * @param {CanvasRenderingContext2D} ctx\\n   */\\n  // Interface\\n  brush: function (ctx, prevEl) {},\\n\\n  /**\\n   * 获取最小包围盒\\n   * @return {module:zrender/core/BoundingRect}\\n   */\\n  // Interface\\n  getBoundingRect: function () {},\\n\\n  /**\\n   * 判断坐标 x, y 是否在图形上\\n   * If displayable element contain coord x, y\\n   * @param  {number} x\\n   * @param  {number} y\\n   * @return {boolean}\\n   */\\n  contain: function (x, y) {\\n    return this.rectContain(x, y);\\n  },\\n\\n  /**\\n   * @param  {Function} cb\\n   * @param  {}   context\\n   */\\n  traverse: function (cb, context) {\\n    cb.call(context, this);\\n  },\\n\\n  /**\\n   * 判断坐标 x, y 是否在图形的包围盒上\\n   * If bounding rect of element contain coord x, y\\n   * @param  {number} x\\n   * @param  {number} y\\n   * @return {boolean}\\n   */\\n  rectContain: function (x, y) {\\n    var coord = this.transformCoordToLocal(x, y);\\n    var rect = this.getBoundingRect();\\n    return rect.contain(coord[0], coord[1]);\\n  },\\n\\n  /**\\n   * 标记图形元素为脏，并且在下一帧重绘\\n   * Mark displayable element dirty and refresh next frame\\n   */\\n  dirty: function () {\\n    this.__dirty = this.__dirtyText = true;\\n    this._rect = null;\\n    this.__zr && this.__zr.refresh();\\n  },\\n\\n  /**\\n   * 图形是否会触发事件\\n   * If displayable object binded any event\\n   * @return {boolean}\\n   */\\n  // TODO, 通过 bind 绑定的事件\\n  // isSilent: function () {\\n  //     return !(\\n  //         this.hoverable || this.draggable\\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\\n  //         || this.onmousedown || this.onmouseup || this.onclick\\n  //         || this.ondragenter || this.ondragover || this.ondragleave\\n  //         || this.ondrop\\n  //     );\\n  // },\\n\\n  /**\\n   * Alias for animate('style')\\n   * @param {boolean} loop\\n   */\\n  animateStyle: function (loop) {\\n    return this.animate('style', loop);\\n  },\\n  attrKV: function (key, value) {\\n    if (key !== 'style') {\\n      Element.prototype.attrKV.call(this, key, value);\\n    } else {\\n      this.style.set(value);\\n    }\\n  },\\n\\n  /**\\n   * @param {Object|string} key\\n   * @param {*} value\\n   */\\n  setStyle: function (key, value) {\\n    this.style.set(key, value);\\n    this.dirty(false);\\n    return this;\\n  },\\n\\n  /**\\n   * Use given style object\\n   * @param  {Object} obj\\n   */\\n  useStyle: function (obj) {\\n    this.style = new Style(obj, this);\\n    this.dirty(false);\\n    return this;\\n  }\\n};\\nzrUtil.inherits(Displayable, Element);\\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\\n\\nvar _default = Displayable;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///88\\n\")},function(module,exports,__webpack_require__){eval(\"var curve = __webpack_require__(77);\\n\\nvar vec2 = __webpack_require__(62);\\n\\nvar bbox = __webpack_require__(141);\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\nvar _config = __webpack_require__(87);\\n\\nvar dpr = _config.devicePixelRatio;\\n\\n/**\\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\\n * 可以用于 isInsidePath 判断以及获取boundingRect\\n *\\n * @module zrender/core/PathProxy\\n * @author Yi Shen (http://www.github.com/pissang)\\n */\\n// TODO getTotalLength, getPointAtLength\\nvar CMD = {\\n  M: 1,\\n  L: 2,\\n  C: 3,\\n  Q: 4,\\n  A: 5,\\n  Z: 6,\\n  // Rect\\n  R: 7\\n}; // var CMD_MEM_SIZE = {\\n//     M: 3,\\n//     L: 3,\\n//     C: 7,\\n//     Q: 5,\\n//     A: 9,\\n//     R: 5,\\n//     Z: 1\\n// };\\n\\nvar min = [];\\nvar max = [];\\nvar min2 = [];\\nvar max2 = [];\\nvar mathMin = Math.min;\\nvar mathMax = Math.max;\\nvar mathCos = Math.cos;\\nvar mathSin = Math.sin;\\nvar mathSqrt = Math.sqrt;\\nvar mathAbs = Math.abs;\\nvar hasTypedArray = typeof Float32Array != 'undefined';\\n/**\\n * @alias module:zrender/core/PathProxy\\n * @constructor\\n */\\n\\nvar PathProxy = function (notSaveData) {\\n  this._saveData = !(notSaveData || false);\\n\\n  if (this._saveData) {\\n    /**\\n     * Path data. Stored as flat array\\n     * @type {Array.<Object>}\\n     */\\n    this.data = [];\\n  }\\n\\n  this._ctx = null;\\n};\\n/**\\n * 快速计算Path包围盒（并不是最小包围盒）\\n * @return {Object}\\n */\\n\\n\\nPathProxy.prototype = {\\n  constructor: PathProxy,\\n  _xi: 0,\\n  _yi: 0,\\n  _x0: 0,\\n  _y0: 0,\\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\\n  _ux: 0,\\n  _uy: 0,\\n  _len: 0,\\n  _lineDash: null,\\n  _dashOffset: 0,\\n  _dashIdx: 0,\\n  _dashSum: 0,\\n\\n  /**\\n   * @readOnly\\n   */\\n  setScale: function (sx, sy) {\\n    this._ux = mathAbs(1 / dpr / sx) || 0;\\n    this._uy = mathAbs(1 / dpr / sy) || 0;\\n  },\\n  getContext: function () {\\n    return this._ctx;\\n  },\\n\\n  /**\\n   * @param  {CanvasRenderingContext2D} ctx\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  beginPath: function (ctx) {\\n    this._ctx = ctx;\\n    ctx && ctx.beginPath();\\n    ctx && (this.dpr = ctx.dpr); // Reset\\n\\n    if (this._saveData) {\\n      this._len = 0;\\n    }\\n\\n    if (this._lineDash) {\\n      this._lineDash = null;\\n      this._dashOffset = 0;\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * @param  {number} x\\n   * @param  {number} y\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  moveTo: function (x, y) {\\n    this.addData(CMD.M, x, y);\\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\\n\\n    this._x0 = x;\\n    this._y0 = y;\\n    this._xi = x;\\n    this._yi = y;\\n    return this;\\n  },\\n\\n  /**\\n   * @param  {number} x\\n   * @param  {number} y\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  lineTo: function (x, y) {\\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\\n    || this._len < 5;\\n    this.addData(CMD.L, x, y);\\n\\n    if (this._ctx && exceedUnit) {\\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\\n    }\\n\\n    if (exceedUnit) {\\n      this._xi = x;\\n      this._yi = y;\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * @param  {number} x1\\n   * @param  {number} y1\\n   * @param  {number} x2\\n   * @param  {number} y2\\n   * @param  {number} x3\\n   * @param  {number} y3\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\\n\\n    if (this._ctx) {\\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\\n    }\\n\\n    this._xi = x3;\\n    this._yi = y3;\\n    return this;\\n  },\\n\\n  /**\\n   * @param  {number} x1\\n   * @param  {number} y1\\n   * @param  {number} x2\\n   * @param  {number} y2\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  quadraticCurveTo: function (x1, y1, x2, y2) {\\n    this.addData(CMD.Q, x1, y1, x2, y2);\\n\\n    if (this._ctx) {\\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\\n    }\\n\\n    this._xi = x2;\\n    this._yi = y2;\\n    return this;\\n  },\\n\\n  /**\\n   * @param  {number} cx\\n   * @param  {number} cy\\n   * @param  {number} r\\n   * @param  {number} startAngle\\n   * @param  {number} endAngle\\n   * @param  {boolean} anticlockwise\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\\n    this._xi = mathCos(endAngle) * r + cx;\\n    this._yi = mathSin(endAngle) * r + cy;\\n    return this;\\n  },\\n  // TODO\\n  arcTo: function (x1, y1, x2, y2, radius) {\\n    if (this._ctx) {\\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\\n    }\\n\\n    return this;\\n  },\\n  // TODO\\n  rect: function (x, y, w, h) {\\n    this._ctx && this._ctx.rect(x, y, w, h);\\n    this.addData(CMD.R, x, y, w, h);\\n    return this;\\n  },\\n\\n  /**\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  closePath: function () {\\n    this.addData(CMD.Z);\\n    var ctx = this._ctx;\\n    var x0 = this._x0;\\n    var y0 = this._y0;\\n\\n    if (ctx) {\\n      this._needsDash() && this._dashedLineTo(x0, y0);\\n      ctx.closePath();\\n    }\\n\\n    this._xi = x0;\\n    this._yi = y0;\\n    return this;\\n  },\\n\\n  /**\\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\\n   * stroke 同样\\n   * @param {CanvasRenderingContext2D} ctx\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  fill: function (ctx) {\\n    ctx && ctx.fill();\\n    this.toStatic();\\n  },\\n\\n  /**\\n   * @param {CanvasRenderingContext2D} ctx\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  stroke: function (ctx) {\\n    ctx && ctx.stroke();\\n    this.toStatic();\\n  },\\n\\n  /**\\n   * 必须在其它绘制命令前调用\\n   * Must be invoked before all other path drawing methods\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  setLineDash: function (lineDash) {\\n    if (lineDash instanceof Array) {\\n      this._lineDash = lineDash;\\n      this._dashIdx = 0;\\n      var lineDashSum = 0;\\n\\n      for (var i = 0; i < lineDash.length; i++) {\\n        lineDashSum += lineDash[i];\\n      }\\n\\n      this._dashSum = lineDashSum;\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * 必须在其它绘制命令前调用\\n   * Must be invoked before all other path drawing methods\\n   * @return {module:zrender/core/PathProxy}\\n   */\\n  setLineDashOffset: function (offset) {\\n    this._dashOffset = offset;\\n    return this;\\n  },\\n\\n  /**\\n   *\\n   * @return {boolean}\\n   */\\n  len: function () {\\n    return this._len;\\n  },\\n\\n  /**\\n   * 直接设置 Path 数据\\n   */\\n  setData: function (data) {\\n    var len = data.length;\\n\\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\\n      this.data = new Float32Array(len);\\n    }\\n\\n    for (var i = 0; i < len; i++) {\\n      this.data[i] = data[i];\\n    }\\n\\n    this._len = len;\\n  },\\n\\n  /**\\n   * 添加子路径\\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\\n   */\\n  appendPath: function (path) {\\n    if (!(path instanceof Array)) {\\n      path = [path];\\n    }\\n\\n    var len = path.length;\\n    var appendSize = 0;\\n    var offset = this._len;\\n\\n    for (var i = 0; i < len; i++) {\\n      appendSize += path[i].len();\\n    }\\n\\n    if (hasTypedArray && this.data instanceof Float32Array) {\\n      this.data = new Float32Array(offset + appendSize);\\n    }\\n\\n    for (var i = 0; i < len; i++) {\\n      var appendPathData = path[i].data;\\n\\n      for (var k = 0; k < appendPathData.length; k++) {\\n        this.data[offset++] = appendPathData[k];\\n      }\\n    }\\n\\n    this._len = offset;\\n  },\\n\\n  /**\\n   * 填充 Path 数据。\\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\\n   */\\n  addData: function (cmd) {\\n    if (!this._saveData) {\\n      return;\\n    }\\n\\n    var data = this.data;\\n\\n    if (this._len + arguments.length > data.length) {\\n      // 因为之前的数组已经转换成静态的 Float32Array\\n      // 所以不够用时需要扩展一个新的动态数组\\n      this._expandData();\\n\\n      data = this.data;\\n    }\\n\\n    for (var i = 0; i < arguments.length; i++) {\\n      data[this._len++] = arguments[i];\\n    }\\n\\n    this._prevCmd = cmd;\\n  },\\n  _expandData: function () {\\n    // Only if data is Float32Array\\n    if (!(this.data instanceof Array)) {\\n      var newData = [];\\n\\n      for (var i = 0; i < this._len; i++) {\\n        newData[i] = this.data[i];\\n      }\\n\\n      this.data = newData;\\n    }\\n  },\\n\\n  /**\\n   * If needs js implemented dashed line\\n   * @return {boolean}\\n   * @private\\n   */\\n  _needsDash: function () {\\n    return this._lineDash;\\n  },\\n  _dashedLineTo: function (x1, y1) {\\n    var dashSum = this._dashSum;\\n    var offset = this._dashOffset;\\n    var lineDash = this._lineDash;\\n    var ctx = this._ctx;\\n    var x0 = this._xi;\\n    var y0 = this._yi;\\n    var dx = x1 - x0;\\n    var dy = y1 - y0;\\n    var dist = mathSqrt(dx * dx + dy * dy);\\n    var x = x0;\\n    var y = y0;\\n    var dash;\\n    var nDash = lineDash.length;\\n    var idx;\\n    dx /= dist;\\n    dy /= dist;\\n\\n    if (offset < 0) {\\n      // Convert to positive offset\\n      offset = dashSum + offset;\\n    }\\n\\n    offset %= dashSum;\\n    x -= offset * dx;\\n    y -= offset * dy;\\n\\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\\n      idx = this._dashIdx;\\n      dash = lineDash[idx];\\n      x += dx * dash;\\n      y += dy * dash;\\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\\n\\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\\n        continue;\\n      }\\n\\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\\n    } // Offset for next lineTo\\n\\n\\n    dx = x - x1;\\n    dy = y - y1;\\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\\n  },\\n  // Not accurate dashed line to\\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\\n    var dashSum = this._dashSum;\\n    var offset = this._dashOffset;\\n    var lineDash = this._lineDash;\\n    var ctx = this._ctx;\\n    var x0 = this._xi;\\n    var y0 = this._yi;\\n    var t;\\n    var dx;\\n    var dy;\\n    var cubicAt = curve.cubicAt;\\n    var bezierLen = 0;\\n    var idx = this._dashIdx;\\n    var nDash = lineDash.length;\\n    var x;\\n    var y;\\n    var tmpLen = 0;\\n\\n    if (offset < 0) {\\n      // Convert to positive offset\\n      offset = dashSum + offset;\\n    }\\n\\n    offset %= dashSum; // Bezier approx length\\n\\n    for (t = 0; t < 1; t += 0.1) {\\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\\n      bezierLen += mathSqrt(dx * dx + dy * dy);\\n    } // Find idx after add offset\\n\\n\\n    for (; idx < nDash; idx++) {\\n      tmpLen += lineDash[idx];\\n\\n      if (tmpLen > offset) {\\n        break;\\n      }\\n    }\\n\\n    t = (tmpLen - offset) / bezierLen;\\n\\n    while (t <= 1) {\\n      x = cubicAt(x0, x1, x2, x3, t);\\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\\n      // Bad result if dash is long\\n\\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\\n      t += lineDash[idx] / bezierLen;\\n      idx = (idx + 1) % nDash;\\n    } // Finish the last segment and calculate the new offset\\n\\n\\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\\n    dx = x3 - x;\\n    dy = y3 - y;\\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\\n  },\\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\\n    // Convert quadratic to cubic using degree elevation\\n    var x3 = x2;\\n    var y3 = y2;\\n    x2 = (x2 + 2 * x1) / 3;\\n    y2 = (y2 + 2 * y1) / 3;\\n    x1 = (this._xi + 2 * x1) / 3;\\n    y1 = (this._yi + 2 * y1) / 3;\\n\\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\\n  },\\n\\n  /**\\n   * 转成静态的 Float32Array 减少堆内存占用\\n   * Convert dynamic array to static Float32Array\\n   */\\n  toStatic: function () {\\n    var data = this.data;\\n\\n    if (data instanceof Array) {\\n      data.length = this._len;\\n\\n      if (hasTypedArray) {\\n        this.data = new Float32Array(data);\\n      }\\n    }\\n  },\\n\\n  /**\\n   * @return {module:zrender/core/BoundingRect}\\n   */\\n  getBoundingRect: function () {\\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\\n    var data = this.data;\\n    var xi = 0;\\n    var yi = 0;\\n    var x0 = 0;\\n    var y0 = 0;\\n\\n    for (var i = 0; i < data.length;) {\\n      var cmd = data[i++];\\n\\n      if (i == 1) {\\n        // 如果第一个命令是 L, C, Q\\n        // 则 previous point 同绘制命令的第一个 point\\n        //\\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\\n        xi = data[i];\\n        yi = data[i + 1];\\n        x0 = xi;\\n        y0 = yi;\\n      }\\n\\n      switch (cmd) {\\n        case CMD.M:\\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\\n          // 在 closePath 的时候使用\\n          x0 = data[i++];\\n          y0 = data[i++];\\n          xi = x0;\\n          yi = y0;\\n          min2[0] = x0;\\n          min2[1] = y0;\\n          max2[0] = x0;\\n          max2[1] = y0;\\n          break;\\n\\n        case CMD.L:\\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\\n          xi = data[i++];\\n          yi = data[i++];\\n          break;\\n\\n        case CMD.C:\\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\\n          xi = data[i++];\\n          yi = data[i++];\\n          break;\\n\\n        case CMD.Q:\\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\\n          xi = data[i++];\\n          yi = data[i++];\\n          break;\\n\\n        case CMD.A:\\n          // TODO Arc 判断的开销比较大\\n          var cx = data[i++];\\n          var cy = data[i++];\\n          var rx = data[i++];\\n          var ry = data[i++];\\n          var startAngle = data[i++];\\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\\n\\n          var psi = data[i++];\\n          var anticlockwise = 1 - data[i++];\\n\\n          if (i == 1) {\\n            // 直接使用 arc 命令\\n            // 第一个命令起点还未定义\\n            x0 = mathCos(startAngle) * rx + cx;\\n            y0 = mathSin(startAngle) * ry + cy;\\n          }\\n\\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\\n          xi = mathCos(endAngle) * rx + cx;\\n          yi = mathSin(endAngle) * ry + cy;\\n          break;\\n\\n        case CMD.R:\\n          x0 = xi = data[i++];\\n          y0 = yi = data[i++];\\n          var width = data[i++];\\n          var height = data[i++]; // Use fromLine\\n\\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\\n          break;\\n\\n        case CMD.Z:\\n          xi = x0;\\n          yi = y0;\\n          break;\\n      } // Union\\n\\n\\n      vec2.min(min, min, min2);\\n      vec2.max(max, max, max2);\\n    } // No data\\n\\n\\n    if (i === 0) {\\n      min[0] = min[1] = max[0] = max[1] = 0;\\n    }\\n\\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\\n  },\\n\\n  /**\\n   * Rebuild path from current data\\n   * Rebuild path will not consider javascript implemented line dash.\\n   * @param {CanvasRenderingContext2D} ctx\\n   */\\n  rebuildPath: function (ctx) {\\n    var d = this.data;\\n    var x0, y0;\\n    var xi, yi;\\n    var x, y;\\n    var ux = this._ux;\\n    var uy = this._uy;\\n    var len = this._len;\\n\\n    for (var i = 0; i < len;) {\\n      var cmd = d[i++];\\n\\n      if (i == 1) {\\n        // 如果第一个命令是 L, C, Q\\n        // 则 previous point 同绘制命令的第一个 point\\n        //\\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\\n        xi = d[i];\\n        yi = d[i + 1];\\n        x0 = xi;\\n        y0 = yi;\\n      }\\n\\n      switch (cmd) {\\n        case CMD.M:\\n          x0 = xi = d[i++];\\n          y0 = yi = d[i++];\\n          ctx.moveTo(xi, yi);\\n          break;\\n\\n        case CMD.L:\\n          x = d[i++];\\n          y = d[i++]; // Not draw too small seg between\\n\\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\\n            ctx.lineTo(x, y);\\n            xi = x;\\n            yi = y;\\n          }\\n\\n          break;\\n\\n        case CMD.C:\\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\\n          xi = d[i - 2];\\n          yi = d[i - 1];\\n          break;\\n\\n        case CMD.Q:\\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\\n          xi = d[i - 2];\\n          yi = d[i - 1];\\n          break;\\n\\n        case CMD.A:\\n          var cx = d[i++];\\n          var cy = d[i++];\\n          var rx = d[i++];\\n          var ry = d[i++];\\n          var theta = d[i++];\\n          var dTheta = d[i++];\\n          var psi = d[i++];\\n          var fs = d[i++];\\n          var r = rx > ry ? rx : ry;\\n          var scaleX = rx > ry ? 1 : rx / ry;\\n          var scaleY = rx > ry ? ry / rx : 1;\\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\\n          var endAngle = theta + dTheta;\\n\\n          if (isEllipse) {\\n            ctx.translate(cx, cy);\\n            ctx.rotate(psi);\\n            ctx.scale(scaleX, scaleY);\\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\\n            ctx.scale(1 / scaleX, 1 / scaleY);\\n            ctx.rotate(-psi);\\n            ctx.translate(-cx, -cy);\\n          } else {\\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\\n          }\\n\\n          if (i == 1) {\\n            // 直接使用 arc 命令\\n            // 第一个命令起点还未定义\\n            x0 = mathCos(theta) * rx + cx;\\n            y0 = mathSin(theta) * ry + cy;\\n          }\\n\\n          xi = mathCos(endAngle) * rx + cx;\\n          yi = mathSin(endAngle) * ry + cy;\\n          break;\\n\\n        case CMD.R:\\n          x0 = xi = d[i];\\n          y0 = yi = d[i + 1];\\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\\n          break;\\n\\n        case CMD.Z:\\n          ctx.closePath();\\n          xi = x0;\\n          yi = y0;\\n      }\\n    }\\n  }\\n};\\nPathProxy.CMD = CMD;\\nvar _default = PathProxy;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///89\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar _clazz = __webpack_require__(71);\\n\\nvar parseClassType = _clazz.parseClassType;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar base = 0;\\n/**\\n * @public\\n * @param {string} type\\n * @return {string}\\n */\\n\\nfunction getUID(type) {\\n  // Considering the case of crossing js context,\\n  // use Math.random to make id as unique as possible.\\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\\n}\\n/**\\n * @inner\\n */\\n\\n\\nfunction enableSubTypeDefaulter(entity) {\\n  var subTypeDefaulters = {};\\n\\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\\n    componentType = parseClassType(componentType);\\n    subTypeDefaulters[componentType.main] = defaulter;\\n  };\\n\\n  entity.determineSubType = function (componentType, option) {\\n    var type = option.type;\\n\\n    if (!type) {\\n      var componentTypeMain = parseClassType(componentType).main;\\n\\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\\n        type = subTypeDefaulters[componentTypeMain](option);\\n      }\\n    }\\n\\n    return type;\\n  };\\n\\n  return entity;\\n}\\n/**\\n * Topological travel on Activity Network (Activity On Vertices).\\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\\n *\\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\\n *\\n * If there is circle dependencey, Error will be thrown.\\n *\\n */\\n\\n\\nfunction enableTopologicalTravel(entity, dependencyGetter) {\\n  /**\\n   * @public\\n   * @param {Array.<string>} targetNameList Target Component type list.\\n   *                                           Can be ['aa', 'bb', 'aa.xx']\\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\\n   * @param {Function} callback Params: componentType, dependencies.\\n   * @param {Object} context Scope of callback.\\n   */\\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\\n    if (!targetNameList.length) {\\n      return;\\n    }\\n\\n    var result = makeDepndencyGraph(fullNameList);\\n    var graph = result.graph;\\n    var stack = result.noEntryList;\\n    var targetNameSet = {};\\n    zrUtil.each(targetNameList, function (name) {\\n      targetNameSet[name] = true;\\n    });\\n\\n    while (stack.length) {\\n      var currComponentType = stack.pop();\\n      var currVertex = graph[currComponentType];\\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\\n\\n      if (isInTargetNameSet) {\\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\\n        delete targetNameSet[currComponentType];\\n      }\\n\\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\\n    }\\n\\n    zrUtil.each(targetNameSet, function () {\\n      throw new Error('Circle dependency may exists');\\n    });\\n\\n    function removeEdge(succComponentType) {\\n      graph[succComponentType].entryCount--;\\n\\n      if (graph[succComponentType].entryCount === 0) {\\n        stack.push(succComponentType);\\n      }\\n    } // Consider this case: legend depends on series, and we call\\n    // chart.setOption({series: [...]}), where only series is in option.\\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\\n    // not be called, but only sereis.mergeOption is called. Thus legend\\n    // have no chance to update its local record about series (like which\\n    // name of series is available in legend).\\n\\n\\n    function removeEdgeAndAdd(succComponentType) {\\n      targetNameSet[succComponentType] = true;\\n      removeEdge(succComponentType);\\n    }\\n  };\\n  /**\\n   * DepndencyGraph: {Object}\\n   * key: conponentType,\\n   * value: {\\n   *     successor: [conponentTypes...],\\n   *     originalDeps: [conponentTypes...],\\n   *     entryCount: {number}\\n   * }\\n   */\\n\\n\\n  function makeDepndencyGraph(fullNameList) {\\n    var graph = {};\\n    var noEntryList = [];\\n    zrUtil.each(fullNameList, function (name) {\\n      var thisItem = createDependencyGraphItem(graph, name);\\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\\n      thisItem.entryCount = availableDeps.length;\\n\\n      if (thisItem.entryCount === 0) {\\n        noEntryList.push(name);\\n      }\\n\\n      zrUtil.each(availableDeps, function (dependentName) {\\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\\n          thisItem.predecessor.push(dependentName);\\n        }\\n\\n        var thatItem = createDependencyGraphItem(graph, dependentName);\\n\\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\\n          thatItem.successor.push(name);\\n        }\\n      });\\n    });\\n    return {\\n      graph: graph,\\n      noEntryList: noEntryList\\n    };\\n  }\\n\\n  function createDependencyGraphItem(graph, name) {\\n    if (!graph[name]) {\\n      graph[name] = {\\n        predecessor: [],\\n        successor: []\\n      };\\n    }\\n\\n    return graph[name];\\n  }\\n\\n  function getAvailableDependencies(originalDeps, fullNameList) {\\n    var availableDeps = [];\\n    zrUtil.each(originalDeps, function (dep) {\\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\\n    });\\n    return availableDeps;\\n  }\\n}\\n\\nexports.getUID = getUID;\\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\\nexports.enableTopologicalTravel = enableTopologicalTravel;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///90\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\nvar getDataItemValue = _model.getDataItemValue;\\n\\nvar _referHelper = __webpack_require__(153);\\n\\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\\n\\nvar _util = __webpack_require__(59);\\n\\nvar createHashMap = _util.createHashMap;\\nvar each = _util.each;\\nvar map = _util.map;\\nvar isArray = _util.isArray;\\nvar isString = _util.isString;\\nvar isObject = _util.isObject;\\nvar isTypedArray = _util.isTypedArray;\\nvar isArrayLike = _util.isArrayLike;\\nvar extend = _util.extend;\\nvar assert = _util.assert;\\n\\nvar Source = __webpack_require__(83);\\n\\nvar _sourceType = __webpack_require__(84);\\n\\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar inner = makeInner();\\n/**\\n * @see {module:echarts/data/Source}\\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\\n * @return {string} sourceFormat\\n */\\n\\nfunction detectSourceFormat(datasetModel) {\\n  var data = datasetModel.option.source;\\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\\n\\n  if (isTypedArray(data)) {\\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\\n  } else if (isArray(data)) {\\n    // FIXME Whether tolerate null in top level array?\\n    if (data.length === 0) {\\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\\n    }\\n\\n    for (var i = 0, len = data.length; i < len; i++) {\\n      var item = data[i];\\n\\n      if (item == null) {\\n        continue;\\n      } else if (isArray(item)) {\\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\\n        break;\\n      } else if (isObject(item)) {\\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\\n        break;\\n      }\\n    }\\n  } else if (isObject(data)) {\\n    for (var key in data) {\\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\\n        break;\\n      }\\n    }\\n  } else if (data != null) {\\n    throw new Error('Invalid data');\\n  }\\n\\n  inner(datasetModel).sourceFormat = sourceFormat;\\n}\\n/**\\n * [Scenarios]:\\n * (1) Provide source data directly:\\n *     series: {\\n *         encode: {...},\\n *         dimensions: [...]\\n *         seriesLayoutBy: 'row',\\n *         data: [[...]]\\n *     }\\n * (2) Refer to datasetModel.\\n *     series: [{\\n *         encode: {...}\\n *         // Ignore datasetIndex means `datasetIndex: 0`\\n *         // and the dimensions defination in dataset is used\\n *     }, {\\n *         encode: {...},\\n *         seriesLayoutBy: 'column',\\n *         datasetIndex: 1\\n *     }]\\n *\\n * Get data from series itself or datset.\\n * @return {module:echarts/data/Source} source\\n */\\n\\n\\nfunction getSource(seriesModel) {\\n  return inner(seriesModel).source;\\n}\\n/**\\n * MUST be called before mergeOption of all series.\\n * @param {module:echarts/model/Global} ecModel\\n */\\n\\n\\nfunction resetSourceDefaulter(ecModel) {\\n  // `datasetMap` is used to make default encode.\\n  inner(ecModel).datasetMap = createHashMap();\\n}\\n/**\\n * [Caution]:\\n * MUST be called after series option merged and\\n * before \\\"series.getInitailData()\\\" called.\\n *\\n * [The rule of making default encode]:\\n * Category axis (if exists) alway map to the first dimension.\\n * Each other axis occupies a subsequent dimension.\\n *\\n * [Why make default encode]:\\n * Simplify the typing of encode in option, avoiding the case like that:\\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\\n * where the \\\"y\\\" have to be manually typed as \\\"1, 2, 3, ...\\\".\\n *\\n * @param {module:echarts/model/Series} seriesModel\\n */\\n\\n\\nfunction prepareSource(seriesModel) {\\n  var seriesOption = seriesModel.option;\\n  var data = seriesOption.data;\\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\\n  var fromDataset = false;\\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\\n  var sourceHeader = seriesOption.sourceHeader;\\n  var dimensionsDefine = seriesOption.dimensions;\\n  var datasetModel = getDatasetModel(seriesModel);\\n\\n  if (datasetModel) {\\n    var datasetOption = datasetModel.option;\\n    data = datasetOption.source;\\n    sourceFormat = inner(datasetModel).sourceFormat;\\n    fromDataset = true; // These settings from series has higher priority.\\n\\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\\n  }\\n\\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\\n\\n  var encodeDefine = seriesOption.encode;\\n\\n  if (!encodeDefine && datasetModel) {\\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\\n  }\\n\\n  inner(seriesModel).source = new Source({\\n    data: data,\\n    fromDataset: fromDataset,\\n    seriesLayoutBy: seriesLayoutBy,\\n    sourceFormat: sourceFormat,\\n    dimensionsDefine: completeResult.dimensionsDefine,\\n    startIndex: completeResult.startIndex,\\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\\n    encodeDefine: encodeDefine\\n  });\\n} // return {startIndex, dimensionsDefine, dimensionsCount}\\n\\n\\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\\n  if (!data) {\\n    return {\\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\\n    };\\n  }\\n\\n  var dimensionsDetectCount;\\n  var startIndex;\\n  var findPotentialName;\\n\\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\\n    // Rule: Most of the first line are string: it is header.\\n    // Caution: consider a line with 5 string and 1 number,\\n    // it still can not be sure it is a head, because the\\n    // 5 string may be 5 values of category columns.\\n    if (sourceHeader === 'auto' || sourceHeader == null) {\\n      arrayRowsTravelFirst(function (val) {\\n        // '-' is regarded as null/undefined.\\n        if (val != null && val !== '-') {\\n          if (isString(val)) {\\n            startIndex == null && (startIndex = 1);\\n          } else {\\n            startIndex = 0;\\n          }\\n        } // 10 is an experience number, avoid long loop.\\n\\n      }, seriesLayoutBy, data, 10);\\n    } else {\\n      startIndex = sourceHeader ? 1 : 0;\\n    }\\n\\n    if (!dimensionsDefine && startIndex === 1) {\\n      dimensionsDefine = [];\\n      arrayRowsTravelFirst(function (val, index) {\\n        dimensionsDefine[index] = val != null ? val : '';\\n      }, seriesLayoutBy, data);\\n    }\\n\\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\\n    if (!dimensionsDefine) {\\n      dimensionsDefine = objectRowsCollectDimensions(data);\\n      findPotentialName = true;\\n    }\\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\\n    if (!dimensionsDefine) {\\n      dimensionsDefine = [];\\n      findPotentialName = true;\\n      each(data, function (colArr, key) {\\n        dimensionsDefine.push(key);\\n      });\\n    }\\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\\n    var value0 = getDataItemValue(data[0]);\\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\\n\\n  var potentialNameDimIndex;\\n\\n  if (findPotentialName) {\\n    each(dimensionsDefine, function (dim, idx) {\\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\\n        potentialNameDimIndex = idx;\\n      }\\n    });\\n  }\\n\\n  return {\\n    startIndex: startIndex,\\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\\n    dimensionsDetectCount: dimensionsDetectCount,\\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\\n\\n  };\\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\\n// which is reasonable. But dimension name is duplicated.\\n// Returns undefined or an array contains only object without null/undefiend or string.\\n\\n\\nfunction normalizeDimensionsDefine(dimensionsDefine) {\\n  if (!dimensionsDefine) {\\n    // The meaning of null/undefined is different from empty array.\\n    return;\\n  }\\n\\n  var nameMap = createHashMap();\\n  return map(dimensionsDefine, function (item, index) {\\n    item = extend({}, isObject(item) ? item : {\\n      name: item\\n    }); // User can set null in dimensions.\\n    // We dont auto specify name, othewise a given name may\\n    // cause it be refered unexpectedly.\\n\\n    if (item.name == null) {\\n      return item;\\n    } // Also consider number form like 2012.\\n\\n\\n    item.name += ''; // User may also specify displayName.\\n    // displayName will always exists except user not\\n    // specified or dim name is not specified or detected.\\n    // (A auto generated dim name will not be used as\\n    // displayName).\\n\\n    if (item.displayName == null) {\\n      item.displayName = item.name;\\n    }\\n\\n    var exist = nameMap.get(item.name);\\n\\n    if (!exist) {\\n      nameMap.set(item.name, {\\n        count: 1\\n      });\\n    } else {\\n      item.name += '-' + exist.count++;\\n    }\\n\\n    return item;\\n  });\\n}\\n\\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\\n  maxLoop == null && (maxLoop = Infinity);\\n\\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\\n      cb(data[i] ? data[i][0] : null, i);\\n    }\\n  } else {\\n    var value0 = data[0] || [];\\n\\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\\n      cb(value0[i], i);\\n    }\\n  }\\n}\\n\\nfunction objectRowsCollectDimensions(data) {\\n  var firstIndex = 0;\\n  var obj;\\n\\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\\n\\n\\n  if (obj) {\\n    var dimensions = [];\\n    each(obj, function (value, key) {\\n      dimensions.push(key);\\n    });\\n    return dimensions;\\n  }\\n} // ??? TODO merge to completedimensions, where also has\\n// default encode making logic. And the default rule\\n// should depends on series? consider 'map'.\\n\\n\\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\\n  var encode = {}; // var encodeTooltip = [];\\n  // var encodeLabel = [];\\n\\n  var encodeItemName = [];\\n  var encodeSeriesName = [];\\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\\n  // Consider the case: 'map' series is based on geo coordSys,\\n  // 'graph', 'heatmap' can be based on cartesian. But can not\\n  // give default rule simply here.\\n\\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\\n  // dimension as the \\\"value\\\" dimension, or other default\\n  // processes respectively.\\n\\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\\n    var ecModel = seriesModel.ecModel;\\n    var datasetMap = inner(ecModel).datasetMap;\\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\\n      categoryWayDim: 1,\\n      valueWayDim: 0\\n    }); // TODO\\n    // Auto detect first time axis and do arrangement.\\n\\n    each(coordSysDefine.coordSysDims, function (coordDim) {\\n      // In value way.\\n      if (coordSysDefine.firstCategoryDimIndex == null) {\\n        var dataDim = datasetRecord.valueWayDim++;\\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\\n        // especially when encode x y specified.\\n        // consider: when mutiple series share one dimension\\n        // category axis, series name should better use\\n        // the other dimsion name. On the other hand, use\\n        // both dimensions name.\\n\\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\\n        // encodeLabel.push(dataDim);\\n      } // In category way, category axis.\\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\\n          encode[coordDim] = 0;\\n          encodeItemName.push(0);\\n        } // In category way, non-category axis.\\n        else {\\n            var dataDim = datasetRecord.categoryWayDim++;\\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\\n            // encodeLabel.push(dataDim);\\n\\n            encodeSeriesName.push(dataDim);\\n          }\\n    });\\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\\n  // ??? TODO refactor: provide by series itself.\\n  // [{name: ..., value: ...}, ...] like:\\n  else if (nSeriesMap.get(seriesType) != null) {\\n      // Find the first not ordinal. (5 is an experience value)\\n      var firstNotOrdinal;\\n\\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\\n          firstNotOrdinal = i;\\n        }\\n      }\\n\\n      if (firstNotOrdinal != null) {\\n        encode.value = firstNotOrdinal;\\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\\n        // So we dont set encodeLabel here.\\n\\n        encodeSeriesName.push(nameDimIndex);\\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\\n      }\\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\\n  // encodeLabel.length && (encode.label = encodeLabel);\\n\\n\\n  encodeItemName.length && (encode.itemName = encodeItemName);\\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\\n  return encode;\\n}\\n/**\\n * If return null/undefined, indicate that should not use datasetModel.\\n */\\n\\n\\nfunction getDatasetModel(seriesModel) {\\n  var option = seriesModel.option; // Caution: consider the scenario:\\n  // A dataset is declared and a series is not expected to use the dataset,\\n  // and at the beginning `setOption({series: { noData })` (just prepare other\\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\\n  // the user should set an empty array to avoid that dataset is used by default.\\n\\n  var thisData = option.data;\\n\\n  if (!thisData) {\\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\\n  }\\n}\\n/**\\n * The rule should not be complex, otherwise user might not\\n * be able to known where the data is wrong.\\n * The code is ugly, but how to make it neat?\\n *\\n * @param {module:echars/data/Source} source\\n * @param {number} dimIndex\\n * @return {boolean} Whether ordinal.\\n */\\n\\n\\nfunction guessOrdinal(source, dimIndex) {\\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\\n} // dimIndex may be overflow source data.\\n\\n\\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\\n  var result; // Experience value.\\n\\n  var maxLoop = 5;\\n\\n  if (isTypedArray(data)) {\\n    return false;\\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\\n  // always exists in source.\\n\\n\\n  var dimName;\\n\\n  if (dimensionsDefine) {\\n    dimName = dimensionsDefine[dimIndex];\\n    dimName = isObject(dimName) ? dimName.name : dimName;\\n  }\\n\\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\\n      var sample = data[dimIndex];\\n\\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\\n        if ((result = detectValue(sample[startIndex + i])) != null) {\\n          return result;\\n        }\\n      }\\n    } else {\\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\\n        var row = data[startIndex + i];\\n\\n        if (row && (result = detectValue(row[dimIndex])) != null) {\\n          return result;\\n        }\\n      }\\n    }\\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\\n    if (!dimName) {\\n      return;\\n    }\\n\\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\\n      var item = data[i];\\n\\n      if (item && (result = detectValue(item[dimName])) != null) {\\n        return result;\\n      }\\n    }\\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\\n    if (!dimName) {\\n      return;\\n    }\\n\\n    var sample = data[dimName];\\n\\n    if (!sample || isTypedArray(sample)) {\\n      return false;\\n    }\\n\\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\\n      if ((result = detectValue(sample[i])) != null) {\\n        return result;\\n      }\\n    }\\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\\n      var item = data[i];\\n      var val = getDataItemValue(item);\\n\\n      if (!isArray(val)) {\\n        return false;\\n      }\\n\\n      if ((result = detectValue(val[dimIndex])) != null) {\\n        return result;\\n      }\\n    }\\n  }\\n\\n  function detectValue(val) {\\n    // Consider usage convenience, '1', '2' will be treated as \\\"number\\\".\\n    // `isFinit('')` get `true`.\\n    if (val != null && isFinite(val) && val !== '') {\\n      return false;\\n    } else if (isString(val) && val !== '-') {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n\\nexports.detectSourceFormat = detectSourceFormat;\\nexports.getSource = getSource;\\nexports.resetSourceDefaulter = resetSourceDefaulter;\\nexports.prepareSource = prepareSource;\\nexports.guessOrdinal = guessOrdinal;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///91\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar clazzUtil = __webpack_require__(71);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * // Scale class management\\n * @module echarts/scale/Scale\\n */\\n\\n/**\\n * @param {Object} [setting]\\n */\\nfunction Scale(setting) {\\n  this._setting = setting || {};\\n  /**\\n   * Extent\\n   * @type {Array.<number>}\\n   * @protected\\n   */\\n\\n  this._extent = [Infinity, -Infinity];\\n  /**\\n   * Step is calculated in adjustExtent\\n   * @type {Array.<number>}\\n   * @protected\\n   */\\n\\n  this._interval = 0;\\n  this.init && this.init.apply(this, arguments);\\n}\\n/**\\n * Parse input val to valid inner number.\\n * @param {*} val\\n * @return {number}\\n */\\n\\n\\nScale.prototype.parse = function (val) {\\n  // Notice: This would be a trap here, If the implementation\\n  // of this method depends on extent, and this method is used\\n  // before extent set (like in dataZoom), it would be wrong.\\n  // Nevertheless, parse does not depend on extent generally.\\n  return val;\\n};\\n\\nScale.prototype.getSetting = function (name) {\\n  return this._setting[name];\\n};\\n\\nScale.prototype.contain = function (val) {\\n  var extent = this._extent;\\n  return val >= extent[0] && val <= extent[1];\\n};\\n/**\\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\nScale.prototype.normalize = function (val) {\\n  var extent = this._extent;\\n\\n  if (extent[1] === extent[0]) {\\n    return 0.5;\\n  }\\n\\n  return (val - extent[0]) / (extent[1] - extent[0]);\\n};\\n/**\\n * Scale normalized value\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\nScale.prototype.scale = function (val) {\\n  var extent = this._extent;\\n  return val * (extent[1] - extent[0]) + extent[0];\\n};\\n/**\\n * Set extent from data\\n * @param {Array.<number>} other\\n */\\n\\n\\nScale.prototype.unionExtent = function (other) {\\n  var extent = this._extent;\\n  other[0] < extent[0] && (extent[0] = other[0]);\\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\\n  // this.setExtent(extent[0], extent[1]);\\n};\\n/**\\n * Set extent from data\\n * @param {module:echarts/data/List} data\\n * @param {string} dim\\n */\\n\\n\\nScale.prototype.unionExtentFromData = function (data, dim) {\\n  this.unionExtent(data.getApproximateExtent(dim));\\n};\\n/**\\n * Get extent\\n * @return {Array.<number>}\\n */\\n\\n\\nScale.prototype.getExtent = function () {\\n  return this._extent.slice();\\n};\\n/**\\n * Set extent\\n * @param {number} start\\n * @param {number} end\\n */\\n\\n\\nScale.prototype.setExtent = function (start, end) {\\n  var thisExtent = this._extent;\\n\\n  if (!isNaN(start)) {\\n    thisExtent[0] = start;\\n  }\\n\\n  if (!isNaN(end)) {\\n    thisExtent[1] = end;\\n  }\\n};\\n/**\\n * When axis extent depends on data and no data exists,\\n * axis ticks should not be drawn, which is named \\'blank\\'.\\n */\\n\\n\\nScale.prototype.isBlank = function () {\\n  return this._isBlank;\\n},\\n/**\\n * When axis extent depends on data and no data exists,\\n * axis ticks should not be drawn, which is named \\'blank\\'.\\n */\\nScale.prototype.setBlank = function (isBlank) {\\n  this._isBlank = isBlank;\\n};\\n/**\\n * @abstract\\n * @param {*} tick\\n * @return {string} label of the tick.\\n */\\n\\nScale.prototype.getLabel = null;\\nclazzUtil.enableClassExtend(Scale);\\nclazzUtil.enableClassManagement(Scale, {\\n  registerWhenExtend: true\\n});\\nvar _default = Scale;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///92\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Model = __webpack_require__(70);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar each = zrUtil.each;\\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\\n// allAxesInfo should be updated when setOption performed.\\n\\nfunction collect(ecModel, api) {\\n  var result = {\\n    /**\\n     * key: makeKey(axis.model)\\n     * value: {\\n     *      axis,\\n     *      coordSys,\\n     *      axisPointerModel,\\n     *      triggerTooltip,\\n     *      involveSeries,\\n     *      snap,\\n     *      seriesModels,\\n     *      seriesDataCount\\n     * }\\n     */\\n    axesInfo: {},\\n    seriesInvolved: false,\\n\\n    /**\\n     * key: makeKey(coordSys.model)\\n     * value: Object: key makeKey(axis.model), value: axisInfo\\n     */\\n    coordSysAxesInfo: {},\\n    coordSysMap: {}\\n  };\\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\\n\\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\\n  return result;\\n}\\n\\nfunction collectAxesInfo(result, ecModel, api) {\\n  var globalTooltipModel = ecModel.getComponent('tooltip');\\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\\n\\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\\n  var linkGroups = []; // Collect axes info.\\n\\n  each(api.getCoordinateSystems(), function (coordSys) {\\n    // Some coordinate system do not support axes, like geo.\\n    if (!coordSys.axisPointerEnabled) {\\n      return;\\n    }\\n\\n    var coordSysKey = makeKey(coordSys.model);\\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\\n    // for user. So we enable seting tooltip on coordSys model.\\n\\n    var coordSysModel = coordSys.model;\\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\\n\\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\\n    // show but axisPointer will show as normal.\\n    && baseTooltipModel.get('show')) {\\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\\n\\n      if (triggerAxis || cross) {\\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\\n      }\\n\\n      if (cross) {\\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\\n      }\\n    } // fromTooltip: true | false | 'cross'\\n    // triggerTooltip: true | false | null\\n\\n\\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\\n      var axisPointerShow = axisPointerModel.get('show');\\n\\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\\n        return;\\n      }\\n\\n      if (triggerTooltip == null) {\\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\\n      }\\n\\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\\n      var snap = axisPointerModel.get('snap');\\n      var key = makeKey(axis.model);\\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\\n\\n      var axisInfo = result.axesInfo[key] = {\\n        key: key,\\n        axis: axis,\\n        coordSys: coordSys,\\n        axisPointerModel: axisPointerModel,\\n        triggerTooltip: triggerTooltip,\\n        involveSeries: involveSeries,\\n        snap: snap,\\n        useHandle: isHandleTrigger(axisPointerModel),\\n        seriesModels: []\\n      };\\n      axesInfoInCoordSys[key] = axisInfo;\\n      result.seriesInvolved |= involveSeries;\\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\\n\\n      if (groupIndex != null) {\\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\\n          axesInfo: {}\\n        });\\n        linkGroup.axesInfo[key] = axisInfo;\\n        linkGroup.mapper = linksOption[groupIndex].mapper;\\n        axisInfo.linkGroup = linkGroup;\\n      }\\n    }\\n  });\\n}\\n\\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\\n  var volatileOption = {};\\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\\n  }); // category axis do not auto snap, otherwise some tick that do not\\n  // has value can not be hovered. value/time/log axis default snap if\\n  // triggered from tooltip and trigger tooltip.\\n\\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\\n  // Only these properties can be overrided from tooltip to axisPointer.\\n\\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\\n    volatileOption.type = 'line';\\n  }\\n\\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\\n\\n  labelOption.show == null && (labelOption.show = false);\\n\\n  if (fromTooltip === 'cross') {\\n    // When 'cross', both axes show labels.\\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\\n    // (cross style is dashed by default)\\n\\n    if (!triggerTooltip) {\\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\\n    }\\n  }\\n\\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\\n}\\n\\nfunction collectSeriesInfo(result, ecModel) {\\n  // Prepare data for axis trigger\\n  ecModel.eachSeries(function (seriesModel) {\\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\\n    var coordSys = seriesModel.coordinateSystem;\\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\\n\\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\\n      return;\\n    }\\n\\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\\n      var axis = axisInfo.axis;\\n\\n      if (coordSys.getAxis(axis.dim) === axis) {\\n        axisInfo.seriesModels.push(seriesModel);\\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\\n        axisInfo.seriesDataCount += seriesModel.getData().count();\\n      }\\n    });\\n  }, this);\\n}\\n/**\\n * For example:\\n * {\\n *     axisPointer: {\\n *         links: [{\\n *             xAxisIndex: [2, 4],\\n *             yAxisIndex: 'all'\\n *         }, {\\n *             xAxisId: ['a5', 'a7'],\\n *             xAxisName: 'xxx'\\n *         }]\\n *     }\\n * }\\n */\\n\\n\\nfunction getLinkGroupIndex(linksOption, axis) {\\n  var axisModel = axis.model;\\n  var dim = axis.dim;\\n\\n  for (var i = 0; i < linksOption.length; i++) {\\n    var linkOption = linksOption[i] || {};\\n\\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\\n      return i;\\n    }\\n  }\\n}\\n\\nfunction checkPropInLink(linkPropValue, axisPropValue) {\\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\\n}\\n\\nfunction fixValue(axisModel) {\\n  var axisInfo = getAxisInfo(axisModel);\\n\\n  if (!axisInfo) {\\n    return;\\n  }\\n\\n  var axisPointerModel = axisInfo.axisPointerModel;\\n  var scale = axisInfo.axis.scale;\\n  var option = axisPointerModel.option;\\n  var status = axisPointerModel.get('status');\\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\\n\\n  if (value != null) {\\n    value = scale.parse(value);\\n  }\\n\\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\\n  // and status should be initialized.\\n\\n  if (status == null) {\\n    option.status = useHandle ? 'show' : 'hide';\\n  }\\n\\n  var extent = scale.getExtent().slice();\\n  extent[0] > extent[1] && extent.reverse();\\n\\n  if ( // Pick a value on axis when initializing.\\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\\n  // where we should re-pick a value to keep `handle` displaying normally.\\n  || value > extent[1]) {\\n    // Make handle displayed on the end of the axis when init, which looks better.\\n    value = extent[1];\\n  }\\n\\n  if (value < extent[0]) {\\n    value = extent[0];\\n  }\\n\\n  option.value = value;\\n\\n  if (useHandle) {\\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\\n  }\\n}\\n\\nfunction getAxisInfo(axisModel) {\\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\\n}\\n\\nfunction getAxisPointerModel(axisModel) {\\n  var axisInfo = getAxisInfo(axisModel);\\n  return axisInfo && axisInfo.axisPointerModel;\\n}\\n\\nfunction isHandleTrigger(axisPointerModel) {\\n  return !!axisPointerModel.get('handle.show');\\n}\\n/**\\n * @param {module:echarts/model/Model} model\\n * @return {string} unique key\\n */\\n\\n\\nfunction makeKey(model) {\\n  return model.type + '||' + model.id;\\n}\\n\\nexports.collect = collect;\\nexports.fixValue = fixValue;\\nexports.getAxisInfo = getAxisInfo;\\nexports.getAxisPointerModel = getAxisPointerModel;\\nexports.makeKey = makeKey;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///93\\n\")},,,,,,,function(module,exports){eval(\"// https://github.com/mziccard/node-timsort\\nvar DEFAULT_MIN_MERGE = 32;\\nvar DEFAULT_MIN_GALLOPING = 7;\\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\\n\\nfunction minRunLength(n) {\\n  var r = 0;\\n\\n  while (n >= DEFAULT_MIN_MERGE) {\\n    r |= n & 1;\\n    n >>= 1;\\n  }\\n\\n  return n + r;\\n}\\n\\nfunction makeAscendingRun(array, lo, hi, compare) {\\n  var runHi = lo + 1;\\n\\n  if (runHi === hi) {\\n    return 1;\\n  }\\n\\n  if (compare(array[runHi++], array[lo]) < 0) {\\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\\n      runHi++;\\n    }\\n\\n    reverseRun(array, lo, runHi);\\n  } else {\\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\\n      runHi++;\\n    }\\n  }\\n\\n  return runHi - lo;\\n}\\n\\nfunction reverseRun(array, lo, hi) {\\n  hi--;\\n\\n  while (lo < hi) {\\n    var t = array[lo];\\n    array[lo++] = array[hi];\\n    array[hi--] = t;\\n  }\\n}\\n\\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\\n  if (start === lo) {\\n    start++;\\n  }\\n\\n  for (; start < hi; start++) {\\n    var pivot = array[start];\\n    var left = lo;\\n    var right = start;\\n    var mid;\\n\\n    while (left < right) {\\n      mid = left + right >>> 1;\\n\\n      if (compare(pivot, array[mid]) < 0) {\\n        right = mid;\\n      } else {\\n        left = mid + 1;\\n      }\\n    }\\n\\n    var n = start - left;\\n\\n    switch (n) {\\n      case 3:\\n        array[left + 3] = array[left + 2];\\n\\n      case 2:\\n        array[left + 2] = array[left + 1];\\n\\n      case 1:\\n        array[left + 1] = array[left];\\n        break;\\n\\n      default:\\n        while (n > 0) {\\n          array[left + n] = array[left + n - 1];\\n          n--;\\n        }\\n\\n    }\\n\\n    array[left] = pivot;\\n  }\\n}\\n\\nfunction gallopLeft(value, array, start, length, hint, compare) {\\n  var lastOffset = 0;\\n  var maxOffset = 0;\\n  var offset = 1;\\n\\n  if (compare(value, array[start + hint]) > 0) {\\n    maxOffset = length - hint;\\n\\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\\n      lastOffset = offset;\\n      offset = (offset << 1) + 1;\\n\\n      if (offset <= 0) {\\n        offset = maxOffset;\\n      }\\n    }\\n\\n    if (offset > maxOffset) {\\n      offset = maxOffset;\\n    }\\n\\n    lastOffset += hint;\\n    offset += hint;\\n  } else {\\n    maxOffset = hint + 1;\\n\\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\\n      lastOffset = offset;\\n      offset = (offset << 1) + 1;\\n\\n      if (offset <= 0) {\\n        offset = maxOffset;\\n      }\\n    }\\n\\n    if (offset > maxOffset) {\\n      offset = maxOffset;\\n    }\\n\\n    var tmp = lastOffset;\\n    lastOffset = hint - offset;\\n    offset = hint - tmp;\\n  }\\n\\n  lastOffset++;\\n\\n  while (lastOffset < offset) {\\n    var m = lastOffset + (offset - lastOffset >>> 1);\\n\\n    if (compare(value, array[start + m]) > 0) {\\n      lastOffset = m + 1;\\n    } else {\\n      offset = m;\\n    }\\n  }\\n\\n  return offset;\\n}\\n\\nfunction gallopRight(value, array, start, length, hint, compare) {\\n  var lastOffset = 0;\\n  var maxOffset = 0;\\n  var offset = 1;\\n\\n  if (compare(value, array[start + hint]) < 0) {\\n    maxOffset = hint + 1;\\n\\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\\n      lastOffset = offset;\\n      offset = (offset << 1) + 1;\\n\\n      if (offset <= 0) {\\n        offset = maxOffset;\\n      }\\n    }\\n\\n    if (offset > maxOffset) {\\n      offset = maxOffset;\\n    }\\n\\n    var tmp = lastOffset;\\n    lastOffset = hint - offset;\\n    offset = hint - tmp;\\n  } else {\\n    maxOffset = length - hint;\\n\\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\\n      lastOffset = offset;\\n      offset = (offset << 1) + 1;\\n\\n      if (offset <= 0) {\\n        offset = maxOffset;\\n      }\\n    }\\n\\n    if (offset > maxOffset) {\\n      offset = maxOffset;\\n    }\\n\\n    lastOffset += hint;\\n    offset += hint;\\n  }\\n\\n  lastOffset++;\\n\\n  while (lastOffset < offset) {\\n    var m = lastOffset + (offset - lastOffset >>> 1);\\n\\n    if (compare(value, array[start + m]) < 0) {\\n      offset = m;\\n    } else {\\n      lastOffset = m + 1;\\n    }\\n  }\\n\\n  return offset;\\n}\\n\\nfunction TimSort(array, compare) {\\n  var minGallop = DEFAULT_MIN_GALLOPING;\\n  var length = 0;\\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\\n  var stackLength = 0;\\n  var runStart;\\n  var runLength;\\n  var stackSize = 0;\\n  length = array.length;\\n\\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\\n    tmpStorageLength = length >>> 1;\\n  }\\n\\n  var tmp = [];\\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\\n  runStart = [];\\n  runLength = [];\\n\\n  function pushRun(_runStart, _runLength) {\\n    runStart[stackSize] = _runStart;\\n    runLength[stackSize] = _runLength;\\n    stackSize += 1;\\n  }\\n\\n  function mergeRuns() {\\n    while (stackSize > 1) {\\n      var n = stackSize - 2;\\n\\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\\n        if (runLength[n - 1] < runLength[n + 1]) {\\n          n--;\\n        }\\n      } else if (runLength[n] > runLength[n + 1]) {\\n        break;\\n      }\\n\\n      mergeAt(n);\\n    }\\n  }\\n\\n  function forceMergeRuns() {\\n    while (stackSize > 1) {\\n      var n = stackSize - 2;\\n\\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\\n        n--;\\n      }\\n\\n      mergeAt(n);\\n    }\\n  }\\n\\n  function mergeAt(i) {\\n    var start1 = runStart[i];\\n    var length1 = runLength[i];\\n    var start2 = runStart[i + 1];\\n    var length2 = runLength[i + 1];\\n    runLength[i] = length1 + length2;\\n\\n    if (i === stackSize - 3) {\\n      runStart[i + 1] = runStart[i + 2];\\n      runLength[i + 1] = runLength[i + 2];\\n    }\\n\\n    stackSize--;\\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\\n    start1 += k;\\n    length1 -= k;\\n\\n    if (length1 === 0) {\\n      return;\\n    }\\n\\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\\n\\n    if (length2 === 0) {\\n      return;\\n    }\\n\\n    if (length1 <= length2) {\\n      mergeLow(start1, length1, start2, length2);\\n    } else {\\n      mergeHigh(start1, length1, start2, length2);\\n    }\\n  }\\n\\n  function mergeLow(start1, length1, start2, length2) {\\n    var i = 0;\\n\\n    for (i = 0; i < length1; i++) {\\n      tmp[i] = array[start1 + i];\\n    }\\n\\n    var cursor1 = 0;\\n    var cursor2 = start2;\\n    var dest = start1;\\n    array[dest++] = array[cursor2++];\\n\\n    if (--length2 === 0) {\\n      for (i = 0; i < length1; i++) {\\n        array[dest + i] = tmp[cursor1 + i];\\n      }\\n\\n      return;\\n    }\\n\\n    if (length1 === 1) {\\n      for (i = 0; i < length2; i++) {\\n        array[dest + i] = array[cursor2 + i];\\n      }\\n\\n      array[dest + length2] = tmp[cursor1];\\n      return;\\n    }\\n\\n    var _minGallop = minGallop;\\n    var count1, count2, exit;\\n\\n    while (1) {\\n      count1 = 0;\\n      count2 = 0;\\n      exit = false;\\n\\n      do {\\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\\n          array[dest++] = array[cursor2++];\\n          count2++;\\n          count1 = 0;\\n\\n          if (--length2 === 0) {\\n            exit = true;\\n            break;\\n          }\\n        } else {\\n          array[dest++] = tmp[cursor1++];\\n          count1++;\\n          count2 = 0;\\n\\n          if (--length1 === 1) {\\n            exit = true;\\n            break;\\n          }\\n        }\\n      } while ((count1 | count2) < _minGallop);\\n\\n      if (exit) {\\n        break;\\n      }\\n\\n      do {\\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\\n\\n        if (count1 !== 0) {\\n          for (i = 0; i < count1; i++) {\\n            array[dest + i] = tmp[cursor1 + i];\\n          }\\n\\n          dest += count1;\\n          cursor1 += count1;\\n          length1 -= count1;\\n\\n          if (length1 <= 1) {\\n            exit = true;\\n            break;\\n          }\\n        }\\n\\n        array[dest++] = array[cursor2++];\\n\\n        if (--length2 === 0) {\\n          exit = true;\\n          break;\\n        }\\n\\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\\n\\n        if (count2 !== 0) {\\n          for (i = 0; i < count2; i++) {\\n            array[dest + i] = array[cursor2 + i];\\n          }\\n\\n          dest += count2;\\n          cursor2 += count2;\\n          length2 -= count2;\\n\\n          if (length2 === 0) {\\n            exit = true;\\n            break;\\n          }\\n        }\\n\\n        array[dest++] = tmp[cursor1++];\\n\\n        if (--length1 === 1) {\\n          exit = true;\\n          break;\\n        }\\n\\n        _minGallop--;\\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\\n\\n      if (exit) {\\n        break;\\n      }\\n\\n      if (_minGallop < 0) {\\n        _minGallop = 0;\\n      }\\n\\n      _minGallop += 2;\\n    }\\n\\n    minGallop = _minGallop;\\n    minGallop < 1 && (minGallop = 1);\\n\\n    if (length1 === 1) {\\n      for (i = 0; i < length2; i++) {\\n        array[dest + i] = array[cursor2 + i];\\n      }\\n\\n      array[dest + length2] = tmp[cursor1];\\n    } else if (length1 === 0) {\\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\\n    } else {\\n      for (i = 0; i < length1; i++) {\\n        array[dest + i] = tmp[cursor1 + i];\\n      }\\n    }\\n  }\\n\\n  function mergeHigh(start1, length1, start2, length2) {\\n    var i = 0;\\n\\n    for (i = 0; i < length2; i++) {\\n      tmp[i] = array[start2 + i];\\n    }\\n\\n    var cursor1 = start1 + length1 - 1;\\n    var cursor2 = length2 - 1;\\n    var dest = start2 + length2 - 1;\\n    var customCursor = 0;\\n    var customDest = 0;\\n    array[dest--] = array[cursor1--];\\n\\n    if (--length1 === 0) {\\n      customCursor = dest - (length2 - 1);\\n\\n      for (i = 0; i < length2; i++) {\\n        array[customCursor + i] = tmp[i];\\n      }\\n\\n      return;\\n    }\\n\\n    if (length2 === 1) {\\n      dest -= length1;\\n      cursor1 -= length1;\\n      customDest = dest + 1;\\n      customCursor = cursor1 + 1;\\n\\n      for (i = length1 - 1; i >= 0; i--) {\\n        array[customDest + i] = array[customCursor + i];\\n      }\\n\\n      array[dest] = tmp[cursor2];\\n      return;\\n    }\\n\\n    var _minGallop = minGallop;\\n\\n    while (true) {\\n      var count1 = 0;\\n      var count2 = 0;\\n      var exit = false;\\n\\n      do {\\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\\n          array[dest--] = array[cursor1--];\\n          count1++;\\n          count2 = 0;\\n\\n          if (--length1 === 0) {\\n            exit = true;\\n            break;\\n          }\\n        } else {\\n          array[dest--] = tmp[cursor2--];\\n          count2++;\\n          count1 = 0;\\n\\n          if (--length2 === 1) {\\n            exit = true;\\n            break;\\n          }\\n        }\\n      } while ((count1 | count2) < _minGallop);\\n\\n      if (exit) {\\n        break;\\n      }\\n\\n      do {\\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\\n\\n        if (count1 !== 0) {\\n          dest -= count1;\\n          cursor1 -= count1;\\n          length1 -= count1;\\n          customDest = dest + 1;\\n          customCursor = cursor1 + 1;\\n\\n          for (i = count1 - 1; i >= 0; i--) {\\n            array[customDest + i] = array[customCursor + i];\\n          }\\n\\n          if (length1 === 0) {\\n            exit = true;\\n            break;\\n          }\\n        }\\n\\n        array[dest--] = tmp[cursor2--];\\n\\n        if (--length2 === 1) {\\n          exit = true;\\n          break;\\n        }\\n\\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\\n\\n        if (count2 !== 0) {\\n          dest -= count2;\\n          cursor2 -= count2;\\n          length2 -= count2;\\n          customDest = dest + 1;\\n          customCursor = cursor2 + 1;\\n\\n          for (i = 0; i < count2; i++) {\\n            array[customDest + i] = tmp[customCursor + i];\\n          }\\n\\n          if (length2 <= 1) {\\n            exit = true;\\n            break;\\n          }\\n        }\\n\\n        array[dest--] = array[cursor1--];\\n\\n        if (--length1 === 0) {\\n          exit = true;\\n          break;\\n        }\\n\\n        _minGallop--;\\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\\n\\n      if (exit) {\\n        break;\\n      }\\n\\n      if (_minGallop < 0) {\\n        _minGallop = 0;\\n      }\\n\\n      _minGallop += 2;\\n    }\\n\\n    minGallop = _minGallop;\\n\\n    if (minGallop < 1) {\\n      minGallop = 1;\\n    }\\n\\n    if (length2 === 1) {\\n      dest -= length1;\\n      cursor1 -= length1;\\n      customDest = dest + 1;\\n      customCursor = cursor1 + 1;\\n\\n      for (i = length1 - 1; i >= 0; i--) {\\n        array[customDest + i] = array[customCursor + i];\\n      }\\n\\n      array[dest] = tmp[cursor2];\\n    } else if (length2 === 0) {\\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\\n    } else {\\n      customCursor = dest - (length2 - 1);\\n\\n      for (i = 0; i < length2; i++) {\\n        array[customCursor + i] = tmp[i];\\n      }\\n    }\\n  }\\n\\n  this.mergeRuns = mergeRuns;\\n  this.forceMergeRuns = forceMergeRuns;\\n  this.pushRun = pushRun;\\n}\\n\\nfunction sort(array, compare, lo, hi) {\\n  if (!lo) {\\n    lo = 0;\\n  }\\n\\n  if (!hi) {\\n    hi = array.length;\\n  }\\n\\n  var remaining = hi - lo;\\n\\n  if (remaining < 2) {\\n    return;\\n  }\\n\\n  var runLength = 0;\\n\\n  if (remaining < DEFAULT_MIN_MERGE) {\\n    runLength = makeAscendingRun(array, lo, hi, compare);\\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\\n    return;\\n  }\\n\\n  var ts = new TimSort(array, compare);\\n  var minRun = minRunLength(remaining);\\n\\n  do {\\n    runLength = makeAscendingRun(array, lo, hi, compare);\\n\\n    if (runLength < minRun) {\\n      var force = remaining;\\n\\n      if (force > minRun) {\\n        force = minRun;\\n      }\\n\\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\\n      runLength = force;\\n    }\\n\\n    ts.pushRun(lo, runLength);\\n    ts.mergeRuns();\\n    remaining -= runLength;\\n    lo += runLength;\\n  } while (remaining !== 0);\\n\\n  ts.forceMergeRuns();\\n}\\n\\nmodule.exports = sort;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///100\\n\")},function(module,exports,__webpack_require__){eval(\"var fixShadow = __webpack_require__(134);\\n\\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\\n\\nvar Style = function (opts) {\\n  this.extendFrom(opts, false);\\n};\\n\\nfunction createLinearGradient(ctx, obj, rect) {\\n  var x = obj.x == null ? 0 : obj.x;\\n  var x2 = obj.x2 == null ? 1 : obj.x2;\\n  var y = obj.y == null ? 0 : obj.y;\\n  var y2 = obj.y2 == null ? 0 : obj.y2;\\n\\n  if (!obj.global) {\\n    x = x * rect.width + rect.x;\\n    x2 = x2 * rect.width + rect.x;\\n    y = y * rect.height + rect.y;\\n    y2 = y2 * rect.height + rect.y;\\n  } // Fix NaN when rect is Infinity\\n\\n\\n  x = isNaN(x) ? 0 : x;\\n  x2 = isNaN(x2) ? 1 : x2;\\n  y = isNaN(y) ? 0 : y;\\n  y2 = isNaN(y2) ? 0 : y2;\\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\\n  return canvasGradient;\\n}\\n\\nfunction createRadialGradient(ctx, obj, rect) {\\n  var width = rect.width;\\n  var height = rect.height;\\n  var min = Math.min(width, height);\\n  var x = obj.x == null ? 0.5 : obj.x;\\n  var y = obj.y == null ? 0.5 : obj.y;\\n  var r = obj.r == null ? 0.5 : obj.r;\\n\\n  if (!obj.global) {\\n    x = x * width + rect.x;\\n    y = y * height + rect.y;\\n    r = r * min;\\n  }\\n\\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\\n  return canvasGradient;\\n}\\n\\nStyle.prototype = {\\n  constructor: Style,\\n\\n  /**\\n   * @type {string}\\n   */\\n  fill: '#000',\\n\\n  /**\\n   * @type {string}\\n   */\\n  stroke: null,\\n\\n  /**\\n   * @type {number}\\n   */\\n  opacity: 1,\\n\\n  /**\\n   * @type {number}\\n   */\\n  fillOpacity: null,\\n\\n  /**\\n   * @type {number}\\n   */\\n  strokeOpacity: null,\\n\\n  /**\\n   * @type {Array.<number>}\\n   */\\n  lineDash: null,\\n\\n  /**\\n   * @type {number}\\n   */\\n  lineDashOffset: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  shadowBlur: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  shadowOffsetX: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  shadowOffsetY: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  lineWidth: 1,\\n\\n  /**\\n   * If stroke ignore scale\\n   * @type {Boolean}\\n   */\\n  strokeNoScale: false,\\n  // Bounding rect text configuration\\n  // Not affected by element transform\\n\\n  /**\\n   * @type {string}\\n   */\\n  text: null,\\n\\n  /**\\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\\n   * So do not visit it directly in upper application (like echarts),\\n   * but use `contain/text#makeFont` instead.\\n   * @type {string}\\n   */\\n  font: null,\\n\\n  /**\\n   * The same as font. Use font please.\\n   * @deprecated\\n   * @type {string}\\n   */\\n  textFont: null,\\n\\n  /**\\n   * It helps merging respectively, rather than parsing an entire font string.\\n   * @type {string}\\n   */\\n  fontStyle: null,\\n\\n  /**\\n   * It helps merging respectively, rather than parsing an entire font string.\\n   * @type {string}\\n   */\\n  fontWeight: null,\\n\\n  /**\\n   * It helps merging respectively, rather than parsing an entire font string.\\n   * Should be 12 but not '12px'.\\n   * @type {number}\\n   */\\n  fontSize: null,\\n\\n  /**\\n   * It helps merging respectively, rather than parsing an entire font string.\\n   * @type {string}\\n   */\\n  fontFamily: null,\\n\\n  /**\\n   * Reserved for special functinality, like 'hr'.\\n   * @type {string}\\n   */\\n  textTag: null,\\n\\n  /**\\n   * @type {string}\\n   */\\n  textFill: '#000',\\n\\n  /**\\n   * @type {string}\\n   */\\n  textStroke: null,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textWidth: null,\\n\\n  /**\\n   * Only for textBackground.\\n   * @type {number}\\n   */\\n  textHeight: null,\\n\\n  /**\\n   * textStroke may be set as some color as a default\\n   * value in upper applicaion, where the default value\\n   * of textStrokeWidth should be 0 to make sure that\\n   * user can choose to do not use text stroke.\\n   * @type {number}\\n   */\\n  textStrokeWidth: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textLineHeight: null,\\n\\n  /**\\n   * 'inside', 'left', 'right', 'top', 'bottom'\\n   * [x, y]\\n   * Based on x, y of rect.\\n   * @type {string|Array.<number>}\\n   * @default 'inside'\\n   */\\n  textPosition: 'inside',\\n\\n  /**\\n   * If not specified, use the boundingRect of a `displayable`.\\n   * @type {Object}\\n   */\\n  textRect: null,\\n\\n  /**\\n   * [x, y]\\n   * @type {Array.<number>}\\n   */\\n  textOffset: null,\\n\\n  /**\\n   * @type {string}\\n   */\\n  textAlign: null,\\n\\n  /**\\n   * @type {string}\\n   */\\n  textVerticalAlign: null,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textDistance: 5,\\n\\n  /**\\n   * @type {string}\\n   */\\n  textShadowColor: 'transparent',\\n\\n  /**\\n   * @type {number}\\n   */\\n  textShadowBlur: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textShadowOffsetX: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textShadowOffsetY: 0,\\n\\n  /**\\n   * @type {string}\\n   */\\n  textBoxShadowColor: 'transparent',\\n\\n  /**\\n   * @type {number}\\n   */\\n  textBoxShadowBlur: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textBoxShadowOffsetX: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textBoxShadowOffsetY: 0,\\n\\n  /**\\n   * Whether transform text.\\n   * Only useful in Path and Image element\\n   * @type {boolean}\\n   */\\n  transformText: false,\\n\\n  /**\\n   * Text rotate around position of Path or Image\\n   * Only useful in Path and Image element and transformText is false.\\n   */\\n  textRotation: 0,\\n\\n  /**\\n   * Text origin of text rotation, like [10, 40].\\n   * Based on x, y of rect.\\n   * Useful in label rotation of circular symbol.\\n   * By default, this origin is textPosition.\\n   * Can be 'center'.\\n   * @type {string|Array.<number>}\\n   */\\n  textOrigin: null,\\n\\n  /**\\n   * @type {string}\\n   */\\n  textBackgroundColor: null,\\n\\n  /**\\n   * @type {string}\\n   */\\n  textBorderColor: null,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textBorderWidth: 0,\\n\\n  /**\\n   * @type {number}\\n   */\\n  textBorderRadius: 0,\\n\\n  /**\\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\\n   * @type {number|Array.<number>}\\n   */\\n  textPadding: null,\\n\\n  /**\\n   * Text styles for rich text.\\n   * @type {Object}\\n   */\\n  rich: null,\\n\\n  /**\\n   * {outerWidth, outerHeight, ellipsis, placeholder}\\n   * @type {Object}\\n   */\\n  truncate: null,\\n\\n  /**\\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\\n   * @type {string}\\n   */\\n  blend: null,\\n\\n  /**\\n   * @param {CanvasRenderingContext2D} ctx\\n   */\\n  bind: function (ctx, el, prevEl) {\\n    var style = this;\\n    var prevStyle = prevEl && prevEl.style;\\n    var firstDraw = !prevStyle;\\n\\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\\n      var prop = STYLE_COMMON_PROPS[i];\\n      var styleName = prop[0];\\n\\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\\n        // FIXME Invalid property value will cause style leak from previous element.\\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\\n      }\\n    }\\n\\n    if (firstDraw || style.fill !== prevStyle.fill) {\\n      ctx.fillStyle = style.fill;\\n    }\\n\\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\\n      ctx.strokeStyle = style.stroke;\\n    }\\n\\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\\n    }\\n\\n    if (firstDraw || style.blend !== prevStyle.blend) {\\n      ctx.globalCompositeOperation = style.blend || 'source-over';\\n    }\\n\\n    if (this.hasStroke()) {\\n      var lineWidth = style.lineWidth;\\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\\n    }\\n  },\\n  hasFill: function () {\\n    var fill = this.fill;\\n    return fill != null && fill !== 'none';\\n  },\\n  hasStroke: function () {\\n    var stroke = this.stroke;\\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\\n  },\\n\\n  /**\\n   * Extend from other style\\n   * @param {zrender/graphic/Style} otherStyle\\n   * @param {boolean} overwrite true: overwrirte any way.\\n   *                            false: overwrite only when !target.hasOwnProperty\\n   *                            others: overwrite when property is not null/undefined.\\n   */\\n  extendFrom: function (otherStyle, overwrite) {\\n    if (otherStyle) {\\n      for (var name in otherStyle) {\\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\\n          this[name] = otherStyle[name];\\n        }\\n      }\\n    }\\n  },\\n\\n  /**\\n   * Batch setting style with a given object\\n   * @param {Object|string} obj\\n   * @param {*} [obj]\\n   */\\n  set: function (obj, value) {\\n    if (typeof obj === 'string') {\\n      this[obj] = value;\\n    } else {\\n      this.extendFrom(obj, true);\\n    }\\n  },\\n\\n  /**\\n   * Clone\\n   * @return {zrender/graphic/Style} [description]\\n   */\\n  clone: function () {\\n    var newStyle = new this.constructor();\\n    newStyle.extendFrom(this, true);\\n    return newStyle;\\n  },\\n  getGradient: function (ctx, obj, rect) {\\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\\n    var canvasGradient = method(ctx, obj, rect);\\n    var colorStops = obj.colorStops;\\n\\n    for (var i = 0; i < colorStops.length; i++) {\\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\\n    }\\n\\n    return canvasGradient;\\n  }\\n};\\nvar styleProto = Style.prototype;\\n\\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\\n  var prop = STYLE_COMMON_PROPS[i];\\n\\n  if (!(prop[0] in styleProto)) {\\n    styleProto[prop[0]] = prop[1];\\n  }\\n} // Provide for others\\n\\n\\nStyle.getGradient = styleProto.getGradient;\\nvar _default = Style;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///101\\n\")},function(module,exports,__webpack_require__){eval(\"var Displayable = __webpack_require__(88);\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar imageHelper = __webpack_require__(103);\\n\\n/**\\n * @alias zrender/graphic/Image\\n * @extends module:zrender/graphic/Displayable\\n * @constructor\\n * @param {Object} opts\\n */\\nfunction ZImage(opts) {\\n  Displayable.call(this, opts);\\n}\\n\\nZImage.prototype = {\\n  constructor: ZImage,\\n  type: 'image',\\n  brush: function (ctx, prevEl) {\\n    var style = this.style;\\n    var src = style.image; // Must bind each time\\n\\n    style.bind(ctx, this, prevEl);\\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\\n\\n    if (!image || !imageHelper.isImageReady(image)) {\\n      return;\\n    } // 图片已经加载完成\\n    // if (image.nodeName.toUpperCase() == 'IMG') {\\n    //     if (!image.complete) {\\n    //         return;\\n    //     }\\n    // }\\n    // Else is canvas\\n\\n\\n    var x = style.x || 0;\\n    var y = style.y || 0;\\n    var width = style.width;\\n    var height = style.height;\\n    var aspect = image.width / image.height;\\n\\n    if (width == null && height != null) {\\n      // Keep image/height ratio\\n      width = height * aspect;\\n    } else if (height == null && width != null) {\\n      height = width / aspect;\\n    } else if (width == null && height == null) {\\n      width = image.width;\\n      height = image.height;\\n    } // 设置transform\\n\\n\\n    this.setTransform(ctx);\\n\\n    if (style.sWidth && style.sHeight) {\\n      var sx = style.sx || 0;\\n      var sy = style.sy || 0;\\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\\n    } else if (style.sx && style.sy) {\\n      var sx = style.sx;\\n      var sy = style.sy;\\n      var sWidth = width - sx;\\n      var sHeight = height - sy;\\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\\n    } else {\\n      ctx.drawImage(image, x, y, width, height);\\n    } // Draw rect text\\n\\n\\n    if (style.text != null) {\\n      // Only restore transform when needs draw text.\\n      this.restoreTransform(ctx);\\n      this.drawRectText(ctx, this.getBoundingRect());\\n    }\\n  },\\n  getBoundingRect: function () {\\n    var style = this.style;\\n\\n    if (!this._rect) {\\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\\n    }\\n\\n    return this._rect;\\n  }\\n};\\nzrUtil.inherits(ZImage, Displayable);\\nvar _default = ZImage;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9JbWFnZS5qcz8wZGE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLEVBQWU7O0FBRXpDLG1CQUFtQixtQkFBTyxDQUFDLEVBQXNCOztBQUVqRCxhQUFhLG1CQUFPLENBQUMsRUFBYzs7QUFFbkMsa0JBQWtCLG1CQUFPLENBQUMsR0FBZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTAyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIERpc3BsYXlhYmxlID0gcmVxdWlyZShcIi4vRGlzcGxheWFibGVcIik7XG5cbnZhciBCb3VuZGluZ1JlY3QgPSByZXF1aXJlKFwiLi4vY29yZS9Cb3VuZGluZ1JlY3RcIik7XG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwiLi4vY29yZS91dGlsXCIpO1xuXG52YXIgaW1hZ2VIZWxwZXIgPSByZXF1aXJlKFwiLi9oZWxwZXIvaW1hZ2VcIik7XG5cbi8qKlxuICogQGFsaWFzIHpyZW5kZXIvZ3JhcGhpYy9JbWFnZVxuICogQGV4dGVuZHMgbW9kdWxlOnpyZW5kZXIvZ3JhcGhpYy9EaXNwbGF5YWJsZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0c1xuICovXG5mdW5jdGlvbiBaSW1hZ2Uob3B0cykge1xuICBEaXNwbGF5YWJsZS5jYWxsKHRoaXMsIG9wdHMpO1xufVxuXG5aSW1hZ2UucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogWkltYWdlLFxuICB0eXBlOiAnaW1hZ2UnLFxuICBicnVzaDogZnVuY3Rpb24gKGN0eCwgcHJldkVsKSB7XG4gICAgdmFyIHN0eWxlID0gdGhpcy5zdHlsZTtcbiAgICB2YXIgc3JjID0gc3R5bGUuaW1hZ2U7IC8vIE11c3QgYmluZCBlYWNoIHRpbWVcblxuICAgIHN0eWxlLmJpbmQoY3R4LCB0aGlzLCBwcmV2RWwpO1xuICAgIHZhciBpbWFnZSA9IHRoaXMuX2ltYWdlID0gaW1hZ2VIZWxwZXIuY3JlYXRlT3JVcGRhdGVJbWFnZShzcmMsIHRoaXMuX2ltYWdlLCB0aGlzLCB0aGlzLm9ubG9hZCk7XG5cbiAgICBpZiAoIWltYWdlIHx8ICFpbWFnZUhlbHBlci5pc0ltYWdlUmVhZHkoaW1hZ2UpKSB7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyDlm77niYflt7Lnu4/liqDovb3lrozmiJBcbiAgICAvLyBpZiAoaW1hZ2Uubm9kZU5hbWUudG9VcHBlckNhc2UoKSA9PSAnSU1HJykge1xuICAgIC8vICAgICBpZiAoIWltYWdlLmNvbXBsZXRlKSB7XG4gICAgLy8gICAgICAgICByZXR1cm47XG4gICAgLy8gICAgIH1cbiAgICAvLyB9XG4gICAgLy8gRWxzZSBpcyBjYW52YXNcblxuXG4gICAgdmFyIHggPSBzdHlsZS54IHx8IDA7XG4gICAgdmFyIHkgPSBzdHlsZS55IHx8IDA7XG4gICAgdmFyIHdpZHRoID0gc3R5bGUud2lkdGg7XG4gICAgdmFyIGhlaWdodCA9IHN0eWxlLmhlaWdodDtcbiAgICB2YXIgYXNwZWN0ID0gaW1hZ2Uud2lkdGggLyBpbWFnZS5oZWlnaHQ7XG5cbiAgICBpZiAod2lkdGggPT0gbnVsbCAmJiBoZWlnaHQgIT0gbnVsbCkge1xuICAgICAgLy8gS2VlcCBpbWFnZS9oZWlnaHQgcmF0aW9cbiAgICAgIHdpZHRoID0gaGVpZ2h0ICogYXNwZWN0O1xuICAgIH0gZWxzZSBpZiAoaGVpZ2h0ID09IG51bGwgJiYgd2lkdGggIT0gbnVsbCkge1xuICAgICAgaGVpZ2h0ID0gd2lkdGggLyBhc3BlY3Q7XG4gICAgfSBlbHNlIGlmICh3aWR0aCA9PSBudWxsICYmIGhlaWdodCA9PSBudWxsKSB7XG4gICAgICB3aWR0aCA9IGltYWdlLndpZHRoO1xuICAgICAgaGVpZ2h0ID0gaW1hZ2UuaGVpZ2h0O1xuICAgIH0gLy8g6K6+572udHJhbnNmb3JtXG5cblxuICAgIHRoaXMuc2V0VHJhbnNmb3JtKGN0eCk7XG5cbiAgICBpZiAoc3R5bGUuc1dpZHRoICYmIHN0eWxlLnNIZWlnaHQpIHtcbiAgICAgIHZhciBzeCA9IHN0eWxlLnN4IHx8IDA7XG4gICAgICB2YXIgc3kgPSBzdHlsZS5zeSB8fCAwO1xuICAgICAgY3R4LmRyYXdJbWFnZShpbWFnZSwgc3gsIHN5LCBzdHlsZS5zV2lkdGgsIHN0eWxlLnNIZWlnaHQsIHgsIHksIHdpZHRoLCBoZWlnaHQpO1xuICAgIH0gZWxzZSBpZiAoc3R5bGUuc3ggJiYgc3R5bGUuc3kpIHtcbiAgICAgIHZhciBzeCA9IHN0eWxlLnN4O1xuICAgICAgdmFyIHN5ID0gc3R5bGUuc3k7XG4gICAgICB2YXIgc1dpZHRoID0gd2lkdGggLSBzeDtcbiAgICAgIHZhciBzSGVpZ2h0ID0gaGVpZ2h0IC0gc3k7XG4gICAgICBjdHguZHJhd0ltYWdlKGltYWdlLCBzeCwgc3ksIHNXaWR0aCwgc0hlaWdodCwgeCwgeSwgd2lkdGgsIGhlaWdodCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN0eC5kcmF3SW1hZ2UoaW1hZ2UsIHgsIHksIHdpZHRoLCBoZWlnaHQpO1xuICAgIH0gLy8gRHJhdyByZWN0IHRleHRcblxuXG4gICAgaWYgKHN0eWxlLnRleHQgIT0gbnVsbCkge1xuICAgICAgLy8gT25seSByZXN0b3JlIHRyYW5zZm9ybSB3aGVuIG5lZWRzIGRyYXcgdGV4dC5cbiAgICAgIHRoaXMucmVzdG9yZVRyYW5zZm9ybShjdHgpO1xuICAgICAgdGhpcy5kcmF3UmVjdFRleHQoY3R4LCB0aGlzLmdldEJvdW5kaW5nUmVjdCgpKTtcbiAgICB9XG4gIH0sXG4gIGdldEJvdW5kaW5nUmVjdDogZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdHlsZSA9IHRoaXMuc3R5bGU7XG5cbiAgICBpZiAoIXRoaXMuX3JlY3QpIHtcbiAgICAgIHRoaXMuX3JlY3QgPSBuZXcgQm91bmRpbmdSZWN0KHN0eWxlLnggfHwgMCwgc3R5bGUueSB8fCAwLCBzdHlsZS53aWR0aCB8fCAwLCBzdHlsZS5oZWlnaHQgfHwgMCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3JlY3Q7XG4gIH1cbn07XG56clV0aWwuaW5oZXJpdHMoWkltYWdlLCBEaXNwbGF5YWJsZSk7XG52YXIgX2RlZmF1bHQgPSBaSW1hZ2U7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///102\\n\")},function(module,exports,__webpack_require__){eval(\"var LRU = __webpack_require__(132);\\n\\nvar globalImageCache = new LRU(50);\\n/**\\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\\n */\\n\\nfunction findExistImage(newImageOrSrc) {\\n  if (typeof newImageOrSrc === 'string') {\\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\\n    return cachedImgObj && cachedImgObj.image;\\n  } else {\\n    return newImageOrSrc;\\n  }\\n}\\n/**\\n * Caution: User should cache loaded images, but not just count on LRU.\\n * Consider if required images more than LRU size, will dead loop occur?\\n *\\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\\n * @param {Function} [cb] params: (image, cbPayload)\\n * @param {Object} [cbPayload] Payload on cb calling.\\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\\n */\\n\\n\\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\\n  if (!newImageOrSrc) {\\n    return image;\\n  } else if (typeof newImageOrSrc === 'string') {\\n    // Image should not be loaded repeatly.\\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\\n      return image;\\n    } // Only when there is no existent image or existent image src\\n    // is different, this method is responsible for load.\\n\\n\\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\\n    var pendingWrap = {\\n      hostEl: hostEl,\\n      cb: cb,\\n      cbPayload: cbPayload\\n    };\\n\\n    if (cachedImgObj) {\\n      image = cachedImgObj.image;\\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\\n    } else {\\n      !image && (image = new Image());\\n      image.onload = image.onerror = imageOnLoad;\\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\\n        image: image,\\n        pending: [pendingWrap]\\n      });\\n      image.src = image.__zrImageSrc = newImageOrSrc;\\n    }\\n\\n    return image;\\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\\n  else {\\n      return newImageOrSrc;\\n    }\\n}\\n\\nfunction imageOnLoad() {\\n  var cachedImgObj = this.__cachedImgObj;\\n  this.onload = this.onerror = this.__cachedImgObj = null;\\n\\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\\n    var pendingWrap = cachedImgObj.pending[i];\\n    var cb = pendingWrap.cb;\\n    cb && cb(this, pendingWrap.cbPayload);\\n    pendingWrap.hostEl.dirty();\\n  }\\n\\n  cachedImgObj.pending.length = 0;\\n}\\n\\nfunction isImageReady(image) {\\n  return image && image.width && image.height;\\n}\\n\\nexports.findExistImage = findExistImage;\\nexports.createOrUpdateImage = createOrUpdateImage;\\nexports.isImageReady = isImageReady;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9oZWxwZXIvaW1hZ2UuanM/NWU3NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsR0FBZ0I7O0FBRWxDO0FBQ0E7QUFDQSxXQUFXLGlEQUFpRDtBQUM1RCxZQUFZLDBDQUEwQztBQUN0RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaURBQWlEO0FBQzVELFdBQVcsMENBQTBDO0FBQ3JELFdBQVcsdUJBQXVCO0FBQ2xDLFdBQVcsU0FBUztBQUNwQixXQUFXLE9BQU87QUFDbEIsWUFBWSwwQ0FBMEM7QUFDdEQ7OztBQUdBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsaUNBQWlDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjEwMy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBMUlUgPSByZXF1aXJlKFwiLi4vLi4vY29yZS9MUlVcIik7XG5cbnZhciBnbG9iYWxJbWFnZUNhY2hlID0gbmV3IExSVSg1MCk7XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfEhUTUxJbWFnZUVsZW1lbnR8SFRNTENhbnZhc0VsZW1lbnR8Q2FudmFzfSBuZXdJbWFnZU9yU3JjXG4gKiBAcmV0dXJuIHtIVE1MSW1hZ2VFbGVtZW50fEhUTUxDYW52YXNFbGVtZW50fENhbnZhc30gaW1hZ2VcbiAqL1xuXG5mdW5jdGlvbiBmaW5kRXhpc3RJbWFnZShuZXdJbWFnZU9yU3JjKSB7XG4gIGlmICh0eXBlb2YgbmV3SW1hZ2VPclNyYyA9PT0gJ3N0cmluZycpIHtcbiAgICB2YXIgY2FjaGVkSW1nT2JqID0gZ2xvYmFsSW1hZ2VDYWNoZS5nZXQobmV3SW1hZ2VPclNyYyk7XG4gICAgcmV0dXJuIGNhY2hlZEltZ09iaiAmJiBjYWNoZWRJbWdPYmouaW1hZ2U7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG5ld0ltYWdlT3JTcmM7XG4gIH1cbn1cbi8qKlxuICogQ2F1dGlvbjogVXNlciBzaG91bGQgY2FjaGUgbG9hZGVkIGltYWdlcywgYnV0IG5vdCBqdXN0IGNvdW50IG9uIExSVS5cbiAqIENvbnNpZGVyIGlmIHJlcXVpcmVkIGltYWdlcyBtb3JlIHRoYW4gTFJVIHNpemUsIHdpbGwgZGVhZCBsb29wIG9jY3VyP1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfEhUTUxJbWFnZUVsZW1lbnR8SFRNTENhbnZhc0VsZW1lbnR8Q2FudmFzfSBuZXdJbWFnZU9yU3JjXG4gKiBAcGFyYW0ge0hUTUxJbWFnZUVsZW1lbnR8SFRNTENhbnZhc0VsZW1lbnR8Q2FudmFzfSBpbWFnZSBFeGlzdGVudCBpbWFnZS5cbiAqIEBwYXJhbSB7bW9kdWxlOnpyZW5kZXIvRWxlbWVudH0gW2hvc3RFbF0gRm9yIGNhbGxpbmcgYGRpcnR5YC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYl0gcGFyYW1zOiAoaW1hZ2UsIGNiUGF5bG9hZClcbiAqIEBwYXJhbSB7T2JqZWN0fSBbY2JQYXlsb2FkXSBQYXlsb2FkIG9uIGNiIGNhbGxpbmcuXG4gKiBAcmV0dXJuIHtIVE1MSW1hZ2VFbGVtZW50fEhUTUxDYW52YXNFbGVtZW50fENhbnZhc30gaW1hZ2VcbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU9yVXBkYXRlSW1hZ2UobmV3SW1hZ2VPclNyYywgaW1hZ2UsIGhvc3RFbCwgY2IsIGNiUGF5bG9hZCkge1xuICBpZiAoIW5ld0ltYWdlT3JTcmMpIHtcbiAgICByZXR1cm4gaW1hZ2U7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG5ld0ltYWdlT3JTcmMgPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gSW1hZ2Ugc2hvdWxkIG5vdCBiZSBsb2FkZWQgcmVwZWF0bHkuXG4gICAgaWYgKGltYWdlICYmIGltYWdlLl9fenJJbWFnZVNyYyA9PT0gbmV3SW1hZ2VPclNyYyB8fCAhaG9zdEVsKSB7XG4gICAgICByZXR1cm4gaW1hZ2U7XG4gICAgfSAvLyBPbmx5IHdoZW4gdGhlcmUgaXMgbm8gZXhpc3RlbnQgaW1hZ2Ugb3IgZXhpc3RlbnQgaW1hZ2Ugc3JjXG4gICAgLy8gaXMgZGlmZmVyZW50LCB0aGlzIG1ldGhvZCBpcyByZXNwb25zaWJsZSBmb3IgbG9hZC5cblxuXG4gICAgdmFyIGNhY2hlZEltZ09iaiA9IGdsb2JhbEltYWdlQ2FjaGUuZ2V0KG5ld0ltYWdlT3JTcmMpO1xuICAgIHZhciBwZW5kaW5nV3JhcCA9IHtcbiAgICAgIGhvc3RFbDogaG9zdEVsLFxuICAgICAgY2I6IGNiLFxuICAgICAgY2JQYXlsb2FkOiBjYlBheWxvYWRcbiAgICB9O1xuXG4gICAgaWYgKGNhY2hlZEltZ09iaikge1xuICAgICAgaW1hZ2UgPSBjYWNoZWRJbWdPYmouaW1hZ2U7XG4gICAgICAhaXNJbWFnZVJlYWR5KGltYWdlKSAmJiBjYWNoZWRJbWdPYmoucGVuZGluZy5wdXNoKHBlbmRpbmdXcmFwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgIWltYWdlICYmIChpbWFnZSA9IG5ldyBJbWFnZSgpKTtcbiAgICAgIGltYWdlLm9ubG9hZCA9IGltYWdlLm9uZXJyb3IgPSBpbWFnZU9uTG9hZDtcbiAgICAgIGdsb2JhbEltYWdlQ2FjaGUucHV0KG5ld0ltYWdlT3JTcmMsIGltYWdlLl9fY2FjaGVkSW1nT2JqID0ge1xuICAgICAgICBpbWFnZTogaW1hZ2UsXG4gICAgICAgIHBlbmRpbmc6IFtwZW5kaW5nV3JhcF1cbiAgICAgIH0pO1xuICAgICAgaW1hZ2Uuc3JjID0gaW1hZ2UuX196ckltYWdlU3JjID0gbmV3SW1hZ2VPclNyYztcbiAgICB9XG5cbiAgICByZXR1cm4gaW1hZ2U7XG4gIH0gLy8gbmV3SW1hZ2VPclNyYyBpcyBhbiBIVE1MSW1hZ2VFbGVtZW50IG9yIEhUTUxDYW52YXNFbGVtZW50IG9yIENhbnZhc1xuICBlbHNlIHtcbiAgICAgIHJldHVybiBuZXdJbWFnZU9yU3JjO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gaW1hZ2VPbkxvYWQoKSB7XG4gIHZhciBjYWNoZWRJbWdPYmogPSB0aGlzLl9fY2FjaGVkSW1nT2JqO1xuICB0aGlzLm9ubG9hZCA9IHRoaXMub25lcnJvciA9IHRoaXMuX19jYWNoZWRJbWdPYmogPSBudWxsO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY2FjaGVkSW1nT2JqLnBlbmRpbmcubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgcGVuZGluZ1dyYXAgPSBjYWNoZWRJbWdPYmoucGVuZGluZ1tpXTtcbiAgICB2YXIgY2IgPSBwZW5kaW5nV3JhcC5jYjtcbiAgICBjYiAmJiBjYih0aGlzLCBwZW5kaW5nV3JhcC5jYlBheWxvYWQpO1xuICAgIHBlbmRpbmdXcmFwLmhvc3RFbC5kaXJ0eSgpO1xuICB9XG5cbiAgY2FjaGVkSW1nT2JqLnBlbmRpbmcubGVuZ3RoID0gMDtcbn1cblxuZnVuY3Rpb24gaXNJbWFnZVJlYWR5KGltYWdlKSB7XG4gIHJldHVybiBpbWFnZSAmJiBpbWFnZS53aWR0aCAmJiBpbWFnZS5oZWlnaHQ7XG59XG5cbmV4cG9ydHMuZmluZEV4aXN0SW1hZ2UgPSBmaW5kRXhpc3RJbWFnZTtcbmV4cG9ydHMuY3JlYXRlT3JVcGRhdGVJbWFnZSA9IGNyZWF0ZU9yVXBkYXRlSW1hZ2U7XG5leHBvcnRzLmlzSW1hZ2VSZWFkeSA9IGlzSW1hZ2VSZWFkeTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///103\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// TODO Parse shadow style\\n// TODO Only shallow path support\\nfunction _default(properties) {\\n  // Normalize\\n  for (var i = 0; i < properties.length; i++) {\\n    if (!properties[i][1]) {\\n      properties[i][1] = properties[i][0];\\n    }\\n  }\\n\\n  return function (model, excludes, includes) {\\n    var style = {};\\n\\n    for (var i = 0; i < properties.length; i++) {\\n      var propName = properties[i][1];\\n\\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\\n        continue;\\n      }\\n\\n      var val = model.getShallow(propName);\\n\\n      if (val != null) {\\n        style[properties[i][0]] = val;\\n      }\\n    }\\n\\n    return style;\\n  };\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvbWl4aW4vbWFrZVN0eWxlTWFwcGVyLmpzPzI4MmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxtQkFBbUIsdUJBQXVCO0FBQzFDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTA0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG4vLyBUT0RPIFBhcnNlIHNoYWRvdyBzdHlsZVxuLy8gVE9ETyBPbmx5IHNoYWxsb3cgcGF0aCBzdXBwb3J0XG5mdW5jdGlvbiBfZGVmYXVsdChwcm9wZXJ0aWVzKSB7XG4gIC8vIE5vcm1hbGl6ZVxuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BlcnRpZXMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIXByb3BlcnRpZXNbaV1bMV0pIHtcbiAgICAgIHByb3BlcnRpZXNbaV1bMV0gPSBwcm9wZXJ0aWVzW2ldWzBdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAobW9kZWwsIGV4Y2x1ZGVzLCBpbmNsdWRlcykge1xuICAgIHZhciBzdHlsZSA9IHt9O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wZXJ0aWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcHJvcE5hbWUgPSBwcm9wZXJ0aWVzW2ldWzFdO1xuXG4gICAgICBpZiAoZXhjbHVkZXMgJiYgenJVdGlsLmluZGV4T2YoZXhjbHVkZXMsIHByb3BOYW1lKSA+PSAwIHx8IGluY2x1ZGVzICYmIHpyVXRpbC5pbmRleE9mKGluY2x1ZGVzLCBwcm9wTmFtZSkgPCAwKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICB2YXIgdmFsID0gbW9kZWwuZ2V0U2hhbGxvdyhwcm9wTmFtZSk7XG5cbiAgICAgIGlmICh2YWwgIT0gbnVsbCkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0aWVzW2ldWzBdXSA9IHZhbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3R5bGU7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///104\\n')},function(module,exports,__webpack_require__){eval(\"var Displayable = __webpack_require__(88);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar textContain = __webpack_require__(76);\\n\\nvar textHelper = __webpack_require__(137);\\n\\n/**\\n * @alias zrender/graphic/Text\\n * @extends module:zrender/graphic/Displayable\\n * @constructor\\n * @param {Object} opts\\n */\\nvar Text = function (opts) {\\n  // jshint ignore:line\\n  Displayable.call(this, opts);\\n};\\n\\nText.prototype = {\\n  constructor: Text,\\n  type: 'text',\\n  brush: function (ctx, prevEl) {\\n    var style = this.style; // Optimize, avoid normalize every time.\\n\\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\\n\\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\\n    var text = style.text; // Convert to string\\n\\n    text != null && (text += ''); // Do not apply style.bind in Text node. Because the real bind job\\n    // is in textHelper.renderText, and performance of text render should\\n    // be considered.\\n    // style.bind(ctx, this, prevEl);\\n\\n    if (!textHelper.needDrawText(text, style)) {\\n      return;\\n    }\\n\\n    this.setTransform(ctx);\\n    textHelper.renderText(this, ctx, text, style, null, prevEl);\\n    this.restoreTransform(ctx);\\n  },\\n  getBoundingRect: function () {\\n    var style = this.style; // Optimize, avoid normalize every time.\\n\\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\\n\\n    if (!this._rect) {\\n      var text = style.text;\\n      text != null ? text += '' : text = '';\\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\\n      rect.x += style.x || 0;\\n      rect.y += style.y || 0;\\n\\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\\n        var w = style.textStrokeWidth;\\n        rect.x -= w / 2;\\n        rect.y -= w / 2;\\n        rect.width += w;\\n        rect.height += w;\\n      }\\n\\n      this._rect = rect;\\n    }\\n\\n    return this._rect;\\n  }\\n};\\nzrUtil.inherits(Text, Displayable);\\nvar _default = Text;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9UZXh0LmpzPzc2YTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsRUFBZTs7QUFFekMsYUFBYSxtQkFBTyxDQUFDLEVBQWM7O0FBRW5DLGtCQUFrQixtQkFBTyxDQUFDLEVBQWlCOztBQUUzQyxpQkFBaUIsbUJBQU8sQ0FBQyxHQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCOztBQUUzQiwrREFBK0Q7O0FBRS9EO0FBQ0EsMEJBQTBCOztBQUUxQixpQ0FBaUM7QUFDakM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSwyQkFBMkI7O0FBRTNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRGlzcGxheWFibGUgPSByZXF1aXJlKFwiLi9EaXNwbGF5YWJsZVwiKTtcblxudmFyIHpyVXRpbCA9IHJlcXVpcmUoXCIuLi9jb3JlL3V0aWxcIik7XG5cbnZhciB0ZXh0Q29udGFpbiA9IHJlcXVpcmUoXCIuLi9jb250YWluL3RleHRcIik7XG5cbnZhciB0ZXh0SGVscGVyID0gcmVxdWlyZShcIi4vaGVscGVyL3RleHRcIik7XG5cbi8qKlxuICogQGFsaWFzIHpyZW5kZXIvZ3JhcGhpYy9UZXh0XG4gKiBAZXh0ZW5kcyBtb2R1bGU6enJlbmRlci9ncmFwaGljL0Rpc3BsYXlhYmxlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzXG4gKi9cbnZhciBUZXh0ID0gZnVuY3Rpb24gKG9wdHMpIHtcbiAgLy8ganNoaW50IGlnbm9yZTpsaW5lXG4gIERpc3BsYXlhYmxlLmNhbGwodGhpcywgb3B0cyk7XG59O1xuXG5UZXh0LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRleHQsXG4gIHR5cGU6ICd0ZXh0JyxcbiAgYnJ1c2g6IGZ1bmN0aW9uIChjdHgsIHByZXZFbCkge1xuICAgIHZhciBzdHlsZSA9IHRoaXMuc3R5bGU7IC8vIE9wdGltaXplLCBhdm9pZCBub3JtYWxpemUgZXZlcnkgdGltZS5cblxuICAgIHRoaXMuX19kaXJ0eSAmJiB0ZXh0SGVscGVyLm5vcm1hbGl6ZVRleHRTdHlsZShzdHlsZSwgdHJ1ZSk7IC8vIFVzZSBwcm9wcyB3aXRoIHByZWZpeCAndGV4dCcuXG5cbiAgICBzdHlsZS5maWxsID0gc3R5bGUuc3Ryb2tlID0gc3R5bGUuc2hhZG93Qmx1ciA9IHN0eWxlLnNoYWRvd0NvbG9yID0gc3R5bGUuc2hhZG93T2Zmc2V0WCA9IHN0eWxlLnNoYWRvd09mZnNldFkgPSBudWxsO1xuICAgIHZhciB0ZXh0ID0gc3R5bGUudGV4dDsgLy8gQ29udmVydCB0byBzdHJpbmdcblxuICAgIHRleHQgIT0gbnVsbCAmJiAodGV4dCArPSAnJyk7IC8vIERvIG5vdCBhcHBseSBzdHlsZS5iaW5kIGluIFRleHQgbm9kZS4gQmVjYXVzZSB0aGUgcmVhbCBiaW5kIGpvYlxuICAgIC8vIGlzIGluIHRleHRIZWxwZXIucmVuZGVyVGV4dCwgYW5kIHBlcmZvcm1hbmNlIG9mIHRleHQgcmVuZGVyIHNob3VsZFxuICAgIC8vIGJlIGNvbnNpZGVyZWQuXG4gICAgLy8gc3R5bGUuYmluZChjdHgsIHRoaXMsIHByZXZFbCk7XG5cbiAgICBpZiAoIXRleHRIZWxwZXIubmVlZERyYXdUZXh0KHRleHQsIHN0eWxlKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuc2V0VHJhbnNmb3JtKGN0eCk7XG4gICAgdGV4dEhlbHBlci5yZW5kZXJUZXh0KHRoaXMsIGN0eCwgdGV4dCwgc3R5bGUsIG51bGwsIHByZXZFbCk7XG4gICAgdGhpcy5yZXN0b3JlVHJhbnNmb3JtKGN0eCk7XG4gIH0sXG4gIGdldEJvdW5kaW5nUmVjdDogZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdHlsZSA9IHRoaXMuc3R5bGU7IC8vIE9wdGltaXplLCBhdm9pZCBub3JtYWxpemUgZXZlcnkgdGltZS5cblxuICAgIHRoaXMuX19kaXJ0eSAmJiB0ZXh0SGVscGVyLm5vcm1hbGl6ZVRleHRTdHlsZShzdHlsZSwgdHJ1ZSk7XG5cbiAgICBpZiAoIXRoaXMuX3JlY3QpIHtcbiAgICAgIHZhciB0ZXh0ID0gc3R5bGUudGV4dDtcbiAgICAgIHRleHQgIT0gbnVsbCA/IHRleHQgKz0gJycgOiB0ZXh0ID0gJyc7XG4gICAgICB2YXIgcmVjdCA9IHRleHRDb250YWluLmdldEJvdW5kaW5nUmVjdChzdHlsZS50ZXh0ICsgJycsIHN0eWxlLmZvbnQsIHN0eWxlLnRleHRBbGlnbiwgc3R5bGUudGV4dFZlcnRpY2FsQWxpZ24sIHN0eWxlLnRleHRQYWRkaW5nLCBzdHlsZS5yaWNoKTtcbiAgICAgIHJlY3QueCArPSBzdHlsZS54IHx8IDA7XG4gICAgICByZWN0LnkgKz0gc3R5bGUueSB8fCAwO1xuXG4gICAgICBpZiAodGV4dEhlbHBlci5nZXRTdHJva2Uoc3R5bGUudGV4dFN0cm9rZSwgc3R5bGUudGV4dFN0cm9rZVdpZHRoKSkge1xuICAgICAgICB2YXIgdyA9IHN0eWxlLnRleHRTdHJva2VXaWR0aDtcbiAgICAgICAgcmVjdC54IC09IHcgLyAyO1xuICAgICAgICByZWN0LnkgLT0gdyAvIDI7XG4gICAgICAgIHJlY3Qud2lkdGggKz0gdztcbiAgICAgICAgcmVjdC5oZWlnaHQgKz0gdztcbiAgICAgIH1cblxuICAgICAgdGhpcy5fcmVjdCA9IHJlY3Q7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3JlY3Q7XG4gIH1cbn07XG56clV0aWwuaW5oZXJpdHMoVGV4dCwgRGlzcGxheWFibGUpO1xudmFyIF9kZWZhdWx0ID0gVGV4dDtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///105\\n\")},function(module,exports){eval(\"/**\\n * @param {Array.<Object>} colorStops\\n */\\nvar Gradient = function (colorStops) {\\n  this.colorStops = colorStops || [];\\n};\\n\\nGradient.prototype = {\\n  constructor: Gradient,\\n  addColorStop: function (offset, color) {\\n    this.colorStops.push({\\n      offset: offset,\\n      color: color\\n    });\\n  }\\n};\\nvar _default = Gradient;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9HcmFkaWVudC5qcz80MmU1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMDYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGNvbG9yU3RvcHNcbiAqL1xudmFyIEdyYWRpZW50ID0gZnVuY3Rpb24gKGNvbG9yU3RvcHMpIHtcbiAgdGhpcy5jb2xvclN0b3BzID0gY29sb3JTdG9wcyB8fCBbXTtcbn07XG5cbkdyYWRpZW50LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IEdyYWRpZW50LFxuICBhZGRDb2xvclN0b3A6IGZ1bmN0aW9uIChvZmZzZXQsIGNvbG9yKSB7XG4gICAgdGhpcy5jb2xvclN0b3BzLnB1c2goe1xuICAgICAgb2Zmc2V0OiBvZmZzZXQsXG4gICAgICBjb2xvcjogY29sb3JcbiAgICB9KTtcbiAgfVxufTtcbnZhciBfZGVmYXVsdCA9IEdyYWRpZW50O1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///106\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar coordinateSystemCreators = {};\\n\\nfunction CoordinateSystemManager() {\\n  this._coordinateSystems = [];\\n}\\n\\nCoordinateSystemManager.prototype = {\\n  constructor: CoordinateSystemManager,\\n  create: function (ecModel, api) {\\n    var coordinateSystems = [];\\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\\n      var list = creater.create(ecModel, api);\\n      coordinateSystems = coordinateSystems.concat(list || []);\\n    });\\n    this._coordinateSystems = coordinateSystems;\\n  },\\n  update: function (ecModel, api) {\\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\\n      coordSys.update && coordSys.update(ecModel, api);\\n    });\\n  },\\n  getCoordinateSystems: function () {\\n    return this._coordinateSystems.slice();\\n  }\\n};\\n\\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\\n  coordinateSystemCreators[type] = coordinateSystemCreator;\\n};\\n\\nCoordinateSystemManager.get = function (type) {\\n  return coordinateSystemCreators[type];\\n};\\n\\nvar _default = CoordinateSystemManager;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvQ29vcmRpbmF0ZVN5c3RlbS5qcz8yMDM5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjEwNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIGNvb3JkaW5hdGVTeXN0ZW1DcmVhdG9ycyA9IHt9O1xuXG5mdW5jdGlvbiBDb29yZGluYXRlU3lzdGVtTWFuYWdlcigpIHtcbiAgdGhpcy5fY29vcmRpbmF0ZVN5c3RlbXMgPSBbXTtcbn1cblxuQ29vcmRpbmF0ZVN5c3RlbU1hbmFnZXIucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogQ29vcmRpbmF0ZVN5c3RlbU1hbmFnZXIsXG4gIGNyZWF0ZTogZnVuY3Rpb24gKGVjTW9kZWwsIGFwaSkge1xuICAgIHZhciBjb29yZGluYXRlU3lzdGVtcyA9IFtdO1xuICAgIHpyVXRpbC5lYWNoKGNvb3JkaW5hdGVTeXN0ZW1DcmVhdG9ycywgZnVuY3Rpb24gKGNyZWF0ZXIsIHR5cGUpIHtcbiAgICAgIHZhciBsaXN0ID0gY3JlYXRlci5jcmVhdGUoZWNNb2RlbCwgYXBpKTtcbiAgICAgIGNvb3JkaW5hdGVTeXN0ZW1zID0gY29vcmRpbmF0ZVN5c3RlbXMuY29uY2F0KGxpc3QgfHwgW10pO1xuICAgIH0pO1xuICAgIHRoaXMuX2Nvb3JkaW5hdGVTeXN0ZW1zID0gY29vcmRpbmF0ZVN5c3RlbXM7XG4gIH0sXG4gIHVwZGF0ZTogZnVuY3Rpb24gKGVjTW9kZWwsIGFwaSkge1xuICAgIHpyVXRpbC5lYWNoKHRoaXMuX2Nvb3JkaW5hdGVTeXN0ZW1zLCBmdW5jdGlvbiAoY29vcmRTeXMpIHtcbiAgICAgIGNvb3JkU3lzLnVwZGF0ZSAmJiBjb29yZFN5cy51cGRhdGUoZWNNb2RlbCwgYXBpKTtcbiAgICB9KTtcbiAgfSxcbiAgZ2V0Q29vcmRpbmF0ZVN5c3RlbXM6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fY29vcmRpbmF0ZVN5c3RlbXMuc2xpY2UoKTtcbiAgfVxufTtcblxuQ29vcmRpbmF0ZVN5c3RlbU1hbmFnZXIucmVnaXN0ZXIgPSBmdW5jdGlvbiAodHlwZSwgY29vcmRpbmF0ZVN5c3RlbUNyZWF0b3IpIHtcbiAgY29vcmRpbmF0ZVN5c3RlbUNyZWF0b3JzW3R5cGVdID0gY29vcmRpbmF0ZVN5c3RlbUNyZWF0b3I7XG59O1xuXG5Db29yZGluYXRlU3lzdGVtTWFuYWdlci5nZXQgPSBmdW5jdGlvbiAodHlwZSkge1xuICByZXR1cm4gY29vcmRpbmF0ZVN5c3RlbUNyZWF0b3JzW3R5cGVdO1xufTtcblxudmFyIF9kZWZhdWx0ID0gQ29vcmRpbmF0ZVN5c3RlbU1hbmFnZXI7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///107\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar assert = _util.assert;\\nvar isArray = _util.isArray;\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @param {Object} define\\n * @return See the return of `createTask`.\\n */\\nfunction createTask(define) {\\n  return new Task(define);\\n}\\n/**\\n * @constructor\\n * @param {Object} define\\n * @param {Function} define.reset Custom reset\\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\\n * @param {Function} [define.count] count is used to determin data task.\\n * @param {Function} [define.onDirty] count is used to determin data task.\\n */\\n\\n\\nfunction Task(define) {\\n  define = define || {};\\n  this._reset = define.reset;\\n  this._plan = define.plan;\\n  this._count = define.count;\\n  this._onDirty = define.onDirty;\\n  this._dirty = true; // Context must be specified implicitly, to\\n  // avoid miss update context when model changed.\\n\\n  this.context;\\n}\\n\\nvar taskProto = Task.prototype;\\n/**\\n * @param {Object} performArgs\\n * @param {number} [performArgs.step] Specified step.\\n * @param {number} [performArgs.skip] Skip customer perform call.\\n * @param {number} [performArgs.modBy] Sampling window size.\\n * @param {number} [performArgs.modDataCount] Sampling count.\\n */\\n\\ntaskProto.perform = function (performArgs) {\\n  var upTask = this._upstream;\\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\\n  // Pull data. Must pull data each time, because context.data\\n  // may be updated by Series.setData.\\n\\n  if (this._dirty && upTask) {\\n    var context = this.context;\\n    context.data = context.outputData = upTask.context.outputData;\\n  }\\n\\n  if (this.__pipeline) {\\n    this.__pipeline.currentTask = this;\\n  }\\n\\n  var planResult;\\n\\n  if (this._plan && !skip) {\\n    planResult = this._plan(this.context);\\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\\n  // elements uniformed distributed when progress, especially when moving or zooming.\\n\\n\\n  var lastModBy = normalizeModBy(this._modBy);\\n  var lastModDataCount = this._modDataCount || 0;\\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\\n\\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\\n    planResult = 'reset';\\n  }\\n\\n  function normalizeModBy(val) {\\n    !(val >= 1) && (val = 1); // jshint ignore:line\\n\\n    return val;\\n  }\\n\\n  var forceFirstProgress;\\n\\n  if (this._dirty || planResult === 'reset') {\\n    this._dirty = false;\\n    forceFirstProgress = reset(this, skip);\\n  }\\n\\n  this._modBy = modBy;\\n  this._modDataCount = modDataCount;\\n  var step = performArgs && performArgs.step;\\n\\n  if (upTask) {\\n    this._dueEnd = upTask._outputDueEnd;\\n  } // DataTask or overallTask\\n  else {\\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\\n  // If no progress, pass index from upstream to downstream each time plan called.\\n\\n\\n  if (this._progress) {\\n    var start = this._dueIndex;\\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\\n\\n    if (!skip && (forceFirstProgress || start < end)) {\\n      var progress = this._progress;\\n\\n      if (isArray(progress)) {\\n        for (var i = 0; i < progress.length; i++) {\\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\\n        }\\n      } else {\\n        doProgress(this, progress, start, end, modBy, modDataCount);\\n      }\\n    }\\n\\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\\n\\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\\n    this._outputDueEnd = outputDueEnd;\\n  } else {\\n    // (1) Some overall task has no progress.\\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\\n    // This should always be performed so it can be passed to downstream.\\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\\n  }\\n\\n  return this.unfinished();\\n};\\n\\nvar iterator = function () {\\n  var end;\\n  var current;\\n  var modBy;\\n  var modDataCount;\\n  var winCount;\\n  var it = {\\n    reset: function (s, e, sStep, sCount) {\\n      current = s;\\n      end = e;\\n      modBy = sStep;\\n      modDataCount = sCount;\\n      winCount = Math.ceil(modDataCount / modBy);\\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\\n    }\\n  };\\n  return it;\\n\\n  function sequentialNext() {\\n    return current < end ? current++ : null;\\n  }\\n\\n  function modNext() {\\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\\n    // Use normal linear rendering mode.\\n    : current;\\n    current++;\\n    return result;\\n  }\\n}();\\n\\ntaskProto.dirty = function () {\\n  this._dirty = true;\\n  this._onDirty && this._onDirty(this.context);\\n};\\n\\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\\n  iterator.reset(start, end, modBy, modDataCount);\\n  taskIns._callingProgress = progress;\\n\\n  taskIns._callingProgress({\\n    start: start,\\n    end: end,\\n    count: end - start,\\n    next: iterator.next\\n  }, taskIns.context);\\n}\\n\\nfunction reset(taskIns, skip) {\\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\\n  taskIns._settedOutputEnd = null;\\n  var progress;\\n  var forceFirstProgress;\\n\\n  if (!skip && taskIns._reset) {\\n    progress = taskIns._reset(taskIns.context);\\n\\n    if (progress && progress.progress) {\\n      forceFirstProgress = progress.forceFirstProgress;\\n      progress = progress.progress;\\n    } // To simplify no progress checking, array must has item.\\n\\n\\n    if (isArray(progress) && !progress.length) {\\n      progress = null;\\n    }\\n  }\\n\\n  taskIns._progress = progress;\\n  taskIns._modBy = taskIns._modDataCount = null;\\n  var downstream = taskIns._downstream;\\n  downstream && downstream.dirty();\\n  return forceFirstProgress;\\n}\\n/**\\n * @return {boolean}\\n */\\n\\n\\ntaskProto.unfinished = function () {\\n  return this._progress && this._dueIndex < this._dueEnd;\\n};\\n/**\\n * @param {Object} downTask The downstream task.\\n * @return {Object} The downstream task.\\n */\\n\\n\\ntaskProto.pipe = function (downTask) {\\n  // If already downstream, do not dirty downTask.\\n  if (this._downstream !== downTask || this._dirty) {\\n    this._downstream = downTask;\\n    downTask._upstream = this;\\n    downTask.dirty();\\n  }\\n};\\n\\ntaskProto.dispose = function () {\\n  if (this._disposed) {\\n    return;\\n  }\\n\\n  this._upstream && (this._upstream._downstream = null);\\n  this._downstream && (this._downstream._upstream = null);\\n  this._dirty = false;\\n  this._disposed = true;\\n};\\n\\ntaskProto.getUpstream = function () {\\n  return this._upstream;\\n};\\n\\ntaskProto.getDownstream = function () {\\n  return this._downstream;\\n};\\n\\ntaskProto.setOutputEnd = function (end) {\\n  // This only happend in dataTask, dataZoom, map, currently.\\n  // where dataZoom do not set end each time, but only set\\n  // when reset. So we should record the setted end, in case\\n  // that the stub of dataZoom perform again and earse the\\n  // setted end by upstream.\\n  this._outputDueEnd = this._settedOutputEnd = end;\\n}; ///////////////////////////////////////////////////////////\\n// For stream debug (Should be commented out after used!)\\n// Usage: printTask(this, 'begin');\\n// Usage: printTask(this, null, {someExtraProp});\\n// function printTask(task, prefix, extra) {\\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\\n//     var props = [];\\n//     if (task.__pipeline) {\\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\\n//         props.push({text: 'idx', value: val});\\n//     } else {\\n//         var stubCount = 0;\\n//         task.agentStubMap.each(() => stubCount++);\\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\\n//     }\\n//     props.push({text: 'uid', value: task.uidDebug});\\n//     if (task.__pipeline) {\\n//         props.push({text: 'pid', value: task.__pipeline.id});\\n//         task.agent && props.push(\\n//             {text: 'stubFor', value: task.agent.uidDebug}\\n//         );\\n//     }\\n//     props.push(\\n//         {text: 'dirty', value: task._dirty},\\n//         {text: 'dueIndex', value: task._dueIndex},\\n//         {text: 'dueEnd', value: task._dueEnd},\\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\\n//     );\\n//     if (extra) {\\n//         Object.keys(extra).forEach(key => {\\n//             props.push({text: key, value: extra[key]});\\n//         });\\n//     }\\n//     var args = ['color: blue'];\\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\\n//         args.push('color: black', 'color: red'),\\n//         `${item.text}: %c${item.value}`\\n//     )).join('%c, ');\\n//     console.log.apply(console, [msg].concat(args));\\n//     // console.log(this);\\n// }\\n\\n\\nexports.createTask = createTask;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///108\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @return {string} If large mode changed, return string \\'reset\\';\\n */\\nfunction _default() {\\n  var inner = makeInner();\\n  return function (seriesModel) {\\n    var fields = inner(seriesModel);\\n    var pipelineContext = seriesModel.pipelineContext;\\n    var originalLarge = fields.large;\\n    var originalProgressive = fields.progressiveRender;\\n    var large = fields.large = pipelineContext.large;\\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && \\'reset\\';\\n  };\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY2hhcnQvaGVscGVyL2NyZWF0ZVJlbmRlclBsYW5uZXIuanM/Y2NjZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLEVBQWtCOztBQUV2Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIxMDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIF9tb2RlbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsL21vZGVsXCIpO1xuXG52YXIgbWFrZUlubmVyID0gX21vZGVsLm1ha2VJbm5lcjtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG4vKipcbiAqIEByZXR1cm4ge3N0cmluZ30gSWYgbGFyZ2UgbW9kZSBjaGFuZ2VkLCByZXR1cm4gc3RyaW5nICdyZXNldCc7XG4gKi9cbmZ1bmN0aW9uIF9kZWZhdWx0KCkge1xuICB2YXIgaW5uZXIgPSBtYWtlSW5uZXIoKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChzZXJpZXNNb2RlbCkge1xuICAgIHZhciBmaWVsZHMgPSBpbm5lcihzZXJpZXNNb2RlbCk7XG4gICAgdmFyIHBpcGVsaW5lQ29udGV4dCA9IHNlcmllc01vZGVsLnBpcGVsaW5lQ29udGV4dDtcbiAgICB2YXIgb3JpZ2luYWxMYXJnZSA9IGZpZWxkcy5sYXJnZTtcbiAgICB2YXIgb3JpZ2luYWxQcm9ncmVzc2l2ZSA9IGZpZWxkcy5wcm9ncmVzc2l2ZVJlbmRlcjtcbiAgICB2YXIgbGFyZ2UgPSBmaWVsZHMubGFyZ2UgPSBwaXBlbGluZUNvbnRleHQubGFyZ2U7XG4gICAgdmFyIHByb2dyZXNzaXZlID0gZmllbGRzLnByb2dyZXNzaXZlUmVuZGVyID0gcGlwZWxpbmVDb250ZXh0LnByb2dyZXNzaXZlUmVuZGVyO1xuICAgIHJldHVybiAhIShvcmlnaW5hbExhcmdlIF4gbGFyZ2UgfHwgb3JpZ2luYWxQcm9ncmVzc2l2ZSBeIHByb2dyZXNzaXZlKSAmJiAncmVzZXQnO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///109\\n')},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar ORIGIN_METHOD = '\\\\0__throttleOriginMethod';\\nvar RATE = '\\\\0__throttleRate';\\nvar THROTTLE_TYPE = '\\\\0__throttleType';\\n/**\\n * @public\\n * @param {(Function)} fn\\n * @param {number} [delay=0] Unit: ms.\\n * @param {boolean} [debounce=false]\\n *        true: If call interval less than `delay`, only the last call works.\\n *        false: If call interval less than `delay, call works on fixed rate.\\n * @return {(Function)} throttled fn.\\n */\\n\\nfunction throttle(fn, delay, debounce) {\\n  var currCall;\\n  var lastCall = 0;\\n  var lastExec = 0;\\n  var timer = null;\\n  var diff;\\n  var scope;\\n  var args;\\n  var debounceNextCall;\\n  delay = delay || 0;\\n\\n  function exec() {\\n    lastExec = new Date().getTime();\\n    timer = null;\\n    fn.apply(scope, args || []);\\n  }\\n\\n  var cb = function () {\\n    currCall = new Date().getTime();\\n    scope = this;\\n    args = arguments;\\n    var thisDelay = debounceNextCall || delay;\\n    var thisDebounce = debounceNextCall || debounce;\\n    debounceNextCall = null;\\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\\n    // than a new call of `cb`, that is, preserving the command order. Consider\\n    // calculating \\\"scale rate\\\" when roaming as an example. When a call of `cb`\\n    // happens, either the `exec` is called dierectly, or the call is delayed.\\n    // But the delayed call should never be later than next call of `cb`. Under\\n    // this assurance, we can simply update view state each time `dispatchAction`\\n    // triggered by user roaming, but not need to add extra code to avoid the\\n    // state being \\\"rolled-back\\\".\\n\\n    if (thisDebounce) {\\n      timer = setTimeout(exec, thisDelay);\\n    } else {\\n      if (diff >= 0) {\\n        exec();\\n      } else {\\n        timer = setTimeout(exec, -diff);\\n      }\\n    }\\n\\n    lastCall = currCall;\\n  };\\n  /**\\n   * Clear throttle.\\n   * @public\\n   */\\n\\n\\n  cb.clear = function () {\\n    if (timer) {\\n      clearTimeout(timer);\\n      timer = null;\\n    }\\n  };\\n  /**\\n   * Enable debounce once.\\n   */\\n\\n\\n  cb.debounceNextCall = function (debounceDelay) {\\n    debounceNextCall = debounceDelay;\\n  };\\n\\n  return cb;\\n}\\n/**\\n * Create throttle method or update throttle rate.\\n *\\n * @example\\n * ComponentView.prototype.render = function () {\\n *     ...\\n *     throttle.createOrUpdate(\\n *         this,\\n *         '_dispatchAction',\\n *         this.model.get('throttle'),\\n *         'fixRate'\\n *     );\\n * };\\n * ComponentView.prototype.remove = function () {\\n *     throttle.clear(this, '_dispatchAction');\\n * };\\n * ComponentView.prototype.dispose = function () {\\n *     throttle.clear(this, '_dispatchAction');\\n * };\\n *\\n * @public\\n * @param {Object} obj\\n * @param {string} fnAttr\\n * @param {number} [rate]\\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\\n * @return {Function} throttled function.\\n */\\n\\n\\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\\n  var fn = obj[fnAttr];\\n\\n  if (!fn) {\\n    return;\\n  }\\n\\n  var originFn = fn[ORIGIN_METHOD] || fn;\\n  var lastThrottleType = fn[THROTTLE_TYPE];\\n  var lastRate = fn[RATE];\\n\\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\\n    if (rate == null || !throttleType) {\\n      return obj[fnAttr] = originFn;\\n    }\\n\\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\\n    fn[ORIGIN_METHOD] = originFn;\\n    fn[THROTTLE_TYPE] = throttleType;\\n    fn[RATE] = rate;\\n  }\\n\\n  return fn;\\n}\\n/**\\n * Clear throttle. Example see throttle.createOrUpdate.\\n *\\n * @public\\n * @param {Object} obj\\n * @param {string} fnAttr\\n */\\n\\n\\nfunction clear(obj, fnAttr) {\\n  var fn = obj[fnAttr];\\n\\n  if (fn && fn[ORIGIN_METHOD]) {\\n    obj[fnAttr] = fn[ORIGIN_METHOD];\\n  }\\n}\\n\\nexports.throttle = throttle;\\nexports.createOrUpdate = createOrUpdate;\\nexports.clear = clear;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///110\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar each = _util.each;\\nvar createHashMap = _util.createHashMap;\\nvar assert = _util.assert;\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\\n\\nfunction summarizeDimensions(data) {\\n  var summary = {};\\n  var encode = summary.encode = {};\\n  var notExtraCoordDimMap = createHashMap();\\n  var defaultedLabel = [];\\n  var defaultedTooltip = [];\\n  each(data.dimensions, function (dimName) {\\n    var dimItem = data.getDimensionInfo(dimName);\\n    var coordDim = dimItem.coordDim;\\n\\n    if (coordDim) {\\n      var coordDimArr = encode[coordDim];\\n\\n      if (!encode.hasOwnProperty(coordDim)) {\\n        coordDimArr = encode[coordDim] = [];\\n      }\\n\\n      coordDimArr[dimItem.coordDimIndex] = dimName;\\n\\n      if (!dimItem.isExtraCoord) {\\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\\n        // because when dataset is used, it is hard to guess which dimension\\n        // can be value dimension. If both show x, y on label is not look good,\\n        // and conventionally y axis is focused more.\\n\\n        if (mayLabelDimType(dimItem.type)) {\\n          defaultedLabel[0] = dimName;\\n        }\\n      }\\n\\n      if (dimItem.defaultTooltip) {\\n        defaultedTooltip.push(dimName);\\n      }\\n    }\\n\\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\\n      var otherDimArr = encode[otherDim];\\n\\n      if (!encode.hasOwnProperty(otherDim)) {\\n        otherDimArr = encode[otherDim] = [];\\n      }\\n\\n      var dimIndex = dimItem.otherDims[otherDim];\\n\\n      if (dimIndex != null && dimIndex !== false) {\\n        otherDimArr[dimIndex] = dimItem.name;\\n      }\\n    });\\n  });\\n  var dataDimsOnCoord = [];\\n  var encodeFirstDimNotExtra = {};\\n  notExtraCoordDimMap.each(function (v, coordDim) {\\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\\n    // But should fix the case that radar axes: simplify the logic\\n    // of `completeDimension`, remove `extraPrefix`.\\n\\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\\n    // dim canot on more than one coordDim.\\n\\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\\n  });\\n  summary.dataDimsOnCoord = dataDimsOnCoord;\\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\\n  // in this way. Use label.formatter instead. May be remove this approach someday.\\n\\n  if (encodeLabel && encodeLabel.length) {\\n    defaultedLabel = encodeLabel.slice();\\n  }\\n\\n  var encodeTooltip = encode.tooltip;\\n\\n  if (encodeTooltip && encodeTooltip.length) {\\n    defaultedTooltip = encodeTooltip.slice();\\n  } else if (!defaultedTooltip.length) {\\n    defaultedTooltip = defaultedLabel.slice();\\n  }\\n\\n  encode.defaultedLabel = defaultedLabel;\\n  encode.defaultedTooltip = defaultedTooltip;\\n  return summary;\\n}\\n\\nfunction getDimensionTypeByAxis(axisType) {\\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\\n}\\n\\nfunction mayLabelDimType(dimType) {\\n  // In most cases, ordinal and time do not suitable for label.\\n  // Ordinal info can be displayed on axis. Time is too long.\\n  return !(dimType === 'ordinal' || dimType === 'time');\\n} // function findTheLastDimMayLabel(data) {\\n//     // Get last value dim\\n//     var dimensions = data.dimensions.slice();\\n//     var valueType;\\n//     var valueDim;\\n//     while (dimensions.length && (\\n//         valueDim = dimensions.pop(),\\n//         valueType = data.getDimensionInfo(valueDim).type,\\n//         valueType === 'ordinal' || valueType === 'time'\\n//     )) {} // jshint ignore:line\\n//     return valueDim;\\n// }\\n\\n\\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\\nexports.summarizeDimensions = summarizeDimensions;\\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvZGF0YS9oZWxwZXIvZGltZW5zaW9uSGVscGVyLmpzPzJmNDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFlBQVksbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFM0M7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxFQUFjOztBQUVwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTs7QUFFQSxpREFBaUQ7QUFDakQ7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGlDQUFpQztBQUNqQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIF91dGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIGVhY2ggPSBfdXRpbC5lYWNoO1xudmFyIGNyZWF0ZUhhc2hNYXAgPSBfdXRpbC5jcmVhdGVIYXNoTWFwO1xudmFyIGFzc2VydCA9IF91dGlsLmFzc2VydDtcblxudmFyIF9jb25maWcgPSByZXF1aXJlKFwiLi4vLi4vY29uZmlnXCIpO1xuXG52YXIgX19ERVZfXyA9IF9jb25maWcuX19ERVZfXztcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIE9USEVSX0RJTUVOU0lPTlMgPSBjcmVhdGVIYXNoTWFwKFsndG9vbHRpcCcsICdsYWJlbCcsICdpdGVtTmFtZScsICdpdGVtSWQnLCAnc2VyaWVzTmFtZSddKTtcblxuZnVuY3Rpb24gc3VtbWFyaXplRGltZW5zaW9ucyhkYXRhKSB7XG4gIHZhciBzdW1tYXJ5ID0ge307XG4gIHZhciBlbmNvZGUgPSBzdW1tYXJ5LmVuY29kZSA9IHt9O1xuICB2YXIgbm90RXh0cmFDb29yZERpbU1hcCA9IGNyZWF0ZUhhc2hNYXAoKTtcbiAgdmFyIGRlZmF1bHRlZExhYmVsID0gW107XG4gIHZhciBkZWZhdWx0ZWRUb29sdGlwID0gW107XG4gIGVhY2goZGF0YS5kaW1lbnNpb25zLCBmdW5jdGlvbiAoZGltTmFtZSkge1xuICAgIHZhciBkaW1JdGVtID0gZGF0YS5nZXREaW1lbnNpb25JbmZvKGRpbU5hbWUpO1xuICAgIHZhciBjb29yZERpbSA9IGRpbUl0ZW0uY29vcmREaW07XG5cbiAgICBpZiAoY29vcmREaW0pIHtcbiAgICAgIHZhciBjb29yZERpbUFyciA9IGVuY29kZVtjb29yZERpbV07XG5cbiAgICAgIGlmICghZW5jb2RlLmhhc093blByb3BlcnR5KGNvb3JkRGltKSkge1xuICAgICAgICBjb29yZERpbUFyciA9IGVuY29kZVtjb29yZERpbV0gPSBbXTtcbiAgICAgIH1cblxuICAgICAgY29vcmREaW1BcnJbZGltSXRlbS5jb29yZERpbUluZGV4XSA9IGRpbU5hbWU7XG5cbiAgICAgIGlmICghZGltSXRlbS5pc0V4dHJhQ29vcmQpIHtcbiAgICAgICAgbm90RXh0cmFDb29yZERpbU1hcC5zZXQoY29vcmREaW0sIDEpOyAvLyBVc2UgdGhlIGxhc3QgY29vcmQgZGltIChhbmQgbGFiZWwgZnJpZW5kbHkpIGFzIGRlZmF1bHQgbGFiZWwsXG4gICAgICAgIC8vIGJlY2F1c2Ugd2hlbiBkYXRhc2V0IGlzIHVzZWQsIGl0IGlzIGhhcmQgdG8gZ3Vlc3Mgd2hpY2ggZGltZW5zaW9uXG4gICAgICAgIC8vIGNhbiBiZSB2YWx1ZSBkaW1lbnNpb24uIElmIGJvdGggc2hvdyB4LCB5IG9uIGxhYmVsIGlzIG5vdCBsb29rIGdvb2QsXG4gICAgICAgIC8vIGFuZCBjb252ZW50aW9uYWxseSB5IGF4aXMgaXMgZm9jdXNlZCBtb3JlLlxuXG4gICAgICAgIGlmIChtYXlMYWJlbERpbVR5cGUoZGltSXRlbS50eXBlKSkge1xuICAgICAgICAgIGRlZmF1bHRlZExhYmVsWzBdID0gZGltTmFtZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZGltSXRlbS5kZWZhdWx0VG9vbHRpcCkge1xuICAgICAgICBkZWZhdWx0ZWRUb29sdGlwLnB1c2goZGltTmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgT1RIRVJfRElNRU5TSU9OUy5lYWNoKGZ1bmN0aW9uICh2LCBvdGhlckRpbSkge1xuICAgICAgdmFyIG90aGVyRGltQXJyID0gZW5jb2RlW290aGVyRGltXTtcblxuICAgICAgaWYgKCFlbmNvZGUuaGFzT3duUHJvcGVydHkob3RoZXJEaW0pKSB7XG4gICAgICAgIG90aGVyRGltQXJyID0gZW5jb2RlW290aGVyRGltXSA9IFtdO1xuICAgICAgfVxuXG4gICAgICB2YXIgZGltSW5kZXggPSBkaW1JdGVtLm90aGVyRGltc1tvdGhlckRpbV07XG5cbiAgICAgIGlmIChkaW1JbmRleCAhPSBudWxsICYmIGRpbUluZGV4ICE9PSBmYWxzZSkge1xuICAgICAgICBvdGhlckRpbUFycltkaW1JbmRleF0gPSBkaW1JdGVtLm5hbWU7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuICB2YXIgZGF0YURpbXNPbkNvb3JkID0gW107XG4gIHZhciBlbmNvZGVGaXJzdERpbU5vdEV4dHJhID0ge307XG4gIG5vdEV4dHJhQ29vcmREaW1NYXAuZWFjaChmdW5jdGlvbiAodiwgY29vcmREaW0pIHtcbiAgICB2YXIgZGltQXJyID0gZW5jb2RlW2Nvb3JkRGltXTsgLy8gPz8/IEZJWE1FIGV4dHJhIGNvb3JkIHNob3VsZCBub3QgYmUgc2V0IGluIGRhdGFEaW1zT25Db29yZC5cbiAgICAvLyBCdXQgc2hvdWxkIGZpeCB0aGUgY2FzZSB0aGF0IHJhZGFyIGF4ZXM6IHNpbXBsaWZ5IHRoZSBsb2dpY1xuICAgIC8vIG9mIGBjb21wbGV0ZURpbWVuc2lvbmAsIHJlbW92ZSBgZXh0cmFQcmVmaXhgLlxuXG4gICAgZW5jb2RlRmlyc3REaW1Ob3RFeHRyYVtjb29yZERpbV0gPSBkaW1BcnJbMF07IC8vIE5vdCBuZWNlc3NhcnkgdG8gcmVtb3ZlIGR1cGxpY2F0ZSwgYmVjYXVzZSBhIGRhdGFcbiAgICAvLyBkaW0gY2Fub3Qgb24gbW9yZSB0aGFuIG9uZSBjb29yZERpbS5cblxuICAgIGRhdGFEaW1zT25Db29yZCA9IGRhdGFEaW1zT25Db29yZC5jb25jYXQoZGltQXJyKTtcbiAgfSk7XG4gIHN1bW1hcnkuZGF0YURpbXNPbkNvb3JkID0gZGF0YURpbXNPbkNvb3JkO1xuICBzdW1tYXJ5LmVuY29kZUZpcnN0RGltTm90RXh0cmEgPSBlbmNvZGVGaXJzdERpbU5vdEV4dHJhO1xuICB2YXIgZW5jb2RlTGFiZWwgPSBlbmNvZGUubGFiZWw7IC8vIEZJWE1FIGBlbmNvZGUubGFiZWxgIGlzIG5vdCByZWNvbW1hbmRlZCwgYmVjYXVzZSBmb3JtYXR0ZXIgY2FuIG5vdCBiZSBzZXRcbiAgLy8gaW4gdGhpcyB3YXkuIFVzZSBsYWJlbC5mb3JtYXR0ZXIgaW5zdGVhZC4gTWF5IGJlIHJlbW92ZSB0aGlzIGFwcHJvYWNoIHNvbWVkYXkuXG5cbiAgaWYgKGVuY29kZUxhYmVsICYmIGVuY29kZUxhYmVsLmxlbmd0aCkge1xuICAgIGRlZmF1bHRlZExhYmVsID0gZW5jb2RlTGFiZWwuc2xpY2UoKTtcbiAgfVxuXG4gIHZhciBlbmNvZGVUb29sdGlwID0gZW5jb2RlLnRvb2x0aXA7XG5cbiAgaWYgKGVuY29kZVRvb2x0aXAgJiYgZW5jb2RlVG9vbHRpcC5sZW5ndGgpIHtcbiAgICBkZWZhdWx0ZWRUb29sdGlwID0gZW5jb2RlVG9vbHRpcC5zbGljZSgpO1xuICB9IGVsc2UgaWYgKCFkZWZhdWx0ZWRUb29sdGlwLmxlbmd0aCkge1xuICAgIGRlZmF1bHRlZFRvb2x0aXAgPSBkZWZhdWx0ZWRMYWJlbC5zbGljZSgpO1xuICB9XG5cbiAgZW5jb2RlLmRlZmF1bHRlZExhYmVsID0gZGVmYXVsdGVkTGFiZWw7XG4gIGVuY29kZS5kZWZhdWx0ZWRUb29sdGlwID0gZGVmYXVsdGVkVG9vbHRpcDtcbiAgcmV0dXJuIHN1bW1hcnk7XG59XG5cbmZ1bmN0aW9uIGdldERpbWVuc2lvblR5cGVCeUF4aXMoYXhpc1R5cGUpIHtcbiAgcmV0dXJuIGF4aXNUeXBlID09PSAnY2F0ZWdvcnknID8gJ29yZGluYWwnIDogYXhpc1R5cGUgPT09ICd0aW1lJyA/ICd0aW1lJyA6ICdmbG9hdCc7XG59XG5cbmZ1bmN0aW9uIG1heUxhYmVsRGltVHlwZShkaW1UeXBlKSB7XG4gIC8vIEluIG1vc3QgY2FzZXMsIG9yZGluYWwgYW5kIHRpbWUgZG8gbm90IHN1aXRhYmxlIGZvciBsYWJlbC5cbiAgLy8gT3JkaW5hbCBpbmZvIGNhbiBiZSBkaXNwbGF5ZWQgb24gYXhpcy4gVGltZSBpcyB0b28gbG9uZy5cbiAgcmV0dXJuICEoZGltVHlwZSA9PT0gJ29yZGluYWwnIHx8IGRpbVR5cGUgPT09ICd0aW1lJyk7XG59IC8vIGZ1bmN0aW9uIGZpbmRUaGVMYXN0RGltTWF5TGFiZWwoZGF0YSkge1xuLy8gICAgIC8vIEdldCBsYXN0IHZhbHVlIGRpbVxuLy8gICAgIHZhciBkaW1lbnNpb25zID0gZGF0YS5kaW1lbnNpb25zLnNsaWNlKCk7XG4vLyAgICAgdmFyIHZhbHVlVHlwZTtcbi8vICAgICB2YXIgdmFsdWVEaW07XG4vLyAgICAgd2hpbGUgKGRpbWVuc2lvbnMubGVuZ3RoICYmIChcbi8vICAgICAgICAgdmFsdWVEaW0gPSBkaW1lbnNpb25zLnBvcCgpLFxuLy8gICAgICAgICB2YWx1ZVR5cGUgPSBkYXRhLmdldERpbWVuc2lvbkluZm8odmFsdWVEaW0pLnR5cGUsXG4vLyAgICAgICAgIHZhbHVlVHlwZSA9PT0gJ29yZGluYWwnIHx8IHZhbHVlVHlwZSA9PT0gJ3RpbWUnXG4vLyAgICAgKSkge30gLy8ganNoaW50IGlnbm9yZTpsaW5lXG4vLyAgICAgcmV0dXJuIHZhbHVlRGltO1xuLy8gfVxuXG5cbmV4cG9ydHMuT1RIRVJfRElNRU5TSU9OUyA9IE9USEVSX0RJTUVOU0lPTlM7XG5leHBvcnRzLnN1bW1hcml6ZURpbWVuc2lvbnMgPSBzdW1tYXJpemVEaW1lbnNpb25zO1xuZXhwb3J0cy5nZXREaW1lbnNpb25UeXBlQnlBeGlzID0gZ2V0RGltZW5zaW9uVHlwZUJ5QXhpczsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///111\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar numberUtil = __webpack_require__(65);\\n\\nvar formatUtil = __webpack_require__(69);\\n\\nvar Scale = __webpack_require__(92);\\n\\nvar helper = __webpack_require__(163);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Interval scale\\n * @module echarts/scale/Interval\\n */\\nvar roundNumber = numberUtil.round;\\n/**\\n * @alias module:echarts/coord/scale/Interval\\n * @constructor\\n */\\n\\nvar IntervalScale = Scale.extend({\\n  type: 'interval',\\n  _interval: 0,\\n  _intervalPrecision: 2,\\n  setExtent: function (start, end) {\\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\\n\\n    if (!isNaN(start)) {\\n      thisExtent[0] = parseFloat(start);\\n    }\\n\\n    if (!isNaN(end)) {\\n      thisExtent[1] = parseFloat(end);\\n    }\\n  },\\n  unionExtent: function (other) {\\n    var extent = this._extent;\\n    other[0] < extent[0] && (extent[0] = other[0]);\\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\\n\\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\\n  },\\n\\n  /**\\n   * Get interval\\n   */\\n  getInterval: function () {\\n    return this._interval;\\n  },\\n\\n  /**\\n   * Set interval\\n   */\\n  setInterval: function (interval) {\\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\\n    // We assume user wan't to set both interval, min, max to get a better result\\n\\n    this._niceExtent = this._extent.slice();\\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\\n  },\\n\\n  /**\\n   * @return {Array.<number>}\\n   */\\n  getTicks: function () {\\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\\n  },\\n\\n  /**\\n   * @param {number} data\\n   * @param {Object} [opt]\\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\\n   * @return {string}\\n   */\\n  getLabel: function (data, opt) {\\n    if (data == null) {\\n      return '';\\n    }\\n\\n    var precision = opt && opt.precision;\\n\\n    if (precision == null) {\\n      precision = numberUtil.getPrecisionSafe(data) || 0;\\n    } else if (precision === 'auto') {\\n      // Should be more precise then tick.\\n      precision = this._intervalPrecision;\\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\\n\\n\\n    data = roundNumber(data, precision, true);\\n    return formatUtil.addCommas(data);\\n  },\\n\\n  /**\\n   * Update interval and extent of intervals for nice ticks\\n   *\\n   * @param {number} [splitNumber = 5] Desired number of ticks\\n   * @param {number} [minInterval]\\n   * @param {number} [maxInterval]\\n   */\\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\\n    splitNumber = splitNumber || 5;\\n    var extent = this._extent;\\n    var span = extent[1] - extent[0];\\n\\n    if (!isFinite(span)) {\\n      return;\\n    } // User may set axis min 0 and data are all negative\\n    // FIXME If it needs to reverse ?\\n\\n\\n    if (span < 0) {\\n      span = -span;\\n      extent.reverse();\\n    }\\n\\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\\n    this._intervalPrecision = result.intervalPrecision;\\n    this._interval = result.interval;\\n    this._niceExtent = result.niceTickExtent;\\n  },\\n\\n  /**\\n   * Nice extent.\\n   * @param {Object} opt\\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\\n   * @param {boolean} [opt.fixMin=false]\\n   * @param {boolean} [opt.fixMax=false]\\n   * @param {boolean} [opt.minInterval]\\n   * @param {boolean} [opt.maxInterval]\\n   */\\n  niceExtent: function (opt) {\\n    var extent = this._extent; // If extent start and end are same, expand them\\n\\n    if (extent[0] === extent[1]) {\\n      if (extent[0] !== 0) {\\n        // Expand extent\\n        var expandSize = extent[0]; // In the fowllowing case\\n        //      Axis has been fixed max 100\\n        //      Plus data are all 100 and axis extent are [100, 100].\\n        // Extend to the both side will cause expanded max is larger than fixed max.\\n        // So only expand to the smaller side.\\n\\n        if (!opt.fixMax) {\\n          extent[1] += expandSize / 2;\\n          extent[0] -= expandSize / 2;\\n        } else {\\n          extent[0] -= expandSize / 2;\\n        }\\n      } else {\\n        extent[1] = 1;\\n      }\\n    }\\n\\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\\n\\n    if (!isFinite(span)) {\\n      extent[0] = 0;\\n      extent[1] = 1;\\n    }\\n\\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\\n\\n    var interval = this._interval;\\n\\n    if (!opt.fixMin) {\\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\\n    }\\n\\n    if (!opt.fixMax) {\\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\\n    }\\n  }\\n});\\n/**\\n * @return {module:echarts/scale/Time}\\n */\\n\\nIntervalScale.create = function () {\\n  return new IntervalScale();\\n};\\n\\nvar _default = IntervalScale;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///112\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// Symbol factory\\n\\n/**\\n * Triangle shape\\n * @inner\\n */\\nvar Triangle = graphic.extendShape({\\n  type: 'triangle',\\n  shape: {\\n    cx: 0,\\n    cy: 0,\\n    width: 0,\\n    height: 0\\n  },\\n  buildPath: function (path, shape) {\\n    var cx = shape.cx;\\n    var cy = shape.cy;\\n    var width = shape.width / 2;\\n    var height = shape.height / 2;\\n    path.moveTo(cx, cy - height);\\n    path.lineTo(cx + width, cy + height);\\n    path.lineTo(cx - width, cy + height);\\n    path.closePath();\\n  }\\n});\\n/**\\n * Diamond shape\\n * @inner\\n */\\n\\nvar Diamond = graphic.extendShape({\\n  type: 'diamond',\\n  shape: {\\n    cx: 0,\\n    cy: 0,\\n    width: 0,\\n    height: 0\\n  },\\n  buildPath: function (path, shape) {\\n    var cx = shape.cx;\\n    var cy = shape.cy;\\n    var width = shape.width / 2;\\n    var height = shape.height / 2;\\n    path.moveTo(cx, cy - height);\\n    path.lineTo(cx + width, cy);\\n    path.lineTo(cx, cy + height);\\n    path.lineTo(cx - width, cy);\\n    path.closePath();\\n  }\\n});\\n/**\\n * Pin shape\\n * @inner\\n */\\n\\nvar Pin = graphic.extendShape({\\n  type: 'pin',\\n  shape: {\\n    // x, y on the cusp\\n    x: 0,\\n    y: 0,\\n    width: 0,\\n    height: 0\\n  },\\n  buildPath: function (path, shape) {\\n    var x = shape.x;\\n    var y = shape.y;\\n    var w = shape.width / 5 * 3; // Height must be larger than width\\n\\n    var h = Math.max(w, shape.height);\\n    var r = w / 2; // Dist on y with tangent point and circle center\\n\\n    var dy = r * r / (h - r);\\n    var cy = y - h + r + dy;\\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\\n\\n    var dx = Math.cos(angle) * r;\\n    var tanX = Math.sin(angle);\\n    var tanY = Math.cos(angle);\\n    var cpLen = r * 0.6;\\n    var cpLen2 = r * 0.7;\\n    path.moveTo(x - dx, cy + dy);\\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\\n    path.closePath();\\n  }\\n});\\n/**\\n * Arrow shape\\n * @inner\\n */\\n\\nvar Arrow = graphic.extendShape({\\n  type: 'arrow',\\n  shape: {\\n    x: 0,\\n    y: 0,\\n    width: 0,\\n    height: 0\\n  },\\n  buildPath: function (ctx, shape) {\\n    var height = shape.height;\\n    var width = shape.width;\\n    var x = shape.x;\\n    var y = shape.y;\\n    var dx = width / 3 * 2;\\n    ctx.moveTo(x, y);\\n    ctx.lineTo(x + dx, y + height);\\n    ctx.lineTo(x, y + height / 4 * 3);\\n    ctx.lineTo(x - dx, y + height);\\n    ctx.lineTo(x, y);\\n    ctx.closePath();\\n  }\\n});\\n/**\\n * Map of path contructors\\n * @type {Object.<string, module:zrender/graphic/Path>}\\n */\\n\\nvar symbolCtors = {\\n  line: graphic.Line,\\n  rect: graphic.Rect,\\n  roundRect: graphic.Rect,\\n  square: graphic.Rect,\\n  circle: graphic.Circle,\\n  diamond: Diamond,\\n  pin: Pin,\\n  arrow: Arrow,\\n  triangle: Triangle\\n};\\nvar symbolShapeMakers = {\\n  line: function (x, y, w, h, shape) {\\n    // FIXME\\n    shape.x1 = x;\\n    shape.y1 = y + h / 2;\\n    shape.x2 = x + w;\\n    shape.y2 = y + h / 2;\\n  },\\n  rect: function (x, y, w, h, shape) {\\n    shape.x = x;\\n    shape.y = y;\\n    shape.width = w;\\n    shape.height = h;\\n  },\\n  roundRect: function (x, y, w, h, shape) {\\n    shape.x = x;\\n    shape.y = y;\\n    shape.width = w;\\n    shape.height = h;\\n    shape.r = Math.min(w, h) / 4;\\n  },\\n  square: function (x, y, w, h, shape) {\\n    var size = Math.min(w, h);\\n    shape.x = x;\\n    shape.y = y;\\n    shape.width = size;\\n    shape.height = size;\\n  },\\n  circle: function (x, y, w, h, shape) {\\n    // Put circle in the center of square\\n    shape.cx = x + w / 2;\\n    shape.cy = y + h / 2;\\n    shape.r = Math.min(w, h) / 2;\\n  },\\n  diamond: function (x, y, w, h, shape) {\\n    shape.cx = x + w / 2;\\n    shape.cy = y + h / 2;\\n    shape.width = w;\\n    shape.height = h;\\n  },\\n  pin: function (x, y, w, h, shape) {\\n    shape.x = x + w / 2;\\n    shape.y = y + h / 2;\\n    shape.width = w;\\n    shape.height = h;\\n  },\\n  arrow: function (x, y, w, h, shape) {\\n    shape.x = x + w / 2;\\n    shape.y = y + h / 2;\\n    shape.width = w;\\n    shape.height = h;\\n  },\\n  triangle: function (x, y, w, h, shape) {\\n    shape.cx = x + w / 2;\\n    shape.cy = y + h / 2;\\n    shape.width = w;\\n    shape.height = h;\\n  }\\n};\\nvar symbolBuildProxies = {};\\nzrUtil.each(symbolCtors, function (Ctor, name) {\\n  symbolBuildProxies[name] = new Ctor();\\n});\\nvar SymbolClz = graphic.extendShape({\\n  type: 'symbol',\\n  shape: {\\n    symbolType: '',\\n    x: 0,\\n    y: 0,\\n    width: 0,\\n    height: 0\\n  },\\n  beforeBrush: function () {\\n    var style = this.style;\\n    var shape = this.shape; // FIXME\\n\\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\\n      style.textPosition = ['50%', '40%'];\\n      style.textAlign = 'center';\\n      style.textVerticalAlign = 'middle';\\n    }\\n  },\\n  buildPath: function (ctx, shape, inBundle) {\\n    var symbolType = shape.symbolType;\\n    var proxySymbol = symbolBuildProxies[symbolType];\\n\\n    if (shape.symbolType !== 'none') {\\n      if (!proxySymbol) {\\n        // Default rect\\n        symbolType = 'rect';\\n        proxySymbol = symbolBuildProxies[symbolType];\\n      }\\n\\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\\n    }\\n  }\\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\\n\\nfunction symbolPathSetColor(color, innerColor) {\\n  if (this.type !== 'image') {\\n    var symbolStyle = this.style;\\n    var symbolShape = this.shape;\\n\\n    if (symbolShape && symbolShape.symbolType === 'line') {\\n      symbolStyle.stroke = color;\\n    } else if (this.__isEmptyBrush) {\\n      symbolStyle.stroke = color;\\n      symbolStyle.fill = innerColor || '#fff';\\n    } else {\\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\\n      symbolStyle.fill && (symbolStyle.fill = color);\\n      symbolStyle.stroke && (symbolStyle.stroke = color);\\n    }\\n\\n    this.dirty(false);\\n  }\\n}\\n/**\\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\\n * @param {string} symbolType\\n * @param {number} x\\n * @param {number} y\\n * @param {number} w\\n * @param {number} h\\n * @param {string} color\\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\\n *                            for path and image only.\\n */\\n\\n\\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\\n  // TODO Support image object, DynamicImage.\\n  var isEmpty = symbolType.indexOf('empty') === 0;\\n\\n  if (isEmpty) {\\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\\n  }\\n\\n  var symbolPath;\\n\\n  if (symbolType.indexOf('image://') === 0) {\\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\\n  } else if (symbolType.indexOf('path://') === 0) {\\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\\n  } else {\\n    symbolPath = new SymbolClz({\\n      shape: {\\n        symbolType: symbolType,\\n        x: x,\\n        y: y,\\n        width: w,\\n        height: h\\n      }\\n    });\\n  }\\n\\n  symbolPath.__isEmptyBrush = isEmpty;\\n  symbolPath.setColor = symbolPathSetColor;\\n  symbolPath.setColor(color);\\n  return symbolPath;\\n}\\n\\nexports.createSymbol = createSymbol;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///113\\n\")},,,,,,,,,,,,,,function(module,exports,__webpack_require__){eval(\"var guid = __webpack_require__(128);\\n\\nvar env = __webpack_require__(66);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Handler = __webpack_require__(193);\\n\\nvar Storage = __webpack_require__(195);\\n\\nvar Painter = __webpack_require__(199);\\n\\nvar Animation = __webpack_require__(202);\\n\\nvar HandlerProxy = __webpack_require__(203);\\n\\n/*!\\n* ZRender, a high performance 2d drawing library.\\n*\\n* Copyright (c) 2013, Baidu Inc.\\n* All rights reserved.\\n*\\n* LICENSE\\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\\n*/\\nvar useVML = !env.canvasSupported;\\nvar painterCtors = {\\n  canvas: Painter\\n};\\nvar instances = {}; // ZRender实例map索引\\n\\n/**\\n * @type {string}\\n */\\n\\nvar version = '4.0.5';\\n/**\\n * Initializing a zrender instance\\n * @param {HTMLElement} dom\\n * @param {Object} opts\\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\\n * @param {number} [opts.devicePixelRatio]\\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\\n * @return {module:zrender/ZRender}\\n */\\n\\nfunction init(dom, opts) {\\n  var zr = new ZRender(guid(), dom, opts);\\n  instances[zr.id] = zr;\\n  return zr;\\n}\\n/**\\n * Dispose zrender instance\\n * @param {module:zrender/ZRender} zr\\n */\\n\\n\\nfunction dispose(zr) {\\n  if (zr) {\\n    zr.dispose();\\n  } else {\\n    for (var key in instances) {\\n      if (instances.hasOwnProperty(key)) {\\n        instances[key].dispose();\\n      }\\n    }\\n\\n    instances = {};\\n  }\\n\\n  return this;\\n}\\n/**\\n * Get zrender instance by id\\n * @param {string} id zrender instance id\\n * @return {module:zrender/ZRender}\\n */\\n\\n\\nfunction getInstance(id) {\\n  return instances[id];\\n}\\n\\nfunction registerPainter(name, Ctor) {\\n  painterCtors[name] = Ctor;\\n}\\n\\nfunction delInstance(id) {\\n  delete instances[id];\\n}\\n/**\\n * @module zrender/ZRender\\n */\\n\\n/**\\n * @constructor\\n * @alias module:zrender/ZRender\\n * @param {string} id\\n * @param {HTMLElement} dom\\n * @param {Object} opts\\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\\n * @param {number} [opts.devicePixelRatio]\\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\\n */\\n\\n\\nvar ZRender = function (id, dom, opts) {\\n  opts = opts || {};\\n  /**\\n   * @type {HTMLDomElement}\\n   */\\n\\n  this.dom = dom;\\n  /**\\n   * @type {string}\\n   */\\n\\n  this.id = id;\\n  var self = this;\\n  var storage = new Storage();\\n  var rendererType = opts.renderer; // TODO WebGL\\n\\n  if (useVML) {\\n    if (!painterCtors.vml) {\\n      throw new Error('You need to require \\\\'zrender/vml/vml\\\\' to support IE8');\\n    }\\n\\n    rendererType = 'vml';\\n  } else if (!rendererType || !painterCtors[rendererType]) {\\n    rendererType = 'canvas';\\n  }\\n\\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\\n  this.storage = storage;\\n  this.painter = painter;\\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\\n  /**\\n   * @type {module:zrender/animation/Animation}\\n   */\\n\\n  this.animation = new Animation({\\n    stage: {\\n      update: zrUtil.bind(this.flush, this)\\n    }\\n  });\\n  this.animation.start();\\n  /**\\n   * @type {boolean}\\n   * @private\\n   */\\n\\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\\n  // FIXME 有点ugly\\n\\n  var oldDelFromStorage = storage.delFromStorage;\\n  var oldAddToStorage = storage.addToStorage;\\n\\n  storage.delFromStorage = function (el) {\\n    oldDelFromStorage.call(storage, el);\\n    el && el.removeSelfFromZr(self);\\n  };\\n\\n  storage.addToStorage = function (el) {\\n    oldAddToStorage.call(storage, el);\\n    el.addSelfToZr(self);\\n  };\\n};\\n\\nZRender.prototype = {\\n  constructor: ZRender,\\n\\n  /**\\n   * 获取实例唯一标识\\n   * @return {string}\\n   */\\n  getId: function () {\\n    return this.id;\\n  },\\n\\n  /**\\n   * 添加元素\\n   * @param  {module:zrender/Element} el\\n   */\\n  add: function (el) {\\n    this.storage.addRoot(el);\\n    this._needsRefresh = true;\\n  },\\n\\n  /**\\n   * 删除元素\\n   * @param  {module:zrender/Element} el\\n   */\\n  remove: function (el) {\\n    this.storage.delRoot(el);\\n    this._needsRefresh = true;\\n  },\\n\\n  /**\\n   * Change configuration of layer\\n   * @param {string} zLevel\\n   * @param {Object} config\\n   * @param {string} [config.clearColor=0] Clear color\\n   * @param {string} [config.motionBlur=false] If enable motion blur\\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\\n  */\\n  configLayer: function (zLevel, config) {\\n    if (this.painter.configLayer) {\\n      this.painter.configLayer(zLevel, config);\\n    }\\n\\n    this._needsRefresh = true;\\n  },\\n\\n  /**\\n   * Set background color\\n   * @param {string} backgroundColor\\n   */\\n  setBackgroundColor: function (backgroundColor) {\\n    if (this.painter.setBackgroundColor) {\\n      this.painter.setBackgroundColor(backgroundColor);\\n    }\\n\\n    this._needsRefresh = true;\\n  },\\n\\n  /**\\n   * Repaint the canvas immediately\\n   */\\n  refreshImmediately: function () {\\n    // var start = new Date();\\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\\n    // Or it will cause zrender refreshes again and again.\\n    this._needsRefresh = false;\\n    this.painter.refresh();\\n    /**\\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\\n     */\\n\\n    this._needsRefresh = false; // var end = new Date();\\n    // var log = document.getElementById('log');\\n    // if (log) {\\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\\n    // }\\n  },\\n\\n  /**\\n   * Mark and repaint the canvas in the next frame of browser\\n   */\\n  refresh: function () {\\n    this._needsRefresh = true;\\n  },\\n\\n  /**\\n   * Perform all refresh\\n   */\\n  flush: function () {\\n    var triggerRendered;\\n\\n    if (this._needsRefresh) {\\n      triggerRendered = true;\\n      this.refreshImmediately();\\n    }\\n\\n    if (this._needsRefreshHover) {\\n      triggerRendered = true;\\n      this.refreshHoverImmediately();\\n    }\\n\\n    triggerRendered && this.trigger('rendered');\\n  },\\n\\n  /**\\n   * Add element to hover layer\\n   * @param  {module:zrender/Element} el\\n   * @param {Object} style\\n   */\\n  addHover: function (el, style) {\\n    if (this.painter.addHover) {\\n      var elMirror = this.painter.addHover(el, style);\\n      this.refreshHover();\\n      return elMirror;\\n    }\\n  },\\n\\n  /**\\n   * Add element from hover layer\\n   * @param  {module:zrender/Element} el\\n   */\\n  removeHover: function (el) {\\n    if (this.painter.removeHover) {\\n      this.painter.removeHover(el);\\n      this.refreshHover();\\n    }\\n  },\\n\\n  /**\\n   * Clear all hover elements in hover layer\\n   * @param  {module:zrender/Element} el\\n   */\\n  clearHover: function () {\\n    if (this.painter.clearHover) {\\n      this.painter.clearHover();\\n      this.refreshHover();\\n    }\\n  },\\n\\n  /**\\n   * Refresh hover in next frame\\n   */\\n  refreshHover: function () {\\n    this._needsRefreshHover = true;\\n  },\\n\\n  /**\\n   * Refresh hover immediately\\n   */\\n  refreshHoverImmediately: function () {\\n    this._needsRefreshHover = false;\\n    this.painter.refreshHover && this.painter.refreshHover();\\n  },\\n\\n  /**\\n   * Resize the canvas.\\n   * Should be invoked when container size is changed\\n   * @param {Object} [opts]\\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\\n   */\\n  resize: function (opts) {\\n    opts = opts || {};\\n    this.painter.resize(opts.width, opts.height);\\n    this.handler.resize();\\n  },\\n\\n  /**\\n   * Stop and clear all animation immediately\\n   */\\n  clearAnimation: function () {\\n    this.animation.clear();\\n  },\\n\\n  /**\\n   * Get container width\\n   */\\n  getWidth: function () {\\n    return this.painter.getWidth();\\n  },\\n\\n  /**\\n   * Get container height\\n   */\\n  getHeight: function () {\\n    return this.painter.getHeight();\\n  },\\n\\n  /**\\n   * Export the canvas as Base64 URL\\n   * @param {string} type\\n   * @param {string} [backgroundColor='#fff']\\n   * @return {string} Base64 URL\\n   */\\n  // toDataURL: function(type, backgroundColor) {\\n  //     return this.painter.getRenderedCanvas({\\n  //         backgroundColor: backgroundColor\\n  //     }).toDataURL(type);\\n  // },\\n\\n  /**\\n   * Converting a path to image.\\n   * It has much better performance of drawing image rather than drawing a vector path.\\n   * @param {module:zrender/graphic/Path} e\\n   * @param {number} width\\n   * @param {number} height\\n   */\\n  pathToImage: function (e, dpr) {\\n    return this.painter.pathToImage(e, dpr);\\n  },\\n\\n  /**\\n   * Set default cursor\\n   * @param {string} [cursorStyle='default'] 例如 crosshair\\n   */\\n  setCursorStyle: function (cursorStyle) {\\n    this.handler.setCursorStyle(cursorStyle);\\n  },\\n\\n  /**\\n   * Find hovered element\\n   * @param {number} x\\n   * @param {number} y\\n   * @return {Object} {target, topTarget}\\n   */\\n  findHover: function (x, y) {\\n    return this.handler.findHover(x, y);\\n  },\\n\\n  /**\\n   * Bind event\\n   *\\n   * @param {string} eventName Event name\\n   * @param {Function} eventHandler Handler function\\n   * @param {Object} [context] Context object\\n   */\\n  on: function (eventName, eventHandler, context) {\\n    this.handler.on(eventName, eventHandler, context);\\n  },\\n\\n  /**\\n   * Unbind event\\n   * @param {string} eventName Event name\\n   * @param {Function} [eventHandler] Handler function\\n   */\\n  off: function (eventName, eventHandler) {\\n    this.handler.off(eventName, eventHandler);\\n  },\\n\\n  /**\\n   * Trigger event manually\\n   *\\n   * @param {string} eventName Event name\\n   * @param {event=} event Event object\\n   */\\n  trigger: function (eventName, event) {\\n    this.handler.trigger(eventName, event);\\n  },\\n\\n  /**\\n   * Clear all objects and the canvas.\\n   */\\n  clear: function () {\\n    this.storage.delRoot();\\n    this.painter.clear();\\n  },\\n\\n  /**\\n   * Dispose self.\\n   */\\n  dispose: function () {\\n    this.animation.stop();\\n    this.clear();\\n    this.storage.dispose();\\n    this.painter.dispose();\\n    this.handler.dispose();\\n    this.animation = this.storage = this.painter = this.handler = null;\\n    delInstance(this.id);\\n  }\\n};\\nexports.version = version;\\nexports.init = init;\\nexports.dispose = dispose;\\nexports.getInstance = getInstance;\\nexports.registerPainter = registerPainter;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///127\\n\")},function(module,exports){eval(\"/**\\n * zrender: 生成唯一id\\n *\\n * @author errorrik (errorrik@gmail.com)\\n */\\nvar idStart = 0x0907;\\n\\nfunction _default() {\\n  return idStart++;\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29yZS9ndWlkLmpzP2RlMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIxMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIHpyZW5kZXI6IOeUn+aIkOWUr+S4gGlkXG4gKlxuICogQGF1dGhvciBlcnJvcnJpayAoZXJyb3JyaWtAZ21haWwuY29tKVxuICovXG52YXIgaWRTdGFydCA9IDB4MDkwNztcblxuZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gIHJldHVybiBpZFN0YXJ0Kys7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///128\\n\")},function(module,exports,__webpack_require__){eval(\"var guid = __webpack_require__(128);\\n\\nvar Eventful = __webpack_require__(80);\\n\\nvar Transformable = __webpack_require__(130);\\n\\nvar Animatable = __webpack_require__(196);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/**\\n * @alias module:zrender/Element\\n * @constructor\\n * @extends {module:zrender/mixin/Animatable}\\n * @extends {module:zrender/mixin/Transformable}\\n * @extends {module:zrender/mixin/Eventful}\\n */\\nvar Element = function (opts) {\\n  // jshint ignore:line\\n  Transformable.call(this, opts);\\n  Eventful.call(this, opts);\\n  Animatable.call(this, opts);\\n  /**\\n   * 画布元素ID\\n   * @type {string}\\n   */\\n\\n  this.id = opts.id || guid();\\n};\\n\\nElement.prototype = {\\n  /**\\n   * 元素类型\\n   * Element type\\n   * @type {string}\\n   */\\n  type: 'element',\\n\\n  /**\\n   * 元素名字\\n   * Element name\\n   * @type {string}\\n   */\\n  name: '',\\n\\n  /**\\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\\n   * ZRender instance will be assigned when element is associated with zrender\\n   * @name module:/zrender/Element#__zr\\n   * @type {module:zrender/ZRender}\\n   */\\n  __zr: null,\\n\\n  /**\\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\\n   * If ignore drawing and events of the element object\\n   * @name module:/zrender/Element#ignore\\n   * @type {boolean}\\n   * @default false\\n   */\\n  ignore: false,\\n\\n  /**\\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\\n   * 该路径会继承被裁减对象的变换\\n   * @type {module:zrender/graphic/Path}\\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\\n   * @readOnly\\n   */\\n  clipPath: null,\\n\\n  /**\\n   * 是否是 Group\\n   * @type {boolean}\\n   */\\n  isGroup: false,\\n\\n  /**\\n   * Drift element\\n   * @param  {number} dx dx on the global space\\n   * @param  {number} dy dy on the global space\\n   */\\n  drift: function (dx, dy) {\\n    switch (this.draggable) {\\n      case 'horizontal':\\n        dy = 0;\\n        break;\\n\\n      case 'vertical':\\n        dx = 0;\\n        break;\\n    }\\n\\n    var m = this.transform;\\n\\n    if (!m) {\\n      m = this.transform = [1, 0, 0, 1, 0, 0];\\n    }\\n\\n    m[4] += dx;\\n    m[5] += dy;\\n    this.decomposeTransform();\\n    this.dirty(false);\\n  },\\n\\n  /**\\n   * Hook before update\\n   */\\n  beforeUpdate: function () {},\\n\\n  /**\\n   * Hook after update\\n   */\\n  afterUpdate: function () {},\\n\\n  /**\\n   * Update each frame\\n   */\\n  update: function () {\\n    this.updateTransform();\\n  },\\n\\n  /**\\n   * @param  {Function} cb\\n   * @param  {}   context\\n   */\\n  traverse: function (cb, context) {},\\n\\n  /**\\n   * @protected\\n   */\\n  attrKV: function (key, value) {\\n    if (key === 'position' || key === 'scale' || key === 'origin') {\\n      // Copy the array\\n      if (value) {\\n        var target = this[key];\\n\\n        if (!target) {\\n          target = this[key] = [];\\n        }\\n\\n        target[0] = value[0];\\n        target[1] = value[1];\\n      }\\n    } else {\\n      this[key] = value;\\n    }\\n  },\\n\\n  /**\\n   * Hide the element\\n   */\\n  hide: function () {\\n    this.ignore = true;\\n    this.__zr && this.__zr.refresh();\\n  },\\n\\n  /**\\n   * Show the element\\n   */\\n  show: function () {\\n    this.ignore = false;\\n    this.__zr && this.__zr.refresh();\\n  },\\n\\n  /**\\n   * @param {string|Object} key\\n   * @param {*} value\\n   */\\n  attr: function (key, value) {\\n    if (typeof key === 'string') {\\n      this.attrKV(key, value);\\n    } else if (zrUtil.isObject(key)) {\\n      for (var name in key) {\\n        if (key.hasOwnProperty(name)) {\\n          this.attrKV(name, key[name]);\\n        }\\n      }\\n    }\\n\\n    this.dirty(false);\\n    return this;\\n  },\\n\\n  /**\\n   * @param {module:zrender/graphic/Path} clipPath\\n   */\\n  setClipPath: function (clipPath) {\\n    var zr = this.__zr;\\n\\n    if (zr) {\\n      clipPath.addSelfToZr(zr);\\n    } // Remove previous clip path\\n\\n\\n    if (this.clipPath && this.clipPath !== clipPath) {\\n      this.removeClipPath();\\n    }\\n\\n    this.clipPath = clipPath;\\n    clipPath.__zr = zr;\\n    clipPath.__clipTarget = this;\\n    this.dirty(false);\\n  },\\n\\n  /**\\n   */\\n  removeClipPath: function () {\\n    var clipPath = this.clipPath;\\n\\n    if (clipPath) {\\n      if (clipPath.__zr) {\\n        clipPath.removeSelfFromZr(clipPath.__zr);\\n      }\\n\\n      clipPath.__zr = null;\\n      clipPath.__clipTarget = null;\\n      this.clipPath = null;\\n      this.dirty(false);\\n    }\\n  },\\n\\n  /**\\n   * Add self from zrender instance.\\n   * Not recursively because it will be invoked when element added to storage.\\n   * @param {module:zrender/ZRender} zr\\n   */\\n  addSelfToZr: function (zr) {\\n    this.__zr = zr; // 添加动画\\n\\n    var animators = this.animators;\\n\\n    if (animators) {\\n      for (var i = 0; i < animators.length; i++) {\\n        zr.animation.addAnimator(animators[i]);\\n      }\\n    }\\n\\n    if (this.clipPath) {\\n      this.clipPath.addSelfToZr(zr);\\n    }\\n  },\\n\\n  /**\\n   * Remove self from zrender instance.\\n   * Not recursively because it will be invoked when element added to storage.\\n   * @param {module:zrender/ZRender} zr\\n   */\\n  removeSelfFromZr: function (zr) {\\n    this.__zr = null; // 移除动画\\n\\n    var animators = this.animators;\\n\\n    if (animators) {\\n      for (var i = 0; i < animators.length; i++) {\\n        zr.animation.removeAnimator(animators[i]);\\n      }\\n    }\\n\\n    if (this.clipPath) {\\n      this.clipPath.removeSelfFromZr(zr);\\n    }\\n  }\\n};\\nzrUtil.mixin(Element, Animatable);\\nzrUtil.mixin(Element, Transformable);\\nzrUtil.mixin(Element, Eventful);\\nvar _default = Element;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///129\\n\")},function(module,exports,__webpack_require__){eval(\"var matrix = __webpack_require__(74);\\n\\nvar vector = __webpack_require__(62);\\n\\n/**\\n * 提供变换扩展\\n * @module zrender/mixin/Transformable\\n * @author pissang (https://www.github.com/pissang)\\n */\\nvar mIdentity = matrix.identity;\\nvar EPSILON = 5e-5;\\n\\nfunction isNotAroundZero(val) {\\n  return val > EPSILON || val < -EPSILON;\\n}\\n/**\\n * @alias module:zrender/mixin/Transformable\\n * @constructor\\n */\\n\\n\\nvar Transformable = function (opts) {\\n  opts = opts || {}; // If there are no given position, rotation, scale\\n\\n  if (!opts.position) {\\n    /**\\n     * 平移\\n     * @type {Array.<number>}\\n     * @default [0, 0]\\n     */\\n    this.position = [0, 0];\\n  }\\n\\n  if (opts.rotation == null) {\\n    /**\\n     * 旋转\\n     * @type {Array.<number>}\\n     * @default 0\\n     */\\n    this.rotation = 0;\\n  }\\n\\n  if (!opts.scale) {\\n    /**\\n     * 缩放\\n     * @type {Array.<number>}\\n     * @default [1, 1]\\n     */\\n    this.scale = [1, 1];\\n  }\\n  /**\\n   * 旋转和缩放的原点\\n   * @type {Array.<number>}\\n   * @default null\\n   */\\n\\n\\n  this.origin = this.origin || null;\\n};\\n\\nvar transformableProto = Transformable.prototype;\\ntransformableProto.transform = null;\\n/**\\n * 判断是否需要有坐标变换\\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\\n */\\n\\ntransformableProto.needLocalTransform = function () {\\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\\n};\\n\\nvar scaleTmp = [];\\n\\ntransformableProto.updateTransform = function () {\\n  var parent = this.parent;\\n  var parentHasTransform = parent && parent.transform;\\n  var needLocalTransform = this.needLocalTransform();\\n  var m = this.transform;\\n\\n  if (!(needLocalTransform || parentHasTransform)) {\\n    m && mIdentity(m);\\n    return;\\n  }\\n\\n  m = m || matrix.create();\\n\\n  if (needLocalTransform) {\\n    this.getLocalTransform(m);\\n  } else {\\n    mIdentity(m);\\n  } // 应用父节点变换\\n\\n\\n  if (parentHasTransform) {\\n    if (needLocalTransform) {\\n      matrix.mul(m, parent.transform, m);\\n    } else {\\n      matrix.copy(m, parent.transform);\\n    }\\n  } // 保存这个变换矩阵\\n\\n\\n  this.transform = m;\\n  var globalScaleRatio = this.globalScaleRatio;\\n\\n  if (globalScaleRatio != null && globalScaleRatio !== 1) {\\n    this.getGlobalScale(scaleTmp);\\n    var relX = scaleTmp[0] < 0 ? -1 : 1;\\n    var relY = scaleTmp[1] < 0 ? -1 : 1;\\n    var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\\n    var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\\n    m[0] *= sx;\\n    m[1] *= sx;\\n    m[2] *= sy;\\n    m[3] *= sy;\\n  }\\n\\n  this.invTransform = this.invTransform || matrix.create();\\n  matrix.invert(this.invTransform, m);\\n};\\n\\ntransformableProto.getLocalTransform = function (m) {\\n  return Transformable.getLocalTransform(this, m);\\n};\\n/**\\n * 将自己的transform应用到context上\\n * @param {CanvasRenderingContext2D} ctx\\n */\\n\\n\\ntransformableProto.setTransform = function (ctx) {\\n  var m = this.transform;\\n  var dpr = ctx.dpr || 1;\\n\\n  if (m) {\\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\\n  } else {\\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\\n  }\\n};\\n\\ntransformableProto.restoreTransform = function (ctx) {\\n  var dpr = ctx.dpr || 1;\\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\\n};\\n\\nvar tmpTransform = [];\\nvar originTransform = matrix.create();\\n\\ntransformableProto.setLocalTransform = function (m) {\\n  if (!m) {\\n    // TODO return or set identity?\\n    return;\\n  }\\n\\n  var sx = m[0] * m[0] + m[1] * m[1];\\n  var sy = m[2] * m[2] + m[3] * m[3];\\n  var position = this.position;\\n  var scale = this.scale;\\n\\n  if (isNotAroundZero(sx - 1)) {\\n    sx = Math.sqrt(sx);\\n  }\\n\\n  if (isNotAroundZero(sy - 1)) {\\n    sy = Math.sqrt(sy);\\n  }\\n\\n  if (m[0] < 0) {\\n    sx = -sx;\\n  }\\n\\n  if (m[3] < 0) {\\n    sy = -sy;\\n  }\\n\\n  position[0] = m[4];\\n  position[1] = m[5];\\n  scale[0] = sx;\\n  scale[1] = sy;\\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\\n};\\n/**\\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\\n */\\n\\n\\ntransformableProto.decomposeTransform = function () {\\n  if (!this.transform) {\\n    return;\\n  }\\n\\n  var parent = this.parent;\\n  var m = this.transform;\\n\\n  if (parent && parent.transform) {\\n    // Get local transform and decompose them to position, scale, rotation\\n    matrix.mul(tmpTransform, parent.invTransform, m);\\n    m = tmpTransform;\\n  }\\n\\n  var origin = this.origin;\\n\\n  if (origin && (origin[0] || origin[1])) {\\n    originTransform[4] = origin[0];\\n    originTransform[5] = origin[1];\\n    matrix.mul(tmpTransform, m, originTransform);\\n    tmpTransform[4] -= origin[0];\\n    tmpTransform[5] -= origin[1];\\n    m = tmpTransform;\\n  }\\n\\n  this.setLocalTransform(m);\\n};\\n/**\\n * Get global scale\\n * @return {Array.<number>}\\n */\\n\\n\\ntransformableProto.getGlobalScale = function (out) {\\n  var m = this.transform;\\n  out = out || [];\\n\\n  if (!m) {\\n    out[0] = 1;\\n    out[1] = 1;\\n    return out;\\n  }\\n\\n  out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\\n  out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\\n\\n  if (m[0] < 0) {\\n    out[0] = -out[0];\\n  }\\n\\n  if (m[3] < 0) {\\n    out[1] = -out[1];\\n  }\\n\\n  return out;\\n};\\n/**\\n * 变换坐标位置到 shape 的局部坐标空间\\n * @method\\n * @param {number} x\\n * @param {number} y\\n * @return {Array.<number>}\\n */\\n\\n\\ntransformableProto.transformCoordToLocal = function (x, y) {\\n  var v2 = [x, y];\\n  var invTransform = this.invTransform;\\n\\n  if (invTransform) {\\n    vector.applyTransform(v2, v2, invTransform);\\n  }\\n\\n  return v2;\\n};\\n/**\\n * 变换局部坐标位置到全局坐标空间\\n * @method\\n * @param {number} x\\n * @param {number} y\\n * @return {Array.<number>}\\n */\\n\\n\\ntransformableProto.transformCoordToGlobal = function (x, y) {\\n  var v2 = [x, y];\\n  var transform = this.transform;\\n\\n  if (transform) {\\n    vector.applyTransform(v2, v2, transform);\\n  }\\n\\n  return v2;\\n};\\n/**\\n * @static\\n * @param {Object} target\\n * @param {Array.<number>} target.origin\\n * @param {number} target.rotation\\n * @param {Array.<number>} target.position\\n * @param {Array.<number>} [m]\\n */\\n\\n\\nTransformable.getLocalTransform = function (target, m) {\\n  m = m || [];\\n  mIdentity(m);\\n  var origin = target.origin;\\n  var scale = target.scale || [1, 1];\\n  var rotation = target.rotation || 0;\\n  var position = target.position || [0, 0];\\n\\n  if (origin) {\\n    // Translate to origin\\n    m[4] -= origin[0];\\n    m[5] -= origin[1];\\n  }\\n\\n  matrix.scale(m, m, scale);\\n\\n  if (rotation) {\\n    matrix.rotate(m, m, rotation);\\n  }\\n\\n  if (origin) {\\n    // Translate back from origin\\n    m[4] += origin[0];\\n    m[5] += origin[1];\\n  }\\n\\n  m[4] += position[0];\\n  m[5] += position[1];\\n  return m;\\n};\\n\\nvar _default = Transformable;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///130\\n\")},function(module,exports,__webpack_require__){eval(\"var Clip = __webpack_require__(197);\\n\\nvar color = __webpack_require__(82);\\n\\nvar _util = __webpack_require__(59);\\n\\nvar isArrayLike = _util.isArrayLike;\\n\\n/**\\n * @module echarts/animation/Animator\\n */\\nvar arraySlice = Array.prototype.slice;\\n\\nfunction defaultGetter(target, key) {\\n  return target[key];\\n}\\n\\nfunction defaultSetter(target, key, value) {\\n  target[key] = value;\\n}\\n/**\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} percent\\n * @return {number}\\n */\\n\\n\\nfunction interpolateNumber(p0, p1, percent) {\\n  return (p1 - p0) * percent + p0;\\n}\\n/**\\n * @param  {string} p0\\n * @param  {string} p1\\n * @param  {number} percent\\n * @return {string}\\n */\\n\\n\\nfunction interpolateString(p0, p1, percent) {\\n  return percent > 0.5 ? p1 : p0;\\n}\\n/**\\n * @param  {Array} p0\\n * @param  {Array} p1\\n * @param  {number} percent\\n * @param  {Array} out\\n * @param  {number} arrDim\\n */\\n\\n\\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\\n  var len = p0.length;\\n\\n  if (arrDim == 1) {\\n    for (var i = 0; i < len; i++) {\\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\\n    }\\n  } else {\\n    var len2 = len && p0[0].length;\\n\\n    for (var i = 0; i < len; i++) {\\n      for (var j = 0; j < len2; j++) {\\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\\n      }\\n    }\\n  }\\n} // arr0 is source array, arr1 is target array.\\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\\n\\n\\nfunction fillArr(arr0, arr1, arrDim) {\\n  var arr0Len = arr0.length;\\n  var arr1Len = arr1.length;\\n\\n  if (arr0Len !== arr1Len) {\\n    // FIXME Not work for TypedArray\\n    var isPreviousLarger = arr0Len > arr1Len;\\n\\n    if (isPreviousLarger) {\\n      // Cut the previous\\n      arr0.length = arr1Len;\\n    } else {\\n      // Fill the previous\\n      for (var i = arr0Len; i < arr1Len; i++) {\\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\\n      }\\n    }\\n  } // Handling NaN value\\n\\n\\n  var len2 = arr0[0] && arr0[0].length;\\n\\n  for (var i = 0; i < arr0.length; i++) {\\n    if (arrDim === 1) {\\n      if (isNaN(arr0[i])) {\\n        arr0[i] = arr1[i];\\n      }\\n    } else {\\n      for (var j = 0; j < len2; j++) {\\n        if (isNaN(arr0[i][j])) {\\n          arr0[i][j] = arr1[i][j];\\n        }\\n      }\\n    }\\n  }\\n}\\n/**\\n * @param  {Array} arr0\\n * @param  {Array} arr1\\n * @param  {number} arrDim\\n * @return {boolean}\\n */\\n\\n\\nfunction isArraySame(arr0, arr1, arrDim) {\\n  if (arr0 === arr1) {\\n    return true;\\n  }\\n\\n  var len = arr0.length;\\n\\n  if (len !== arr1.length) {\\n    return false;\\n  }\\n\\n  if (arrDim === 1) {\\n    for (var i = 0; i < len; i++) {\\n      if (arr0[i] !== arr1[i]) {\\n        return false;\\n      }\\n    }\\n  } else {\\n    var len2 = arr0[0].length;\\n\\n    for (var i = 0; i < len; i++) {\\n      for (var j = 0; j < len2; j++) {\\n        if (arr0[i][j] !== arr1[i][j]) {\\n          return false;\\n        }\\n      }\\n    }\\n  }\\n\\n  return true;\\n}\\n/**\\n * Catmull Rom interpolate array\\n * @param  {Array} p0\\n * @param  {Array} p1\\n * @param  {Array} p2\\n * @param  {Array} p3\\n * @param  {number} t\\n * @param  {number} t2\\n * @param  {number} t3\\n * @param  {Array} out\\n * @param  {number} arrDim\\n */\\n\\n\\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\\n  var len = p0.length;\\n\\n  if (arrDim == 1) {\\n    for (var i = 0; i < len; i++) {\\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\\n    }\\n  } else {\\n    var len2 = p0[0].length;\\n\\n    for (var i = 0; i < len; i++) {\\n      for (var j = 0; j < len2; j++) {\\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\\n      }\\n    }\\n  }\\n}\\n/**\\n * Catmull Rom interpolate number\\n * @param  {number} p0\\n * @param  {number} p1\\n * @param  {number} p2\\n * @param  {number} p3\\n * @param  {number} t\\n * @param  {number} t2\\n * @param  {number} t3\\n * @return {number}\\n */\\n\\n\\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\\n  var v0 = (p2 - p0) * 0.5;\\n  var v1 = (p3 - p1) * 0.5;\\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\\n}\\n\\nfunction cloneValue(value) {\\n  if (isArrayLike(value)) {\\n    var len = value.length;\\n\\n    if (isArrayLike(value[0])) {\\n      var ret = [];\\n\\n      for (var i = 0; i < len; i++) {\\n        ret.push(arraySlice.call(value[i]));\\n      }\\n\\n      return ret;\\n    }\\n\\n    return arraySlice.call(value);\\n  }\\n\\n  return value;\\n}\\n\\nfunction rgba2String(rgba) {\\n  rgba[0] = Math.floor(rgba[0]);\\n  rgba[1] = Math.floor(rgba[1]);\\n  rgba[2] = Math.floor(rgba[2]);\\n  return 'rgba(' + rgba.join(',') + ')';\\n}\\n\\nfunction getArrayDim(keyframes) {\\n  var lastValue = keyframes[keyframes.length - 1].value;\\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\\n}\\n\\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\\n  var getter = animator._getter;\\n  var setter = animator._setter;\\n  var useSpline = easing === 'spline';\\n  var trackLen = keyframes.length;\\n\\n  if (!trackLen) {\\n    return;\\n  } // Guess data type\\n\\n\\n  var firstVal = keyframes[0].value;\\n  var isValueArray = isArrayLike(firstVal);\\n  var isValueColor = false;\\n  var isValueString = false; // For vertices morphing\\n\\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\\n  var trackMaxTime; // Sort keyframe as ascending\\n\\n  keyframes.sort(function (a, b) {\\n    return a.time - b.time;\\n  });\\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\\n\\n  var kfPercents = []; // Value of each keyframe\\n\\n  var kfValues = [];\\n  var prevValue = keyframes[0].value;\\n  var isAllValueEqual = true;\\n\\n  for (var i = 0; i < trackLen; i++) {\\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\\n\\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\\n\\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\\n      isAllValueEqual = false;\\n    }\\n\\n    prevValue = value; // Try converting a string to a color array\\n\\n    if (typeof value == 'string') {\\n      var colorArray = color.parse(value);\\n\\n      if (colorArray) {\\n        value = colorArray;\\n        isValueColor = true;\\n      } else {\\n        isValueString = true;\\n      }\\n    }\\n\\n    kfValues.push(value);\\n  }\\n\\n  if (!forceAnimate && isAllValueEqual) {\\n    return;\\n  }\\n\\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\\n\\n  for (var i = 0; i < trackLen - 1; i++) {\\n    if (isValueArray) {\\n      fillArr(kfValues[i], lastValue, arrDim);\\n    } else {\\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\\n        kfValues[i] = lastValue;\\n      }\\n    }\\n  }\\n\\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\\n  // animation playback is sequency\\n\\n  var lastFrame = 0;\\n  var lastFramePercent = 0;\\n  var start;\\n  var w;\\n  var p0;\\n  var p1;\\n  var p2;\\n  var p3;\\n\\n  if (isValueColor) {\\n    var rgba = [0, 0, 0, 0];\\n  }\\n\\n  var onframe = function (target, percent) {\\n    // Find the range keyframes\\n    // kf1-----kf2---------current--------kf3\\n    // find kf2 and kf3 and do interpolation\\n    var frame; // In the easing function like elasticOut, percent may less than 0\\n\\n    if (percent < 0) {\\n      frame = 0;\\n    } else if (percent < lastFramePercent) {\\n      // Start from next key\\n      // PENDING start from lastFrame ?\\n      start = Math.min(lastFrame + 1, trackLen - 1);\\n\\n      for (frame = start; frame >= 0; frame--) {\\n        if (kfPercents[frame] <= percent) {\\n          break;\\n        }\\n      } // PENDING really need to do this ?\\n\\n\\n      frame = Math.min(frame, trackLen - 2);\\n    } else {\\n      for (frame = lastFrame; frame < trackLen; frame++) {\\n        if (kfPercents[frame] > percent) {\\n          break;\\n        }\\n      }\\n\\n      frame = Math.min(frame - 1, trackLen - 2);\\n    }\\n\\n    lastFrame = frame;\\n    lastFramePercent = percent;\\n    var range = kfPercents[frame + 1] - kfPercents[frame];\\n\\n    if (range === 0) {\\n      return;\\n    } else {\\n      w = (percent - kfPercents[frame]) / range;\\n    }\\n\\n    if (useSpline) {\\n      p1 = kfValues[frame];\\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\\n\\n      if (isValueArray) {\\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\\n      } else {\\n        var value;\\n\\n        if (isValueColor) {\\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\\n          value = rgba2String(rgba);\\n        } else if (isValueString) {\\n          // String is step(0.5)\\n          return interpolateString(p1, p2, w);\\n        } else {\\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\\n        }\\n\\n        setter(target, propName, value);\\n      }\\n    } else {\\n      if (isValueArray) {\\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\\n      } else {\\n        var value;\\n\\n        if (isValueColor) {\\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\\n          value = rgba2String(rgba);\\n        } else if (isValueString) {\\n          // String is step(0.5)\\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\\n        } else {\\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\\n        }\\n\\n        setter(target, propName, value);\\n      }\\n    }\\n  };\\n\\n  var clip = new Clip({\\n    target: animator._target,\\n    life: trackMaxTime,\\n    loop: animator._loop,\\n    delay: animator._delay,\\n    onframe: onframe,\\n    ondestroy: oneTrackDone\\n  });\\n\\n  if (easing && easing !== 'spline') {\\n    clip.easing = easing;\\n  }\\n\\n  return clip;\\n}\\n/**\\n * @alias module:zrender/animation/Animator\\n * @constructor\\n * @param {Object} target\\n * @param {boolean} loop\\n * @param {Function} getter\\n * @param {Function} setter\\n */\\n\\n\\nvar Animator = function (target, loop, getter, setter) {\\n  this._tracks = {};\\n  this._target = target;\\n  this._loop = loop || false;\\n  this._getter = getter || defaultGetter;\\n  this._setter = setter || defaultSetter;\\n  this._clipCount = 0;\\n  this._delay = 0;\\n  this._doneList = [];\\n  this._onframeList = [];\\n  this._clipList = [];\\n};\\n\\nAnimator.prototype = {\\n  /**\\n   * 设置动画关键帧\\n   * @param  {number} time 关键帧时间，单位是ms\\n   * @param  {Object} props 关键帧的属性值，key-value表示\\n   * @return {module:zrender/animation/Animator}\\n   */\\n  when: function (time\\n  /* ms */\\n  , props) {\\n    var tracks = this._tracks;\\n\\n    for (var propName in props) {\\n      if (!props.hasOwnProperty(propName)) {\\n        continue;\\n      }\\n\\n      if (!tracks[propName]) {\\n        tracks[propName] = []; // Invalid value\\n\\n        var value = this._getter(this._target, propName);\\n\\n        if (value == null) {\\n          // zrLog('Invalid property ' + propName);\\n          continue;\\n        } // If time is 0\\n        //  Then props is given initialize value\\n        // Else\\n        //  Initialize value from current prop value\\n\\n\\n        if (time !== 0) {\\n          tracks[propName].push({\\n            time: 0,\\n            value: cloneValue(value)\\n          });\\n        }\\n      }\\n\\n      tracks[propName].push({\\n        time: time,\\n        value: props[propName]\\n      });\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * 添加动画每一帧的回调函数\\n   * @param  {Function} callback\\n   * @return {module:zrender/animation/Animator}\\n   */\\n  during: function (callback) {\\n    this._onframeList.push(callback);\\n\\n    return this;\\n  },\\n  pause: function () {\\n    for (var i = 0; i < this._clipList.length; i++) {\\n      this._clipList[i].pause();\\n    }\\n\\n    this._paused = true;\\n  },\\n  resume: function () {\\n    for (var i = 0; i < this._clipList.length; i++) {\\n      this._clipList[i].resume();\\n    }\\n\\n    this._paused = false;\\n  },\\n  isPaused: function () {\\n    return !!this._paused;\\n  },\\n  _doneCallback: function () {\\n    // Clear all tracks\\n    this._tracks = {}; // Clear all clips\\n\\n    this._clipList.length = 0;\\n    var doneList = this._doneList;\\n    var len = doneList.length;\\n\\n    for (var i = 0; i < len; i++) {\\n      doneList[i].call(this);\\n    }\\n  },\\n\\n  /**\\n   * 开始执行动画\\n   * @param  {string|Function} [easing]\\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\\n   * @param  {boolean} forceAnimate\\n   * @return {module:zrender/animation/Animator}\\n   */\\n  start: function (easing, forceAnimate) {\\n    var self = this;\\n    var clipCount = 0;\\n\\n    var oneTrackDone = function () {\\n      clipCount--;\\n\\n      if (!clipCount) {\\n        self._doneCallback();\\n      }\\n    };\\n\\n    var lastClip;\\n\\n    for (var propName in this._tracks) {\\n      if (!this._tracks.hasOwnProperty(propName)) {\\n        continue;\\n      }\\n\\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\\n\\n      if (clip) {\\n        this._clipList.push(clip);\\n\\n        clipCount++; // If start after added to animation\\n\\n        if (this.animation) {\\n          this.animation.addClip(clip);\\n        }\\n\\n        lastClip = clip;\\n      }\\n    } // Add during callback on the last clip\\n\\n\\n    if (lastClip) {\\n      var oldOnFrame = lastClip.onframe;\\n\\n      lastClip.onframe = function (target, percent) {\\n        oldOnFrame(target, percent);\\n\\n        for (var i = 0; i < self._onframeList.length; i++) {\\n          self._onframeList[i](target, percent);\\n        }\\n      };\\n    } // This optimization will help the case that in the upper application\\n    // the view may be refreshed frequently, where animation will be\\n    // called repeatly but nothing changed.\\n\\n\\n    if (!clipCount) {\\n      this._doneCallback();\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * 停止动画\\n   * @param {boolean} forwardToLast If move to last frame before stop\\n   */\\n  stop: function (forwardToLast) {\\n    var clipList = this._clipList;\\n    var animation = this.animation;\\n\\n    for (var i = 0; i < clipList.length; i++) {\\n      var clip = clipList[i];\\n\\n      if (forwardToLast) {\\n        // Move to last frame before stop\\n        clip.onframe(this._target, 1);\\n      }\\n\\n      animation && animation.removeClip(clip);\\n    }\\n\\n    clipList.length = 0;\\n  },\\n\\n  /**\\n   * 设置动画延迟开始的时间\\n   * @param  {number} time 单位ms\\n   * @return {module:zrender/animation/Animator}\\n   */\\n  delay: function (time) {\\n    this._delay = time;\\n    return this;\\n  },\\n\\n  /**\\n   * 添加动画结束的回调\\n   * @param  {Function} cb\\n   * @return {module:zrender/animation/Animator}\\n   */\\n  done: function (cb) {\\n    if (cb) {\\n      this._doneList.push(cb);\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * @return {Array.<module:zrender/animation/Clip>}\\n   */\\n  getClips: function () {\\n    return this._clipList;\\n  }\\n};\\nvar _default = Animator;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///131\\n\")},function(module,exports){eval(\"// Simple LRU cache use doubly linked list\\n// @module zrender/core/LRU\\n\\n/**\\n * Simple double linked list. Compared with array, it has O(1) remove operation.\\n * @constructor\\n */\\nvar LinkedList = function () {\\n  /**\\n   * @type {module:zrender/core/LRU~Entry}\\n   */\\n  this.head = null;\\n  /**\\n   * @type {module:zrender/core/LRU~Entry}\\n   */\\n\\n  this.tail = null;\\n  this._len = 0;\\n};\\n\\nvar linkedListProto = LinkedList.prototype;\\n/**\\n * Insert a new value at the tail\\n * @param  {} val\\n * @return {module:zrender/core/LRU~Entry}\\n */\\n\\nlinkedListProto.insert = function (val) {\\n  var entry = new Entry(val);\\n  this.insertEntry(entry);\\n  return entry;\\n};\\n/**\\n * Insert an entry at the tail\\n * @param  {module:zrender/core/LRU~Entry} entry\\n */\\n\\n\\nlinkedListProto.insertEntry = function (entry) {\\n  if (!this.head) {\\n    this.head = this.tail = entry;\\n  } else {\\n    this.tail.next = entry;\\n    entry.prev = this.tail;\\n    entry.next = null;\\n    this.tail = entry;\\n  }\\n\\n  this._len++;\\n};\\n/**\\n * Remove entry.\\n * @param  {module:zrender/core/LRU~Entry} entry\\n */\\n\\n\\nlinkedListProto.remove = function (entry) {\\n  var prev = entry.prev;\\n  var next = entry.next;\\n\\n  if (prev) {\\n    prev.next = next;\\n  } else {\\n    // Is head\\n    this.head = next;\\n  }\\n\\n  if (next) {\\n    next.prev = prev;\\n  } else {\\n    // Is tail\\n    this.tail = prev;\\n  }\\n\\n  entry.next = entry.prev = null;\\n  this._len--;\\n};\\n/**\\n * @return {number}\\n */\\n\\n\\nlinkedListProto.len = function () {\\n  return this._len;\\n};\\n/**\\n * Clear list\\n */\\n\\n\\nlinkedListProto.clear = function () {\\n  this.head = this.tail = null;\\n  this._len = 0;\\n};\\n/**\\n * @constructor\\n * @param {} val\\n */\\n\\n\\nvar Entry = function (val) {\\n  /**\\n   * @type {}\\n   */\\n  this.value = val;\\n  /**\\n   * @type {module:zrender/core/LRU~Entry}\\n   */\\n\\n  this.next;\\n  /**\\n   * @type {module:zrender/core/LRU~Entry}\\n   */\\n\\n  this.prev;\\n};\\n/**\\n * LRU Cache\\n * @constructor\\n * @alias module:zrender/core/LRU\\n */\\n\\n\\nvar LRU = function (maxSize) {\\n  this._list = new LinkedList();\\n  this._map = {};\\n  this._maxSize = maxSize || 10;\\n  this._lastRemovedEntry = null;\\n};\\n\\nvar LRUProto = LRU.prototype;\\n/**\\n * @param  {string} key\\n * @param  {} value\\n * @return {} Removed value\\n */\\n\\nLRUProto.put = function (key, value) {\\n  var list = this._list;\\n  var map = this._map;\\n  var removed = null;\\n\\n  if (map[key] == null) {\\n    var len = list.len(); // Reuse last removed entry\\n\\n    var entry = this._lastRemovedEntry;\\n\\n    if (len >= this._maxSize && len > 0) {\\n      // Remove the least recently used\\n      var leastUsedEntry = list.head;\\n      list.remove(leastUsedEntry);\\n      delete map[leastUsedEntry.key];\\n      removed = leastUsedEntry.value;\\n      this._lastRemovedEntry = leastUsedEntry;\\n    }\\n\\n    if (entry) {\\n      entry.value = value;\\n    } else {\\n      entry = new Entry(value);\\n    }\\n\\n    entry.key = key;\\n    list.insertEntry(entry);\\n    map[key] = entry;\\n  }\\n\\n  return removed;\\n};\\n/**\\n * @param  {string} key\\n * @return {}\\n */\\n\\n\\nLRUProto.get = function (key) {\\n  var entry = this._map[key];\\n  var list = this._list;\\n\\n  if (entry != null) {\\n    // Put the latest used entry in the tail\\n    if (entry !== list.tail) {\\n      list.remove(entry);\\n      list.insertEntry(entry);\\n    }\\n\\n    return entry.value;\\n  }\\n};\\n/**\\n * Clear the cache\\n */\\n\\n\\nLRUProto.clear = function () {\\n  this._list.clear();\\n\\n  this._map = {};\\n};\\n\\nvar _default = LRU;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29yZS9MUlUuanM/ZDUxYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDhCQUE4QjtBQUMxQzs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDhCQUE4QjtBQUMxQzs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CLGFBQWE7QUFDYixhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUI7O0FBRXpCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiMTMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU2ltcGxlIExSVSBjYWNoZSB1c2UgZG91Ymx5IGxpbmtlZCBsaXN0XG4vLyBAbW9kdWxlIHpyZW5kZXIvY29yZS9MUlVcblxuLyoqXG4gKiBTaW1wbGUgZG91YmxlIGxpbmtlZCBsaXN0LiBDb21wYXJlZCB3aXRoIGFycmF5LCBpdCBoYXMgTygxKSByZW1vdmUgb3BlcmF0aW9uLlxuICogQGNvbnN0cnVjdG9yXG4gKi9cbnZhciBMaW5rZWRMaXN0ID0gZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICogQHR5cGUge21vZHVsZTp6cmVuZGVyL2NvcmUvTFJVfkVudHJ5fVxuICAgKi9cbiAgdGhpcy5oZWFkID0gbnVsbDtcbiAgLyoqXG4gICAqIEB0eXBlIHttb2R1bGU6enJlbmRlci9jb3JlL0xSVX5FbnRyeX1cbiAgICovXG5cbiAgdGhpcy50YWlsID0gbnVsbDtcbiAgdGhpcy5fbGVuID0gMDtcbn07XG5cbnZhciBsaW5rZWRMaXN0UHJvdG8gPSBMaW5rZWRMaXN0LnByb3RvdHlwZTtcbi8qKlxuICogSW5zZXJ0IGEgbmV3IHZhbHVlIGF0IHRoZSB0YWlsXG4gKiBAcGFyYW0gIHt9IHZhbFxuICogQHJldHVybiB7bW9kdWxlOnpyZW5kZXIvY29yZS9MUlV+RW50cnl9XG4gKi9cblxubGlua2VkTGlzdFByb3RvLmluc2VydCA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgdmFyIGVudHJ5ID0gbmV3IEVudHJ5KHZhbCk7XG4gIHRoaXMuaW5zZXJ0RW50cnkoZW50cnkpO1xuICByZXR1cm4gZW50cnk7XG59O1xuLyoqXG4gKiBJbnNlcnQgYW4gZW50cnkgYXQgdGhlIHRhaWxcbiAqIEBwYXJhbSAge21vZHVsZTp6cmVuZGVyL2NvcmUvTFJVfkVudHJ5fSBlbnRyeVxuICovXG5cblxubGlua2VkTGlzdFByb3RvLmluc2VydEVudHJ5ID0gZnVuY3Rpb24gKGVudHJ5KSB7XG4gIGlmICghdGhpcy5oZWFkKSB7XG4gICAgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gZW50cnk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy50YWlsLm5leHQgPSBlbnRyeTtcbiAgICBlbnRyeS5wcmV2ID0gdGhpcy50YWlsO1xuICAgIGVudHJ5Lm5leHQgPSBudWxsO1xuICAgIHRoaXMudGFpbCA9IGVudHJ5O1xuICB9XG5cbiAgdGhpcy5fbGVuKys7XG59O1xuLyoqXG4gKiBSZW1vdmUgZW50cnkuXG4gKiBAcGFyYW0gIHttb2R1bGU6enJlbmRlci9jb3JlL0xSVX5FbnRyeX0gZW50cnlcbiAqL1xuXG5cbmxpbmtlZExpc3RQcm90by5yZW1vdmUgPSBmdW5jdGlvbiAoZW50cnkpIHtcbiAgdmFyIHByZXYgPSBlbnRyeS5wcmV2O1xuICB2YXIgbmV4dCA9IGVudHJ5Lm5leHQ7XG5cbiAgaWYgKHByZXYpIHtcbiAgICBwcmV2Lm5leHQgPSBuZXh0O1xuICB9IGVsc2Uge1xuICAgIC8vIElzIGhlYWRcbiAgICB0aGlzLmhlYWQgPSBuZXh0O1xuICB9XG5cbiAgaWYgKG5leHQpIHtcbiAgICBuZXh0LnByZXYgPSBwcmV2O1xuICB9IGVsc2Uge1xuICAgIC8vIElzIHRhaWxcbiAgICB0aGlzLnRhaWwgPSBwcmV2O1xuICB9XG5cbiAgZW50cnkubmV4dCA9IGVudHJ5LnByZXYgPSBudWxsO1xuICB0aGlzLl9sZW4tLTtcbn07XG4vKipcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuXG5cbmxpbmtlZExpc3RQcm90by5sZW4gPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl9sZW47XG59O1xuLyoqXG4gKiBDbGVhciBsaXN0XG4gKi9cblxuXG5saW5rZWRMaXN0UHJvdG8uY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuaGVhZCA9IHRoaXMudGFpbCA9IG51bGw7XG4gIHRoaXMuX2xlbiA9IDA7XG59O1xuLyoqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7fSB2YWxcbiAqL1xuXG5cbnZhciBFbnRyeSA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgLyoqXG4gICAqIEB0eXBlIHt9XG4gICAqL1xuICB0aGlzLnZhbHVlID0gdmFsO1xuICAvKipcbiAgICogQHR5cGUge21vZHVsZTp6cmVuZGVyL2NvcmUvTFJVfkVudHJ5fVxuICAgKi9cblxuICB0aGlzLm5leHQ7XG4gIC8qKlxuICAgKiBAdHlwZSB7bW9kdWxlOnpyZW5kZXIvY29yZS9MUlV+RW50cnl9XG4gICAqL1xuXG4gIHRoaXMucHJldjtcbn07XG4vKipcbiAqIExSVSBDYWNoZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAYWxpYXMgbW9kdWxlOnpyZW5kZXIvY29yZS9MUlVcbiAqL1xuXG5cbnZhciBMUlUgPSBmdW5jdGlvbiAobWF4U2l6ZSkge1xuICB0aGlzLl9saXN0ID0gbmV3IExpbmtlZExpc3QoKTtcbiAgdGhpcy5fbWFwID0ge307XG4gIHRoaXMuX21heFNpemUgPSBtYXhTaXplIHx8IDEwO1xuICB0aGlzLl9sYXN0UmVtb3ZlZEVudHJ5ID0gbnVsbDtcbn07XG5cbnZhciBMUlVQcm90byA9IExSVS5wcm90b3R5cGU7XG4vKipcbiAqIEBwYXJhbSAge3N0cmluZ30ga2V5XG4gKiBAcGFyYW0gIHt9IHZhbHVlXG4gKiBAcmV0dXJuIHt9IFJlbW92ZWQgdmFsdWVcbiAqL1xuXG5MUlVQcm90by5wdXQgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICB2YXIgbGlzdCA9IHRoaXMuX2xpc3Q7XG4gIHZhciBtYXAgPSB0aGlzLl9tYXA7XG4gIHZhciByZW1vdmVkID0gbnVsbDtcblxuICBpZiAobWFwW2tleV0gPT0gbnVsbCkge1xuICAgIHZhciBsZW4gPSBsaXN0LmxlbigpOyAvLyBSZXVzZSBsYXN0IHJlbW92ZWQgZW50cnlcblxuICAgIHZhciBlbnRyeSA9IHRoaXMuX2xhc3RSZW1vdmVkRW50cnk7XG5cbiAgICBpZiAobGVuID49IHRoaXMuX21heFNpemUgJiYgbGVuID4gMCkge1xuICAgICAgLy8gUmVtb3ZlIHRoZSBsZWFzdCByZWNlbnRseSB1c2VkXG4gICAgICB2YXIgbGVhc3RVc2VkRW50cnkgPSBsaXN0LmhlYWQ7XG4gICAgICBsaXN0LnJlbW92ZShsZWFzdFVzZWRFbnRyeSk7XG4gICAgICBkZWxldGUgbWFwW2xlYXN0VXNlZEVudHJ5LmtleV07XG4gICAgICByZW1vdmVkID0gbGVhc3RVc2VkRW50cnkudmFsdWU7XG4gICAgICB0aGlzLl9sYXN0UmVtb3ZlZEVudHJ5ID0gbGVhc3RVc2VkRW50cnk7XG4gICAgfVxuXG4gICAgaWYgKGVudHJ5KSB7XG4gICAgICBlbnRyeS52YWx1ZSA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbnRyeSA9IG5ldyBFbnRyeSh2YWx1ZSk7XG4gICAgfVxuXG4gICAgZW50cnkua2V5ID0ga2V5O1xuICAgIGxpc3QuaW5zZXJ0RW50cnkoZW50cnkpO1xuICAgIG1hcFtrZXldID0gZW50cnk7XG4gIH1cblxuICByZXR1cm4gcmVtb3ZlZDtcbn07XG4vKipcbiAqIEBwYXJhbSAge3N0cmluZ30ga2V5XG4gKiBAcmV0dXJuIHt9XG4gKi9cblxuXG5MUlVQcm90by5nZXQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHZhciBlbnRyeSA9IHRoaXMuX21hcFtrZXldO1xuICB2YXIgbGlzdCA9IHRoaXMuX2xpc3Q7XG5cbiAgaWYgKGVudHJ5ICE9IG51bGwpIHtcbiAgICAvLyBQdXQgdGhlIGxhdGVzdCB1c2VkIGVudHJ5IGluIHRoZSB0YWlsXG4gICAgaWYgKGVudHJ5ICE9PSBsaXN0LnRhaWwpIHtcbiAgICAgIGxpc3QucmVtb3ZlKGVudHJ5KTtcbiAgICAgIGxpc3QuaW5zZXJ0RW50cnkoZW50cnkpO1xuICAgIH1cblxuICAgIHJldHVybiBlbnRyeS52YWx1ZTtcbiAgfVxufTtcbi8qKlxuICogQ2xlYXIgdGhlIGNhY2hlXG4gKi9cblxuXG5MUlVQcm90by5jbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fbGlzdC5jbGVhcigpO1xuXG4gIHRoaXMuX21hcCA9IHt9O1xufTtcblxudmFyIF9kZWZhdWx0ID0gTFJVO1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///132\\n\")},function(module,exports,__webpack_require__){eval(\"var _config = __webpack_require__(87);\\n\\nvar debugMode = _config.debugMode;\\n\\nvar log = function () {};\\n\\nif (debugMode === 1) {\\n  log = function () {\\n    for (var k in arguments) {\\n      throw new Error(arguments[k]);\\n    }\\n  };\\n} else if (debugMode > 1) {\\n  log = function () {\\n    for (var k in arguments) {\\n      console.log(arguments[k]);\\n    }\\n  };\\n}\\n\\nvar _default = log;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29yZS9sb2cuanM/NDk0MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMsRUFBVzs7QUFFakM7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjEzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfY29uZmlnID0gcmVxdWlyZShcIi4uL2NvbmZpZ1wiKTtcblxudmFyIGRlYnVnTW9kZSA9IF9jb25maWcuZGVidWdNb2RlO1xuXG52YXIgbG9nID0gZnVuY3Rpb24gKCkge307XG5cbmlmIChkZWJ1Z01vZGUgPT09IDEpIHtcbiAgbG9nID0gZnVuY3Rpb24gKCkge1xuICAgIGZvciAodmFyIGsgaW4gYXJndW1lbnRzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYXJndW1lbnRzW2tdKTtcbiAgICB9XG4gIH07XG59IGVsc2UgaWYgKGRlYnVnTW9kZSA+IDEpIHtcbiAgbG9nID0gZnVuY3Rpb24gKCkge1xuICAgIGZvciAodmFyIGsgaW4gYXJndW1lbnRzKSB7XG4gICAgICBjb25zb2xlLmxvZyhhcmd1bWVudHNba10pO1xuICAgIH1cbiAgfTtcbn1cblxudmFyIF9kZWZhdWx0ID0gbG9nO1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///133\\n\")},function(module,exports){eval(\"var SHADOW_PROPS = {\\n  'shadowBlur': 1,\\n  'shadowOffsetX': 1,\\n  'shadowOffsetY': 1,\\n  'textShadowBlur': 1,\\n  'textShadowOffsetX': 1,\\n  'textShadowOffsetY': 1,\\n  'textBoxShadowBlur': 1,\\n  'textBoxShadowOffsetX': 1,\\n  'textBoxShadowOffsetY': 1\\n};\\n\\nfunction _default(ctx, propName, value) {\\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\\n    return value *= ctx.dpr;\\n  }\\n\\n  return value;\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9oZWxwZXIvZml4U2hhZG93LmpzPzdkNmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6IjEzNC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBTSEFET1dfUFJPUFMgPSB7XG4gICdzaGFkb3dCbHVyJzogMSxcbiAgJ3NoYWRvd09mZnNldFgnOiAxLFxuICAnc2hhZG93T2Zmc2V0WSc6IDEsXG4gICd0ZXh0U2hhZG93Qmx1cic6IDEsXG4gICd0ZXh0U2hhZG93T2Zmc2V0WCc6IDEsXG4gICd0ZXh0U2hhZG93T2Zmc2V0WSc6IDEsXG4gICd0ZXh0Qm94U2hhZG93Qmx1cic6IDEsXG4gICd0ZXh0Qm94U2hhZG93T2Zmc2V0WCc6IDEsXG4gICd0ZXh0Qm94U2hhZG93T2Zmc2V0WSc6IDFcbn07XG5cbmZ1bmN0aW9uIF9kZWZhdWx0KGN0eCwgcHJvcE5hbWUsIHZhbHVlKSB7XG4gIGlmIChTSEFET1dfUFJPUFMuaGFzT3duUHJvcGVydHkocHJvcE5hbWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlICo9IGN0eC5kcHI7XG4gIH1cblxuICByZXR1cm4gdmFsdWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///134\\n\")},function(module,exports){eval(\"var Pattern = function (image, repeat) {\\n  // Should do nothing more in this constructor. Because gradient can be\\n  // declard by `color: {image: ...}`, where this constructor will not be called.\\n  this.image = image;\\n  this.repeat = repeat; // Can be cloned\\n\\n  this.type = 'pattern';\\n};\\n\\nPattern.prototype.getCanvasPattern = function (ctx) {\\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\\n};\\n\\nvar _default = Pattern;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9QYXR0ZXJuLmpzP2RjMmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLHlCQUF5QixXQUFXO0FBQ3BDO0FBQ0EsdUJBQXVCOztBQUV2QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjEzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQYXR0ZXJuID0gZnVuY3Rpb24gKGltYWdlLCByZXBlYXQpIHtcbiAgLy8gU2hvdWxkIGRvIG5vdGhpbmcgbW9yZSBpbiB0aGlzIGNvbnN0cnVjdG9yLiBCZWNhdXNlIGdyYWRpZW50IGNhbiBiZVxuICAvLyBkZWNsYXJkIGJ5IGBjb2xvcjoge2ltYWdlOiAuLi59YCwgd2hlcmUgdGhpcyBjb25zdHJ1Y3RvciB3aWxsIG5vdCBiZSBjYWxsZWQuXG4gIHRoaXMuaW1hZ2UgPSBpbWFnZTtcbiAgdGhpcy5yZXBlYXQgPSByZXBlYXQ7IC8vIENhbiBiZSBjbG9uZWRcblxuICB0aGlzLnR5cGUgPSAncGF0dGVybic7XG59O1xuXG5QYXR0ZXJuLnByb3RvdHlwZS5nZXRDYW52YXNQYXR0ZXJuID0gZnVuY3Rpb24gKGN0eCkge1xuICByZXR1cm4gY3R4LmNyZWF0ZVBhdHRlcm4odGhpcy5pbWFnZSwgdGhpcy5yZXBlYXQgfHwgJ3JlcGVhdCcpO1xufTtcblxudmFyIF9kZWZhdWx0ID0gUGF0dGVybjtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///135\\n\")},function(module,exports){eval(\"var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\\n  setTimeout(func, 16);\\n};\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvYW5pbWF0aW9uL3JlcXVlc3RBbmltYXRpb25GcmFtZS5qcz85OGI3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjEzNi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfZGVmYXVsdCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICh3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpIHx8IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9lY29tZmUvenJlbmRlci9pc3N1ZXMvMTg5I2lzc3VlY29tbWVudC0yMjQ5MTk4MDlcbndpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZSAmJiB3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpIHx8IHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSkgfHwgZnVuY3Rpb24gKGZ1bmMpIHtcbiAgc2V0VGltZW91dChmdW5jLCAxNik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///136\\n\")},function(module,exports,__webpack_require__){eval(\"var _util = __webpack_require__(59);\\n\\nvar retrieve2 = _util.retrieve2;\\nvar retrieve3 = _util.retrieve3;\\nvar each = _util.each;\\nvar normalizeCssArray = _util.normalizeCssArray;\\nvar isString = _util.isString;\\nvar isObject = _util.isObject;\\nvar isFunction = _util.isFunction;\\n\\nvar textContain = __webpack_require__(76);\\n\\nvar roundRectHelper = __webpack_require__(138);\\n\\nvar imageHelper = __webpack_require__(103);\\n\\nvar fixShadow = __webpack_require__(134);\\n\\n// TODO: Have not support 'start', 'end' yet.\\nvar VALID_TEXT_ALIGN = {\\n  left: 1,\\n  right: 1,\\n  center: 1\\n};\\nvar VALID_TEXT_VERTICAL_ALIGN = {\\n  top: 1,\\n  bottom: 1,\\n  middle: 1\\n}; // Different from `STYLE_COMMON_PROPS` of `graphic/Style`,\\n// the default value of shadowColor is `'transparent'`.\\n\\nvar SHADOW_STYLE_COMMON_PROPS = [['textShadowBlur', 'shadowBlur', 0], ['textShadowOffsetX', 'shadowOffsetX', 0], ['textShadowOffsetY', 'shadowOffsetY', 0], ['textShadowColor', 'shadowColor', 'transparent']];\\n/**\\n * @param {module:zrender/graphic/Style} style\\n * @return {module:zrender/graphic/Style} The input style.\\n */\\n\\nfunction normalizeTextStyle(style) {\\n  normalizeStyle(style);\\n  each(style.rich, normalizeStyle);\\n  return style;\\n}\\n\\nfunction normalizeStyle(style) {\\n  if (style) {\\n    style.font = textContain.makeFont(style);\\n    var textAlign = style.textAlign;\\n    textAlign === 'middle' && (textAlign = 'center');\\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\\n\\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\\n    var textPadding = style.textPadding;\\n\\n    if (textPadding) {\\n      style.textPadding = normalizeCssArray(style.textPadding);\\n    }\\n  }\\n}\\n/**\\n * @param {CanvasRenderingContext2D} ctx\\n * @param {string} text\\n * @param {module:zrender/graphic/Style} style\\n * @param {Object|boolean} [rect] {x, y, width, height}\\n *                  If set false, rect text is not used.\\n * @param {Element} [prevEl] For ctx prop cache.\\n */\\n\\n\\nfunction renderText(hostEl, ctx, text, style, rect, prevEl) {\\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect, prevEl);\\n} // Avoid setting to ctx according to prevEl if possible for\\n// performance in scenarios of large amount text.\\n\\n\\nfunction renderPlainText(hostEl, ctx, text, style, rect, prevEl) {\\n  'use strict';\\n\\n  var prevStyle = prevEl && prevEl.style; // Some cache only available on textEl.\\n\\n  var isPrevTextEl = prevStyle && prevEl.type === 'text';\\n  var styleFont = style.font || textContain.DEFAULT_FONT;\\n\\n  if (!isPrevTextEl || styleFont !== (prevStyle.font || textContain.DEFAULT_FONT)) {\\n    ctx.font = styleFont;\\n  } // Use the final font from context-2d, because the final\\n  // font might not be the style.font when it is illegal.\\n  // But get `ctx.font` might be time consuming.\\n\\n\\n  var computedFont = hostEl.__computedFont;\\n\\n  if (hostEl.__styleFont !== styleFont) {\\n    hostEl.__styleFont = styleFont;\\n    computedFont = hostEl.__computedFont = ctx.font;\\n  }\\n\\n  var textPadding = style.textPadding;\\n  var contentBlock = hostEl.__textCotentBlock;\\n\\n  if (!contentBlock || hostEl.__dirtyText) {\\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, computedFont, textPadding, style.truncate);\\n  }\\n\\n  var outerHeight = contentBlock.outerHeight;\\n  var textLines = contentBlock.lines;\\n  var lineHeight = contentBlock.lineHeight;\\n  var boxPos = getBoxPosition(outerHeight, style, rect);\\n  var baseX = boxPos.baseX;\\n  var baseY = boxPos.baseY;\\n  var textAlign = boxPos.textAlign || 'left';\\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\\n\\n  applyTextRotation(ctx, style, rect, baseX, baseY);\\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\\n  var textX = baseX;\\n  var textY = boxY;\\n  var needDrawBg = needDrawBackground(style);\\n\\n  if (needDrawBg || textPadding) {\\n    // Consider performance, do not call getTextWidth util necessary.\\n    var textWidth = textContain.getWidth(text, computedFont);\\n    var outerWidth = textWidth;\\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\\n\\n    if (textPadding) {\\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\\n      textY += textPadding[0];\\n    }\\n  } // Always set textAlign and textBase line, because it is difficute to calculate\\n  // textAlign from prevEl, and we dont sure whether textAlign will be reset if\\n  // font set happened.\\n\\n\\n  ctx.textAlign = textAlign; // Force baseline to be \\\"middle\\\". Otherwise, if using \\\"top\\\", the\\n  // text will offset downward a little bit in font \\\"Microsoft YaHei\\\".\\n\\n  ctx.textBaseline = 'middle'; // Always set shadowBlur and shadowOffset to avoid leak from displayable.\\n\\n  for (var i = 0; i < SHADOW_STYLE_COMMON_PROPS.length; i++) {\\n    var propItem = SHADOW_STYLE_COMMON_PROPS[i];\\n    var styleProp = propItem[0];\\n    var ctxProp = propItem[1];\\n    var val = style[styleProp];\\n\\n    if (!isPrevTextEl || val !== prevStyle[styleProp]) {\\n      ctx[ctxProp] = fixShadow(ctx, ctxProp, val || propItem[2]);\\n    }\\n  } // `textBaseline` is set as 'middle'.\\n\\n\\n  textY += lineHeight / 2;\\n  var textStrokeWidth = style.textStrokeWidth;\\n  var textStrokeWidthPrev = isPrevTextEl ? prevStyle.textStrokeWidth : null;\\n  var strokeWidthChanged = !isPrevTextEl || textStrokeWidth !== textStrokeWidthPrev;\\n  var strokeChanged = !isPrevTextEl || strokeWidthChanged || style.textStroke !== prevStyle.textStroke;\\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\\n  var textFill = getFill(style.textFill);\\n\\n  if (textStroke) {\\n    if (strokeWidthChanged) {\\n      ctx.lineWidth = textStrokeWidth;\\n    }\\n\\n    if (strokeChanged) {\\n      ctx.strokeStyle = textStroke;\\n    }\\n  }\\n\\n  if (textFill) {\\n    if (!isPrevTextEl || style.textFill !== prevStyle.textFill || prevStyle.textBackgroundColor) {\\n      ctx.fillStyle = textFill;\\n    }\\n  } // Optimize simply, in most cases only one line exists.\\n\\n\\n  if (textLines.length === 1) {\\n    // Fill after stroke so the outline will not cover the main part.\\n    textStroke && ctx.strokeText(textLines[0], textX, textY);\\n    textFill && ctx.fillText(textLines[0], textX, textY);\\n  } else {\\n    for (var i = 0; i < textLines.length; i++) {\\n      // Fill after stroke so the outline will not cover the main part.\\n      textStroke && ctx.strokeText(textLines[i], textX, textY);\\n      textFill && ctx.fillText(textLines[i], textX, textY);\\n      textY += lineHeight;\\n    }\\n  }\\n}\\n\\nfunction renderRichText(hostEl, ctx, text, style, rect) {\\n  var contentBlock = hostEl.__textCotentBlock;\\n\\n  if (!contentBlock || hostEl.__dirtyText) {\\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\\n  }\\n\\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\\n}\\n\\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\\n  var contentWidth = contentBlock.width;\\n  var outerWidth = contentBlock.outerWidth;\\n  var outerHeight = contentBlock.outerHeight;\\n  var textPadding = style.textPadding;\\n  var boxPos = getBoxPosition(outerHeight, style, rect);\\n  var baseX = boxPos.baseX;\\n  var baseY = boxPos.baseY;\\n  var textAlign = boxPos.textAlign;\\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\\n\\n  applyTextRotation(ctx, style, rect, baseX, baseY);\\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\\n  var xLeft = boxX;\\n  var lineTop = boxY;\\n\\n  if (textPadding) {\\n    xLeft += textPadding[3];\\n    lineTop += textPadding[0];\\n  }\\n\\n  var xRight = xLeft + contentWidth;\\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\\n\\n  for (var i = 0; i < contentBlock.lines.length; i++) {\\n    var line = contentBlock.lines[i];\\n    var tokens = line.tokens;\\n    var tokenCount = tokens.length;\\n    var lineHeight = line.lineHeight;\\n    var usedWidth = line.width;\\n    var leftIndex = 0;\\n    var lineXLeft = xLeft;\\n    var lineXRight = xRight;\\n    var rightIndex = tokenCount - 1;\\n    var token;\\n\\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\\n      usedWidth -= token.width;\\n      lineXLeft += token.width;\\n      leftIndex++;\\n    }\\n\\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\\n      usedWidth -= token.width;\\n      lineXRight -= token.width;\\n      rightIndex--;\\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\\n\\n\\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\\n\\n    while (leftIndex <= rightIndex) {\\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\\n\\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\\n      lineXLeft += token.width;\\n      leftIndex++;\\n    }\\n\\n    lineTop += lineHeight;\\n  }\\n}\\n\\nfunction applyTextRotation(ctx, style, rect, x, y) {\\n  // textRotation only apply in RectText.\\n  if (rect && style.textRotation) {\\n    var origin = style.textOrigin;\\n\\n    if (origin === 'center') {\\n      x = rect.width / 2 + rect.x;\\n      y = rect.height / 2 + rect.y;\\n    } else if (origin) {\\n      x = origin[0] + rect.x;\\n      y = origin[1] + rect.y;\\n    }\\n\\n    ctx.translate(x, y); // Positive: anticlockwise\\n\\n    ctx.rotate(-style.textRotation);\\n    ctx.translate(-x, -y);\\n  }\\n}\\n\\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\\n  var tokenStyle = style.rich[token.styleName] || {};\\n  tokenStyle.text = token.text; // 'ctx.textBaseline' is always set as 'middle', for sake of\\n  // the bias of \\\"Microsoft YaHei\\\".\\n\\n  var textVerticalAlign = token.textVerticalAlign;\\n  var y = lineTop + lineHeight / 2;\\n\\n  if (textVerticalAlign === 'top') {\\n    y = lineTop + token.height / 2;\\n  } else if (textVerticalAlign === 'bottom') {\\n    y = lineTop + lineHeight - token.height / 2;\\n  }\\n\\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\\n  var textPadding = token.textPadding;\\n\\n  if (textPadding) {\\n    x = getTextXForPadding(x, textAlign, textPadding);\\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\\n  }\\n\\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \\\"middle\\\". Otherwise, if using \\\"top\\\", the\\n  // text will offset downward a little bit in font \\\"Microsoft YaHei\\\".\\n\\n  setCtx(ctx, 'textBaseline', 'middle');\\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\\n\\n  if (textStroke) {\\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\\n    setCtx(ctx, 'strokeStyle', textStroke);\\n    ctx.strokeText(token.text, x, y);\\n  }\\n\\n  if (textFill) {\\n    setCtx(ctx, 'fillStyle', textFill);\\n    ctx.fillText(token.text, x, y);\\n  }\\n}\\n\\nfunction needDrawBackground(style) {\\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius, text}\\n// shape: {x, y, width, height}\\n\\n\\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\\n  var textBackgroundColor = style.textBackgroundColor;\\n  var textBorderWidth = style.textBorderWidth;\\n  var textBorderColor = style.textBorderColor;\\n  var isPlainBg = isString(textBackgroundColor);\\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\\n\\n  if (isPlainBg || textBorderWidth && textBorderColor) {\\n    ctx.beginPath();\\n    var textBorderRadius = style.textBorderRadius;\\n\\n    if (!textBorderRadius) {\\n      ctx.rect(x, y, width, height);\\n    } else {\\n      roundRectHelper.buildPath(ctx, {\\n        x: x,\\n        y: y,\\n        width: width,\\n        height: height,\\n        r: textBorderRadius\\n      });\\n    }\\n\\n    ctx.closePath();\\n  }\\n\\n  if (isPlainBg) {\\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\\n\\n    if (style.fillOpacity != null) {\\n      var originalGlobalAlpha = ctx.globalAlpha;\\n      ctx.globalAlpha = style.fillOpacity * style.opacity;\\n      ctx.fill();\\n      ctx.globalAlpha = originalGlobalAlpha;\\n    } else {\\n      ctx.fill();\\n    }\\n  } else if (isFunction(textBackgroundColor)) {\\n    setCtx(ctx, 'fillStyle', textBackgroundColor(style));\\n    ctx.fill();\\n  } else if (isObject(textBackgroundColor)) {\\n    var image = textBackgroundColor.image;\\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\\n\\n    if (image && imageHelper.isImageReady(image)) {\\n      ctx.drawImage(image, x, y, width, height);\\n    }\\n  }\\n\\n  if (textBorderWidth && textBorderColor) {\\n    setCtx(ctx, 'lineWidth', textBorderWidth);\\n    setCtx(ctx, 'strokeStyle', textBorderColor);\\n\\n    if (style.strokeOpacity != null) {\\n      var originalGlobalAlpha = ctx.globalAlpha;\\n      ctx.globalAlpha = style.strokeOpacity * style.opacity;\\n      ctx.stroke();\\n      ctx.globalAlpha = originalGlobalAlpha;\\n    } else {\\n      ctx.stroke();\\n    }\\n  }\\n}\\n\\nfunction onBgImageLoaded(image, textBackgroundColor) {\\n  // Replace image, so that `contain/text.js#parseRichText`\\n  // will get correct result in next tick.\\n  textBackgroundColor.image = image;\\n}\\n\\nfunction getBoxPosition(blockHeiht, style, rect) {\\n  var baseX = style.x || 0;\\n  var baseY = style.y || 0;\\n  var textAlign = style.textAlign;\\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\\n\\n  if (rect) {\\n    var textPosition = style.textPosition;\\n\\n    if (textPosition instanceof Array) {\\n      // Percent\\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\\n    } else {\\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\\n      baseX = res.x;\\n      baseY = res.y; // Default align and baseline when has textPosition\\n\\n      textAlign = textAlign || res.textAlign;\\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\\n    } // textOffset is only support in RectText, otherwise\\n    // we have to adjust boundingRect for textOffset.\\n\\n\\n    var textOffset = style.textOffset;\\n\\n    if (textOffset) {\\n      baseX += textOffset[0];\\n      baseY += textOffset[1];\\n    }\\n  }\\n\\n  return {\\n    baseX: baseX,\\n    baseY: baseY,\\n    textAlign: textAlign,\\n    textVerticalAlign: textVerticalAlign\\n  };\\n}\\n\\nfunction setCtx(ctx, prop, value) {\\n  ctx[prop] = fixShadow(ctx, prop, value);\\n  return ctx[prop];\\n}\\n/**\\n * @param {string} [stroke] If specified, do not check style.textStroke.\\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\\n * @param {number} style\\n */\\n\\n\\nfunction getStroke(stroke, lineWidth) {\\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\\n}\\n\\nfunction getFill(fill) {\\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\\n  : fill.image || fill.colorStops ? '#000' : fill;\\n}\\n\\nfunction parsePercent(value, maxValue) {\\n  if (typeof value === 'string') {\\n    if (value.lastIndexOf('%') >= 0) {\\n      return parseFloat(value) / 100 * maxValue;\\n    }\\n\\n    return parseFloat(value);\\n  }\\n\\n  return value;\\n}\\n\\nfunction getTextXForPadding(x, textAlign, textPadding) {\\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\\n}\\n/**\\n * @param {string} text\\n * @param {module:zrender/Style} style\\n * @return {boolean}\\n */\\n\\n\\nfunction needDrawText(text, style) {\\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\\n}\\n\\nexports.normalizeTextStyle = normalizeTextStyle;\\nexports.renderText = renderText;\\nexports.getStroke = getStroke;\\nexports.getFill = getFill;\\nexports.needDrawText = needDrawText;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///137\\n\")},function(module,exports){eval(\"function buildPath(ctx, shape) {\\n  var x = shape.x;\\n  var y = shape.y;\\n  var width = shape.width;\\n  var height = shape.height;\\n  var r = shape.r;\\n  var r1;\\n  var r2;\\n  var r3;\\n  var r4; // Convert width and height to positive for better borderRadius\\n\\n  if (width < 0) {\\n    x = x + width;\\n    width = -width;\\n  }\\n\\n  if (height < 0) {\\n    y = y + height;\\n    height = -height;\\n  }\\n\\n  if (typeof r === 'number') {\\n    r1 = r2 = r3 = r4 = r;\\n  } else if (r instanceof Array) {\\n    if (r.length === 1) {\\n      r1 = r2 = r3 = r4 = r[0];\\n    } else if (r.length === 2) {\\n      r1 = r3 = r[0];\\n      r2 = r4 = r[1];\\n    } else if (r.length === 3) {\\n      r1 = r[0];\\n      r2 = r4 = r[1];\\n      r3 = r[2];\\n    } else {\\n      r1 = r[0];\\n      r2 = r[1];\\n      r3 = r[2];\\n      r4 = r[3];\\n    }\\n  } else {\\n    r1 = r2 = r3 = r4 = 0;\\n  }\\n\\n  var total;\\n\\n  if (r1 + r2 > width) {\\n    total = r1 + r2;\\n    r1 *= width / total;\\n    r2 *= width / total;\\n  }\\n\\n  if (r3 + r4 > width) {\\n    total = r3 + r4;\\n    r3 *= width / total;\\n    r4 *= width / total;\\n  }\\n\\n  if (r2 + r3 > height) {\\n    total = r2 + r3;\\n    r2 *= height / total;\\n    r3 *= height / total;\\n  }\\n\\n  if (r1 + r4 > height) {\\n    total = r1 + r4;\\n    r1 *= height / total;\\n    r4 *= height / total;\\n  }\\n\\n  ctx.moveTo(x + r1, y);\\n  ctx.lineTo(x + width - r2, y);\\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\\n  ctx.lineTo(x + width, y + height - r3);\\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\\n  ctx.lineTo(x + r4, y + height);\\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\\n  ctx.lineTo(x, y + r1);\\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\\n}\\n\\nexports.buildPath = buildPath;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9oZWxwZXIvcm91bmRSZWN0LmpzPzU2OTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYnVpbGRQYXRoKGN0eCwgc2hhcGUpIHtcbiAgdmFyIHggPSBzaGFwZS54O1xuICB2YXIgeSA9IHNoYXBlLnk7XG4gIHZhciB3aWR0aCA9IHNoYXBlLndpZHRoO1xuICB2YXIgaGVpZ2h0ID0gc2hhcGUuaGVpZ2h0O1xuICB2YXIgciA9IHNoYXBlLnI7XG4gIHZhciByMTtcbiAgdmFyIHIyO1xuICB2YXIgcjM7XG4gIHZhciByNDsgLy8gQ29udmVydCB3aWR0aCBhbmQgaGVpZ2h0IHRvIHBvc2l0aXZlIGZvciBiZXR0ZXIgYm9yZGVyUmFkaXVzXG5cbiAgaWYgKHdpZHRoIDwgMCkge1xuICAgIHggPSB4ICsgd2lkdGg7XG4gICAgd2lkdGggPSAtd2lkdGg7XG4gIH1cblxuICBpZiAoaGVpZ2h0IDwgMCkge1xuICAgIHkgPSB5ICsgaGVpZ2h0O1xuICAgIGhlaWdodCA9IC1oZWlnaHQ7XG4gIH1cblxuICBpZiAodHlwZW9mIHIgPT09ICdudW1iZXInKSB7XG4gICAgcjEgPSByMiA9IHIzID0gcjQgPSByO1xuICB9IGVsc2UgaWYgKHIgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgIGlmIChyLmxlbmd0aCA9PT0gMSkge1xuICAgICAgcjEgPSByMiA9IHIzID0gcjQgPSByWzBdO1xuICAgIH0gZWxzZSBpZiAoci5sZW5ndGggPT09IDIpIHtcbiAgICAgIHIxID0gcjMgPSByWzBdO1xuICAgICAgcjIgPSByNCA9IHJbMV07XG4gICAgfSBlbHNlIGlmIChyLmxlbmd0aCA9PT0gMykge1xuICAgICAgcjEgPSByWzBdO1xuICAgICAgcjIgPSByNCA9IHJbMV07XG4gICAgICByMyA9IHJbMl07XG4gICAgfSBlbHNlIHtcbiAgICAgIHIxID0gclswXTtcbiAgICAgIHIyID0gclsxXTtcbiAgICAgIHIzID0gclsyXTtcbiAgICAgIHI0ID0gclszXTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcjEgPSByMiA9IHIzID0gcjQgPSAwO1xuICB9XG5cbiAgdmFyIHRvdGFsO1xuXG4gIGlmIChyMSArIHIyID4gd2lkdGgpIHtcbiAgICB0b3RhbCA9IHIxICsgcjI7XG4gICAgcjEgKj0gd2lkdGggLyB0b3RhbDtcbiAgICByMiAqPSB3aWR0aCAvIHRvdGFsO1xuICB9XG5cbiAgaWYgKHIzICsgcjQgPiB3aWR0aCkge1xuICAgIHRvdGFsID0gcjMgKyByNDtcbiAgICByMyAqPSB3aWR0aCAvIHRvdGFsO1xuICAgIHI0ICo9IHdpZHRoIC8gdG90YWw7XG4gIH1cblxuICBpZiAocjIgKyByMyA+IGhlaWdodCkge1xuICAgIHRvdGFsID0gcjIgKyByMztcbiAgICByMiAqPSBoZWlnaHQgLyB0b3RhbDtcbiAgICByMyAqPSBoZWlnaHQgLyB0b3RhbDtcbiAgfVxuXG4gIGlmIChyMSArIHI0ID4gaGVpZ2h0KSB7XG4gICAgdG90YWwgPSByMSArIHI0O1xuICAgIHIxICo9IGhlaWdodCAvIHRvdGFsO1xuICAgIHI0ICo9IGhlaWdodCAvIHRvdGFsO1xuICB9XG5cbiAgY3R4Lm1vdmVUbyh4ICsgcjEsIHkpO1xuICBjdHgubGluZVRvKHggKyB3aWR0aCAtIHIyLCB5KTtcbiAgcjIgIT09IDAgJiYgY3R4LmFyYyh4ICsgd2lkdGggLSByMiwgeSArIHIyLCByMiwgLU1hdGguUEkgLyAyLCAwKTtcbiAgY3R4LmxpbmVUbyh4ICsgd2lkdGgsIHkgKyBoZWlnaHQgLSByMyk7XG4gIHIzICE9PSAwICYmIGN0eC5hcmMoeCArIHdpZHRoIC0gcjMsIHkgKyBoZWlnaHQgLSByMywgcjMsIDAsIE1hdGguUEkgLyAyKTtcbiAgY3R4LmxpbmVUbyh4ICsgcjQsIHkgKyBoZWlnaHQpO1xuICByNCAhPT0gMCAmJiBjdHguYXJjKHggKyByNCwgeSArIGhlaWdodCAtIHI0LCByNCwgTWF0aC5QSSAvIDIsIE1hdGguUEkpO1xuICBjdHgubGluZVRvKHgsIHkgKyByMSk7XG4gIHIxICE9PSAwICYmIGN0eC5hcmMoeCArIHIxLCB5ICsgcjEsIHIxLCBNYXRoLlBJLCBNYXRoLlBJICogMS41KTtcbn1cblxuZXhwb3J0cy5idWlsZFBhdGggPSBidWlsZFBhdGg7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///138\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar _util = __webpack_require__(59);\\n\\nvar each = _util.each;\\nvar filter = _util.filter;\\nvar map = _util.map;\\nvar isArray = _util.isArray;\\nvar indexOf = _util.indexOf;\\nvar isObject = _util.isObject;\\nvar isString = _util.isString;\\nvar createHashMap = _util.createHashMap;\\nvar assert = _util.assert;\\nvar clone = _util.clone;\\nvar merge = _util.merge;\\nvar extend = _util.extend;\\nvar mixin = _util.mixin;\\n\\nvar modelUtil = __webpack_require__(60);\\n\\nvar Model = __webpack_require__(70);\\n\\nvar ComponentModel = __webpack_require__(72);\\n\\nvar globalDefault = __webpack_require__(225);\\n\\nvar colorPaletteMixin = __webpack_require__(152);\\n\\nvar _sourceHelper = __webpack_require__(91);\\n\\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * ECharts global model\\n *\\n * @module {echarts/model/Global}\\n */\\n\\n/**\\n * Caution: If the mechanism should be changed some day, these cases\\n * should be considered:\\n *\\n * (1) In `merge option` mode, if using the same option to call `setOption`\\n * many times, the result should be the same (try our best to ensure that).\\n * (2) In `merge option` mode, if a component has no id/name specified, it\\n * will be merged by index, and the result sequence of the components is\\n * consistent to the original sequence.\\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\\n * `mergeOption` in module:echarts/model/OptionManager.\\n */\\nvar OPTION_INNER_KEY = '\\\\0_ec_inner';\\n/**\\n * @alias module:echarts/model/Global\\n *\\n * @param {Object} option\\n * @param {module:echarts/model/Model} parentModel\\n * @param {Object} theme\\n */\\n\\nvar GlobalModel = Model.extend({\\n  init: function (option, parentModel, theme, optionManager) {\\n    theme = theme || {};\\n    this.option = null; // Mark as not initialized.\\n\\n    /**\\n     * @type {module:echarts/model/Model}\\n     * @private\\n     */\\n\\n    this._theme = new Model(theme);\\n    /**\\n     * @type {module:echarts/model/OptionManager}\\n     */\\n\\n    this._optionManager = optionManager;\\n  },\\n  setOption: function (option, optionPreprocessorFuncs) {\\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\\n\\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\\n\\n    this.resetOption(null);\\n  },\\n\\n  /**\\n   * @param {string} type null/undefined: reset all.\\n   *                      'recreate': force recreate all.\\n   *                      'timeline': only reset timeline option\\n   *                      'media': only reset media query option\\n   * @return {boolean} Whether option changed.\\n   */\\n  resetOption: function (type) {\\n    var optionChanged = false;\\n    var optionManager = this._optionManager;\\n\\n    if (!type || type === 'recreate') {\\n      var baseOption = optionManager.mountOption(type === 'recreate');\\n\\n      if (!this.option || type === 'recreate') {\\n        initBase.call(this, baseOption);\\n      } else {\\n        this.restoreData();\\n        this.mergeOption(baseOption);\\n      }\\n\\n      optionChanged = true;\\n    }\\n\\n    if (type === 'timeline' || type === 'media') {\\n      this.restoreData();\\n    }\\n\\n    if (!type || type === 'recreate' || type === 'timeline') {\\n      var timelineOption = optionManager.getTimelineOption(this);\\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\\n    }\\n\\n    if (!type || type === 'recreate' || type === 'media') {\\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\\n\\n      if (mediaOptions.length) {\\n        each(mediaOptions, function (mediaOption) {\\n          this.mergeOption(mediaOption, optionChanged = true);\\n        }, this);\\n      }\\n    }\\n\\n    return optionChanged;\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  mergeOption: function (newOption) {\\n    var option = this.option;\\n    var componentsMap = this._componentsMap;\\n    var newCptTypes = [];\\n    resetSourceDefaulter(this); // If no component class, merge directly.\\n    // For example: color, animaiton options, etc.\\n\\n    each(newOption, function (componentOption, mainType) {\\n      if (componentOption == null) {\\n        return;\\n      }\\n\\n      if (!ComponentModel.hasClass(mainType)) {\\n        // globalSettingTask.dirty();\\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\\n      } else if (mainType) {\\n        newCptTypes.push(mainType);\\n      }\\n    });\\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\\n\\n    function visitComponent(mainType, dependencies) {\\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\\n\\n      each(mapResult, function (item, index) {\\n        var opt = item.option;\\n\\n        if (isObject(opt)) {\\n          item.keyInfo.mainType = mainType;\\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\\n        }\\n      });\\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\\n      option[mainType] = [];\\n      componentsMap.set(mainType, []);\\n      each(mapResult, function (resultItem, index) {\\n        var componentModel = resultItem.exist;\\n        var newCptOption = resultItem.option;\\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\\n        // see removeEdgeAndAdd in topologicalTravel and\\n        // ComponentModel.getAllClassMainTypes.\\n\\n        if (!newCptOption) {\\n          componentModel.mergeOption({}, this);\\n          componentModel.optionUpdated({}, false);\\n        } else {\\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\\n\\n          if (componentModel && componentModel instanceof ComponentModelClass) {\\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\\n\\n            componentModel.mergeOption(newCptOption, this);\\n            componentModel.optionUpdated(newCptOption, false);\\n          } else {\\n            // PENDING Global as parent ?\\n            var extraOpt = extend({\\n              dependentModels: dependentModels,\\n              componentIndex: index\\n            }, resultItem.keyInfo);\\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\\n            extend(componentModel, extraOpt);\\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\\n            // newCptOption has been used as componentModel.option\\n            // and may be merged with theme and default, so pass null\\n            // to avoid confusion.\\n\\n            componentModel.optionUpdated(null, true);\\n          }\\n        }\\n\\n        componentsMap.get(mainType)[index] = componentModel;\\n        option[mainType][index] = componentModel.option;\\n      }, this); // Backup series for filtering.\\n\\n      if (mainType === 'series') {\\n        createSeriesIndices(this, componentsMap.get('series'));\\n      }\\n    }\\n\\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\\n  },\\n\\n  /**\\n   * Get option for output (cloned option and inner info removed)\\n   * @public\\n   * @return {Object}\\n   */\\n  getOption: function () {\\n    var option = clone(this.option);\\n    each(option, function (opts, mainType) {\\n      if (ComponentModel.hasClass(mainType)) {\\n        var opts = modelUtil.normalizeToArray(opts);\\n\\n        for (var i = opts.length - 1; i >= 0; i--) {\\n          // Remove options with inner id.\\n          if (modelUtil.isIdInner(opts[i])) {\\n            opts.splice(i, 1);\\n          }\\n        }\\n\\n        option[mainType] = opts;\\n      }\\n    });\\n    delete option[OPTION_INNER_KEY];\\n    return option;\\n  },\\n\\n  /**\\n   * @return {module:echarts/model/Model}\\n   */\\n  getTheme: function () {\\n    return this._theme;\\n  },\\n\\n  /**\\n   * @param {string} mainType\\n   * @param {number} [idx=0]\\n   * @return {module:echarts/model/Component}\\n   */\\n  getComponent: function (mainType, idx) {\\n    var list = this._componentsMap.get(mainType);\\n\\n    if (list) {\\n      return list[idx || 0];\\n    }\\n  },\\n\\n  /**\\n   * If none of index and id and name used, return all components with mainType.\\n   * @param {Object} condition\\n   * @param {string} condition.mainType\\n   * @param {string} [condition.subType] If ignore, only query by mainType\\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\\n   * @return {Array.<module:echarts/model/Component>}\\n   */\\n  queryComponents: function (condition) {\\n    var mainType = condition.mainType;\\n\\n    if (!mainType) {\\n      return [];\\n    }\\n\\n    var index = condition.index;\\n    var id = condition.id;\\n    var name = condition.name;\\n\\n    var cpts = this._componentsMap.get(mainType);\\n\\n    if (!cpts || !cpts.length) {\\n      return [];\\n    }\\n\\n    var result;\\n\\n    if (index != null) {\\n      if (!isArray(index)) {\\n        index = [index];\\n      }\\n\\n      result = filter(map(index, function (idx) {\\n        return cpts[idx];\\n      }), function (val) {\\n        return !!val;\\n      });\\n    } else if (id != null) {\\n      var isIdArray = isArray(id);\\n      result = filter(cpts, function (cpt) {\\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\\n      });\\n    } else if (name != null) {\\n      var isNameArray = isArray(name);\\n      result = filter(cpts, function (cpt) {\\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\\n      });\\n    } else {\\n      // Return all components with mainType\\n      result = cpts.slice();\\n    }\\n\\n    return filterBySubType(result, condition);\\n  },\\n\\n  /**\\n   * The interface is different from queryComponents,\\n   * which is convenient for inner usage.\\n   *\\n   * @usage\\n   * var result = findComponents(\\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\\n   * );\\n   * var result = findComponents(\\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\\n   * );\\n   * var result = findComponents(\\n   *     {mainType: 'series'},\\n   *     function (model, index) {...}\\n   * );\\n   * // result like [component0, componnet1, ...]\\n   *\\n   * @param {Object} condition\\n   * @param {string} condition.mainType Mandatory.\\n   * @param {string} [condition.subType] Optional.\\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\\n   *        where xxx is mainType.\\n   *        If query attribute is null/undefined or has no index/id/name,\\n   *        do not filtering by query conditions, which is convenient for\\n   *        no-payload situations or when target of action is global.\\n   * @param {Function} [condition.filter] parameter: component, return boolean.\\n   * @return {Array.<module:echarts/model/Component>}\\n   */\\n  findComponents: function (condition) {\\n    var query = condition.query;\\n    var mainType = condition.mainType;\\n    var queryCond = getQueryCond(query);\\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\\n    return doFilter(filterBySubType(result, condition));\\n\\n    function getQueryCond(q) {\\n      var indexAttr = mainType + 'Index';\\n      var idAttr = mainType + 'Id';\\n      var nameAttr = mainType + 'Name';\\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\\n        mainType: mainType,\\n        // subType will be filtered finally.\\n        index: q[indexAttr],\\n        id: q[idAttr],\\n        name: q[nameAttr]\\n      } : null;\\n    }\\n\\n    function doFilter(res) {\\n      return condition.filter ? filter(res, condition.filter) : res;\\n    }\\n  },\\n\\n  /**\\n   * @usage\\n   * eachComponent('legend', function (legendModel, index) {\\n   *     ...\\n   * });\\n   * eachComponent(function (componentType, model, index) {\\n   *     // componentType does not include subType\\n   *     // (componentType is 'xxx' but not 'xxx.aa')\\n   * });\\n   * eachComponent(\\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\\n   *     function (model, index) {...}\\n   * );\\n   * eachComponent(\\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\\n   *     function (model, index) {...}\\n   * );\\n   *\\n   * @param {string|Object=} mainType When mainType is object, the definition\\n   *                                  is the same as the method 'findComponents'.\\n   * @param {Function} cb\\n   * @param {*} context\\n   */\\n  eachComponent: function (mainType, cb, context) {\\n    var componentsMap = this._componentsMap;\\n\\n    if (typeof mainType === 'function') {\\n      context = cb;\\n      cb = mainType;\\n      componentsMap.each(function (components, componentType) {\\n        each(components, function (component, index) {\\n          cb.call(context, componentType, component, index);\\n        });\\n      });\\n    } else if (isString(mainType)) {\\n      each(componentsMap.get(mainType), cb, context);\\n    } else if (isObject(mainType)) {\\n      var queryResult = this.findComponents(mainType);\\n      each(queryResult, cb, context);\\n    }\\n  },\\n\\n  /**\\n   * @param {string} name\\n   * @return {Array.<module:echarts/model/Series>}\\n   */\\n  getSeriesByName: function (name) {\\n    var series = this._componentsMap.get('series');\\n\\n    return filter(series, function (oneSeries) {\\n      return oneSeries.name === name;\\n    });\\n  },\\n\\n  /**\\n   * @param {number} seriesIndex\\n   * @return {module:echarts/model/Series}\\n   */\\n  getSeriesByIndex: function (seriesIndex) {\\n    return this._componentsMap.get('series')[seriesIndex];\\n  },\\n\\n  /**\\n   * Get series list before filtered by type.\\n   * FIXME: rename to getRawSeriesByType?\\n   *\\n   * @param {string} subType\\n   * @return {Array.<module:echarts/model/Series>}\\n   */\\n  getSeriesByType: function (subType) {\\n    var series = this._componentsMap.get('series');\\n\\n    return filter(series, function (oneSeries) {\\n      return oneSeries.subType === subType;\\n    });\\n  },\\n\\n  /**\\n   * @return {Array.<module:echarts/model/Series>}\\n   */\\n  getSeries: function () {\\n    return this._componentsMap.get('series').slice();\\n  },\\n\\n  /**\\n   * @return {number}\\n   */\\n  getSeriesCount: function () {\\n    return this._componentsMap.get('series').length;\\n  },\\n\\n  /**\\n   * After filtering, series may be different\\n   * frome raw series.\\n   *\\n   * @param {Function} cb\\n   * @param {*} context\\n   */\\n  eachSeries: function (cb, context) {\\n    assertSeriesInitialized(this);\\n    each(this._seriesIndices, function (rawSeriesIndex) {\\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\\n\\n      cb.call(context, series, rawSeriesIndex);\\n    }, this);\\n  },\\n\\n  /**\\n   * Iterate raw series before filtered.\\n   *\\n   * @param {Function} cb\\n   * @param {*} context\\n   */\\n  eachRawSeries: function (cb, context) {\\n    each(this._componentsMap.get('series'), cb, context);\\n  },\\n\\n  /**\\n   * After filtering, series may be different.\\n   * frome raw series.\\n   *\\n   * @parma {string} subType\\n   * @param {Function} cb\\n   * @param {*} context\\n   */\\n  eachSeriesByType: function (subType, cb, context) {\\n    assertSeriesInitialized(this);\\n    each(this._seriesIndices, function (rawSeriesIndex) {\\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\\n\\n      if (series.subType === subType) {\\n        cb.call(context, series, rawSeriesIndex);\\n      }\\n    }, this);\\n  },\\n\\n  /**\\n   * Iterate raw series before filtered of given type.\\n   *\\n   * @parma {string} subType\\n   * @param {Function} cb\\n   * @param {*} context\\n   */\\n  eachRawSeriesByType: function (subType, cb, context) {\\n    return each(this.getSeriesByType(subType), cb, context);\\n  },\\n\\n  /**\\n   * @param {module:echarts/model/Series} seriesModel\\n   */\\n  isSeriesFiltered: function (seriesModel) {\\n    assertSeriesInitialized(this);\\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\\n  },\\n\\n  /**\\n   * @return {Array.<number>}\\n   */\\n  getCurrentSeriesIndices: function () {\\n    return (this._seriesIndices || []).slice();\\n  },\\n\\n  /**\\n   * @param {Function} cb\\n   * @param {*} context\\n   */\\n  filterSeries: function (cb, context) {\\n    assertSeriesInitialized(this);\\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\\n    createSeriesIndices(this, filteredSeries);\\n  },\\n  restoreData: function (payload) {\\n    var componentsMap = this._componentsMap;\\n    createSeriesIndices(this, componentsMap.get('series'));\\n    var componentTypes = [];\\n    componentsMap.each(function (components, componentType) {\\n      componentTypes.push(componentType);\\n    });\\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\\n      each(componentsMap.get(componentType), function (component) {\\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\\n      });\\n    });\\n  }\\n});\\n\\nfunction isNotTargetSeries(seriesModel, payload) {\\n  if (payload) {\\n    var index = payload.seiresIndex;\\n    var id = payload.seriesId;\\n    var name = payload.seriesName;\\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\\n  }\\n}\\n/**\\n * @inner\\n */\\n\\n\\nfunction mergeTheme(option, theme) {\\n  // PENDING\\n  // NOT use `colorLayer` in theme if option has `color`\\n  var notMergeColorLayer = option.color && !option.colorLayer;\\n  each(theme, function (themeItem, name) {\\n    if (name === 'colorLayer' && notMergeColorLayer) {\\n      return;\\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\\n\\n\\n    if (!ComponentModel.hasClass(name)) {\\n      if (typeof themeItem === 'object') {\\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\\n      } else {\\n        if (option[name] == null) {\\n          option[name] = themeItem;\\n        }\\n      }\\n    }\\n  });\\n}\\n\\nfunction initBase(baseOption) {\\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\\n\\n  this.option = {};\\n  this.option[OPTION_INNER_KEY] = 1;\\n  /**\\n   * Init with series: [], in case of calling findSeries method\\n   * before series initialized.\\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\\n   * @private\\n   */\\n\\n  this._componentsMap = createHashMap({\\n    series: []\\n  });\\n  /**\\n   * Mapping between filtered series list and raw series list.\\n   * key: filtered series indices, value: raw series indices.\\n   * @type {Array.<nubmer>}\\n   * @private\\n   */\\n\\n  this._seriesIndices;\\n  this._seriesIndicesMap;\\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\\n\\n  merge(baseOption, globalDefault, false);\\n  this.mergeOption(baseOption);\\n}\\n/**\\n * @inner\\n * @param {Array.<string>|string} types model types\\n * @return {Object} key: {string} type, value: {Array.<Object>} models\\n */\\n\\n\\nfunction getComponentsByTypes(componentsMap, types) {\\n  if (!isArray(types)) {\\n    types = types ? [types] : [];\\n  }\\n\\n  var ret = {};\\n  each(types, function (type) {\\n    ret[type] = (componentsMap.get(type) || []).slice();\\n  });\\n  return ret;\\n}\\n/**\\n * @inner\\n */\\n\\n\\nfunction determineSubType(mainType, newCptOption, existComponent) {\\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\\n\\n  return subType;\\n}\\n/**\\n * @inner\\n */\\n\\n\\nfunction createSeriesIndices(ecModel, seriesModels) {\\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\\n    return series.componentIndex;\\n  }) || []);\\n}\\n/**\\n * @inner\\n */\\n\\n\\nfunction filterBySubType(components, condition) {\\n  // Using hasOwnProperty for restrict. Consider\\n  // subType is undefined in user payload.\\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\\n    return cpt.subType === condition.subType;\\n  }) : components;\\n}\\n/**\\n * @inner\\n */\\n\\n\\nfunction assertSeriesInitialized(ecModel) {}\\n\\nmixin(GlobalModel, colorPaletteMixin);\\nvar _default = GlobalModel;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///139\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\nvar PathProxy = __webpack_require__(89);\\n\\nvar transformPath = __webpack_require__(213);\\n\\n// command chars\\n// var cc = [\\n//     'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\\n//     'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\\n// ];\\nvar mathSqrt = Math.sqrt;\\nvar mathSin = Math.sin;\\nvar mathCos = Math.cos;\\nvar PI = Math.PI;\\n\\nvar vMag = function (v) {\\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\\n};\\n\\nvar vRatio = function (u, v) {\\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\\n};\\n\\nvar vAngle = function (u, v) {\\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\\n};\\n\\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\\n  var psi = psiDeg * (PI / 180.0);\\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\\n\\n  if (lambda > 1) {\\n    rx *= mathSqrt(lambda);\\n    ry *= mathSqrt(lambda);\\n  }\\n\\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\\n  var cxp = f * rx * yp / ry;\\n  var cyp = f * -ry * xp / rx;\\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\\n  var dTheta = vAngle(u, v);\\n\\n  if (vRatio(u, v) <= -1) {\\n    dTheta = PI;\\n  }\\n\\n  if (vRatio(u, v) >= 1) {\\n    dTheta = 0;\\n  }\\n\\n  if (fs === 0 && dTheta > 0) {\\n    dTheta = dTheta - 2 * PI;\\n  }\\n\\n  if (fs === 1 && dTheta < 0) {\\n    dTheta = dTheta + 2 * PI;\\n  }\\n\\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\\n}\\n\\nvar commandReg = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig; // Consider case:\\n// (1) delimiter can be comma or space, where continuous commas\\n// or spaces should be seen as one comma.\\n// (2) value can be like:\\n// '2e-4', 'l.5.9' (ignore 0), 'M-10-10', 'l-2.43e-1,34.9983',\\n// 'l-.5E1,54', '121-23-44-11' (no delimiter)\\n\\nvar numberReg = /-?([0-9]*\\\\.)?[0-9]+([eE]-?[0-9]+)?/g; // var valueSplitReg = /[\\\\s,]+/;\\n\\nfunction createPathProxyFromString(data) {\\n  if (!data) {\\n    return new PathProxy();\\n  } // var data = data.replace(/-/g, ' -')\\n  //     .replace(/  /g, ' ')\\n  //     .replace(/ /g, ',')\\n  //     .replace(/,,/g, ',');\\n  // var n;\\n  // create pipes so that we can split the data\\n  // for (n = 0; n < cc.length; n++) {\\n  //     cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\\n  // }\\n  // data = data.replace(/-/g, ',-');\\n  // create array\\n  // var arr = cs.split('|');\\n  // init context point\\n\\n\\n  var cpx = 0;\\n  var cpy = 0;\\n  var subpathX = cpx;\\n  var subpathY = cpy;\\n  var prevCmd;\\n  var path = new PathProxy();\\n  var CMD = PathProxy.CMD; // commandReg.lastIndex = 0;\\n  // var cmdResult;\\n  // while ((cmdResult = commandReg.exec(data)) != null) {\\n  //     var cmdStr = cmdResult[1];\\n  //     var cmdContent = cmdResult[2];\\n\\n  var cmdList = data.match(commandReg);\\n\\n  for (var l = 0; l < cmdList.length; l++) {\\n    var cmdText = cmdList[l];\\n    var cmdStr = cmdText.charAt(0);\\n    var cmd; // String#split is faster a little bit than String#replace or RegExp#exec.\\n    // var p = cmdContent.split(valueSplitReg);\\n    // var pLen = 0;\\n    // for (var i = 0; i < p.length; i++) {\\n    //     // '' and other invalid str => NaN\\n    //     var val = parseFloat(p[i]);\\n    //     !isNaN(val) && (p[pLen++] = val);\\n    // }\\n\\n    var p = cmdText.match(numberReg) || [];\\n    var pLen = p.length;\\n\\n    for (var i = 0; i < pLen; i++) {\\n      p[i] = parseFloat(p[i]);\\n    }\\n\\n    var off = 0;\\n\\n    while (off < pLen) {\\n      var ctlPtx;\\n      var ctlPty;\\n      var rx;\\n      var ry;\\n      var psi;\\n      var fa;\\n      var fs;\\n      var x1 = cpx;\\n      var y1 = cpy; // convert l, H, h, V, and v to L\\n\\n      switch (cmdStr) {\\n        case 'l':\\n          cpx += p[off++];\\n          cpy += p[off++];\\n          cmd = CMD.L;\\n          path.addData(cmd, cpx, cpy);\\n          break;\\n\\n        case 'L':\\n          cpx = p[off++];\\n          cpy = p[off++];\\n          cmd = CMD.L;\\n          path.addData(cmd, cpx, cpy);\\n          break;\\n\\n        case 'm':\\n          cpx += p[off++];\\n          cpy += p[off++];\\n          cmd = CMD.M;\\n          path.addData(cmd, cpx, cpy);\\n          subpathX = cpx;\\n          subpathY = cpy;\\n          cmdStr = 'l';\\n          break;\\n\\n        case 'M':\\n          cpx = p[off++];\\n          cpy = p[off++];\\n          cmd = CMD.M;\\n          path.addData(cmd, cpx, cpy);\\n          subpathX = cpx;\\n          subpathY = cpy;\\n          cmdStr = 'L';\\n          break;\\n\\n        case 'h':\\n          cpx += p[off++];\\n          cmd = CMD.L;\\n          path.addData(cmd, cpx, cpy);\\n          break;\\n\\n        case 'H':\\n          cpx = p[off++];\\n          cmd = CMD.L;\\n          path.addData(cmd, cpx, cpy);\\n          break;\\n\\n        case 'v':\\n          cpy += p[off++];\\n          cmd = CMD.L;\\n          path.addData(cmd, cpx, cpy);\\n          break;\\n\\n        case 'V':\\n          cpy = p[off++];\\n          cmd = CMD.L;\\n          path.addData(cmd, cpx, cpy);\\n          break;\\n\\n        case 'C':\\n          cmd = CMD.C;\\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\\n          cpx = p[off - 2];\\n          cpy = p[off - 1];\\n          break;\\n\\n        case 'c':\\n          cmd = CMD.C;\\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\\n          cpx += p[off - 2];\\n          cpy += p[off - 1];\\n          break;\\n\\n        case 'S':\\n          ctlPtx = cpx;\\n          ctlPty = cpy;\\n          var len = path.len();\\n          var pathData = path.data;\\n\\n          if (prevCmd === CMD.C) {\\n            ctlPtx += cpx - pathData[len - 4];\\n            ctlPty += cpy - pathData[len - 3];\\n          }\\n\\n          cmd = CMD.C;\\n          x1 = p[off++];\\n          y1 = p[off++];\\n          cpx = p[off++];\\n          cpy = p[off++];\\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\\n          break;\\n\\n        case 's':\\n          ctlPtx = cpx;\\n          ctlPty = cpy;\\n          var len = path.len();\\n          var pathData = path.data;\\n\\n          if (prevCmd === CMD.C) {\\n            ctlPtx += cpx - pathData[len - 4];\\n            ctlPty += cpy - pathData[len - 3];\\n          }\\n\\n          cmd = CMD.C;\\n          x1 = cpx + p[off++];\\n          y1 = cpy + p[off++];\\n          cpx += p[off++];\\n          cpy += p[off++];\\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\\n          break;\\n\\n        case 'Q':\\n          x1 = p[off++];\\n          y1 = p[off++];\\n          cpx = p[off++];\\n          cpy = p[off++];\\n          cmd = CMD.Q;\\n          path.addData(cmd, x1, y1, cpx, cpy);\\n          break;\\n\\n        case 'q':\\n          x1 = p[off++] + cpx;\\n          y1 = p[off++] + cpy;\\n          cpx += p[off++];\\n          cpy += p[off++];\\n          cmd = CMD.Q;\\n          path.addData(cmd, x1, y1, cpx, cpy);\\n          break;\\n\\n        case 'T':\\n          ctlPtx = cpx;\\n          ctlPty = cpy;\\n          var len = path.len();\\n          var pathData = path.data;\\n\\n          if (prevCmd === CMD.Q) {\\n            ctlPtx += cpx - pathData[len - 4];\\n            ctlPty += cpy - pathData[len - 3];\\n          }\\n\\n          cpx = p[off++];\\n          cpy = p[off++];\\n          cmd = CMD.Q;\\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\\n          break;\\n\\n        case 't':\\n          ctlPtx = cpx;\\n          ctlPty = cpy;\\n          var len = path.len();\\n          var pathData = path.data;\\n\\n          if (prevCmd === CMD.Q) {\\n            ctlPtx += cpx - pathData[len - 4];\\n            ctlPty += cpy - pathData[len - 3];\\n          }\\n\\n          cpx += p[off++];\\n          cpy += p[off++];\\n          cmd = CMD.Q;\\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\\n          break;\\n\\n        case 'A':\\n          rx = p[off++];\\n          ry = p[off++];\\n          psi = p[off++];\\n          fa = p[off++];\\n          fs = p[off++];\\n          x1 = cpx, y1 = cpy;\\n          cpx = p[off++];\\n          cpy = p[off++];\\n          cmd = CMD.A;\\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\\n          break;\\n\\n        case 'a':\\n          rx = p[off++];\\n          ry = p[off++];\\n          psi = p[off++];\\n          fa = p[off++];\\n          fs = p[off++];\\n          x1 = cpx, y1 = cpy;\\n          cpx += p[off++];\\n          cpy += p[off++];\\n          cmd = CMD.A;\\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\\n          break;\\n      }\\n    }\\n\\n    if (cmdStr === 'z' || cmdStr === 'Z') {\\n      cmd = CMD.Z;\\n      path.addData(cmd); // z may be in the middle of the path.\\n\\n      cpx = subpathX;\\n      cpy = subpathY;\\n    }\\n\\n    prevCmd = cmd;\\n  }\\n\\n  path.toStatic();\\n  return path;\\n} // TODO Optimize double memory cost problem\\n\\n\\nfunction createPathOptions(str, opts) {\\n  var pathProxy = createPathProxyFromString(str);\\n  opts = opts || {};\\n\\n  opts.buildPath = function (path) {\\n    if (path.setData) {\\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\\n\\n      var ctx = path.getContext();\\n\\n      if (ctx) {\\n        path.rebuildPath(ctx);\\n      }\\n    } else {\\n      var ctx = path;\\n      pathProxy.rebuildPath(ctx);\\n    }\\n  };\\n\\n  opts.applyTransform = function (m) {\\n    transformPath(pathProxy, m);\\n    this.dirty(true);\\n  };\\n\\n  return opts;\\n}\\n/**\\n * Create a Path object from path string data\\n * http://www.w3.org/TR/SVG/paths.html#PathData\\n * @param  {Object} opts Other options\\n */\\n\\n\\nfunction createFromString(str, opts) {\\n  return new Path(createPathOptions(str, opts));\\n}\\n/**\\n * Create a Path class from path string data\\n * @param  {string} str\\n * @param  {Object} opts Other options\\n */\\n\\n\\nfunction extendFromString(str, opts) {\\n  return Path.extend(createPathOptions(str, opts));\\n}\\n/**\\n * Merge multiple paths\\n */\\n// TODO Apply transform\\n// TODO stroke dash\\n// TODO Optimize double memory cost problem\\n\\n\\nfunction mergePath(pathEls, opts) {\\n  var pathList = [];\\n  var len = pathEls.length;\\n\\n  for (var i = 0; i < len; i++) {\\n    var pathEl = pathEls[i];\\n\\n    if (!pathEl.path) {\\n      pathEl.createPathProxy();\\n    }\\n\\n    if (pathEl.__dirtyPath) {\\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\\n    }\\n\\n    pathList.push(pathEl.path);\\n  }\\n\\n  var pathBundle = new Path(opts); // Need path proxy.\\n\\n  pathBundle.createPathProxy();\\n\\n  pathBundle.buildPath = function (path) {\\n    path.appendPath(pathList); // Svg and vml renderer don't have context\\n\\n    var ctx = path.getContext();\\n\\n    if (ctx) {\\n      path.rebuildPath(ctx);\\n    }\\n  };\\n\\n  return pathBundle;\\n}\\n\\nexports.createFromString = createFromString;\\nexports.extendFromString = extendFromString;\\nexports.mergePath = mergePath;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///140\\n\")},function(module,exports,__webpack_require__){eval(\"var vec2 = __webpack_require__(62);\\n\\nvar curve = __webpack_require__(77);\\n\\n/**\\n * @author Yi Shen(https://github.com/pissang)\\n */\\nvar mathMin = Math.min;\\nvar mathMax = Math.max;\\nvar mathSin = Math.sin;\\nvar mathCos = Math.cos;\\nvar PI2 = Math.PI * 2;\\nvar start = vec2.create();\\nvar end = vec2.create();\\nvar extremity = vec2.create();\\n/**\\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\\n * @module zrender/core/bbox\\n * @param {Array<Object>} points 顶点数组\\n * @param {number} min\\n * @param {number} max\\n */\\n\\nfunction fromPoints(points, min, max) {\\n  if (points.length === 0) {\\n    return;\\n  }\\n\\n  var p = points[0];\\n  var left = p[0];\\n  var right = p[0];\\n  var top = p[1];\\n  var bottom = p[1];\\n  var i;\\n\\n  for (i = 1; i < points.length; i++) {\\n    p = points[i];\\n    left = mathMin(left, p[0]);\\n    right = mathMax(right, p[0]);\\n    top = mathMin(top, p[1]);\\n    bottom = mathMax(bottom, p[1]);\\n  }\\n\\n  min[0] = left;\\n  min[1] = top;\\n  max[0] = right;\\n  max[1] = bottom;\\n}\\n/**\\n * @memberOf module:zrender/core/bbox\\n * @param {number} x0\\n * @param {number} y0\\n * @param {number} x1\\n * @param {number} y1\\n * @param {Array.<number>} min\\n * @param {Array.<number>} max\\n */\\n\\n\\nfunction fromLine(x0, y0, x1, y1, min, max) {\\n  min[0] = mathMin(x0, x1);\\n  min[1] = mathMin(y0, y1);\\n  max[0] = mathMax(x0, x1);\\n  max[1] = mathMax(y0, y1);\\n}\\n\\nvar xDim = [];\\nvar yDim = [];\\n/**\\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\\n * @memberOf module:zrender/core/bbox\\n * @param {number} x0\\n * @param {number} y0\\n * @param {number} x1\\n * @param {number} y1\\n * @param {number} x2\\n * @param {number} y2\\n * @param {number} x3\\n * @param {number} y3\\n * @param {Array.<number>} min\\n * @param {Array.<number>} max\\n */\\n\\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\\n  var cubicExtrema = curve.cubicExtrema;\\n  var cubicAt = curve.cubicAt;\\n  var i;\\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\\n  min[0] = Infinity;\\n  min[1] = Infinity;\\n  max[0] = -Infinity;\\n  max[1] = -Infinity;\\n\\n  for (i = 0; i < n; i++) {\\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\\n    min[0] = mathMin(x, min[0]);\\n    max[0] = mathMax(x, max[0]);\\n  }\\n\\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\\n\\n  for (i = 0; i < n; i++) {\\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\\n    min[1] = mathMin(y, min[1]);\\n    max[1] = mathMax(y, max[1]);\\n  }\\n\\n  min[0] = mathMin(x0, min[0]);\\n  max[0] = mathMax(x0, max[0]);\\n  min[0] = mathMin(x3, min[0]);\\n  max[0] = mathMax(x3, max[0]);\\n  min[1] = mathMin(y0, min[1]);\\n  max[1] = mathMax(y0, max[1]);\\n  min[1] = mathMin(y3, min[1]);\\n  max[1] = mathMax(y3, max[1]);\\n}\\n/**\\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\\n * @memberOf module:zrender/core/bbox\\n * @param {number} x0\\n * @param {number} y0\\n * @param {number} x1\\n * @param {number} y1\\n * @param {number} x2\\n * @param {number} y2\\n * @param {Array.<number>} min\\n * @param {Array.<number>} max\\n */\\n\\n\\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\\n  var quadraticExtremum = curve.quadraticExtremum;\\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\\n\\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\\n  var x = quadraticAt(x0, x1, x2, tx);\\n  var y = quadraticAt(y0, y1, y2, ty);\\n  min[0] = mathMin(x0, x2, x);\\n  min[1] = mathMin(y0, y2, y);\\n  max[0] = mathMax(x0, x2, x);\\n  max[1] = mathMax(y0, y2, y);\\n}\\n/**\\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\\n * @method\\n * @memberOf module:zrender/core/bbox\\n * @param {number} x\\n * @param {number} y\\n * @param {number} rx\\n * @param {number} ry\\n * @param {number} startAngle\\n * @param {number} endAngle\\n * @param {number} anticlockwise\\n * @param {Array.<number>} min\\n * @param {Array.<number>} max\\n */\\n\\n\\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\\n  var vec2Min = vec2.min;\\n  var vec2Max = vec2.max;\\n  var diff = Math.abs(startAngle - endAngle);\\n\\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\\n    // Is a circle\\n    min[0] = x - rx;\\n    min[1] = y - ry;\\n    max[0] = x + rx;\\n    max[1] = y + ry;\\n    return;\\n  }\\n\\n  start[0] = mathCos(startAngle) * rx + x;\\n  start[1] = mathSin(startAngle) * ry + y;\\n  end[0] = mathCos(endAngle) * rx + x;\\n  end[1] = mathSin(endAngle) * ry + y;\\n  vec2Min(min, start, end);\\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\\n\\n  startAngle = startAngle % PI2;\\n\\n  if (startAngle < 0) {\\n    startAngle = startAngle + PI2;\\n  }\\n\\n  endAngle = endAngle % PI2;\\n\\n  if (endAngle < 0) {\\n    endAngle = endAngle + PI2;\\n  }\\n\\n  if (startAngle > endAngle && !anticlockwise) {\\n    endAngle += PI2;\\n  } else if (startAngle < endAngle && anticlockwise) {\\n    startAngle += PI2;\\n  }\\n\\n  if (anticlockwise) {\\n    var tmp = endAngle;\\n    endAngle = startAngle;\\n    startAngle = tmp;\\n  } // var number = 0;\\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\\n\\n\\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\\n    if (angle > startAngle) {\\n      extremity[0] = mathCos(angle) * rx + x;\\n      extremity[1] = mathSin(angle) * ry + y;\\n      vec2Min(min, extremity, min);\\n      vec2Max(max, extremity, max);\\n    }\\n  }\\n}\\n\\nexports.fromPoints = fromPoints;\\nexports.fromLine = fromLine;\\nexports.fromCubic = fromCubic;\\nexports.fromQuadratic = fromQuadratic;\\nexports.fromArc = fromArc;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///141\\n\")},function(module,exports){eval(\"var PI2 = Math.PI * 2;\\n\\nfunction normalizeRadian(angle) {\\n  angle %= PI2;\\n\\n  if (angle < 0) {\\n    angle += PI2;\\n  }\\n\\n  return angle;\\n}\\n\\nexports.normalizeRadian = normalizeRadian;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29udGFpbi91dGlsLmpzPzg1N2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIxNDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUEkyID0gTWF0aC5QSSAqIDI7XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVJhZGlhbihhbmdsZSkge1xuICBhbmdsZSAlPSBQSTI7XG5cbiAgaWYgKGFuZ2xlIDwgMCkge1xuICAgIGFuZ2xlICs9IFBJMjtcbiAgfVxuXG4gIHJldHVybiBhbmdsZTtcbn1cblxuZXhwb3J0cy5ub3JtYWxpemVSYWRpYW4gPSBub3JtYWxpemVSYWRpYW47Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///142\\n\")},function(module,exports){eval('function windingLine(x0, y0, x1, y1, x, y) {\\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\\n    return 0;\\n  } // Ignore horizontal line\\n\\n\\n  if (y1 === y0) {\\n    return 0;\\n  }\\n\\n  var dir = y1 < y0 ? 1 : -1;\\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\\n\\n  if (t === 1 || t === 0) {\\n    dir = y1 < y0 ? 0.5 : -0.5;\\n  }\\n\\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\\n\\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\\n}\\n\\nmodule.exports = windingLine;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29udGFpbi93aW5kaW5nTGluZS5qcz84NzI4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLCtCQUErQjs7QUFFL0I7QUFDQTtBQUNBOztBQUVBLDhCQUE4Qjs7QUFFOUI7QUFDQTs7QUFFQSIsImZpbGUiOiIxNDMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB3aW5kaW5nTGluZSh4MCwgeTAsIHgxLCB5MSwgeCwgeSkge1xuICBpZiAoeSA+IHkwICYmIHkgPiB5MSB8fCB5IDwgeTAgJiYgeSA8IHkxKSB7XG4gICAgcmV0dXJuIDA7XG4gIH0gLy8gSWdub3JlIGhvcml6b250YWwgbGluZVxuXG5cbiAgaWYgKHkxID09PSB5MCkge1xuICAgIHJldHVybiAwO1xuICB9XG5cbiAgdmFyIGRpciA9IHkxIDwgeTAgPyAxIDogLTE7XG4gIHZhciB0ID0gKHkgLSB5MCkgLyAoeTEgLSB5MCk7IC8vIEF2b2lkIHdpbmRpbmcgZXJyb3Igd2hlbiBpbnRlcnNlY3Rpb24gcG9pbnQgaXMgdGhlIGNvbm5lY3QgcG9pbnQgb2YgdHdvIGxpbmUgb2YgcG9seWdvblxuXG4gIGlmICh0ID09PSAxIHx8IHQgPT09IDApIHtcbiAgICBkaXIgPSB5MSA8IHkwID8gMC41IDogLTAuNTtcbiAgfVxuXG4gIHZhciB4XyA9IHQgKiAoeDEgLSB4MCkgKyB4MDsgLy8gSWYgKHgsIHkpIG9uIHRoZSBsaW5lLCBjb25zaWRlcmVkIGFzIFwiY29udGFpblwiLlxuXG4gIHJldHVybiB4XyA9PT0geCA/IEluZmluaXR5IDogeF8gPiB4ID8gZGlyIDogMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3aW5kaW5nTGluZTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///143\\n')},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\n/**\\n * 圆形\\n * @module zrender/shape/Circle\\n */\\nvar _default = Path.extend({\\n  type: 'circle',\\n  shape: {\\n    cx: 0,\\n    cy: 0,\\n    r: 0\\n  },\\n  buildPath: function (ctx, shape, inBundle) {\\n    // Better stroking in ShapeBundle\\n    // Always do it may have performence issue ( fill may be 2x more cost)\\n    if (inBundle) {\\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\\n    } // else {\\n    //     if (ctx.allocate && !ctx.data.length) {\\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\\n    //     }\\n    // }\\n    // Better stroking in ShapeBundle\\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\\n\\n\\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9DaXJjbGUuanM/ZDlmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsRUFBUzs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjE0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQYXRoID0gcmVxdWlyZShcIi4uL1BhdGhcIik7XG5cbi8qKlxuICog5ZyG5b2iXG4gKiBAbW9kdWxlIHpyZW5kZXIvc2hhcGUvQ2lyY2xlXG4gKi9cbnZhciBfZGVmYXVsdCA9IFBhdGguZXh0ZW5kKHtcbiAgdHlwZTogJ2NpcmNsZScsXG4gIHNoYXBlOiB7XG4gICAgY3g6IDAsXG4gICAgY3k6IDAsXG4gICAgcjogMFxuICB9LFxuICBidWlsZFBhdGg6IGZ1bmN0aW9uIChjdHgsIHNoYXBlLCBpbkJ1bmRsZSkge1xuICAgIC8vIEJldHRlciBzdHJva2luZyBpbiBTaGFwZUJ1bmRsZVxuICAgIC8vIEFsd2F5cyBkbyBpdCBtYXkgaGF2ZSBwZXJmb3JtZW5jZSBpc3N1ZSAoIGZpbGwgbWF5IGJlIDJ4IG1vcmUgY29zdClcbiAgICBpZiAoaW5CdW5kbGUpIHtcbiAgICAgIGN0eC5tb3ZlVG8oc2hhcGUuY3ggKyBzaGFwZS5yLCBzaGFwZS5jeSk7XG4gICAgfSAvLyBlbHNlIHtcbiAgICAvLyAgICAgaWYgKGN0eC5hbGxvY2F0ZSAmJiAhY3R4LmRhdGEubGVuZ3RoKSB7XG4gICAgLy8gICAgICAgICBjdHguYWxsb2NhdGUoY3R4LkNNRF9NRU1fU0laRS5BKTtcbiAgICAvLyAgICAgfVxuICAgIC8vIH1cbiAgICAvLyBCZXR0ZXIgc3Ryb2tpbmcgaW4gU2hhcGVCdW5kbGVcbiAgICAvLyBjdHgubW92ZVRvKHNoYXBlLmN4ICsgc2hhcGUuciwgc2hhcGUuY3kpO1xuXG5cbiAgICBjdHguYXJjKHNoYXBlLmN4LCBzaGFwZS5jeSwgc2hhcGUuciwgMCwgTWF0aC5QSSAqIDIsIHRydWUpO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///144\\n\")},function(module,exports,__webpack_require__){eval(\"var env = __webpack_require__(66);\\n\\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\\n// where exception \\\"unexpected call to method or property access\\\"\\n// might be thrown when calling ctx.fill or ctx.stroke after a path\\n// whose area size is zero is drawn and ctx.clip() is called and\\n// shadowBlur is set. See #4572, #3112, #5777.\\n// (e.g.,\\n//  ctx.moveTo(10, 10);\\n//  ctx.lineTo(20, 10);\\n//  ctx.closePath();\\n//  ctx.clip();\\n//  ctx.shadowBlur = 10;\\n//  ...\\n//  ctx.fill();\\n// )\\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\\n\\nfunction _default(orignalBrush) {\\n  // version string can be: '11.0'\\n  return env.browser.ie && env.browser.version >= 11 ? function () {\\n    var clipPaths = this.__clipPaths;\\n    var style = this.style;\\n    var modified;\\n\\n    if (clipPaths) {\\n      for (var i = 0; i < clipPaths.length; i++) {\\n        var clipPath = clipPaths[i];\\n        var shape = clipPath && clipPath.shape;\\n        var type = clipPath && clipPath.type;\\n\\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\\n          for (var j = 0; j < shadowTemp.length; j++) {\\n            // It is save to put shadowTemp static, because shadowTemp\\n            // will be all modified each item brush called.\\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\\n          }\\n\\n          modified = true;\\n          break;\\n        }\\n      }\\n    }\\n\\n    orignalBrush.apply(this, arguments);\\n\\n    if (modified) {\\n      for (var j = 0; j < shadowTemp.length; j++) {\\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\\n      }\\n    }\\n  } : orignalBrush;\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9oZWxwZXIvZml4Q2xpcFdpdGhTaGFkb3cuanM/ODk3YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsRUFBZ0I7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsc0JBQXNCO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EscUJBQXFCLHVCQUF1QjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJmaWxlIjoiMTQ1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGVudiA9IHJlcXVpcmUoXCIuLi8uLi9jb3JlL2VudlwiKTtcblxuLy8gRml4IHdlaXJkIGJ1ZyBpbiBzb21lIHZlcnNpb24gb2YgSUUxMSAobGlrZSAxMS4wLjk2MDAuMTc4KiopLFxuLy8gd2hlcmUgZXhjZXB0aW9uIFwidW5leHBlY3RlZCBjYWxsIHRvIG1ldGhvZCBvciBwcm9wZXJ0eSBhY2Nlc3NcIlxuLy8gbWlnaHQgYmUgdGhyb3duIHdoZW4gY2FsbGluZyBjdHguZmlsbCBvciBjdHguc3Ryb2tlIGFmdGVyIGEgcGF0aFxuLy8gd2hvc2UgYXJlYSBzaXplIGlzIHplcm8gaXMgZHJhd24gYW5kIGN0eC5jbGlwKCkgaXMgY2FsbGVkIGFuZFxuLy8gc2hhZG93Qmx1ciBpcyBzZXQuIFNlZSAjNDU3MiwgIzMxMTIsICM1Nzc3LlxuLy8gKGUuZy4sXG4vLyAgY3R4Lm1vdmVUbygxMCwgMTApO1xuLy8gIGN0eC5saW5lVG8oMjAsIDEwKTtcbi8vICBjdHguY2xvc2VQYXRoKCk7XG4vLyAgY3R4LmNsaXAoKTtcbi8vICBjdHguc2hhZG93Qmx1ciA9IDEwO1xuLy8gIC4uLlxuLy8gIGN0eC5maWxsKCk7XG4vLyApXG52YXIgc2hhZG93VGVtcCA9IFtbJ3NoYWRvd0JsdXInLCAwXSwgWydzaGFkb3dDb2xvcicsICcjMDAwJ10sIFsnc2hhZG93T2Zmc2V0WCcsIDBdLCBbJ3NoYWRvd09mZnNldFknLCAwXV07XG5cbmZ1bmN0aW9uIF9kZWZhdWx0KG9yaWduYWxCcnVzaCkge1xuICAvLyB2ZXJzaW9uIHN0cmluZyBjYW4gYmU6ICcxMS4wJ1xuICByZXR1cm4gZW52LmJyb3dzZXIuaWUgJiYgZW52LmJyb3dzZXIudmVyc2lvbiA+PSAxMSA/IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY2xpcFBhdGhzID0gdGhpcy5fX2NsaXBQYXRocztcbiAgICB2YXIgc3R5bGUgPSB0aGlzLnN0eWxlO1xuICAgIHZhciBtb2RpZmllZDtcblxuICAgIGlmIChjbGlwUGF0aHMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xpcFBhdGhzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBjbGlwUGF0aCA9IGNsaXBQYXRoc1tpXTtcbiAgICAgICAgdmFyIHNoYXBlID0gY2xpcFBhdGggJiYgY2xpcFBhdGguc2hhcGU7XG4gICAgICAgIHZhciB0eXBlID0gY2xpcFBhdGggJiYgY2xpcFBhdGgudHlwZTtcblxuICAgICAgICBpZiAoc2hhcGUgJiYgKHR5cGUgPT09ICdzZWN0b3InICYmIHNoYXBlLnN0YXJ0QW5nbGUgPT09IHNoYXBlLmVuZEFuZ2xlIHx8IHR5cGUgPT09ICdyZWN0JyAmJiAoIXNoYXBlLndpZHRoIHx8ICFzaGFwZS5oZWlnaHQpKSkge1xuICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgc2hhZG93VGVtcC5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgLy8gSXQgaXMgc2F2ZSB0byBwdXQgc2hhZG93VGVtcCBzdGF0aWMsIGJlY2F1c2Ugc2hhZG93VGVtcFxuICAgICAgICAgICAgLy8gd2lsbCBiZSBhbGwgbW9kaWZpZWQgZWFjaCBpdGVtIGJydXNoIGNhbGxlZC5cbiAgICAgICAgICAgIHNoYWRvd1RlbXBbal1bMl0gPSBzdHlsZVtzaGFkb3dUZW1wW2pdWzBdXTtcbiAgICAgICAgICAgIHN0eWxlW3NoYWRvd1RlbXBbal1bMF1dID0gc2hhZG93VGVtcFtqXVsxXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBtb2RpZmllZCA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBvcmlnbmFsQnJ1c2guYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgIGlmIChtb2RpZmllZCkge1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBzaGFkb3dUZW1wLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIHN0eWxlW3NoYWRvd1RlbXBbal1bMF1dID0gc2hhZG93VGVtcFtqXVsyXTtcbiAgICAgIH1cbiAgICB9XG4gIH0gOiBvcmlnbmFsQnJ1c2g7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///145\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\nvar polyHelper = __webpack_require__(147);\\n\\n/**\\n * 多边形\\n * @module zrender/shape/Polygon\\n */\\nvar _default = Path.extend({\\n  type: 'polygon',\\n  shape: {\\n    points: null,\\n    smooth: false,\\n    smoothConstraint: null\\n  },\\n  buildPath: function (ctx, shape) {\\n    polyHelper.buildPath(ctx, shape, true);\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9Qb2x5Z29uLmpzPzg3YjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLEVBQVM7O0FBRTVCLGlCQUFpQixtQkFBTyxDQUFDLEdBQWdCOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjE0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQYXRoID0gcmVxdWlyZShcIi4uL1BhdGhcIik7XG5cbnZhciBwb2x5SGVscGVyID0gcmVxdWlyZShcIi4uL2hlbHBlci9wb2x5XCIpO1xuXG4vKipcbiAqIOWkmui+ueW9olxuICogQG1vZHVsZSB6cmVuZGVyL3NoYXBlL1BvbHlnb25cbiAqL1xudmFyIF9kZWZhdWx0ID0gUGF0aC5leHRlbmQoe1xuICB0eXBlOiAncG9seWdvbicsXG4gIHNoYXBlOiB7XG4gICAgcG9pbnRzOiBudWxsLFxuICAgIHNtb290aDogZmFsc2UsXG4gICAgc21vb3RoQ29uc3RyYWludDogbnVsbFxuICB9LFxuICBidWlsZFBhdGg6IGZ1bmN0aW9uIChjdHgsIHNoYXBlKSB7XG4gICAgcG9seUhlbHBlci5idWlsZFBhdGgoY3R4LCBzaGFwZSwgdHJ1ZSk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///146\\n\")},function(module,exports,__webpack_require__){eval(\"var smoothSpline = __webpack_require__(216);\\n\\nvar smoothBezier = __webpack_require__(217);\\n\\nfunction buildPath(ctx, shape, closePath) {\\n  var points = shape.points;\\n  var smooth = shape.smooth;\\n\\n  if (points && points.length >= 2) {\\n    if (smooth && smooth !== 'spline') {\\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\\n      ctx.moveTo(points[0][0], points[0][1]);\\n      var len = points.length;\\n\\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\\n        var cp1 = controlPoints[i * 2];\\n        var cp2 = controlPoints[i * 2 + 1];\\n        var p = points[(i + 1) % len];\\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\\n      }\\n    } else {\\n      if (smooth === 'spline') {\\n        points = smoothSpline(points, closePath);\\n      }\\n\\n      ctx.moveTo(points[0][0], points[0][1]);\\n\\n      for (var i = 1, l = points.length; i < l; i++) {\\n        ctx.lineTo(points[i][0], points[i][1]);\\n      }\\n    }\\n\\n    closePath && ctx.closePath();\\n  }\\n}\\n\\nexports.buildPath = buildPath;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9oZWxwZXIvcG9seS5qcz80ZmFjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLEdBQWdCOztBQUUzQyxtQkFBbUIsbUJBQU8sQ0FBQyxHQUFnQjs7QUFFM0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLGlDQUFpQztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSx3Q0FBd0MsT0FBTztBQUMvQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjE0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzbW9vdGhTcGxpbmUgPSByZXF1aXJlKFwiLi9zbW9vdGhTcGxpbmVcIik7XG5cbnZhciBzbW9vdGhCZXppZXIgPSByZXF1aXJlKFwiLi9zbW9vdGhCZXppZXJcIik7XG5cbmZ1bmN0aW9uIGJ1aWxkUGF0aChjdHgsIHNoYXBlLCBjbG9zZVBhdGgpIHtcbiAgdmFyIHBvaW50cyA9IHNoYXBlLnBvaW50cztcbiAgdmFyIHNtb290aCA9IHNoYXBlLnNtb290aDtcblxuICBpZiAocG9pbnRzICYmIHBvaW50cy5sZW5ndGggPj0gMikge1xuICAgIGlmIChzbW9vdGggJiYgc21vb3RoICE9PSAnc3BsaW5lJykge1xuICAgICAgdmFyIGNvbnRyb2xQb2ludHMgPSBzbW9vdGhCZXppZXIocG9pbnRzLCBzbW9vdGgsIGNsb3NlUGF0aCwgc2hhcGUuc21vb3RoQ29uc3RyYWludCk7XG4gICAgICBjdHgubW92ZVRvKHBvaW50c1swXVswXSwgcG9pbnRzWzBdWzFdKTtcbiAgICAgIHZhciBsZW4gPSBwb2ludHMubGVuZ3RoO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IChjbG9zZVBhdGggPyBsZW4gOiBsZW4gLSAxKTsgaSsrKSB7XG4gICAgICAgIHZhciBjcDEgPSBjb250cm9sUG9pbnRzW2kgKiAyXTtcbiAgICAgICAgdmFyIGNwMiA9IGNvbnRyb2xQb2ludHNbaSAqIDIgKyAxXTtcbiAgICAgICAgdmFyIHAgPSBwb2ludHNbKGkgKyAxKSAlIGxlbl07XG4gICAgICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGNwMVswXSwgY3AxWzFdLCBjcDJbMF0sIGNwMlsxXSwgcFswXSwgcFsxXSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChzbW9vdGggPT09ICdzcGxpbmUnKSB7XG4gICAgICAgIHBvaW50cyA9IHNtb290aFNwbGluZShwb2ludHMsIGNsb3NlUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIGN0eC5tb3ZlVG8ocG9pbnRzWzBdWzBdLCBwb2ludHNbMF1bMV0pO1xuXG4gICAgICBmb3IgKHZhciBpID0gMSwgbCA9IHBvaW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgY3R4LmxpbmVUbyhwb2ludHNbaV1bMF0sIHBvaW50c1tpXVsxXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY2xvc2VQYXRoICYmIGN0eC5jbG9zZVBhdGgoKTtcbiAgfVxufVxuXG5leHBvcnRzLmJ1aWxkUGF0aCA9IGJ1aWxkUGF0aDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///147\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\nvar polyHelper = __webpack_require__(147);\\n\\n/**\\n * @module zrender/graphic/shape/Polyline\\n */\\nvar _default = Path.extend({\\n  type: 'polyline',\\n  shape: {\\n    points: null,\\n    smooth: false,\\n    smoothConstraint: null\\n  },\\n  style: {\\n    stroke: '#000',\\n    fill: null\\n  },\\n  buildPath: function (ctx, shape) {\\n    polyHelper.buildPath(ctx, shape, false);\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9Qb2x5bGluZS5qcz9kNDk4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsbUJBQU8sQ0FBQyxFQUFTOztBQUU1QixpQkFBaUIsbUJBQU8sQ0FBQyxHQUFnQjs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjE0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQYXRoID0gcmVxdWlyZShcIi4uL1BhdGhcIik7XG5cbnZhciBwb2x5SGVscGVyID0gcmVxdWlyZShcIi4uL2hlbHBlci9wb2x5XCIpO1xuXG4vKipcbiAqIEBtb2R1bGUgenJlbmRlci9ncmFwaGljL3NoYXBlL1BvbHlsaW5lXG4gKi9cbnZhciBfZGVmYXVsdCA9IFBhdGguZXh0ZW5kKHtcbiAgdHlwZTogJ3BvbHlsaW5lJyxcbiAgc2hhcGU6IHtcbiAgICBwb2ludHM6IG51bGwsXG4gICAgc21vb3RoOiBmYWxzZSxcbiAgICBzbW9vdGhDb25zdHJhaW50OiBudWxsXG4gIH0sXG4gIHN0eWxlOiB7XG4gICAgc3Ryb2tlOiAnIzAwMCcsXG4gICAgZmlsbDogbnVsbFxuICB9LFxuICBidWlsZFBhdGg6IGZ1bmN0aW9uIChjdHgsIHNoYXBlKSB7XG4gICAgcG9seUhlbHBlci5idWlsZFBhdGgoY3R4LCBzaGFwZSwgZmFsc2UpO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///148\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\nvar roundRectHelper = __webpack_require__(138);\\n\\n/**\\n * 矩形\\n * @module zrender/graphic/shape/Rect\\n */\\nvar _default = Path.extend({\\n  type: 'rect',\\n  shape: {\\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\\n    // r缩写为1         相当于 [1, 1, 1, 1]\\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\\n    r: 0,\\n    x: 0,\\n    y: 0,\\n    width: 0,\\n    height: 0\\n  },\\n  buildPath: function (ctx, shape) {\\n    var x = shape.x;\\n    var y = shape.y;\\n    var width = shape.width;\\n    var height = shape.height;\\n\\n    if (!shape.r) {\\n      ctx.rect(x, y, width, height);\\n    } else {\\n      roundRectHelper.buildPath(ctx, shape);\\n    }\\n\\n    ctx.closePath();\\n    return;\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9SZWN0LmpzP2M3YTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLEVBQVM7O0FBRTVCLHNCQUFzQixtQkFBTyxDQUFDLEdBQXFCOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiMTQ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFBhdGggPSByZXF1aXJlKFwiLi4vUGF0aFwiKTtcblxudmFyIHJvdW5kUmVjdEhlbHBlciA9IHJlcXVpcmUoXCIuLi9oZWxwZXIvcm91bmRSZWN0XCIpO1xuXG4vKipcbiAqIOefqeW9olxuICogQG1vZHVsZSB6cmVuZGVyL2dyYXBoaWMvc2hhcGUvUmVjdFxuICovXG52YXIgX2RlZmF1bHQgPSBQYXRoLmV4dGVuZCh7XG4gIHR5cGU6ICdyZWN0JyxcbiAgc2hhcGU6IHtcbiAgICAvLyDlt6bkuIrjgIHlj7PkuIrjgIHlj7PkuIvjgIHlt6bkuIvop5LnmoTljYrlvoTkvp3mrKHkuLpyMeOAgXIy44CBcjPjgIFyNFxuICAgIC8vIHLnvKnlhpnkuLoxICAgICAgICAg55u45b2T5LqOIFsxLCAxLCAxLCAxXVxuICAgIC8vIHLnvKnlhpnkuLpbMV0gICAgICAg55u45b2T5LqOIFsxLCAxLCAxLCAxXVxuICAgIC8vIHLnvKnlhpnkuLpbMSwgMl0gICAg55u45b2T5LqOIFsxLCAyLCAxLCAyXVxuICAgIC8vIHLnvKnlhpnkuLpbMSwgMiwgM10g55u45b2T5LqOIFsxLCAyLCAzLCAyXVxuICAgIHI6IDAsXG4gICAgeDogMCxcbiAgICB5OiAwLFxuICAgIHdpZHRoOiAwLFxuICAgIGhlaWdodDogMFxuICB9LFxuICBidWlsZFBhdGg6IGZ1bmN0aW9uIChjdHgsIHNoYXBlKSB7XG4gICAgdmFyIHggPSBzaGFwZS54O1xuICAgIHZhciB5ID0gc2hhcGUueTtcbiAgICB2YXIgd2lkdGggPSBzaGFwZS53aWR0aDtcbiAgICB2YXIgaGVpZ2h0ID0gc2hhcGUuaGVpZ2h0O1xuXG4gICAgaWYgKCFzaGFwZS5yKSB7XG4gICAgICBjdHgucmVjdCh4LCB5LCB3aWR0aCwgaGVpZ2h0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcm91bmRSZWN0SGVscGVyLmJ1aWxkUGF0aChjdHgsIHNoYXBlKTtcbiAgICB9XG5cbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgcmV0dXJuO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///149\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\n/**\\n * 直线\\n * @module zrender/graphic/shape/Line\\n */\\nvar _default = Path.extend({\\n  type: 'line',\\n  shape: {\\n    // Start point\\n    x1: 0,\\n    y1: 0,\\n    // End point\\n    x2: 0,\\n    y2: 0,\\n    percent: 1\\n  },\\n  style: {\\n    stroke: '#000',\\n    fill: null\\n  },\\n  buildPath: function (ctx, shape) {\\n    var x1 = shape.x1;\\n    var y1 = shape.y1;\\n    var x2 = shape.x2;\\n    var y2 = shape.y2;\\n    var percent = shape.percent;\\n\\n    if (percent === 0) {\\n      return;\\n    }\\n\\n    ctx.moveTo(x1, y1);\\n\\n    if (percent < 1) {\\n      x2 = x1 * (1 - percent) + x2 * percent;\\n      y2 = y1 * (1 - percent) + y2 * percent;\\n    }\\n\\n    ctx.lineTo(x2, y2);\\n  },\\n\\n  /**\\n   * Get point at percent\\n   * @param  {number} percent\\n   * @return {Array.<number>}\\n   */\\n  pointAt: function (p) {\\n    var shape = this.shape;\\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9MaW5lLmpzP2NiMTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLEVBQVM7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckIsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjE1MC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQYXRoID0gcmVxdWlyZShcIi4uL1BhdGhcIik7XG5cbi8qKlxuICog55u057q/XG4gKiBAbW9kdWxlIHpyZW5kZXIvZ3JhcGhpYy9zaGFwZS9MaW5lXG4gKi9cbnZhciBfZGVmYXVsdCA9IFBhdGguZXh0ZW5kKHtcbiAgdHlwZTogJ2xpbmUnLFxuICBzaGFwZToge1xuICAgIC8vIFN0YXJ0IHBvaW50XG4gICAgeDE6IDAsXG4gICAgeTE6IDAsXG4gICAgLy8gRW5kIHBvaW50XG4gICAgeDI6IDAsXG4gICAgeTI6IDAsXG4gICAgcGVyY2VudDogMVxuICB9LFxuICBzdHlsZToge1xuICAgIHN0cm9rZTogJyMwMDAnLFxuICAgIGZpbGw6IG51bGxcbiAgfSxcbiAgYnVpbGRQYXRoOiBmdW5jdGlvbiAoY3R4LCBzaGFwZSkge1xuICAgIHZhciB4MSA9IHNoYXBlLngxO1xuICAgIHZhciB5MSA9IHNoYXBlLnkxO1xuICAgIHZhciB4MiA9IHNoYXBlLngyO1xuICAgIHZhciB5MiA9IHNoYXBlLnkyO1xuICAgIHZhciBwZXJjZW50ID0gc2hhcGUucGVyY2VudDtcblxuICAgIGlmIChwZXJjZW50ID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY3R4Lm1vdmVUbyh4MSwgeTEpO1xuXG4gICAgaWYgKHBlcmNlbnQgPCAxKSB7XG4gICAgICB4MiA9IHgxICogKDEgLSBwZXJjZW50KSArIHgyICogcGVyY2VudDtcbiAgICAgIHkyID0geTEgKiAoMSAtIHBlcmNlbnQpICsgeTIgKiBwZXJjZW50O1xuICAgIH1cblxuICAgIGN0eC5saW5lVG8oeDIsIHkyKTtcbiAgfSxcblxuICAvKipcbiAgICogR2V0IHBvaW50IGF0IHBlcmNlbnRcbiAgICogQHBhcmFtICB7bnVtYmVyfSBwZXJjZW50XG4gICAqIEByZXR1cm4ge0FycmF5LjxudW1iZXI+fVxuICAgKi9cbiAgcG9pbnRBdDogZnVuY3Rpb24gKHApIHtcbiAgICB2YXIgc2hhcGUgPSB0aGlzLnNoYXBlO1xuICAgIHJldHVybiBbc2hhcGUueDEgKiAoMSAtIHApICsgc2hhcGUueDIgKiBwLCBzaGFwZS55MSAqICgxIC0gcCkgKyBzaGFwZS55MiAqIHBdO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///150\\n\")},function(module,exports,__webpack_require__){eval(\"var zrUtil = __webpack_require__(59);\\n\\nvar Gradient = __webpack_require__(106);\\n\\n/**\\n * x, y, x2, y2 are all percent from 0 to 1\\n * @param {number} [x=0]\\n * @param {number} [y=0]\\n * @param {number} [x2=1]\\n * @param {number} [y2=0]\\n * @param {Array.<Object>} colorStops\\n * @param {boolean} [globalCoord=false]\\n */\\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\\n  // Should do nothing more in this constructor. Because gradient can be\\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\\n  // this constructor will not be called.\\n  this.x = x == null ? 0 : x;\\n  this.y = y == null ? 0 : y;\\n  this.x2 = x2 == null ? 1 : x2;\\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\\n\\n  this.type = 'linear'; // If use global coord\\n\\n  this.global = globalCoord || false;\\n  Gradient.call(this, colorStops);\\n};\\n\\nLinearGradient.prototype = {\\n  constructor: LinearGradient\\n};\\nzrUtil.inherits(LinearGradient, Gradient);\\nvar _default = LinearGradient;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9MaW5lYXJHcmFkaWVudC5qcz80OGE5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxFQUFjOztBQUVuQyxlQUFlLG1CQUFPLENBQUMsR0FBWTs7QUFFbkM7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLGVBQWU7QUFDMUIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixnQ0FBZ0M7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7O0FBRWhDLHVCQUF1Qjs7QUFFdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgenJVdGlsID0gcmVxdWlyZShcIi4uL2NvcmUvdXRpbFwiKTtcblxudmFyIEdyYWRpZW50ID0gcmVxdWlyZShcIi4vR3JhZGllbnRcIik7XG5cbi8qKlxuICogeCwgeSwgeDIsIHkyIGFyZSBhbGwgcGVyY2VudCBmcm9tIDAgdG8gMVxuICogQHBhcmFtIHtudW1iZXJ9IFt4PTBdXG4gKiBAcGFyYW0ge251bWJlcn0gW3k9MF1cbiAqIEBwYXJhbSB7bnVtYmVyfSBbeDI9MV1cbiAqIEBwYXJhbSB7bnVtYmVyfSBbeTI9MF1cbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGNvbG9yU3RvcHNcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2dsb2JhbENvb3JkPWZhbHNlXVxuICovXG52YXIgTGluZWFyR3JhZGllbnQgPSBmdW5jdGlvbiAoeCwgeSwgeDIsIHkyLCBjb2xvclN0b3BzLCBnbG9iYWxDb29yZCkge1xuICAvLyBTaG91bGQgZG8gbm90aGluZyBtb3JlIGluIHRoaXMgY29uc3RydWN0b3IuIEJlY2F1c2UgZ3JhZGllbnQgY2FuIGJlXG4gIC8vIGRlY2xhcmQgYnkgYGNvbG9yOiB7dHlwZTogJ2xpbmVhcicsIGNvbG9yU3RvcHM6IC4uLn1gLCB3aGVyZVxuICAvLyB0aGlzIGNvbnN0cnVjdG9yIHdpbGwgbm90IGJlIGNhbGxlZC5cbiAgdGhpcy54ID0geCA9PSBudWxsID8gMCA6IHg7XG4gIHRoaXMueSA9IHkgPT0gbnVsbCA/IDAgOiB5O1xuICB0aGlzLngyID0geDIgPT0gbnVsbCA/IDEgOiB4MjtcbiAgdGhpcy55MiA9IHkyID09IG51bGwgPyAwIDogeTI7IC8vIENhbiBiZSBjbG9uZWRcblxuICB0aGlzLnR5cGUgPSAnbGluZWFyJzsgLy8gSWYgdXNlIGdsb2JhbCBjb29yZFxuXG4gIHRoaXMuZ2xvYmFsID0gZ2xvYmFsQ29vcmQgfHwgZmFsc2U7XG4gIEdyYWRpZW50LmNhbGwodGhpcywgY29sb3JTdG9wcyk7XG59O1xuXG5MaW5lYXJHcmFkaWVudC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBMaW5lYXJHcmFkaWVudFxufTtcbnpyVXRpbC5pbmhlcml0cyhMaW5lYXJHcmFkaWVudCwgR3JhZGllbnQpO1xudmFyIF9kZWZhdWx0ID0gTGluZWFyR3JhZGllbnQ7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///151\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\nvar normalizeToArray = _model.normalizeToArray;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar inner = makeInner();\\n\\nfunction getNearestColorPalette(colors, requestColorNum) {\\n  var paletteNum = colors.length; // TODO colors must be in order\\n\\n  for (var i = 0; i < paletteNum; i++) {\\n    if (colors[i].length > requestColorNum) {\\n      return colors[i];\\n    }\\n  }\\n\\n  return colors[paletteNum - 1];\\n}\\n\\nvar _default = {\\n  clearColorPalette: function () {\\n    inner(this).colorIdx = 0;\\n    inner(this).colorNameMap = {};\\n  },\\n\\n  /**\\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\\n   *                 twise with the same parameters will get different result.\\n   * @param {Object} [scope=this]\\n   * @param {Object} [requestColorNum]\\n   * @return {string} color string.\\n   */\\n  getColorFromPalette: function (name, scope, requestColorNum) {\\n    scope = scope || this;\\n    var scopeFields = inner(scope);\\n    var colorIdx = scopeFields.colorIdx || 0;\\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\\n\\n    if (colorNameMap.hasOwnProperty(name)) {\\n      return colorNameMap[name];\\n    }\\n\\n    var defaultColorPalette = normalizeToArray(this.get(\\'color\\', true));\\n    var layeredColorPalette = this.get(\\'colorLayer\\', true);\\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can\\'t find in layered color palette.\\n\\n    colorPalette = colorPalette || defaultColorPalette;\\n\\n    if (!colorPalette || !colorPalette.length) {\\n      return;\\n    }\\n\\n    var color = colorPalette[colorIdx];\\n\\n    if (name) {\\n      colorNameMap[name] = color;\\n    }\\n\\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\\n    return color;\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvbWl4aW4vY29sb3JQYWxldHRlLmpzP2U0N2IiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUFrQjs7QUFFdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUNBQWlDOztBQUVqQyxpQkFBaUIsZ0JBQWdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsT0FBTztBQUNwQixjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjs7QUFFakY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0SkFBNEo7O0FBRTVKOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIF9tb2RlbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsL21vZGVsXCIpO1xuXG52YXIgbWFrZUlubmVyID0gX21vZGVsLm1ha2VJbm5lcjtcbnZhciBub3JtYWxpemVUb0FycmF5ID0gX21vZGVsLm5vcm1hbGl6ZVRvQXJyYXk7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBpbm5lciA9IG1ha2VJbm5lcigpO1xuXG5mdW5jdGlvbiBnZXROZWFyZXN0Q29sb3JQYWxldHRlKGNvbG9ycywgcmVxdWVzdENvbG9yTnVtKSB7XG4gIHZhciBwYWxldHRlTnVtID0gY29sb3JzLmxlbmd0aDsgLy8gVE9ETyBjb2xvcnMgbXVzdCBiZSBpbiBvcmRlclxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGFsZXR0ZU51bTsgaSsrKSB7XG4gICAgaWYgKGNvbG9yc1tpXS5sZW5ndGggPiByZXF1ZXN0Q29sb3JOdW0pIHtcbiAgICAgIHJldHVybiBjb2xvcnNbaV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNvbG9yc1twYWxldHRlTnVtIC0gMV07XG59XG5cbnZhciBfZGVmYXVsdCA9IHtcbiAgY2xlYXJDb2xvclBhbGV0dGU6IGZ1bmN0aW9uICgpIHtcbiAgICBpbm5lcih0aGlzKS5jb2xvcklkeCA9IDA7XG4gICAgaW5uZXIodGhpcykuY29sb3JOYW1lTWFwID0ge307XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIE1VU1QgTk9UIGJlIG51bGwvdW5kZWZpbmVkLiBPdGhlcndpc2UgY2FsbCB0aGlzIGZ1bmN0aW9uXG4gICAqICAgICAgICAgICAgICAgICB0d2lzZSB3aXRoIHRoZSBzYW1lIHBhcmFtZXRlcnMgd2lsbCBnZXQgZGlmZmVyZW50IHJlc3VsdC5cbiAgICogQHBhcmFtIHtPYmplY3R9IFtzY29wZT10aGlzXVxuICAgKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RDb2xvck51bV1cbiAgICogQHJldHVybiB7c3RyaW5nfSBjb2xvciBzdHJpbmcuXG4gICAqL1xuICBnZXRDb2xvckZyb21QYWxldHRlOiBmdW5jdGlvbiAobmFtZSwgc2NvcGUsIHJlcXVlc3RDb2xvck51bSkge1xuICAgIHNjb3BlID0gc2NvcGUgfHwgdGhpcztcbiAgICB2YXIgc2NvcGVGaWVsZHMgPSBpbm5lcihzY29wZSk7XG4gICAgdmFyIGNvbG9ySWR4ID0gc2NvcGVGaWVsZHMuY29sb3JJZHggfHwgMDtcbiAgICB2YXIgY29sb3JOYW1lTWFwID0gc2NvcGVGaWVsZHMuY29sb3JOYW1lTWFwID0gc2NvcGVGaWVsZHMuY29sb3JOYW1lTWFwIHx8IHt9OyAvLyBVc2UgYGhhc093blByb3BlcnR5YCB0byBhdm9pZCBjb25mbGljdCB3aXRoIE9iamVjdC5wcm90b3R5cGUuXG5cbiAgICBpZiAoY29sb3JOYW1lTWFwLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICByZXR1cm4gY29sb3JOYW1lTWFwW25hbWVdO1xuICAgIH1cblxuICAgIHZhciBkZWZhdWx0Q29sb3JQYWxldHRlID0gbm9ybWFsaXplVG9BcnJheSh0aGlzLmdldCgnY29sb3InLCB0cnVlKSk7XG4gICAgdmFyIGxheWVyZWRDb2xvclBhbGV0dGUgPSB0aGlzLmdldCgnY29sb3JMYXllcicsIHRydWUpO1xuICAgIHZhciBjb2xvclBhbGV0dGUgPSByZXF1ZXN0Q29sb3JOdW0gPT0gbnVsbCB8fCAhbGF5ZXJlZENvbG9yUGFsZXR0ZSA/IGRlZmF1bHRDb2xvclBhbGV0dGUgOiBnZXROZWFyZXN0Q29sb3JQYWxldHRlKGxheWVyZWRDb2xvclBhbGV0dGUsIHJlcXVlc3RDb2xvck51bSk7IC8vIEluIGNhc2UgY2FuJ3QgZmluZCBpbiBsYXllcmVkIGNvbG9yIHBhbGV0dGUuXG5cbiAgICBjb2xvclBhbGV0dGUgPSBjb2xvclBhbGV0dGUgfHwgZGVmYXVsdENvbG9yUGFsZXR0ZTtcblxuICAgIGlmICghY29sb3JQYWxldHRlIHx8ICFjb2xvclBhbGV0dGUubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIGNvbG9yID0gY29sb3JQYWxldHRlW2NvbG9ySWR4XTtcblxuICAgIGlmIChuYW1lKSB7XG4gICAgICBjb2xvck5hbWVNYXBbbmFtZV0gPSBjb2xvcjtcbiAgICB9XG5cbiAgICBzY29wZUZpZWxkcy5jb2xvcklkeCA9IChjb2xvcklkeCArIDEpICUgY29sb3JQYWxldHRlLmxlbmd0aDtcbiAgICByZXR1cm4gY29sb3I7XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///152\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar _util = __webpack_require__(59);\\n\\nvar createHashMap = _util.createHashMap;\\nvar retrieve = _util.retrieve;\\nvar each = _util.each;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Helper for model references.\\n * There are many manners to refer axis/coordSys.\\n */\\n// TODO\\n// merge relevant logic to this file?\\n// check: \\\"modelHelper\\\" of tooltip and \\\"BrushTargetManager\\\".\\n\\n/**\\n * @return {Object} For example:\\n * {\\n *     coordSysName: 'cartesian2d',\\n *     coordSysDims: ['x', 'y', ...],\\n *     axisMap: HashMap({\\n *         x: xAxisModel,\\n *         y: yAxisModel\\n *     }),\\n *     categoryAxisMap: HashMap({\\n *         x: xAxisModel,\\n *         y: undefined\\n *     }),\\n *     // It also indicate that whether there is category axis.\\n *     firstCategoryDimIndex: 1,\\n *     // To replace user specified encode.\\n * }\\n */\\nfunction getCoordSysDefineBySeries(seriesModel) {\\n  var coordSysName = seriesModel.get('coordinateSystem');\\n  var result = {\\n    coordSysName: coordSysName,\\n    coordSysDims: [],\\n    axisMap: createHashMap(),\\n    categoryAxisMap: createHashMap()\\n  };\\n  var fetch = fetchers[coordSysName];\\n\\n  if (fetch) {\\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\\n    return result;\\n  }\\n}\\n\\nvar fetchers = {\\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\\n    result.coordSysDims = ['x', 'y'];\\n    axisMap.set('x', xAxisModel);\\n    axisMap.set('y', yAxisModel);\\n\\n    if (isCategory(xAxisModel)) {\\n      categoryAxisMap.set('x', xAxisModel);\\n      result.firstCategoryDimIndex = 0;\\n    }\\n\\n    if (isCategory(yAxisModel)) {\\n      categoryAxisMap.set('y', yAxisModel);\\n      result.firstCategoryDimIndex = 1;\\n    }\\n  },\\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\\n    result.coordSysDims = ['single'];\\n    axisMap.set('single', singleAxisModel);\\n\\n    if (isCategory(singleAxisModel)) {\\n      categoryAxisMap.set('single', singleAxisModel);\\n      result.firstCategoryDimIndex = 0;\\n    }\\n  },\\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\\n    result.coordSysDims = ['radius', 'angle'];\\n    axisMap.set('radius', radiusAxisModel);\\n    axisMap.set('angle', angleAxisModel);\\n\\n    if (isCategory(radiusAxisModel)) {\\n      categoryAxisMap.set('radius', radiusAxisModel);\\n      result.firstCategoryDimIndex = 0;\\n    }\\n\\n    if (isCategory(angleAxisModel)) {\\n      categoryAxisMap.set('angle', angleAxisModel);\\n      result.firstCategoryDimIndex = 1;\\n    }\\n  },\\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\\n    result.coordSysDims = ['lng', 'lat'];\\n  },\\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\\n    var ecModel = seriesModel.ecModel;\\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\\n      var axisDim = coordSysDims[index];\\n      axisMap.set(axisDim, axisModel);\\n\\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\\n        categoryAxisMap.set(axisDim, axisModel);\\n        result.firstCategoryDimIndex = index;\\n      }\\n    });\\n  }\\n};\\n\\nfunction isCategory(axisModel) {\\n  return axisModel.get('type') === 'category';\\n}\\n\\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvcmVmZXJIZWxwZXIuanM/OGI3ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxtQkFBTyxDQUFDLEVBQVc7O0FBRWpDOztBQUVBLFlBQVksbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFM0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIxNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIF9jb25maWcgPSByZXF1aXJlKFwiLi4vY29uZmlnXCIpO1xuXG52YXIgX19ERVZfXyA9IF9jb25maWcuX19ERVZfXztcblxudmFyIF91dGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIGNyZWF0ZUhhc2hNYXAgPSBfdXRpbC5jcmVhdGVIYXNoTWFwO1xudmFyIHJldHJpZXZlID0gX3V0aWwucmV0cmlldmU7XG52YXIgZWFjaCA9IF91dGlsLmVhY2g7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyoqXG4gKiBIZWxwZXIgZm9yIG1vZGVsIHJlZmVyZW5jZXMuXG4gKiBUaGVyZSBhcmUgbWFueSBtYW5uZXJzIHRvIHJlZmVyIGF4aXMvY29vcmRTeXMuXG4gKi9cbi8vIFRPRE9cbi8vIG1lcmdlIHJlbGV2YW50IGxvZ2ljIHRvIHRoaXMgZmlsZT9cbi8vIGNoZWNrOiBcIm1vZGVsSGVscGVyXCIgb2YgdG9vbHRpcCBhbmQgXCJCcnVzaFRhcmdldE1hbmFnZXJcIi5cblxuLyoqXG4gKiBAcmV0dXJuIHtPYmplY3R9IEZvciBleGFtcGxlOlxuICoge1xuICogICAgIGNvb3JkU3lzTmFtZTogJ2NhcnRlc2lhbjJkJyxcbiAqICAgICBjb29yZFN5c0RpbXM6IFsneCcsICd5JywgLi4uXSxcbiAqICAgICBheGlzTWFwOiBIYXNoTWFwKHtcbiAqICAgICAgICAgeDogeEF4aXNNb2RlbCxcbiAqICAgICAgICAgeTogeUF4aXNNb2RlbFxuICogICAgIH0pLFxuICogICAgIGNhdGVnb3J5QXhpc01hcDogSGFzaE1hcCh7XG4gKiAgICAgICAgIHg6IHhBeGlzTW9kZWwsXG4gKiAgICAgICAgIHk6IHVuZGVmaW5lZFxuICogICAgIH0pLFxuICogICAgIC8vIEl0IGFsc28gaW5kaWNhdGUgdGhhdCB3aGV0aGVyIHRoZXJlIGlzIGNhdGVnb3J5IGF4aXMuXG4gKiAgICAgZmlyc3RDYXRlZ29yeURpbUluZGV4OiAxLFxuICogICAgIC8vIFRvIHJlcGxhY2UgdXNlciBzcGVjaWZpZWQgZW5jb2RlLlxuICogfVxuICovXG5mdW5jdGlvbiBnZXRDb29yZFN5c0RlZmluZUJ5U2VyaWVzKHNlcmllc01vZGVsKSB7XG4gIHZhciBjb29yZFN5c05hbWUgPSBzZXJpZXNNb2RlbC5nZXQoJ2Nvb3JkaW5hdGVTeXN0ZW0nKTtcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICBjb29yZFN5c05hbWU6IGNvb3JkU3lzTmFtZSxcbiAgICBjb29yZFN5c0RpbXM6IFtdLFxuICAgIGF4aXNNYXA6IGNyZWF0ZUhhc2hNYXAoKSxcbiAgICBjYXRlZ29yeUF4aXNNYXA6IGNyZWF0ZUhhc2hNYXAoKVxuICB9O1xuICB2YXIgZmV0Y2ggPSBmZXRjaGVyc1tjb29yZFN5c05hbWVdO1xuXG4gIGlmIChmZXRjaCkge1xuICAgIGZldGNoKHNlcmllc01vZGVsLCByZXN1bHQsIHJlc3VsdC5heGlzTWFwLCByZXN1bHQuY2F0ZWdvcnlBeGlzTWFwKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59XG5cbnZhciBmZXRjaGVycyA9IHtcbiAgY2FydGVzaWFuMmQ6IGZ1bmN0aW9uIChzZXJpZXNNb2RlbCwgcmVzdWx0LCBheGlzTWFwLCBjYXRlZ29yeUF4aXNNYXApIHtcbiAgICB2YXIgeEF4aXNNb2RlbCA9IHNlcmllc01vZGVsLmdldFJlZmVycmluZ0NvbXBvbmVudHMoJ3hBeGlzJylbMF07XG4gICAgdmFyIHlBeGlzTW9kZWwgPSBzZXJpZXNNb2RlbC5nZXRSZWZlcnJpbmdDb21wb25lbnRzKCd5QXhpcycpWzBdO1xuICAgIHJlc3VsdC5jb29yZFN5c0RpbXMgPSBbJ3gnLCAneSddO1xuICAgIGF4aXNNYXAuc2V0KCd4JywgeEF4aXNNb2RlbCk7XG4gICAgYXhpc01hcC5zZXQoJ3knLCB5QXhpc01vZGVsKTtcblxuICAgIGlmIChpc0NhdGVnb3J5KHhBeGlzTW9kZWwpKSB7XG4gICAgICBjYXRlZ29yeUF4aXNNYXAuc2V0KCd4JywgeEF4aXNNb2RlbCk7XG4gICAgICByZXN1bHQuZmlyc3RDYXRlZ29yeURpbUluZGV4ID0gMDtcbiAgICB9XG5cbiAgICBpZiAoaXNDYXRlZ29yeSh5QXhpc01vZGVsKSkge1xuICAgICAgY2F0ZWdvcnlBeGlzTWFwLnNldCgneScsIHlBeGlzTW9kZWwpO1xuICAgICAgcmVzdWx0LmZpcnN0Q2F0ZWdvcnlEaW1JbmRleCA9IDE7XG4gICAgfVxuICB9LFxuICBzaW5nbGVBeGlzOiBmdW5jdGlvbiAoc2VyaWVzTW9kZWwsIHJlc3VsdCwgYXhpc01hcCwgY2F0ZWdvcnlBeGlzTWFwKSB7XG4gICAgdmFyIHNpbmdsZUF4aXNNb2RlbCA9IHNlcmllc01vZGVsLmdldFJlZmVycmluZ0NvbXBvbmVudHMoJ3NpbmdsZUF4aXMnKVswXTtcbiAgICByZXN1bHQuY29vcmRTeXNEaW1zID0gWydzaW5nbGUnXTtcbiAgICBheGlzTWFwLnNldCgnc2luZ2xlJywgc2luZ2xlQXhpc01vZGVsKTtcblxuICAgIGlmIChpc0NhdGVnb3J5KHNpbmdsZUF4aXNNb2RlbCkpIHtcbiAgICAgIGNhdGVnb3J5QXhpc01hcC5zZXQoJ3NpbmdsZScsIHNpbmdsZUF4aXNNb2RlbCk7XG4gICAgICByZXN1bHQuZmlyc3RDYXRlZ29yeURpbUluZGV4ID0gMDtcbiAgICB9XG4gIH0sXG4gIHBvbGFyOiBmdW5jdGlvbiAoc2VyaWVzTW9kZWwsIHJlc3VsdCwgYXhpc01hcCwgY2F0ZWdvcnlBeGlzTWFwKSB7XG4gICAgdmFyIHBvbGFyTW9kZWwgPSBzZXJpZXNNb2RlbC5nZXRSZWZlcnJpbmdDb21wb25lbnRzKCdwb2xhcicpWzBdO1xuICAgIHZhciByYWRpdXNBeGlzTW9kZWwgPSBwb2xhck1vZGVsLmZpbmRBeGlzTW9kZWwoJ3JhZGl1c0F4aXMnKTtcbiAgICB2YXIgYW5nbGVBeGlzTW9kZWwgPSBwb2xhck1vZGVsLmZpbmRBeGlzTW9kZWwoJ2FuZ2xlQXhpcycpO1xuICAgIHJlc3VsdC5jb29yZFN5c0RpbXMgPSBbJ3JhZGl1cycsICdhbmdsZSddO1xuICAgIGF4aXNNYXAuc2V0KCdyYWRpdXMnLCByYWRpdXNBeGlzTW9kZWwpO1xuICAgIGF4aXNNYXAuc2V0KCdhbmdsZScsIGFuZ2xlQXhpc01vZGVsKTtcblxuICAgIGlmIChpc0NhdGVnb3J5KHJhZGl1c0F4aXNNb2RlbCkpIHtcbiAgICAgIGNhdGVnb3J5QXhpc01hcC5zZXQoJ3JhZGl1cycsIHJhZGl1c0F4aXNNb2RlbCk7XG4gICAgICByZXN1bHQuZmlyc3RDYXRlZ29yeURpbUluZGV4ID0gMDtcbiAgICB9XG5cbiAgICBpZiAoaXNDYXRlZ29yeShhbmdsZUF4aXNNb2RlbCkpIHtcbiAgICAgIGNhdGVnb3J5QXhpc01hcC5zZXQoJ2FuZ2xlJywgYW5nbGVBeGlzTW9kZWwpO1xuICAgICAgcmVzdWx0LmZpcnN0Q2F0ZWdvcnlEaW1JbmRleCA9IDE7XG4gICAgfVxuICB9LFxuICBnZW86IGZ1bmN0aW9uIChzZXJpZXNNb2RlbCwgcmVzdWx0LCBheGlzTWFwLCBjYXRlZ29yeUF4aXNNYXApIHtcbiAgICByZXN1bHQuY29vcmRTeXNEaW1zID0gWydsbmcnLCAnbGF0J107XG4gIH0sXG4gIHBhcmFsbGVsOiBmdW5jdGlvbiAoc2VyaWVzTW9kZWwsIHJlc3VsdCwgYXhpc01hcCwgY2F0ZWdvcnlBeGlzTWFwKSB7XG4gICAgdmFyIGVjTW9kZWwgPSBzZXJpZXNNb2RlbC5lY01vZGVsO1xuICAgIHZhciBwYXJhbGxlbE1vZGVsID0gZWNNb2RlbC5nZXRDb21wb25lbnQoJ3BhcmFsbGVsJywgc2VyaWVzTW9kZWwuZ2V0KCdwYXJhbGxlbEluZGV4JykpO1xuICAgIHZhciBjb29yZFN5c0RpbXMgPSByZXN1bHQuY29vcmRTeXNEaW1zID0gcGFyYWxsZWxNb2RlbC5kaW1lbnNpb25zLnNsaWNlKCk7XG4gICAgZWFjaChwYXJhbGxlbE1vZGVsLnBhcmFsbGVsQXhpc0luZGV4LCBmdW5jdGlvbiAoYXhpc0luZGV4LCBpbmRleCkge1xuICAgICAgdmFyIGF4aXNNb2RlbCA9IGVjTW9kZWwuZ2V0Q29tcG9uZW50KCdwYXJhbGxlbEF4aXMnLCBheGlzSW5kZXgpO1xuICAgICAgdmFyIGF4aXNEaW0gPSBjb29yZFN5c0RpbXNbaW5kZXhdO1xuICAgICAgYXhpc01hcC5zZXQoYXhpc0RpbSwgYXhpc01vZGVsKTtcblxuICAgICAgaWYgKGlzQ2F0ZWdvcnkoYXhpc01vZGVsKSAmJiByZXN1bHQuZmlyc3RDYXRlZ29yeURpbUluZGV4ID09IG51bGwpIHtcbiAgICAgICAgY2F0ZWdvcnlBeGlzTWFwLnNldChheGlzRGltLCBheGlzTW9kZWwpO1xuICAgICAgICByZXN1bHQuZmlyc3RDYXRlZ29yeURpbUluZGV4ID0gaW5kZXg7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGlzQ2F0ZWdvcnkoYXhpc01vZGVsKSB7XG4gIHJldHVybiBheGlzTW9kZWwuZ2V0KCd0eXBlJykgPT09ICdjYXRlZ29yeSc7XG59XG5cbmV4cG9ydHMuZ2V0Q29vcmRTeXNEZWZpbmVCeVNlcmllcyA9IGdldENvb3JkU3lzRGVmaW5lQnlTZXJpZXM7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///153\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\\n\\nfunction ExtensionAPI(chartInstance) {\\n  zrUtil.each(echartsAPIList, function (name) {\\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\\n  }, this);\\n}\\n\\nvar _default = ExtensionAPI;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvRXh0ZW5zaW9uQVBJLmpzPzg0M2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1UEFBdVA7O0FBRXZQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBIiwiZmlsZSI6IjE1NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIGVjaGFydHNBUElMaXN0ID0gWydnZXREb20nLCAnZ2V0WnInLCAnZ2V0V2lkdGgnLCAnZ2V0SGVpZ2h0JywgJ2dldERldmljZVBpeGVsUmF0aW8nLCAnZGlzcGF0Y2hBY3Rpb24nLCAnaXNEaXNwb3NlZCcsICdvbicsICdvZmYnLCAnZ2V0RGF0YVVSTCcsICdnZXRDb25uZWN0ZWREYXRhVVJMJywgJ2dldE1vZGVsJywgJ2dldE9wdGlvbicsICdnZXRWaWV3T2ZDb21wb25lbnRNb2RlbCcsICdnZXRWaWV3T2ZTZXJpZXNNb2RlbCddOyAvLyBBbmQgYGdldENvb3JkaW5hdGVTeXN0ZW1zYCBhbmQgYGdldENvbXBvbmVudEJ5RWxlbWVudGAgd2lsbCBiZSBpbmplY3RlZCBpbiBlY2hhcnRzLmpzXG5cbmZ1bmN0aW9uIEV4dGVuc2lvbkFQSShjaGFydEluc3RhbmNlKSB7XG4gIHpyVXRpbC5lYWNoKGVjaGFydHNBUElMaXN0LCBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRoaXNbbmFtZV0gPSB6clV0aWwuYmluZChjaGFydEluc3RhbmNlW25hbWVdLCBjaGFydEluc3RhbmNlKTtcbiAgfSwgdGhpcyk7XG59XG5cbnZhciBfZGVmYXVsdCA9IEV4dGVuc2lvbkFQSTtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///154\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar env = __webpack_require__(66);\\n\\nvar _format = __webpack_require__(69);\\n\\nvar formatTime = _format.formatTime;\\nvar encodeHTML = _format.encodeHTML;\\nvar addCommas = _format.addCommas;\\nvar getTooltipMarker = _format.getTooltipMarker;\\n\\nvar modelUtil = __webpack_require__(60);\\n\\nvar ComponentModel = __webpack_require__(72);\\n\\nvar colorPaletteMixin = __webpack_require__(152);\\n\\nvar dataFormatMixin = __webpack_require__(230);\\n\\nvar _layout = __webpack_require__(78);\\n\\nvar getLayoutParams = _layout.getLayoutParams;\\nvar mergeLayoutParam = _layout.mergeLayoutParam;\\n\\nvar _task = __webpack_require__(108);\\n\\nvar createTask = _task.createTask;\\n\\nvar _sourceHelper = __webpack_require__(91);\\n\\nvar prepareSource = _sourceHelper.prepareSource;\\nvar getSource = _sourceHelper.getSource;\\n\\nvar _dataProvider = __webpack_require__(85);\\n\\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar inner = modelUtil.makeInner();\\nvar SeriesModel = ComponentModel.extend({\\n  type: 'series.__base__',\\n\\n  /**\\n   * @readOnly\\n   */\\n  seriesIndex: 0,\\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\\n  coordinateSystem: null,\\n\\n  /**\\n   * @type {Object}\\n   * @protected\\n   */\\n  defaultOption: null,\\n\\n  /**\\n   * Data provided for legend\\n   * @type {Function}\\n   */\\n  // PENDING\\n  legendDataProvider: null,\\n\\n  /**\\n   * Access path of color for visual\\n   */\\n  visualColorAccessPath: 'itemStyle.color',\\n\\n  /**\\n   * Support merge layout params.\\n   * Only support 'box' now (left/right/top/bottom/width/height).\\n   * @type {string|Object} Object can be {ignoreSize: true}\\n   * @readOnly\\n   */\\n  layoutMode: null,\\n  init: function (option, parentModel, ecModel, extraOpt) {\\n    /**\\n     * @type {number}\\n     * @readOnly\\n     */\\n    this.seriesIndex = this.componentIndex;\\n    this.dataTask = createTask({\\n      count: dataTaskCount,\\n      reset: dataTaskReset\\n    });\\n    this.dataTask.context = {\\n      model: this\\n    };\\n    this.mergeDefaultAndTheme(option, ecModel);\\n    prepareSource(this);\\n    var data = this.getInitialData(option, ecModel);\\n    wrapData(data, this);\\n    this.dataTask.context.data = data;\\n\\n    /**\\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\\n     * @private\\n     */\\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\\n    // cause data.graph.data !== data when using\\n    // module:echarts/data/Graph or module:echarts/data/Tree.\\n    // See module:echarts/data/helper/linkList\\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\\n    // Call `seriesModel.getRawData()` instead.\\n    // this.restoreData();\\n\\n    autoSeriesName(this);\\n  },\\n\\n  /**\\n   * Util for merge default and theme to option\\n   * @param  {Object} option\\n   * @param  {module:echarts/model/Global} ecModel\\n   */\\n  mergeDefaultAndTheme: function (option, ecModel) {\\n    var layoutMode = this.layoutMode;\\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\\n    // But if name duplicate between series subType\\n    // (for example: parallel) add component mainType,\\n    // add suffix 'Series'.\\n\\n    var themeSubType = this.subType;\\n\\n    if (ComponentModel.hasClass(themeSubType)) {\\n      themeSubType += 'Series';\\n    }\\n\\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\\n\\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\\n    this.fillDataTextStyle(option.data);\\n\\n    if (layoutMode) {\\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\\n    }\\n  },\\n  mergeOption: function (newSeriesOption, ecModel) {\\n    // this.settingTask.dirty();\\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\\n    this.fillDataTextStyle(newSeriesOption.data);\\n    var layoutMode = this.layoutMode;\\n\\n    if (layoutMode) {\\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\\n    }\\n\\n    prepareSource(this);\\n    var data = this.getInitialData(newSeriesOption, ecModel);\\n    wrapData(data, this);\\n    this.dataTask.dirty();\\n    this.dataTask.context.data = data;\\n    inner(this).dataBeforeProcessed = data;\\n    autoSeriesName(this);\\n  },\\n  fillDataTextStyle: function (data) {\\n    // Default data label emphasis `show`\\n    // FIXME Tree structure data ?\\n    // FIXME Performance ?\\n    if (data && !zrUtil.isTypedArray(data)) {\\n      var props = ['show'];\\n\\n      for (var i = 0; i < data.length; i++) {\\n        if (data[i] && data[i].label) {\\n          modelUtil.defaultEmphasis(data[i], 'label', props);\\n        }\\n      }\\n    }\\n  },\\n\\n  /**\\n   * Init a data structure from data related option in series\\n   * Must be overwritten\\n   */\\n  getInitialData: function () {},\\n\\n  /**\\n   * Append data to list\\n   * @param {Object} params\\n   * @param {Array|TypedArray} params.data\\n   */\\n  appendData: function (params) {\\n    // FIXME ???\\n    // (1) If data from dataset, forbidden append.\\n    // (2) support append data of dataset.\\n    var data = this.getRawData();\\n    data.appendData(params.data);\\n  },\\n\\n  /**\\n   * Consider some method like `filter`, `map` need make new data,\\n   * We should make sure that `seriesModel.getData()` get correct\\n   * data in the stream procedure. So we fetch data from upstream\\n   * each time `task.perform` called.\\n   * @param {string} [dataType]\\n   * @return {module:echarts/data/List}\\n   */\\n  getData: function (dataType) {\\n    var task = getCurrentTask(this);\\n\\n    if (task) {\\n      var data = task.context.data;\\n      return dataType == null ? data : data.getLinkedData(dataType);\\n    } else {\\n      // When series is not alive (that may happen when click toolbox\\n      // restore or setOption with not merge mode), series data may\\n      // be still need to judge animation or something when graphic\\n      // elements want to know whether fade out.\\n      return inner(this).data;\\n    }\\n  },\\n\\n  /**\\n   * @param {module:echarts/data/List} data\\n   */\\n  setData: function (data) {\\n    var task = getCurrentTask(this);\\n\\n    if (task) {\\n      var context = task.context; // Consider case: filter, data sample.\\n\\n      if (context.data !== data && task.modifyOutputEnd) {\\n        task.setOutputEnd(data.count());\\n      }\\n\\n      context.outputData = data; // Caution: setData should update context.data,\\n      // Because getData may be called multiply in a\\n      // single stage and expect to get the data just\\n      // set. (For example, AxisProxy, x y both call\\n      // getData and setDate sequentially).\\n      // So the context.data should be fetched from\\n      // upstream each time when a stage starts to be\\n      // performed.\\n\\n      if (task !== this.dataTask) {\\n        context.data = data;\\n      }\\n    }\\n\\n    inner(this).data = data;\\n  },\\n\\n  /**\\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\\n   * @return {module:echarts/data/Source} source\\n   */\\n  getSource: function () {\\n    return getSource(this);\\n  },\\n\\n  /**\\n   * Get data before processed\\n   * @return {module:echarts/data/List}\\n   */\\n  getRawData: function () {\\n    return inner(this).dataBeforeProcessed;\\n  },\\n\\n  /**\\n   * Get base axis if has coordinate system and has axis.\\n   * By default use coordSys.getBaseAxis();\\n   * Can be overrided for some chart.\\n   * @return {type} description\\n   */\\n  getBaseAxis: function () {\\n    var coordSys = this.coordinateSystem;\\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\\n  },\\n  // FIXME\\n\\n  /**\\n   * Default tooltip formatter\\n   *\\n   * @param {number} dataIndex\\n   * @param {boolean} [multipleSeries=false]\\n   * @param {number} [dataType]\\n   * @param {string} [renderMode='html'] valid values: 'html' and 'richText'.\\n   *                                     'html' is used for rendering tooltip in extra DOM form, and the result\\n   *                                     string is used as DOM HTML content.\\n   *                                     'richText' is used for rendering tooltip in rich text form, for those where\\n   *                                     DOM operation is not supported.\\n   * @return {Object} formatted tooltip with `html` and `markers`\\n   */\\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\\n    var series = this;\\n    renderMode = renderMode || 'html';\\n    var newLine = renderMode === 'html' ? '<br/>' : '\\\\n';\\n    var isRichText = renderMode === 'richText';\\n    var markers = {};\\n    var markerId = 0;\\n\\n    function formatArrayValue(value) {\\n      // ??? TODO refactor these logic.\\n      // check: category-no-encode-has-axis-data in dataset.html\\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\\n        var dimItem = data.getDimensionInfo(idx);\\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\\n      }, 0);\\n      var result = [];\\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\\n      }) // By default, all dims is used on tooltip.\\n      : zrUtil.each(value, setEachItem);\\n\\n      function setEachItem(val, dim) {\\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\\n\\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\\n          return;\\n        }\\n\\n        var dimType = dimInfo.type;\\n        var markName = 'sub' + series.seriesIndex + 'at' + markerId;\\n        var dimHead = getTooltipMarker({\\n          color: color,\\n          type: 'subItem',\\n          renderMode: renderMode,\\n          markerId: markName\\n        });\\n        var dimHeadStr = typeof dimHead === 'string' ? dimHead : dimHead.content;\\n        var valStr = (vertially ? dimHeadStr + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\\n        valStr && result.push(valStr);\\n\\n        if (isRichText) {\\n          markers[markName] = color;\\n          ++markerId;\\n        }\\n      }\\n\\n      var newLine = vertially ? isRichText ? '\\\\n' : '<br/>' : '';\\n      var content = newLine + result.join(newLine || ', ');\\n      return {\\n        renderMode: renderMode,\\n        content: content,\\n        style: markers\\n      };\\n    }\\n\\n    function formatSingleValue(val) {\\n      // return encodeHTML(addCommas(val));\\n      return {\\n        renderMode: renderMode,\\n        content: encodeHTML(addCommas(val)),\\n        style: markers\\n      };\\n    }\\n\\n    var data = this.getData();\\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\\n    var tooltipDimLen = tooltipDims.length;\\n    var value = this.getRawValue(dataIndex);\\n    var isValueArr = zrUtil.isArray(value);\\n    var color = data.getItemVisual(dataIndex, 'color');\\n\\n    if (zrUtil.isObject(color) && color.colorStops) {\\n      color = (color.colorStops[0] || {}).color;\\n    }\\n\\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\\n\\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\\n    var content = formattedValue.content;\\n    var markName = series.seriesIndex + 'at' + markerId;\\n    var colorEl = getTooltipMarker({\\n      color: color,\\n      type: 'item',\\n      renderMode: renderMode,\\n      markerId: markName\\n    });\\n    markers[markName] = color;\\n    ++markerId;\\n    var name = data.getName(dataIndex);\\n    var seriesName = this.name;\\n\\n    if (!modelUtil.isNameSpecified(this)) {\\n      seriesName = '';\\n    }\\n\\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? newLine : ': ') : '';\\n    var colorStr = typeof colorEl === 'string' ? colorEl : colorEl.content;\\n    var html = !multipleSeries ? seriesName + colorStr + (name ? encodeHTML(name) + ': ' + content : content) : colorStr + seriesName + content;\\n    return {\\n      html: html,\\n      markers: markers\\n    };\\n  },\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isAnimationEnabled: function () {\\n    if (env.node) {\\n      return false;\\n    }\\n\\n    var animationEnabled = this.getShallow('animation');\\n\\n    if (animationEnabled) {\\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\\n        animationEnabled = false;\\n      }\\n    }\\n\\n    return animationEnabled;\\n  },\\n  restoreData: function () {\\n    this.dataTask.dirty();\\n  },\\n  getColorFromPalette: function (name, scope, requestColorNum) {\\n    var ecModel = this.ecModel; // PENDING\\n\\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\\n\\n    if (!color) {\\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\\n    }\\n\\n    return color;\\n  },\\n\\n  /**\\n   * Use `data.mapDimension(coordDim, true)` instead.\\n   * @deprecated\\n   */\\n  coordDimToDataDim: function (coordDim) {\\n    return this.getRawData().mapDimension(coordDim, true);\\n  },\\n\\n  /**\\n   * Get progressive rendering count each step\\n   * @return {number}\\n   */\\n  getProgressive: function () {\\n    return this.get('progressive');\\n  },\\n\\n  /**\\n   * Get progressive rendering count each step\\n   * @return {number}\\n   */\\n  getProgressiveThreshold: function () {\\n    return this.get('progressiveThreshold');\\n  },\\n\\n  /**\\n   * Get data indices for show tooltip content. See tooltip.\\n   * @abstract\\n   * @param {Array.<string>|string} dim\\n   * @param {Array.<number>} value\\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\\n   * @return {Object} {dataIndices, nestestValue}.\\n   */\\n  getAxisTooltipData: null,\\n\\n  /**\\n   * See tooltip.\\n   * @abstract\\n   * @param {number} dataIndex\\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\\n   */\\n  getTooltipPosition: null,\\n\\n  /**\\n   * @see {module:echarts/stream/Scheduler}\\n   */\\n  pipeTask: null,\\n\\n  /**\\n   * Convinient for override in extended class.\\n   * @protected\\n   * @type {Function}\\n   */\\n  preventIncremental: null,\\n\\n  /**\\n   * @public\\n   * @readOnly\\n   * @type {Object}\\n   */\\n  pipelineContext: null\\n});\\nzrUtil.mixin(SeriesModel, dataFormatMixin);\\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\\n/**\\n * MUST be called after `prepareSource` called\\n * Here we need to make auto series, especially for auto legend. But we\\n * do not modify series.name in option to avoid side effects.\\n */\\n\\nfunction autoSeriesName(seriesModel) {\\n  // User specified name has higher priority, otherwise it may cause\\n  // series can not be queried unexpectedly.\\n  var name = seriesModel.name;\\n\\n  if (!modelUtil.isNameSpecified(seriesModel)) {\\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\\n  }\\n}\\n\\nfunction getSeriesAutoName(seriesModel) {\\n  var data = seriesModel.getRawData();\\n  var dataDims = data.mapDimension('seriesName', true);\\n  var nameArr = [];\\n  zrUtil.each(dataDims, function (dataDim) {\\n    var dimInfo = data.getDimensionInfo(dataDim);\\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\\n  });\\n  return nameArr.join(' ');\\n}\\n\\nfunction dataTaskCount(context) {\\n  return context.model.getRawData().count();\\n}\\n\\nfunction dataTaskReset(context) {\\n  var seriesModel = context.model;\\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\\n  return dataTaskProgress;\\n}\\n\\nfunction dataTaskProgress(param, context) {\\n  // Avoid repead cloneShallow when data just created in reset.\\n  if (param.end > context.outputData.count()) {\\n    context.model.getRawData().cloneShallow(context.outputData);\\n  }\\n} // TODO refactor\\n\\n\\nfunction wrapData(data, seriesModel) {\\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\\n  });\\n}\\n\\nfunction onDataSelfChange(seriesModel) {\\n  var task = getCurrentTask(seriesModel);\\n\\n  if (task) {\\n    // Consider case: filter, selectRange\\n    task.setOutputEnd(this.count());\\n  }\\n}\\n\\nfunction getCurrentTask(seriesModel) {\\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\\n\\n  if (pipeline) {\\n    // When pipline finished, the currrentTask keep the last\\n    // task (renderTask).\\n    var task = pipeline.currentTask;\\n\\n    if (task) {\\n      var agentStubMap = task.agentStubMap;\\n\\n      if (agentStubMap) {\\n        task = agentStubMap.get(seriesModel.uid);\\n      }\\n    }\\n\\n    return task;\\n  }\\n}\\n\\nvar _default = SeriesModel;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///155\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar Group = __webpack_require__(81);\\n\\nvar componentUtil = __webpack_require__(90);\\n\\nvar clazzUtil = __webpack_require__(71);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar Component = function () {\\n  /**\\n   * @type {module:zrender/container/Group}\\n   * @readOnly\\n   */\\n  this.group = new Group();\\n  /**\\n   * @type {string}\\n   * @readOnly\\n   */\\n\\n  this.uid = componentUtil.getUID(\\'viewComponent\\');\\n};\\n\\nComponent.prototype = {\\n  constructor: Component,\\n  init: function (ecModel, api) {},\\n  render: function (componentModel, ecModel, api, payload) {},\\n  dispose: function () {},\\n\\n  /**\\n   * @param {string} eventType\\n   * @param {Object} query\\n   * @param {module:zrender/Element} targetEl\\n   * @param {Object} packedEvent\\n   * @return {boolen} Pass only when return `true`.\\n   */\\n  filterForExposedEvent: null\\n};\\nvar componentProto = Component.prototype;\\n\\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\\n}; // Enable Component.extend.\\n\\n\\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\\n\\nclazzUtil.enableClassManagement(Component, {\\n  registerWhenExtend: true\\n});\\nvar _default = Component;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvdmlldy9Db21wb25lbnQuanM/YjEyZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxtQkFBTyxDQUFDLEVBQTZCOztBQUVqRCxvQkFBb0IsbUJBQU8sQ0FBQyxFQUFtQjs7QUFFL0MsZ0JBQWdCLG1CQUFPLENBQUMsRUFBZTs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLDZEQUE2RDtBQUM3RCx5QkFBeUI7O0FBRXpCO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsT0FBTztBQUNwQixhQUFhLHVCQUF1QjtBQUNwQyxhQUFhLE9BQU87QUFDcEIsY0FBYyxPQUFPO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVJQUF1STtBQUN2SSxFQUFFOzs7QUFHRix1Q0FBdUM7O0FBRXZDO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIxNTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIEdyb3VwID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvbnRhaW5lci9Hcm91cFwiKTtcblxudmFyIGNvbXBvbmVudFV0aWwgPSByZXF1aXJlKFwiLi4vdXRpbC9jb21wb25lbnRcIik7XG5cbnZhciBjbGF6elV0aWwgPSByZXF1aXJlKFwiLi4vdXRpbC9jbGF6elwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIENvbXBvbmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIEB0eXBlIHttb2R1bGU6enJlbmRlci9jb250YWluZXIvR3JvdXB9XG4gICAqIEByZWFkT25seVxuICAgKi9cbiAgdGhpcy5ncm91cCA9IG5ldyBHcm91cCgpO1xuICAvKipcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQHJlYWRPbmx5XG4gICAqL1xuXG4gIHRoaXMudWlkID0gY29tcG9uZW50VXRpbC5nZXRVSUQoJ3ZpZXdDb21wb25lbnQnKTtcbn07XG5cbkNvbXBvbmVudC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBDb21wb25lbnQsXG4gIGluaXQ6IGZ1bmN0aW9uIChlY01vZGVsLCBhcGkpIHt9LFxuICByZW5kZXI6IGZ1bmN0aW9uIChjb21wb25lbnRNb2RlbCwgZWNNb2RlbCwgYXBpLCBwYXlsb2FkKSB7fSxcbiAgZGlzcG9zZTogZnVuY3Rpb24gKCkge30sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGVcbiAgICogQHBhcmFtIHtPYmplY3R9IHF1ZXJ5XG4gICAqIEBwYXJhbSB7bW9kdWxlOnpyZW5kZXIvRWxlbWVudH0gdGFyZ2V0RWxcbiAgICogQHBhcmFtIHtPYmplY3R9IHBhY2tlZEV2ZW50XG4gICAqIEByZXR1cm4ge2Jvb2xlbn0gUGFzcyBvbmx5IHdoZW4gcmV0dXJuIGB0cnVlYC5cbiAgICovXG4gIGZpbHRlckZvckV4cG9zZWRFdmVudDogbnVsbFxufTtcbnZhciBjb21wb25lbnRQcm90byA9IENvbXBvbmVudC5wcm90b3R5cGU7XG5cbmNvbXBvbmVudFByb3RvLnVwZGF0ZVZpZXcgPSBjb21wb25lbnRQcm90by51cGRhdGVMYXlvdXQgPSBjb21wb25lbnRQcm90by51cGRhdGVWaXN1YWwgPSBmdW5jdGlvbiAoc2VyaWVzTW9kZWwsIGVjTW9kZWwsIGFwaSwgcGF5bG9hZCkgey8vIERvIG5vdGhpbmc7XG59OyAvLyBFbmFibGUgQ29tcG9uZW50LmV4dGVuZC5cblxuXG5jbGF6elV0aWwuZW5hYmxlQ2xhc3NFeHRlbmQoQ29tcG9uZW50KTsgLy8gRW5hYmxlIGNhcGFiaWxpdHkgb2YgcmVnaXN0ZXJDbGFzcywgZ2V0Q2xhc3MsIGhhc0NsYXNzLCByZWdpc3RlclN1YlR5cGVEZWZhdWx0ZXIgYW5kIHNvIG9uLlxuXG5jbGF6elV0aWwuZW5hYmxlQ2xhc3NNYW5hZ2VtZW50KENvbXBvbmVudCwge1xuICByZWdpc3RlcldoZW5FeHRlbmQ6IHRydWVcbn0pO1xudmFyIF9kZWZhdWx0ID0gQ29tcG9uZW50O1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///156\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar each = _util.each;\\n\\nvar Group = __webpack_require__(81);\\n\\nvar componentUtil = __webpack_require__(90);\\n\\nvar clazzUtil = __webpack_require__(71);\\n\\nvar modelUtil = __webpack_require__(60);\\n\\nvar _task = __webpack_require__(108);\\n\\nvar createTask = _task.createTask;\\n\\nvar createRenderPlanner = __webpack_require__(109);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar inner = modelUtil.makeInner();\\nvar renderPlanner = createRenderPlanner();\\n\\nfunction Chart() {\\n  /**\\n   * @type {module:zrender/container/Group}\\n   * @readOnly\\n   */\\n  this.group = new Group();\\n  /**\\n   * @type {string}\\n   * @readOnly\\n   */\\n\\n  this.uid = componentUtil.getUID('viewChart');\\n  this.renderTask = createTask({\\n    plan: renderTaskPlan,\\n    reset: renderTaskReset\\n  });\\n  this.renderTask.context = {\\n    view: this\\n  };\\n}\\n\\nChart.prototype = {\\n  type: 'chart',\\n\\n  /**\\n   * Init the chart.\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   */\\n  init: function (ecModel, api) {},\\n\\n  /**\\n   * Render the chart.\\n   * @param  {module:echarts/model/Series} seriesModel\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   * @param  {Object} payload\\n   */\\n  render: function (seriesModel, ecModel, api, payload) {},\\n\\n  /**\\n   * Highlight series or specified data item.\\n   * @param  {module:echarts/model/Series} seriesModel\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   * @param  {Object} payload\\n   */\\n  highlight: function (seriesModel, ecModel, api, payload) {\\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\\n  },\\n\\n  /**\\n   * Downplay series or specified data item.\\n   * @param  {module:echarts/model/Series} seriesModel\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   * @param  {Object} payload\\n   */\\n  downplay: function (seriesModel, ecModel, api, payload) {\\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\\n  },\\n\\n  /**\\n   * Remove self.\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   */\\n  remove: function (ecModel, api) {\\n    this.group.removeAll();\\n  },\\n\\n  /**\\n   * Dispose self.\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   */\\n  dispose: function () {},\\n\\n  /**\\n   * Rendering preparation in progressive mode.\\n   * @param  {module:echarts/model/Series} seriesModel\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   * @param  {Object} payload\\n   */\\n  incrementalPrepareRender: null,\\n\\n  /**\\n   * Render in progressive mode.\\n   * @param  {Object} params See taskParams in `stream/task.js`\\n   * @param  {module:echarts/model/Series} seriesModel\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   * @param  {Object} payload\\n   */\\n  incrementalRender: null,\\n\\n  /**\\n   * Update transform directly.\\n   * @param  {module:echarts/model/Series} seriesModel\\n   * @param  {module:echarts/model/Global} ecModel\\n   * @param  {module:echarts/ExtensionAPI} api\\n   * @param  {Object} payload\\n   * @return {Object} {update: true}\\n   */\\n  updateTransform: null,\\n\\n  /**\\n   * The view contains the given point.\\n   * @interface\\n   * @param {Array.<number>} point\\n   * @return {boolean}\\n   */\\n  // containPoint: function () {}\\n\\n  /**\\n   * @param {string} eventType\\n   * @param {Object} query\\n   * @param {module:zrender/Element} targetEl\\n   * @param {Object} packedEvent\\n   * @return {boolen} Pass only when return `true`.\\n   */\\n  filterForExposedEvent: null\\n};\\nvar chartProto = Chart.prototype;\\n\\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\\n  this.render(seriesModel, ecModel, api, payload);\\n};\\n/**\\n * Set state of single element\\n * @param  {module:zrender/Element} el\\n * @param  {string} state\\n */\\n\\n\\nfunction elSetState(el, state) {\\n  if (el) {\\n    el.trigger(state);\\n\\n    if (el.type === 'group') {\\n      for (var i = 0; i < el.childCount(); i++) {\\n        elSetState(el.childAt(i), state);\\n      }\\n    }\\n  }\\n}\\n/**\\n * @param  {module:echarts/data/List} data\\n * @param  {Object} payload\\n * @param  {string} state 'normal'|'emphasis'\\n */\\n\\n\\nfunction toggleHighlight(data, payload, state) {\\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\\n\\n  if (dataIndex != null) {\\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\\n      elSetState(data.getItemGraphicEl(dataIdx), state);\\n    });\\n  } else {\\n    data.eachItemGraphicEl(function (el) {\\n      elSetState(el, state);\\n    });\\n  }\\n} // Enable Chart.extend.\\n\\n\\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\\n\\nclazzUtil.enableClassManagement(Chart, {\\n  registerWhenExtend: true\\n});\\n\\nChart.markUpdateMethod = function (payload, methodName) {\\n  inner(payload).updateMethod = methodName;\\n};\\n\\nfunction renderTaskPlan(context) {\\n  return renderPlanner(context.model);\\n}\\n\\nfunction renderTaskReset(context) {\\n  var seriesModel = context.model;\\n  var ecModel = context.ecModel;\\n  var api = context.api;\\n  var payload = context.payload; // ???! remove updateView updateVisual\\n\\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\\n  var view = context.view;\\n  var updateMethod = payload && inner(payload).updateMethod;\\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\\n  // is less than progressive threshold.\\n  : 'render';\\n\\n  if (methodName !== 'render') {\\n    view[methodName](seriesModel, ecModel, api, payload);\\n  }\\n\\n  return progressMethodMap[methodName];\\n}\\n\\nvar progressMethodMap = {\\n  incrementalPrepareRender: {\\n    progress: function (params, context) {\\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\\n    }\\n  },\\n  render: {\\n    // Put view.render in `progress` to support appendData. But in this case\\n    // view.render should not be called in reset, otherwise it will be called\\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\\n    // in any cases.\\n    forceFirstProgress: true,\\n    progress: function (params, context) {\\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\\n    }\\n  }\\n};\\nvar _default = Chart;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///157\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar List = __webpack_require__(159);\\n\\nvar createDimensions = __webpack_require__(160);\\n\\nvar _sourceType = __webpack_require__(84);\\n\\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\\n\\nvar _dimensionHelper = __webpack_require__(111);\\n\\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\\n\\nvar _model = __webpack_require__(60);\\n\\nvar getDataItemValue = _model.getDataItemValue;\\n\\nvar CoordinateSystem = __webpack_require__(107);\\n\\nvar _referHelper = __webpack_require__(153);\\n\\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\\n\\nvar Source = __webpack_require__(83);\\n\\nvar _dataStackHelper = __webpack_require__(79);\\n\\nvar enableDataStack = _dataStackHelper.enableDataStack;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @param {module:echarts/data/Source|Array} source Or raw data.\\n * @param {module:echarts/model/Series} seriesModel\\n * @param {Object} [opt]\\n * @param {string} [opt.generateCoord]\\n */\\nfunction createListFromArray(source, seriesModel, opt) {\\n  opt = opt || {};\\n\\n  if (!Source.isInstance(source)) {\\n    source = Source.seriesDataToSource(source);\\n  }\\n\\n  var coordSysName = seriesModel.get('coordinateSystem');\\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\\n  var coordSysDimDefs;\\n\\n  if (coordSysDefine) {\\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\\n      var dimInfo = {\\n        name: dim\\n      };\\n      var axisModel = coordSysDefine.axisMap.get(dim);\\n\\n      if (axisModel) {\\n        var axisType = axisModel.get('type');\\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\\n      }\\n\\n      return dimInfo;\\n    });\\n  }\\n\\n  if (!coordSysDimDefs) {\\n    // Get dimensions from registered coordinate system\\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\\n  }\\n\\n  var dimInfoList = createDimensions(source, {\\n    coordDimensions: coordSysDimDefs,\\n    generateCoord: opt.generateCoord\\n  });\\n  var firstCategoryDimIndex;\\n  var hasNameEncode;\\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\\n    var coordDim = dimInfo.coordDim;\\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\\n\\n    if (categoryAxisModel) {\\n      if (firstCategoryDimIndex == null) {\\n        firstCategoryDimIndex = dimIndex;\\n      }\\n\\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\\n    }\\n\\n    if (dimInfo.otherDims.itemName != null) {\\n      hasNameEncode = true;\\n    }\\n  });\\n\\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\\n  }\\n\\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\\n  var list = new List(dimInfoList, seriesModel);\\n  list.setCalculationInfo(stackCalculationInfo);\\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\\n    // Use dataIndex as ordinal value in categoryAxis\\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\\n  } : null;\\n  list.hasItemOption = false;\\n  list.initData(source, null, dimValueGetter);\\n  return list;\\n}\\n\\nfunction isNeedCompleteOrdinalData(source) {\\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\\n    var sampleItem = firstDataNotNull(source.data || []);\\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\\n  }\\n}\\n\\nfunction firstDataNotNull(data) {\\n  var i = 0;\\n\\n  while (i < data.length && data[i] == null) {\\n    i++;\\n  }\\n\\n  return data[i];\\n}\\n\\nvar _default = createListFromArray;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///158\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Model = __webpack_require__(70);\\n\\nvar DataDiffer = __webpack_require__(244);\\n\\nvar Source = __webpack_require__(83);\\n\\nvar _dataProvider = __webpack_require__(85);\\n\\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\\n\\nvar _dimensionHelper = __webpack_require__(111);\\n\\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/* global Float64Array, Int32Array, Uint32Array, Uint16Array */\\n\\n/**\\n * List for data storage\\n * @module echarts/data/List\\n */\\nvar isObject = zrUtil.isObject;\\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\\n// which will cause weird udpate animation.\\n\\nvar ID_PREFIX = 'e\\\\0\\\\0';\\nvar dataCtors = {\\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\\n  // Ordinal data type can be string or int\\n  'ordinal': Array,\\n  'number': Array,\\n  'time': Array\\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\\n// different from the Ctor of typed array.\\n\\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\\n\\nfunction getIndicesCtor(list) {\\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\\n}\\n\\nfunction cloneChunk(originalChunk) {\\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\\n\\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\\n}\\n\\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\\n\\nfunction transferProperties(target, source) {\\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\\n    if (source.hasOwnProperty(propName)) {\\n      target[propName] = source[propName];\\n    }\\n  });\\n  target.__wrappedMethods = source.__wrappedMethods;\\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\\n    target[propName] = zrUtil.clone(source[propName]);\\n  });\\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\\n}\\n/**\\n * @constructor\\n * @alias module:echarts/data/List\\n *\\n * @param {Array.<string|Object>} dimensions\\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\\n *      Spetial fields: {\\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\\n *          createInvertedIndices: <boolean>\\n *      }\\n * @param {module:echarts/model/Model} hostModel\\n */\\n\\n\\nvar List = function (dimensions, hostModel) {\\n  dimensions = dimensions || ['x', 'y'];\\n  var dimensionInfos = {};\\n  var dimensionNames = [];\\n  var invertedIndicesMap = {};\\n\\n  for (var i = 0; i < dimensions.length; i++) {\\n    // Use the original dimensions[i], where other flag props may exists.\\n    var dimensionInfo = dimensions[i];\\n\\n    if (zrUtil.isString(dimensionInfo)) {\\n      dimensionInfo = {\\n        name: dimensionInfo\\n      };\\n    }\\n\\n    var dimensionName = dimensionInfo.name;\\n    dimensionInfo.type = dimensionInfo.type || 'float';\\n\\n    if (!dimensionInfo.coordDim) {\\n      dimensionInfo.coordDim = dimensionName;\\n      dimensionInfo.coordDimIndex = 0;\\n    }\\n\\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\\n    dimensionNames.push(dimensionName);\\n    dimensionInfos[dimensionName] = dimensionInfo;\\n    dimensionInfo.index = i;\\n\\n    if (dimensionInfo.createInvertedIndices) {\\n      invertedIndicesMap[dimensionName] = [];\\n    }\\n  }\\n  /**\\n   * @readOnly\\n   * @type {Array.<string>}\\n   */\\n\\n\\n  this.dimensions = dimensionNames;\\n  /**\\n   * Infomation of each data dimension, like data type.\\n   * @type {Object}\\n   */\\n\\n  this._dimensionInfos = dimensionInfos;\\n  /**\\n   * @type {module:echarts/model/Model}\\n   */\\n\\n  this.hostModel = hostModel;\\n  /**\\n   * @type {module:echarts/model/Model}\\n   */\\n\\n  this.dataType;\\n  /**\\n   * Indices stores the indices of data subset after filtered.\\n   * This data subset will be used in chart.\\n   * @type {Array.<number>}\\n   * @readOnly\\n   */\\n\\n  this._indices = null;\\n  this._count = 0;\\n  this._rawCount = 0;\\n  /**\\n   * Data storage\\n   * @type {Object.<key, Array.<TypedArray|Array>>}\\n   * @private\\n   */\\n\\n  this._storage = {};\\n  /**\\n   * @type {Array.<string>}\\n   */\\n\\n  this._nameList = [];\\n  /**\\n   * @type {Array.<string>}\\n   */\\n\\n  this._idList = [];\\n  /**\\n   * Models of data option is stored sparse for optimizing memory cost\\n   * @type {Array.<module:echarts/model/Model>}\\n   * @private\\n   */\\n\\n  this._optionModels = [];\\n  /**\\n   * Global visual properties after visual coding\\n   * @type {Object}\\n   * @private\\n   */\\n\\n  this._visual = {};\\n  /**\\n   * Globel layout properties.\\n   * @type {Object}\\n   * @private\\n   */\\n\\n  this._layout = {};\\n  /**\\n   * Item visual properties after visual coding\\n   * @type {Array.<Object>}\\n   * @private\\n   */\\n\\n  this._itemVisuals = [];\\n  /**\\n   * Key: visual type, Value: boolean\\n   * @type {Object}\\n   * @readOnly\\n   */\\n\\n  this.hasItemVisual = {};\\n  /**\\n   * Item layout properties after layout\\n   * @type {Array.<Object>}\\n   * @private\\n   */\\n\\n  this._itemLayouts = [];\\n  /**\\n   * Graphic elemnents\\n   * @type {Array.<module:zrender/Element>}\\n   * @private\\n   */\\n\\n  this._graphicEls = [];\\n  /**\\n   * Max size of each chunk.\\n   * @type {number}\\n   * @private\\n   */\\n\\n  this._chunkSize = 1e5;\\n  /**\\n   * @type {number}\\n   * @private\\n   */\\n\\n  this._chunkCount = 0;\\n  /**\\n   * @type {Array.<Array|Object>}\\n   * @private\\n   */\\n\\n  this._rawData;\\n  /**\\n   * Raw extent will not be cloned, but only transfered.\\n   * It will not be calculated util needed.\\n   * key: dim,\\n   * value: {end: number, extent: Array.<number>}\\n   * @type {Object}\\n   * @private\\n   */\\n\\n  this._rawExtent = {};\\n  /**\\n   * @type {Object}\\n   * @private\\n   */\\n\\n  this._extent = {};\\n  /**\\n   * key: dim\\n   * value: extent\\n   * @type {Object}\\n   * @private\\n   */\\n\\n  this._approximateExtent = {};\\n  /**\\n   * Cache summary info for fast visit. See \\\"dimensionHelper\\\".\\n   * @type {Object}\\n   * @private\\n   */\\n\\n  this._dimensionsSummary = summarizeDimensions(this);\\n  /**\\n   * @type {Object.<Array|TypedArray>}\\n   * @private\\n   */\\n\\n  this._invertedIndicesMap = invertedIndicesMap;\\n  /**\\n   * @type {Object}\\n   * @private\\n   */\\n\\n  this._calculationInfo = {};\\n};\\n\\nvar listProto = List.prototype;\\nlistProto.type = 'list';\\n/**\\n * If each data item has it's own option\\n * @type {boolean}\\n */\\n\\nlistProto.hasItemOption = true;\\n/**\\n * Get dimension name\\n * @param {string|number} dim\\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\\n * @return {string} Concrete dim name.\\n */\\n\\nlistProto.getDimension = function (dim) {\\n  if (!isNaN(dim)) {\\n    dim = this.dimensions[dim] || dim;\\n  }\\n\\n  return dim;\\n};\\n/**\\n * Get type and calculation info of particular dimension\\n * @param {string|number} dim\\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\\n */\\n\\n\\nlistProto.getDimensionInfo = function (dim) {\\n  // Do not clone, because there may be categories in dimInfo.\\n  return this._dimensionInfos[this.getDimension(dim)];\\n};\\n/**\\n * @return {Array.<string>} concrete dimension name list on coord.\\n */\\n\\n\\nlistProto.getDimensionsOnCoord = function () {\\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\\n};\\n/**\\n * @param {string} coordDim\\n * @param {number} [idx] A coordDim may map to more than one data dim.\\n *        If idx is `true`, return a array of all mapped dims.\\n *        If idx is not specified, return the first dim not extra.\\n * @return {string|Array.<string>} concrete data dim.\\n *        If idx is number, and not found, return null/undefined.\\n *        If idx is `true`, and not found, return empty array (always return array).\\n */\\n\\n\\nlistProto.mapDimension = function (coordDim, idx) {\\n  var dimensionsSummary = this._dimensionsSummary;\\n\\n  if (idx == null) {\\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\\n  }\\n\\n  var dims = dimensionsSummary.encode[coordDim];\\n  return idx === true // always return array if idx is `true`\\n  ? (dims || []).slice() : dims && dims[idx];\\n};\\n/**\\n * Initialize from data\\n * @param {Array.<Object|number|Array>} data source or data or data provider.\\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\\n *        defualt label/tooltip.\\n *        A name can be specified in encode.itemName,\\n *        or dataItem.name (only for series option data),\\n *        or provided in nameList from outside.\\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\\n */\\n\\n\\nlistProto.initData = function (data, nameList, dimValueGetter) {\\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\\n\\n  if (notProvider) {\\n    data = new DefaultDataProvider(data, this.dimensions.length);\\n  }\\n\\n  this._rawData = data; // Clear\\n\\n  this._storage = {};\\n  this._indices = null;\\n  this._nameList = nameList || [];\\n  this._idList = [];\\n  this._nameRepeatCount = {};\\n\\n  if (!dimValueGetter) {\\n    this.hasItemOption = false;\\n  }\\n  /**\\n   * @readOnly\\n   */\\n\\n\\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\\n\\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\\n\\n  this._rawExtent = {};\\n\\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\\n\\n\\n  if (data.pure) {\\n    this.hasItemOption = false;\\n  }\\n};\\n\\nlistProto.getProvider = function () {\\n  return this._rawData;\\n};\\n\\nlistProto.appendData = function (data) {\\n  var rawData = this._rawData;\\n  var start = this.count();\\n  rawData.appendData(data);\\n  var end = rawData.count();\\n\\n  if (!rawData.persistent) {\\n    end += start;\\n  }\\n\\n  this._initDataFromProvider(start, end);\\n};\\n\\nlistProto._initDataFromProvider = function (start, end) {\\n  // Optimize.\\n  if (start >= end) {\\n    return;\\n  }\\n\\n  var chunkSize = this._chunkSize;\\n  var rawData = this._rawData;\\n  var storage = this._storage;\\n  var dimensions = this.dimensions;\\n  var dimLen = dimensions.length;\\n  var dimensionInfoMap = this._dimensionInfos;\\n  var nameList = this._nameList;\\n  var idList = this._idList;\\n  var rawExtent = this._rawExtent;\\n  var nameRepeatCount = this._nameRepeatCount = {};\\n  var nameDimIdx;\\n  var chunkCount = this._chunkCount;\\n  var lastChunkIndex = chunkCount - 1;\\n\\n  for (var i = 0; i < dimLen; i++) {\\n    var dim = dimensions[i];\\n\\n    if (!rawExtent[dim]) {\\n      rawExtent[dim] = getInitialExtent();\\n    }\\n\\n    var dimInfo = dimensionInfoMap[dim];\\n\\n    if (dimInfo.otherDims.itemName === 0) {\\n      nameDimIdx = this._nameDimIdx = i;\\n    }\\n\\n    if (dimInfo.otherDims.itemId === 0) {\\n      this._idDimIdx = i;\\n    }\\n\\n    var DataCtor = dataCtors[dimInfo.type];\\n\\n    if (!storage[dim]) {\\n      storage[dim] = [];\\n    }\\n\\n    var resizeChunkArray = storage[dim][lastChunkIndex];\\n\\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\\n      // within the initial chunkSize.\\n\\n      for (var j = 0; j < resizeChunkArray.length; j++) {\\n        newStore[j] = resizeChunkArray[j];\\n      }\\n\\n      storage[dim][lastChunkIndex] = newStore;\\n    } // Create new chunks.\\n\\n\\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\\n    }\\n\\n    this._chunkCount = storage[dim].length;\\n  }\\n\\n  var dataItem = new Array(dimLen);\\n\\n  for (var idx = start; idx < end; idx++) {\\n    // NOTICE: Try not to write things into dataItem\\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\\n    // [1, 2]\\n    // 2\\n    // Bar chart, line chart which uses category axis\\n    // only gives the 'y' value. 'x' value is the indices of category\\n    // Use a tempValue to normalize the value to be a (x, y) value\\n\\n    var chunkIndex = Math.floor(idx / chunkSize);\\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\\n\\n    for (var k = 0; k < dimLen; k++) {\\n      var dim = dimensions[k];\\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\\n\\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\\n\\n      dimStorage[chunkOffset] = val;\\n      var dimRawExtent = rawExtent[dim];\\n\\n      if (val < dimRawExtent[0]) {\\n        dimRawExtent[0] = val;\\n      }\\n\\n      if (val > dimRawExtent[1]) {\\n        dimRawExtent[1] = val;\\n      }\\n    } // ??? FIXME not check by pure but sourceFormat?\\n    // TODO refactor these logic.\\n\\n\\n    if (!rawData.pure) {\\n      var name = nameList[idx];\\n\\n      if (dataItem && name == null) {\\n        // If dataItem is {name: ...}, it has highest priority.\\n        // That is appropriate for many common cases.\\n        if (dataItem.name != null) {\\n          // There is no other place to persistent dataItem.name,\\n          // so save it to nameList.\\n          nameList[idx] = name = dataItem.name;\\n        } else if (nameDimIdx != null) {\\n          var nameDim = dimensions[nameDimIdx];\\n          var nameDimChunk = storage[nameDim][chunkIndex];\\n\\n          if (nameDimChunk) {\\n            name = nameDimChunk[chunkOffset];\\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\\n\\n            if (ordinalMeta && ordinalMeta.categories.length) {\\n              name = ordinalMeta.categories[name];\\n            }\\n          }\\n        }\\n      } // Try using the id in option\\n      // id or name is used on dynamical data, mapping old and new items.\\n\\n\\n      var id = dataItem == null ? null : dataItem.id;\\n\\n      if (id == null && name != null) {\\n        // Use name as id and add counter to avoid same name\\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\\n        id = name;\\n\\n        if (nameRepeatCount[name] > 0) {\\n          id += '__ec__' + nameRepeatCount[name];\\n        }\\n\\n        nameRepeatCount[name]++;\\n      }\\n\\n      id != null && (idList[idx] = id);\\n    }\\n  }\\n\\n  if (!rawData.persistent && rawData.clean) {\\n    // Clean unused data if data source is typed array.\\n    rawData.clean();\\n  }\\n\\n  this._rawCount = this._count = end; // Reset data extent\\n\\n  this._extent = {};\\n  prepareInvertedIndex(this);\\n};\\n\\nfunction prepareInvertedIndex(list) {\\n  var invertedIndicesMap = list._invertedIndicesMap;\\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\\n\\n    var ordinalMeta = dimInfo.ordinalMeta;\\n\\n    if (ordinalMeta) {\\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\\n      // mapping to 0, we should set it as NaN.\\n\\n      for (var i = 0; i < invertedIndices.length; i++) {\\n        invertedIndices[i] = NaN;\\n      }\\n\\n      for (var i = 0; i < list._count; i++) {\\n        // Only support the case that all values are distinct.\\n        invertedIndices[list.get(dim, i)] = i;\\n      }\\n    }\\n  });\\n}\\n\\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\\n  var val;\\n\\n  if (dimIndex != null) {\\n    var chunkSize = list._chunkSize;\\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\\n    var chunkOffset = rawIndex % chunkSize;\\n    var dim = list.dimensions[dimIndex];\\n    var chunk = list._storage[dim][chunkIndex];\\n\\n    if (chunk) {\\n      val = chunk[chunkOffset];\\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\\n\\n      if (ordinalMeta && ordinalMeta.categories.length) {\\n        val = ordinalMeta.categories[val];\\n      }\\n    }\\n  }\\n\\n  return val;\\n}\\n/**\\n * @return {number}\\n */\\n\\n\\nlistProto.count = function () {\\n  return this._count;\\n};\\n\\nlistProto.getIndices = function () {\\n  var newIndices;\\n  var indices = this._indices;\\n\\n  if (indices) {\\n    var Ctor = indices.constructor;\\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\\n\\n    if (Ctor === Array) {\\n      newIndices = new Ctor(thisCount);\\n\\n      for (var i = 0; i < thisCount; i++) {\\n        newIndices[i] = indices[i];\\n      }\\n    } else {\\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\\n    }\\n  } else {\\n    var Ctor = getIndicesCtor(this);\\n    var newIndices = new Ctor(this.count());\\n\\n    for (var i = 0; i < newIndices.length; i++) {\\n      newIndices[i] = i;\\n    }\\n  }\\n\\n  return newIndices;\\n};\\n/**\\n * Get value. Return NaN if idx is out of range.\\n * @param {string} dim Dim must be concrete name.\\n * @param {number} idx\\n * @param {boolean} stack\\n * @return {number}\\n */\\n\\n\\nlistProto.get = function (dim, idx\\n/*, stack */\\n) {\\n  if (!(idx >= 0 && idx < this._count)) {\\n    return NaN;\\n  }\\n\\n  var storage = this._storage;\\n\\n  if (!storage[dim]) {\\n    // TODO Warn ?\\n    return NaN;\\n  }\\n\\n  idx = this.getRawIndex(idx);\\n  var chunkIndex = Math.floor(idx / this._chunkSize);\\n  var chunkOffset = idx % this._chunkSize;\\n  var chunkStore = storage[dim][chunkIndex];\\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\\n  // if (stack) {\\n  //     var dimensionInfo = this._dimensionInfos[dim];\\n  //     if (dimensionInfo && dimensionInfo.stackable) {\\n  //         var stackedOn = this.stackedOn;\\n  //         while (stackedOn) {\\n  //             // Get no stacked data of stacked on\\n  //             var stackedValue = stackedOn.get(dim, idx);\\n  //             // Considering positive stack, negative stack and empty data\\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\\n  //             ) {\\n  //                 value += stackedValue;\\n  //             }\\n  //             stackedOn = stackedOn.stackedOn;\\n  //         }\\n  //     }\\n  // }\\n\\n  return value;\\n};\\n/**\\n * @param {string} dim concrete dim\\n * @param {number} rawIndex\\n * @return {number|string}\\n */\\n\\n\\nlistProto.getByRawIndex = function (dim, rawIdx) {\\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\\n    return NaN;\\n  }\\n\\n  var dimStore = this._storage[dim];\\n\\n  if (!dimStore) {\\n    // TODO Warn ?\\n    return NaN;\\n  }\\n\\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\\n  var chunkOffset = rawIdx % this._chunkSize;\\n  var chunkStore = dimStore[chunkIndex];\\n  return chunkStore[chunkOffset];\\n};\\n/**\\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\\n * Hack a much simpler _getFast\\n * @private\\n */\\n\\n\\nlistProto._getFast = function (dim, rawIdx) {\\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\\n  var chunkOffset = rawIdx % this._chunkSize;\\n  var chunkStore = this._storage[dim][chunkIndex];\\n  return chunkStore[chunkOffset];\\n};\\n/**\\n * Get value for multi dimensions.\\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\\n * @param {number} idx\\n * @return {number}\\n */\\n\\n\\nlistProto.getValues = function (dimensions, idx\\n/*, stack */\\n) {\\n  var values = [];\\n\\n  if (!zrUtil.isArray(dimensions)) {\\n    // stack = idx;\\n    idx = dimensions;\\n    dimensions = this.dimensions;\\n  }\\n\\n  for (var i = 0, len = dimensions.length; i < len; i++) {\\n    values.push(this.get(dimensions[i], idx\\n    /*, stack */\\n    ));\\n  }\\n\\n  return values;\\n};\\n/**\\n * If value is NaN. Inlcuding '-'\\n * Only check the coord dimensions.\\n * @param {string} dim\\n * @param {number} idx\\n * @return {number}\\n */\\n\\n\\nlistProto.hasValue = function (idx) {\\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\\n  var dimensionInfos = this._dimensionInfos;\\n\\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\\n    if ( // Ordinal type can be string or number\\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\\n      return false;\\n    }\\n  }\\n\\n  return true;\\n};\\n/**\\n * Get extent of data in one dimension\\n * @param {string} dim\\n * @param {boolean} stack\\n */\\n\\n\\nlistProto.getDataExtent = function (dim\\n/*, stack */\\n) {\\n  // Make sure use concrete dim as cache name.\\n  dim = this.getDimension(dim);\\n  var dimData = this._storage[dim];\\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\\n\\n  if (!dimData) {\\n    return initialExtent;\\n  } // Make more strict checkings to ensure hitting cache.\\n\\n\\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\\n  // var cacheName = dim;\\n  // Consider the most cases when using data zoom, `getDataExtent`\\n  // happened before filtering. We cache raw extent, which is not\\n  // necessary to be cleared and recalculated when restore data.\\n\\n  var useRaw = !this._indices; // && !stack;\\n\\n  var dimExtent;\\n\\n  if (useRaw) {\\n    return this._rawExtent[dim].slice();\\n  }\\n\\n  dimExtent = this._extent[dim];\\n\\n  if (dimExtent) {\\n    return dimExtent.slice();\\n  }\\n\\n  dimExtent = initialExtent;\\n  var min = dimExtent[0];\\n  var max = dimExtent[1];\\n\\n  for (var i = 0; i < currEnd; i++) {\\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\\n    var value = this._getFast(dim, this.getRawIndex(i));\\n\\n    value < min && (min = value);\\n    value > max && (max = value);\\n  }\\n\\n  dimExtent = [min, max];\\n  this._extent[dim] = dimExtent;\\n  return dimExtent;\\n};\\n/**\\n * Optimize for the scenario that data is filtered by a given extent.\\n * Consider that if data amount is more than hundreds of thousand,\\n * extent calculation will cost more than 10ms and the cache will\\n * be erased because of the filtering.\\n */\\n\\n\\nlistProto.getApproximateExtent = function (dim\\n/*, stack */\\n) {\\n  dim = this.getDimension(dim);\\n  return this._approximateExtent[dim] || this.getDataExtent(dim\\n  /*, stack */\\n  );\\n};\\n\\nlistProto.setApproximateExtent = function (extent, dim\\n/*, stack */\\n) {\\n  dim = this.getDimension(dim);\\n  this._approximateExtent[dim] = extent.slice();\\n};\\n/**\\n * @param {string} key\\n * @return {*}\\n */\\n\\n\\nlistProto.getCalculationInfo = function (key) {\\n  return this._calculationInfo[key];\\n};\\n/**\\n * @param {string|Object} key or k-v object\\n * @param {*} [value]\\n */\\n\\n\\nlistProto.setCalculationInfo = function (key, value) {\\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\\n};\\n/**\\n * Get sum of data in one dimension\\n * @param {string} dim\\n */\\n\\n\\nlistProto.getSum = function (dim\\n/*, stack */\\n) {\\n  var dimData = this._storage[dim];\\n  var sum = 0;\\n\\n  if (dimData) {\\n    for (var i = 0, len = this.count(); i < len; i++) {\\n      var value = this.get(dim, i\\n      /*, stack */\\n      );\\n\\n      if (!isNaN(value)) {\\n        sum += value;\\n      }\\n    }\\n  }\\n\\n  return sum;\\n};\\n/**\\n * Get median of data in one dimension\\n * @param {string} dim\\n */\\n\\n\\nlistProto.getMedian = function (dim\\n/*, stack */\\n) {\\n  var dimDataArray = []; // map all data of one dimension\\n\\n  this.each(dim, function (val, idx) {\\n    if (!isNaN(val)) {\\n      dimDataArray.push(val);\\n    }\\n  }); // TODO\\n  // Use quick select?\\n  // immutability & sort\\n\\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\\n    return a - b;\\n  });\\n  var len = this.count(); // calculate median\\n\\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\\n}; // /**\\n//  * Retreive the index with given value\\n//  * @param {string} dim Concrete dimension.\\n//  * @param {number} value\\n//  * @return {number}\\n//  */\\n// Currently incorrect: should return dataIndex but not rawIndex.\\n// Do not fix it until this method is to be used somewhere.\\n// FIXME Precision of float value\\n// listProto.indexOf = function (dim, value) {\\n//     var storage = this._storage;\\n//     var dimData = storage[dim];\\n//     var chunkSize = this._chunkSize;\\n//     if (dimData) {\\n//         for (var i = 0, len = this.count(); i < len; i++) {\\n//             var chunkIndex = Math.floor(i / chunkSize);\\n//             var chunkOffset = i % chunkSize;\\n//             if (dimData[chunkIndex][chunkOffset] === value) {\\n//                 return i;\\n//             }\\n//         }\\n//     }\\n//     return -1;\\n// };\\n\\n/**\\n * Only support the dimension which inverted index created.\\n * Do not support other cases until required.\\n * @param {string} concrete dim\\n * @param {number|string} value\\n * @return {number} rawIndex\\n */\\n\\n\\nlistProto.rawIndexOf = function (dim, value) {\\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\\n  var rawIndex = invertedIndices[value];\\n\\n  if (rawIndex == null || isNaN(rawIndex)) {\\n    return -1;\\n  }\\n\\n  return rawIndex;\\n};\\n/**\\n * Retreive the index with given name\\n * @param {number} idx\\n * @param {number} name\\n * @return {number}\\n */\\n\\n\\nlistProto.indexOfName = function (name) {\\n  for (var i = 0, len = this.count(); i < len; i++) {\\n    if (this.getName(i) === name) {\\n      return i;\\n    }\\n  }\\n\\n  return -1;\\n};\\n/**\\n * Retreive the index with given raw data index\\n * @param {number} idx\\n * @param {number} name\\n * @return {number}\\n */\\n\\n\\nlistProto.indexOfRawIndex = function (rawIndex) {\\n  if (!this._indices) {\\n    return rawIndex;\\n  }\\n\\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\\n    return -1;\\n  } // Indices are ascending\\n\\n\\n  var indices = this._indices; // If rawIndex === dataIndex\\n\\n  var rawDataIndex = indices[rawIndex];\\n\\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\\n    return rawIndex;\\n  }\\n\\n  var left = 0;\\n  var right = this._count - 1;\\n\\n  while (left <= right) {\\n    var mid = (left + right) / 2 | 0;\\n\\n    if (indices[mid] < rawIndex) {\\n      left = mid + 1;\\n    } else if (indices[mid] > rawIndex) {\\n      right = mid - 1;\\n    } else {\\n      return mid;\\n    }\\n  }\\n\\n  return -1;\\n};\\n/**\\n * Retreive the index of nearest value\\n * @param {string} dim\\n * @param {number} value\\n * @param {number} [maxDistance=Infinity]\\n * @return {Array.<number>} Considere multiple points has the same value.\\n */\\n\\n\\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\\n  var storage = this._storage;\\n  var dimData = storage[dim];\\n  var nearestIndices = [];\\n\\n  if (!dimData) {\\n    return nearestIndices;\\n  }\\n\\n  if (maxDistance == null) {\\n    maxDistance = Infinity;\\n  }\\n\\n  var minDist = Number.MAX_VALUE;\\n  var minDiff = -1;\\n\\n  for (var i = 0, len = this.count(); i < len; i++) {\\n    var diff = value - this.get(dim, i\\n    /*, stack */\\n    );\\n    var dist = Math.abs(diff);\\n\\n    if (diff <= maxDistance && dist <= minDist) {\\n      // For the case of two data are same on xAxis, which has sequence data.\\n      // Show the nearest index\\n      // https://github.com/ecomfe/echarts/issues/2869\\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\\n        minDist = dist;\\n        minDiff = diff;\\n        nearestIndices.length = 0;\\n      }\\n\\n      nearestIndices.push(i);\\n    }\\n  }\\n\\n  return nearestIndices;\\n};\\n/**\\n * Get raw data index\\n * @param {number} idx\\n * @return {number}\\n */\\n\\n\\nlistProto.getRawIndex = getRawIndexWithoutIndices;\\n\\nfunction getRawIndexWithoutIndices(idx) {\\n  return idx;\\n}\\n\\nfunction getRawIndexWithIndices(idx) {\\n  if (idx < this._count && idx >= 0) {\\n    return this._indices[idx];\\n  }\\n\\n  return -1;\\n}\\n/**\\n * Get raw data item\\n * @param {number} idx\\n * @return {number}\\n */\\n\\n\\nlistProto.getRawDataItem = function (idx) {\\n  if (!this._rawData.persistent) {\\n    var val = [];\\n\\n    for (var i = 0; i < this.dimensions.length; i++) {\\n      var dim = this.dimensions[i];\\n      val.push(this.get(dim, idx));\\n    }\\n\\n    return val;\\n  } else {\\n    return this._rawData.getItem(this.getRawIndex(idx));\\n  }\\n};\\n/**\\n * @param {number} idx\\n * @param {boolean} [notDefaultIdx=false]\\n * @return {string}\\n */\\n\\n\\nlistProto.getName = function (idx) {\\n  var rawIndex = this.getRawIndex(idx);\\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\\n};\\n/**\\n * @param {number} idx\\n * @param {boolean} [notDefaultIdx=false]\\n * @return {string}\\n */\\n\\n\\nlistProto.getId = function (idx) {\\n  return getId(this, this.getRawIndex(idx));\\n};\\n\\nfunction getId(list, rawIndex) {\\n  var id = list._idList[rawIndex];\\n\\n  if (id == null) {\\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\\n  }\\n\\n  if (id == null) {\\n    // FIXME Check the usage in graph, should not use prefix.\\n    id = ID_PREFIX + rawIndex;\\n  }\\n\\n  return id;\\n}\\n\\nfunction normalizeDimensions(dimensions) {\\n  if (!zrUtil.isArray(dimensions)) {\\n    dimensions = [dimensions];\\n  }\\n\\n  return dimensions;\\n}\\n\\nfunction validateDimensions(list, dims) {\\n  for (var i = 0; i < dims.length; i++) {\\n    // stroage may be empty when no data, so use\\n    // dimensionInfos to check.\\n    if (!list._dimensionInfos[dims[i]]) {\\n      console.error('Unkown dimension ' + dims[i]);\\n    }\\n  }\\n}\\n/**\\n * Data iteration\\n * @param {string|Array.<string>}\\n * @param {Function} cb\\n * @param {*} [context=this]\\n *\\n * @example\\n *  list.each('x', function (x, idx) {});\\n *  list.each(['x', 'y'], function (x, y, idx) {});\\n *  list.each(function (idx) {})\\n */\\n\\n\\nlistProto.each = function (dims, cb, context, contextCompat) {\\n  'use strict';\\n\\n  if (!this._count) {\\n    return;\\n  }\\n\\n  if (typeof dims === 'function') {\\n    contextCompat = context;\\n    context = cb;\\n    cb = dims;\\n    dims = [];\\n  } // contextCompat just for compat echarts3\\n\\n\\n  context = context || contextCompat || this;\\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\\n  var dimSize = dims.length;\\n\\n  for (var i = 0; i < this.count(); i++) {\\n    // Simple optimization\\n    switch (dimSize) {\\n      case 0:\\n        cb.call(context, i);\\n        break;\\n\\n      case 1:\\n        cb.call(context, this.get(dims[0], i), i);\\n        break;\\n\\n      case 2:\\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\\n        break;\\n\\n      default:\\n        var k = 0;\\n        var value = [];\\n\\n        for (; k < dimSize; k++) {\\n          value[k] = this.get(dims[k], i);\\n        } // Index\\n\\n\\n        value[k] = i;\\n        cb.apply(context, value);\\n    }\\n  }\\n};\\n/**\\n * Data filter\\n * @param {string|Array.<string>}\\n * @param {Function} cb\\n * @param {*} [context=this]\\n */\\n\\n\\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\\n  'use strict';\\n\\n  if (!this._count) {\\n    return;\\n  }\\n\\n  if (typeof dimensions === 'function') {\\n    contextCompat = context;\\n    context = cb;\\n    cb = dimensions;\\n    dimensions = [];\\n  } // contextCompat just for compat echarts3\\n\\n\\n  context = context || contextCompat || this;\\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\\n  var count = this.count();\\n  var Ctor = getIndicesCtor(this);\\n  var newIndices = new Ctor(count);\\n  var value = [];\\n  var dimSize = dimensions.length;\\n  var offset = 0;\\n  var dim0 = dimensions[0];\\n\\n  for (var i = 0; i < count; i++) {\\n    var keep;\\n    var rawIdx = this.getRawIndex(i); // Simple optimization\\n\\n    if (dimSize === 0) {\\n      keep = cb.call(context, i);\\n    } else if (dimSize === 1) {\\n      var val = this._getFast(dim0, rawIdx);\\n\\n      keep = cb.call(context, val, i);\\n    } else {\\n      for (var k = 0; k < dimSize; k++) {\\n        value[k] = this._getFast(dim0, rawIdx);\\n      }\\n\\n      value[k] = i;\\n      keep = cb.apply(context, value);\\n    }\\n\\n    if (keep) {\\n      newIndices[offset++] = rawIdx;\\n    }\\n  } // Set indices after filtered.\\n\\n\\n  if (offset < count) {\\n    this._indices = newIndices;\\n  }\\n\\n  this._count = offset; // Reset data extent\\n\\n  this._extent = {};\\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\\n  return this;\\n};\\n/**\\n * Select data in range. (For optimization of filter)\\n * (Manually inline code, support 5 million data filtering in data zoom.)\\n */\\n\\n\\nlistProto.selectRange = function (range) {\\n  'use strict';\\n\\n  if (!this._count) {\\n    return;\\n  }\\n\\n  var dimensions = [];\\n\\n  for (var dim in range) {\\n    if (range.hasOwnProperty(dim)) {\\n      dimensions.push(dim);\\n    }\\n  }\\n\\n  var dimSize = dimensions.length;\\n\\n  if (!dimSize) {\\n    return;\\n  }\\n\\n  var originalCount = this.count();\\n  var Ctor = getIndicesCtor(this);\\n  var newIndices = new Ctor(originalCount);\\n  var offset = 0;\\n  var dim0 = dimensions[0];\\n  var min = range[dim0][0];\\n  var max = range[dim0][1];\\n  var quickFinished = false;\\n\\n  if (!this._indices) {\\n    // Extreme optimization for common case. About 2x faster in chrome.\\n    var idx = 0;\\n\\n    if (dimSize === 1) {\\n      var dimStorage = this._storage[dimensions[0]];\\n\\n      for (var k = 0; k < this._chunkCount; k++) {\\n        var chunkStorage = dimStorage[k];\\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\\n\\n        for (var i = 0; i < len; i++) {\\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\\n          // value indicates the line should be broken. But for the case like\\n          // scatter plot, a data item with empty value will not be rendered,\\n          // but the axis extent may be effected if some other dim of the data\\n          // item has value. Fortunately it is not a significant negative effect.\\n\\n          if (val >= min && val <= max || isNaN(val)) {\\n            newIndices[offset++] = idx;\\n          }\\n\\n          idx++;\\n        }\\n      }\\n\\n      quickFinished = true;\\n    } else if (dimSize === 2) {\\n      var dimStorage = this._storage[dim0];\\n      var dimStorage2 = this._storage[dimensions[1]];\\n      var min2 = range[dimensions[1]][0];\\n      var max2 = range[dimensions[1]][1];\\n\\n      for (var k = 0; k < this._chunkCount; k++) {\\n        var chunkStorage = dimStorage[k];\\n        var chunkStorage2 = dimStorage2[k];\\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\\n\\n        for (var i = 0; i < len; i++) {\\n          var val = chunkStorage[i];\\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\\n\\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\\n            newIndices[offset++] = idx;\\n          }\\n\\n          idx++;\\n        }\\n      }\\n\\n      quickFinished = true;\\n    }\\n  }\\n\\n  if (!quickFinished) {\\n    if (dimSize === 1) {\\n      for (var i = 0; i < originalCount; i++) {\\n        var rawIndex = this.getRawIndex(i);\\n\\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\\n\\n\\n        if (val >= min && val <= max || isNaN(val)) {\\n          newIndices[offset++] = rawIndex;\\n        }\\n      }\\n    } else {\\n      for (var i = 0; i < originalCount; i++) {\\n        var keep = true;\\n        var rawIndex = this.getRawIndex(i);\\n\\n        for (var k = 0; k < dimSize; k++) {\\n          var dimk = dimensions[k];\\n\\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\\n\\n\\n          if (val < range[dimk][0] || val > range[dimk][1]) {\\n            keep = false;\\n          }\\n        }\\n\\n        if (keep) {\\n          newIndices[offset++] = this.getRawIndex(i);\\n        }\\n      }\\n    }\\n  } // Set indices after filtered.\\n\\n\\n  if (offset < originalCount) {\\n    this._indices = newIndices;\\n  }\\n\\n  this._count = offset; // Reset data extent\\n\\n  this._extent = {};\\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\\n  return this;\\n};\\n/**\\n * Data mapping to a plain array\\n * @param {string|Array.<string>} [dimensions]\\n * @param {Function} cb\\n * @param {*} [context=this]\\n * @return {Array}\\n */\\n\\n\\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\\n  'use strict';\\n\\n  if (typeof dimensions === 'function') {\\n    contextCompat = context;\\n    context = cb;\\n    cb = dimensions;\\n    dimensions = [];\\n  } // contextCompat just for compat echarts3\\n\\n\\n  context = context || contextCompat || this;\\n  var result = [];\\n  this.each(dimensions, function () {\\n    result.push(cb && cb.apply(this, arguments));\\n  }, context);\\n  return result;\\n}; // Data in excludeDimensions is copied, otherwise transfered.\\n\\n\\nfunction cloneListForMapAndSample(original, excludeDimensions) {\\n  var allDimensions = original.dimensions;\\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\\n\\n  transferProperties(list, original);\\n  var storage = list._storage = {};\\n  var originalStorage = original._storage; // Init storage\\n\\n  for (var i = 0; i < allDimensions.length; i++) {\\n    var dim = allDimensions[i];\\n\\n    if (originalStorage[dim]) {\\n      // Notice that we do not reset invertedIndicesMap here, becuase\\n      // there is no scenario of mapping or sampling ordinal dimension.\\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\\n        storage[dim] = cloneDimStore(originalStorage[dim]);\\n        list._rawExtent[dim] = getInitialExtent();\\n        list._extent[dim] = null;\\n      } else {\\n        // Direct reference for other dimensions\\n        storage[dim] = originalStorage[dim];\\n      }\\n    }\\n  }\\n\\n  return list;\\n}\\n\\nfunction cloneDimStore(originalDimStore) {\\n  var newDimStore = new Array(originalDimStore.length);\\n\\n  for (var j = 0; j < originalDimStore.length; j++) {\\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\\n  }\\n\\n  return newDimStore;\\n}\\n\\nfunction getInitialExtent() {\\n  return [Infinity, -Infinity];\\n}\\n/**\\n * Data mapping to a new List with given dimensions\\n * @param {string|Array.<string>} dimensions\\n * @param {Function} cb\\n * @param {*} [context=this]\\n * @return {Array}\\n */\\n\\n\\nlistProto.map = function (dimensions, cb, context, contextCompat) {\\n  'use strict'; // contextCompat just for compat echarts3\\n\\n  context = context || contextCompat || this;\\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\\n  // So we can reference to the same value\\n\\n  list._indices = this._indices;\\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\\n  var storage = list._storage;\\n  var tmpRetValue = [];\\n  var chunkSize = this._chunkSize;\\n  var dimSize = dimensions.length;\\n  var dataCount = this.count();\\n  var values = [];\\n  var rawExtent = list._rawExtent;\\n\\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\\n      /*, stack */\\n      );\\n    }\\n\\n    values[dimSize] = dataIndex;\\n    var retValue = cb && cb.apply(context, values);\\n\\n    if (retValue != null) {\\n      // a number or string (in oridinal dimension)?\\n      if (typeof retValue !== 'object') {\\n        tmpRetValue[0] = retValue;\\n        retValue = tmpRetValue;\\n      }\\n\\n      var rawIndex = this.getRawIndex(dataIndex);\\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\\n      var chunkOffset = rawIndex % chunkSize;\\n\\n      for (var i = 0; i < retValue.length; i++) {\\n        var dim = dimensions[i];\\n        var val = retValue[i];\\n        var rawExtentOnDim = rawExtent[dim];\\n        var dimStore = storage[dim];\\n\\n        if (dimStore) {\\n          dimStore[chunkIndex][chunkOffset] = val;\\n        }\\n\\n        if (val < rawExtentOnDim[0]) {\\n          rawExtentOnDim[0] = val;\\n        }\\n\\n        if (val > rawExtentOnDim[1]) {\\n          rawExtentOnDim[1] = val;\\n        }\\n      }\\n    }\\n  }\\n\\n  return list;\\n};\\n/**\\n * Large data down sampling on given dimension\\n * @param {string} dimension\\n * @param {number} rate\\n * @param {Function} sampleValue\\n * @param {Function} sampleIndex Sample index for name and id\\n */\\n\\n\\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\\n  var list = cloneListForMapAndSample(this, [dimension]);\\n  var targetStorage = list._storage;\\n  var frameValues = [];\\n  var frameSize = Math.floor(1 / rate);\\n  var dimStore = targetStorage[dimension];\\n  var len = this.count();\\n  var chunkSize = this._chunkSize;\\n  var rawExtentOnDim = list._rawExtent[dimension];\\n  var newIndices = new (getIndicesCtor(this))(len);\\n  var offset = 0;\\n\\n  for (var i = 0; i < len; i += frameSize) {\\n    // Last frame\\n    if (frameSize > len - i) {\\n      frameSize = len - i;\\n      frameValues.length = frameSize;\\n    }\\n\\n    for (var k = 0; k < frameSize; k++) {\\n      var dataIdx = this.getRawIndex(i + k);\\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\\n      var originalChunkOffset = dataIdx % chunkSize;\\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\\n    }\\n\\n    var value = sampleValue(frameValues);\\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\\n\\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\\n\\n    if (value < rawExtentOnDim[0]) {\\n      rawExtentOnDim[0] = value;\\n    }\\n\\n    if (value > rawExtentOnDim[1]) {\\n      rawExtentOnDim[1] = value;\\n    }\\n\\n    newIndices[offset++] = sampleFrameIdx;\\n  }\\n\\n  list._count = offset;\\n  list._indices = newIndices;\\n  list.getRawIndex = getRawIndexWithIndices;\\n  return list;\\n};\\n/**\\n * Get model of one data item.\\n *\\n * @param {number} idx\\n */\\n// FIXME Model proxy ?\\n\\n\\nlistProto.getItemModel = function (idx) {\\n  var hostModel = this.hostModel;\\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\\n};\\n/**\\n * Create a data differ\\n * @param {module:echarts/data/List} otherList\\n * @return {module:echarts/data/DataDiffer}\\n */\\n\\n\\nlistProto.diff = function (otherList) {\\n  var thisList = this;\\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\\n    return getId(otherList, idx);\\n  }, function (idx) {\\n    return getId(thisList, idx);\\n  });\\n};\\n/**\\n * Get visual property.\\n * @param {string} key\\n */\\n\\n\\nlistProto.getVisual = function (key) {\\n  var visual = this._visual;\\n  return visual && visual[key];\\n};\\n/**\\n * Set visual property\\n * @param {string|Object} key\\n * @param {*} [value]\\n *\\n * @example\\n *  setVisual('color', color);\\n *  setVisual({\\n *      'color': color\\n *  });\\n */\\n\\n\\nlistProto.setVisual = function (key, val) {\\n  if (isObject(key)) {\\n    for (var name in key) {\\n      if (key.hasOwnProperty(name)) {\\n        this.setVisual(name, key[name]);\\n      }\\n    }\\n\\n    return;\\n  }\\n\\n  this._visual = this._visual || {};\\n  this._visual[key] = val;\\n};\\n/**\\n * Set layout property.\\n * @param {string|Object} key\\n * @param {*} [val]\\n */\\n\\n\\nlistProto.setLayout = function (key, val) {\\n  if (isObject(key)) {\\n    for (var name in key) {\\n      if (key.hasOwnProperty(name)) {\\n        this.setLayout(name, key[name]);\\n      }\\n    }\\n\\n    return;\\n  }\\n\\n  this._layout[key] = val;\\n};\\n/**\\n * Get layout property.\\n * @param  {string} key.\\n * @return {*}\\n */\\n\\n\\nlistProto.getLayout = function (key) {\\n  return this._layout[key];\\n};\\n/**\\n * Get layout of single data item\\n * @param {number} idx\\n */\\n\\n\\nlistProto.getItemLayout = function (idx) {\\n  return this._itemLayouts[idx];\\n};\\n/**\\n * Set layout of single data item\\n * @param {number} idx\\n * @param {Object} layout\\n * @param {boolean=} [merge=false]\\n */\\n\\n\\nlistProto.setItemLayout = function (idx, layout, merge) {\\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\\n};\\n/**\\n * Clear all layout of single data item\\n */\\n\\n\\nlistProto.clearItemLayouts = function () {\\n  this._itemLayouts.length = 0;\\n};\\n/**\\n * Get visual property of single data item\\n * @param {number} idx\\n * @param {string} key\\n * @param {boolean} [ignoreParent=false]\\n */\\n\\n\\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\\n  var itemVisual = this._itemVisuals[idx];\\n  var val = itemVisual && itemVisual[key];\\n\\n  if (val == null && !ignoreParent) {\\n    // Use global visual property\\n    return this.getVisual(key);\\n  }\\n\\n  return val;\\n};\\n/**\\n * Set visual property of single data item\\n *\\n * @param {number} idx\\n * @param {string|Object} key\\n * @param {*} [value]\\n *\\n * @example\\n *  setItemVisual(0, 'color', color);\\n *  setItemVisual(0, {\\n *      'color': color\\n *  });\\n */\\n\\n\\nlistProto.setItemVisual = function (idx, key, value) {\\n  var itemVisual = this._itemVisuals[idx] || {};\\n  var hasItemVisual = this.hasItemVisual;\\n  this._itemVisuals[idx] = itemVisual;\\n\\n  if (isObject(key)) {\\n    for (var name in key) {\\n      if (key.hasOwnProperty(name)) {\\n        itemVisual[name] = key[name];\\n        hasItemVisual[name] = true;\\n      }\\n    }\\n\\n    return;\\n  }\\n\\n  itemVisual[key] = value;\\n  hasItemVisual[key] = true;\\n};\\n/**\\n * Clear itemVisuals and list visual.\\n */\\n\\n\\nlistProto.clearAllVisual = function () {\\n  this._visual = {};\\n  this._itemVisuals = [];\\n  this.hasItemVisual = {};\\n};\\n\\nvar setItemDataAndSeriesIndex = function (child) {\\n  child.seriesIndex = this.seriesIndex;\\n  child.dataIndex = this.dataIndex;\\n  child.dataType = this.dataType;\\n};\\n/**\\n * Set graphic element relative to data. It can be set as null\\n * @param {number} idx\\n * @param {module:zrender/Element} [el]\\n */\\n\\n\\nlistProto.setItemGraphicEl = function (idx, el) {\\n  var hostModel = this.hostModel;\\n\\n  if (el) {\\n    // Add data index and series index for indexing the data by element\\n    // Useful in tooltip\\n    el.dataIndex = idx;\\n    el.dataType = this.dataType;\\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\\n\\n    if (el.type === 'group') {\\n      el.traverse(setItemDataAndSeriesIndex, el);\\n    }\\n  }\\n\\n  this._graphicEls[idx] = el;\\n};\\n/**\\n * @param {number} idx\\n * @return {module:zrender/Element}\\n */\\n\\n\\nlistProto.getItemGraphicEl = function (idx) {\\n  return this._graphicEls[idx];\\n};\\n/**\\n * @param {Function} cb\\n * @param {*} context\\n */\\n\\n\\nlistProto.eachItemGraphicEl = function (cb, context) {\\n  zrUtil.each(this._graphicEls, function (el, idx) {\\n    if (el) {\\n      cb && cb.call(context, el, idx);\\n    }\\n  });\\n};\\n/**\\n * Shallow clone a new list except visual and layout properties, and graph elements.\\n * New list only change the indices.\\n */\\n\\n\\nlistProto.cloneShallow = function (list) {\\n  if (!list) {\\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\\n    list = new List(dimensionInfoList, this.hostModel);\\n  } // FIXME\\n\\n\\n  list._storage = this._storage;\\n  transferProperties(list, this); // Clone will not change the data extent and indices\\n\\n  if (this._indices) {\\n    var Ctor = this._indices.constructor;\\n    list._indices = new Ctor(this._indices);\\n  } else {\\n    list._indices = null;\\n  }\\n\\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\\n  return list;\\n};\\n/**\\n * Wrap some method to add more feature\\n * @param {string} methodName\\n * @param {Function} injectFunction\\n */\\n\\n\\nlistProto.wrapMethod = function (methodName, injectFunction) {\\n  var originalMethod = this[methodName];\\n\\n  if (typeof originalMethod !== 'function') {\\n    return;\\n  }\\n\\n  this.__wrappedMethods = this.__wrappedMethods || [];\\n\\n  this.__wrappedMethods.push(methodName);\\n\\n  this[methodName] = function () {\\n    var res = originalMethod.apply(this, arguments);\\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\\n  };\\n}; // Methods that create a new list based on this list should be listed here.\\n// Notice that those method should `RETURN` the new list.\\n\\n\\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\\n\\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\\nvar _default = List;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvZGF0YS9MaXN0LmpzPzYxNzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxFQUFXOztBQUVqQzs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDLFlBQVksbUJBQU8sQ0FBQyxFQUFnQjs7QUFFcEMsaUJBQWlCLG1CQUFPLENBQUMsR0FBYzs7QUFFdkMsYUFBYSxtQkFBTyxDQUFDLEVBQVU7O0FBRS9CLG9CQUFvQixtQkFBTyxDQUFDLEVBQXVCOztBQUVuRDtBQUNBOztBQUVBLHVCQUF1QixtQkFBTyxDQUFDLEdBQTBCOztBQUV6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVDQUF1Qzs7QUFFdkM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDLHNDQUFzQyx5Q0FBeUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMkJBQTJCO0FBQ3RDOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QjtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25COztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZUFBZTtBQUMzQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQSxZQUFZLHNCQUFzQjtBQUNsQztBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCOztBQUV2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0EsOEZBQThGOztBQUU5Rix1RkFBdUY7O0FBRXZGOztBQUVBLDhDQUE4Qzs7O0FBRzlDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLFlBQVk7QUFDN0I7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EseUZBQXlGO0FBQ3pGOztBQUVBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTs7QUFFQTtBQUNBLEtBQUs7OztBQUdMLHdDQUF3QyxTQUFTO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSx1QkFBdUIsV0FBVztBQUNsQztBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0NBQXNDOztBQUV0QyxtQkFBbUIsWUFBWTtBQUMvQjtBQUNBLGdEQUFnRDs7QUFFaEQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLFVBQVU7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUNBQXFDOztBQUVyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1Qzs7QUFFQTtBQUNBLHFHQUFxRztBQUNyRzs7QUFFQSxxQkFBcUIsNEJBQTRCO0FBQ2pEO0FBQ0E7O0FBRUEscUJBQXFCLGlCQUFpQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdDQUFnQzs7QUFFaEM7QUFDQTs7QUFFQSxxQkFBcUIsZUFBZTtBQUNwQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQSxtQkFBbUIsdUJBQXVCO0FBQzFDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMENBQTBDLFNBQVM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUEsK0NBQStDLFNBQVM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDOztBQUV6QztBQUNBO0FBQ0EsR0FBRzs7O0FBR0gsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDhCQUE4Qjs7QUFFOUI7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLGFBQWE7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixXQUFXLEVBQUU7QUFDYjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVDQUF1QyxTQUFTO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxFQUFFO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNILHlCQUF5Qjs7QUFFekI7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxjQUFjLE9BQU87QUFDckIsY0FBYyxPQUFPO0FBQ3JCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsU0FBUztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsY0FBYztBQUN6QixZQUFZLE9BQU87QUFDbkI7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjs7O0FBR0E7QUFDQSxxQ0FBcUMsU0FBUztBQUM5QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0gsOEJBQThCOztBQUU5Qjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWSxlQUFlO0FBQzNCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEscUNBQXFDLFNBQVM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsNEJBQTRCO0FBQy9DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxXQUFXLFNBQVM7QUFDcEIsV0FBVyxFQUFFO0FBQ2I7QUFDQTtBQUNBLHVDQUF1QztBQUN2QyxpREFBaUQ7QUFDakQsK0JBQStCO0FBQy9COzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLGFBQWE7QUFDM0I7QUFDQSxTQUFTOzs7QUFHVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxXQUFXLFNBQVM7QUFDcEIsV0FBVyxFQUFFO0FBQ2I7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQSxxQ0FBcUM7O0FBRXJDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxLQUFLO0FBQ0wscUJBQXFCLGFBQWE7QUFDbEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBLHVCQUF1Qjs7QUFFdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxxQkFBcUIsc0JBQXNCO0FBQzNDO0FBQ0E7O0FBRUEsdUJBQXVCLFNBQVM7QUFDaEMsb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLHNCQUFzQjtBQUMzQztBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLFNBQVM7QUFDaEM7QUFDQSxzQ0FBc0M7O0FBRXRDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUIsbUJBQW1CO0FBQ3hDOztBQUVBLGdEQUFnRDs7O0FBR2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHFCQUFxQixtQkFBbUI7QUFDeEM7QUFDQTs7QUFFQSx1QkFBdUIsYUFBYTtBQUNwQzs7QUFFQSxpREFBaUQ7OztBQUdqRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBLHVCQUF1Qjs7QUFFdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakMsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsRUFBRTtBQUNiLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxFQUFFOzs7QUFHRjtBQUNBO0FBQ0EsMEdBQTBHOztBQUUxRztBQUNBO0FBQ0EsMENBQTBDOztBQUUxQyxpQkFBaUIsMEJBQTBCO0FBQzNDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQiw2QkFBNkI7QUFDOUM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNCQUFzQjtBQUNqQyxXQUFXLFNBQVM7QUFDcEIsV0FBVyxFQUFFO0FBQ2IsWUFBWTtBQUNaOzs7QUFHQTtBQUNBLGVBQWU7O0FBRWY7QUFDQTtBQUNBLHdEQUF3RDtBQUN4RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLHVCQUF1QjtBQUNoRCwwQkFBMEIsb0JBQW9CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIscUJBQXFCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixTQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CLGVBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7O0FBRXZEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUJBQXlCO0FBQ3BDLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxFQUFFO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsRUFBRTtBQUNiOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CLFlBQVk7QUFDWjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCOzs7QUFHQTtBQUNBLDZFQUE2RTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25COzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLGNBQWM7QUFDekIsV0FBVyxFQUFFO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyx1QkFBdUI7QUFDbEM7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsRUFBRTtBQUNiOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQSxpQ0FBaUM7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjs7O0FBR0EsdUVBQXVFOztBQUV2RTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTU5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciBfY29uZmlnID0gcmVxdWlyZShcIi4uL2NvbmZpZ1wiKTtcblxudmFyIF9fREVWX18gPSBfY29uZmlnLl9fREVWX187XG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgTW9kZWwgPSByZXF1aXJlKFwiLi4vbW9kZWwvTW9kZWxcIik7XG5cbnZhciBEYXRhRGlmZmVyID0gcmVxdWlyZShcIi4vRGF0YURpZmZlclwiKTtcblxudmFyIFNvdXJjZSA9IHJlcXVpcmUoXCIuL1NvdXJjZVwiKTtcblxudmFyIF9kYXRhUHJvdmlkZXIgPSByZXF1aXJlKFwiLi9oZWxwZXIvZGF0YVByb3ZpZGVyXCIpO1xuXG52YXIgZGVmYXVsdERpbVZhbHVlR2V0dGVycyA9IF9kYXRhUHJvdmlkZXIuZGVmYXVsdERpbVZhbHVlR2V0dGVycztcbnZhciBEZWZhdWx0RGF0YVByb3ZpZGVyID0gX2RhdGFQcm92aWRlci5EZWZhdWx0RGF0YVByb3ZpZGVyO1xuXG52YXIgX2RpbWVuc2lvbkhlbHBlciA9IHJlcXVpcmUoXCIuL2hlbHBlci9kaW1lbnNpb25IZWxwZXJcIik7XG5cbnZhciBzdW1tYXJpemVEaW1lbnNpb25zID0gX2RpbWVuc2lvbkhlbHBlci5zdW1tYXJpemVEaW1lbnNpb25zO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbi8qIGdsb2JhbCBGbG9hdDY0QXJyYXksIEludDMyQXJyYXksIFVpbnQzMkFycmF5LCBVaW50MTZBcnJheSAqL1xuXG4vKipcbiAqIExpc3QgZm9yIGRhdGEgc3RvcmFnZVxuICogQG1vZHVsZSBlY2hhcnRzL2RhdGEvTGlzdFxuICovXG52YXIgaXNPYmplY3QgPSB6clV0aWwuaXNPYmplY3Q7XG52YXIgVU5ERUZJTkVEID0gJ3VuZGVmaW5lZCc7IC8vIFVzZSBwcmVmaXggdG8gYXZvaWQgaW5kZXggdG8gYmUgdGhlIHNhbWUgYXMgb3RoZXJJZExpc3RbaWR4XSxcbi8vIHdoaWNoIHdpbGwgY2F1c2Ugd2VpcmQgdWRwYXRlIGFuaW1hdGlvbi5cblxudmFyIElEX1BSRUZJWCA9ICdlXFwwXFwwJztcbnZhciBkYXRhQ3RvcnMgPSB7XG4gICdmbG9hdCc6IHR5cGVvZiBGbG9hdDY0QXJyYXkgPT09IFVOREVGSU5FRCA/IEFycmF5IDogRmxvYXQ2NEFycmF5LFxuICAnaW50JzogdHlwZW9mIEludDMyQXJyYXkgPT09IFVOREVGSU5FRCA/IEFycmF5IDogSW50MzJBcnJheSxcbiAgLy8gT3JkaW5hbCBkYXRhIHR5cGUgY2FuIGJlIHN0cmluZyBvciBpbnRcbiAgJ29yZGluYWwnOiBBcnJheSxcbiAgJ251bWJlcic6IEFycmF5LFxuICAndGltZSc6IEFycmF5XG59OyAvLyBDYXV0aW9uOiBNVVNUIG5vdCB1c2UgYG5ldyBDdG9yVWludDMyQXJyYXkoYXJyLCAwLCBsZW4pYCwgYmVjYXVzZSB0aGUgQ3RvciBvZiBhcnJheSBpc1xuLy8gZGlmZmVyZW50IGZyb20gdGhlIEN0b3Igb2YgdHlwZWQgYXJyYXkuXG5cbnZhciBDdG9yVWludDMyQXJyYXkgPSB0eXBlb2YgVWludDMyQXJyYXkgPT09IFVOREVGSU5FRCA/IEFycmF5IDogVWludDMyQXJyYXk7XG52YXIgQ3RvclVpbnQxNkFycmF5ID0gdHlwZW9mIFVpbnQxNkFycmF5ID09PSBVTkRFRklORUQgPyBBcnJheSA6IFVpbnQxNkFycmF5O1xuXG5mdW5jdGlvbiBnZXRJbmRpY2VzQ3RvcihsaXN0KSB7XG4gIC8vIFRoZSBwb3NzaWJsZSBtYXggdmFsdWUgaW4gdGhpcy5faW5kaWNpZXMgaXMgYWx3YXlzIHRoaXMuX3Jhd0NvdW50IGRlc3BpdGUgb2YgZmlsdGVyaW5nLlxuICByZXR1cm4gbGlzdC5fcmF3Q291bnQgPiA2NTUzNSA/IEN0b3JVaW50MzJBcnJheSA6IEN0b3JVaW50MTZBcnJheTtcbn1cblxuZnVuY3Rpb24gY2xvbmVDaHVuayhvcmlnaW5hbENodW5rKSB7XG4gIHZhciBDdG9yID0gb3JpZ2luYWxDaHVuay5jb25zdHJ1Y3RvcjsgLy8gT25seSBzaGFsbG93IGNsb25lIGlzIGVub3VnaCB3aGVuIEFycmF5LlxuXG4gIHJldHVybiBDdG9yID09PSBBcnJheSA/IG9yaWdpbmFsQ2h1bmsuc2xpY2UoKSA6IG5ldyBDdG9yKG9yaWdpbmFsQ2h1bmspO1xufVxuXG52YXIgVFJBTlNGRVJBQkxFX1BST1BFUlRJRVMgPSBbJ2hhc0l0ZW1PcHRpb24nLCAnX25hbWVMaXN0JywgJ19pZExpc3QnLCAnX2ludmVydGVkSW5kaWNlc01hcCcsICdfcmF3RGF0YScsICdfY2h1bmtTaXplJywgJ19jaHVua0NvdW50JywgJ19kaW1WYWx1ZUdldHRlcicsICdfY291bnQnLCAnX3Jhd0NvdW50JywgJ19uYW1lRGltSWR4JywgJ19pZERpbUlkeCddO1xudmFyIENMT05FX1BST1BFUlRJRVMgPSBbJ19leHRlbnQnLCAnX2FwcHJveGltYXRlRXh0ZW50JywgJ19yYXdFeHRlbnQnXTtcblxuZnVuY3Rpb24gdHJhbnNmZXJQcm9wZXJ0aWVzKHRhcmdldCwgc291cmNlKSB7XG4gIHpyVXRpbC5lYWNoKFRSQU5TRkVSQUJMRV9QUk9QRVJUSUVTLmNvbmNhdChzb3VyY2UuX193cmFwcGVkTWV0aG9kcyB8fCBbXSksIGZ1bmN0aW9uIChwcm9wTmFtZSkge1xuICAgIGlmIChzb3VyY2UuaGFzT3duUHJvcGVydHkocHJvcE5hbWUpKSB7XG4gICAgICB0YXJnZXRbcHJvcE5hbWVdID0gc291cmNlW3Byb3BOYW1lXTtcbiAgICB9XG4gIH0pO1xuICB0YXJnZXQuX193cmFwcGVkTWV0aG9kcyA9IHNvdXJjZS5fX3dyYXBwZWRNZXRob2RzO1xuICB6clV0aWwuZWFjaChDTE9ORV9QUk9QRVJUSUVTLCBmdW5jdGlvbiAocHJvcE5hbWUpIHtcbiAgICB0YXJnZXRbcHJvcE5hbWVdID0genJVdGlsLmNsb25lKHNvdXJjZVtwcm9wTmFtZV0pO1xuICB9KTtcbiAgdGFyZ2V0Ll9jYWxjdWxhdGlvbkluZm8gPSB6clV0aWwuZXh0ZW5kKHNvdXJjZS5fY2FsY3VsYXRpb25JbmZvKTtcbn1cbi8qKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAYWxpYXMgbW9kdWxlOmVjaGFydHMvZGF0YS9MaXN0XG4gKlxuICogQHBhcmFtIHtBcnJheS48c3RyaW5nfE9iamVjdD59IGRpbWVuc2lvbnNcbiAqICAgICAgRm9yIGV4YW1wbGUsIFsnc29tZURpbU5hbWUnLCB7bmFtZTogJ3NvbWVEaW1OYW1lJywgdHlwZTogJ3NvbWVEaW1UeXBlJ30sIC4uLl0uXG4gKiAgICAgIERpbWVuc2lvbnMgc2hvdWxkIGJlIGNvbmNyZXRlIG5hbWVzIGxpa2UgeCwgeSwgeiwgbG5nLCBsYXQsIGFuZ2xlLCByYWRpdXNcbiAqICAgICAgU3BldGlhbCBmaWVsZHM6IHtcbiAqICAgICAgICAgIG9yZGluYWxNZXRhOiA8bW9kdWxlOmVjaGFydHMvZGF0YS9PcmRpbmFsTWV0YT5cbiAqICAgICAgICAgIGNyZWF0ZUludmVydGVkSW5kaWNlczogPGJvb2xlYW4+XG4gKiAgICAgIH1cbiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvbW9kZWwvTW9kZWx9IGhvc3RNb2RlbFxuICovXG5cblxudmFyIExpc3QgPSBmdW5jdGlvbiAoZGltZW5zaW9ucywgaG9zdE1vZGVsKSB7XG4gIGRpbWVuc2lvbnMgPSBkaW1lbnNpb25zIHx8IFsneCcsICd5J107XG4gIHZhciBkaW1lbnNpb25JbmZvcyA9IHt9O1xuICB2YXIgZGltZW5zaW9uTmFtZXMgPSBbXTtcbiAgdmFyIGludmVydGVkSW5kaWNlc01hcCA9IHt9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZGltZW5zaW9ucy5sZW5ndGg7IGkrKykge1xuICAgIC8vIFVzZSB0aGUgb3JpZ2luYWwgZGltZW5zaW9uc1tpXSwgd2hlcmUgb3RoZXIgZmxhZyBwcm9wcyBtYXkgZXhpc3RzLlxuICAgIHZhciBkaW1lbnNpb25JbmZvID0gZGltZW5zaW9uc1tpXTtcblxuICAgIGlmICh6clV0aWwuaXNTdHJpbmcoZGltZW5zaW9uSW5mbykpIHtcbiAgICAgIGRpbWVuc2lvbkluZm8gPSB7XG4gICAgICAgIG5hbWU6IGRpbWVuc2lvbkluZm9cbiAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIGRpbWVuc2lvbk5hbWUgPSBkaW1lbnNpb25JbmZvLm5hbWU7XG4gICAgZGltZW5zaW9uSW5mby50eXBlID0gZGltZW5zaW9uSW5mby50eXBlIHx8ICdmbG9hdCc7XG5cbiAgICBpZiAoIWRpbWVuc2lvbkluZm8uY29vcmREaW0pIHtcbiAgICAgIGRpbWVuc2lvbkluZm8uY29vcmREaW0gPSBkaW1lbnNpb25OYW1lO1xuICAgICAgZGltZW5zaW9uSW5mby5jb29yZERpbUluZGV4ID0gMDtcbiAgICB9XG5cbiAgICBkaW1lbnNpb25JbmZvLm90aGVyRGltcyA9IGRpbWVuc2lvbkluZm8ub3RoZXJEaW1zIHx8IHt9O1xuICAgIGRpbWVuc2lvbk5hbWVzLnB1c2goZGltZW5zaW9uTmFtZSk7XG4gICAgZGltZW5zaW9uSW5mb3NbZGltZW5zaW9uTmFtZV0gPSBkaW1lbnNpb25JbmZvO1xuICAgIGRpbWVuc2lvbkluZm8uaW5kZXggPSBpO1xuXG4gICAgaWYgKGRpbWVuc2lvbkluZm8uY3JlYXRlSW52ZXJ0ZWRJbmRpY2VzKSB7XG4gICAgICBpbnZlcnRlZEluZGljZXNNYXBbZGltZW5zaW9uTmFtZV0gPSBbXTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIEByZWFkT25seVxuICAgKiBAdHlwZSB7QXJyYXkuPHN0cmluZz59XG4gICAqL1xuXG5cbiAgdGhpcy5kaW1lbnNpb25zID0gZGltZW5zaW9uTmFtZXM7XG4gIC8qKlxuICAgKiBJbmZvbWF0aW9uIG9mIGVhY2ggZGF0YSBkaW1lbnNpb24sIGxpa2UgZGF0YSB0eXBlLlxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKi9cblxuICB0aGlzLl9kaW1lbnNpb25JbmZvcyA9IGRpbWVuc2lvbkluZm9zO1xuICAvKipcbiAgICogQHR5cGUge21vZHVsZTplY2hhcnRzL21vZGVsL01vZGVsfVxuICAgKi9cblxuICB0aGlzLmhvc3RNb2RlbCA9IGhvc3RNb2RlbDtcbiAgLyoqXG4gICAqIEB0eXBlIHttb2R1bGU6ZWNoYXJ0cy9tb2RlbC9Nb2RlbH1cbiAgICovXG5cbiAgdGhpcy5kYXRhVHlwZTtcbiAgLyoqXG4gICAqIEluZGljZXMgc3RvcmVzIHRoZSBpbmRpY2VzIG9mIGRhdGEgc3Vic2V0IGFmdGVyIGZpbHRlcmVkLlxuICAgKiBUaGlzIGRhdGEgc3Vic2V0IHdpbGwgYmUgdXNlZCBpbiBjaGFydC5cbiAgICogQHR5cGUge0FycmF5LjxudW1iZXI+fVxuICAgKiBAcmVhZE9ubHlcbiAgICovXG5cbiAgdGhpcy5faW5kaWNlcyA9IG51bGw7XG4gIHRoaXMuX2NvdW50ID0gMDtcbiAgdGhpcy5fcmF3Q291bnQgPSAwO1xuICAvKipcbiAgICogRGF0YSBzdG9yYWdlXG4gICAqIEB0eXBlIHtPYmplY3QuPGtleSwgQXJyYXkuPFR5cGVkQXJyYXl8QXJyYXk+Pn1cbiAgICogQHByaXZhdGVcbiAgICovXG5cbiAgdGhpcy5fc3RvcmFnZSA9IHt9O1xuICAvKipcbiAgICogQHR5cGUge0FycmF5LjxzdHJpbmc+fVxuICAgKi9cblxuICB0aGlzLl9uYW1lTGlzdCA9IFtdO1xuICAvKipcbiAgICogQHR5cGUge0FycmF5LjxzdHJpbmc+fVxuICAgKi9cblxuICB0aGlzLl9pZExpc3QgPSBbXTtcbiAgLyoqXG4gICAqIE1vZGVscyBvZiBkYXRhIG9wdGlvbiBpcyBzdG9yZWQgc3BhcnNlIGZvciBvcHRpbWl6aW5nIG1lbW9yeSBjb3N0XG4gICAqIEB0eXBlIHtBcnJheS48bW9kdWxlOmVjaGFydHMvbW9kZWwvTW9kZWw+fVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuICB0aGlzLl9vcHRpb25Nb2RlbHMgPSBbXTtcbiAgLyoqXG4gICAqIEdsb2JhbCB2aXN1YWwgcHJvcGVydGllcyBhZnRlciB2aXN1YWwgY29kaW5nXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuXG4gIHRoaXMuX3Zpc3VhbCA9IHt9O1xuICAvKipcbiAgICogR2xvYmVsIGxheW91dCBwcm9wZXJ0aWVzLlxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuICB0aGlzLl9sYXlvdXQgPSB7fTtcbiAgLyoqXG4gICAqIEl0ZW0gdmlzdWFsIHByb3BlcnRpZXMgYWZ0ZXIgdmlzdWFsIGNvZGluZ1xuICAgKiBAdHlwZSB7QXJyYXkuPE9iamVjdD59XG4gICAqIEBwcml2YXRlXG4gICAqL1xuXG4gIHRoaXMuX2l0ZW1WaXN1YWxzID0gW107XG4gIC8qKlxuICAgKiBLZXk6IHZpc3VhbCB0eXBlLCBWYWx1ZTogYm9vbGVhblxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAcmVhZE9ubHlcbiAgICovXG5cbiAgdGhpcy5oYXNJdGVtVmlzdWFsID0ge307XG4gIC8qKlxuICAgKiBJdGVtIGxheW91dCBwcm9wZXJ0aWVzIGFmdGVyIGxheW91dFxuICAgKiBAdHlwZSB7QXJyYXkuPE9iamVjdD59XG4gICAqIEBwcml2YXRlXG4gICAqL1xuXG4gIHRoaXMuX2l0ZW1MYXlvdXRzID0gW107XG4gIC8qKlxuICAgKiBHcmFwaGljIGVsZW1uZW50c1xuICAgKiBAdHlwZSB7QXJyYXkuPG1vZHVsZTp6cmVuZGVyL0VsZW1lbnQ+fVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuICB0aGlzLl9ncmFwaGljRWxzID0gW107XG4gIC8qKlxuICAgKiBNYXggc2l6ZSBvZiBlYWNoIGNodW5rLlxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuICB0aGlzLl9jaHVua1NpemUgPSAxZTU7XG4gIC8qKlxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuICB0aGlzLl9jaHVua0NvdW50ID0gMDtcbiAgLyoqXG4gICAqIEB0eXBlIHtBcnJheS48QXJyYXl8T2JqZWN0Pn1cbiAgICogQHByaXZhdGVcbiAgICovXG5cbiAgdGhpcy5fcmF3RGF0YTtcbiAgLyoqXG4gICAqIFJhdyBleHRlbnQgd2lsbCBub3QgYmUgY2xvbmVkLCBidXQgb25seSB0cmFuc2ZlcmVkLlxuICAgKiBJdCB3aWxsIG5vdCBiZSBjYWxjdWxhdGVkIHV0aWwgbmVlZGVkLlxuICAgKiBrZXk6IGRpbSxcbiAgICogdmFsdWU6IHtlbmQ6IG51bWJlciwgZXh0ZW50OiBBcnJheS48bnVtYmVyPn1cbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQHByaXZhdGVcbiAgICovXG5cbiAgdGhpcy5fcmF3RXh0ZW50ID0ge307XG4gIC8qKlxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuICB0aGlzLl9leHRlbnQgPSB7fTtcbiAgLyoqXG4gICAqIGtleTogZGltXG4gICAqIHZhbHVlOiBleHRlbnRcbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQHByaXZhdGVcbiAgICovXG5cbiAgdGhpcy5fYXBwcm94aW1hdGVFeHRlbnQgPSB7fTtcbiAgLyoqXG4gICAqIENhY2hlIHN1bW1hcnkgaW5mbyBmb3IgZmFzdCB2aXNpdC4gU2VlIFwiZGltZW5zaW9uSGVscGVyXCIuXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuXG4gIHRoaXMuX2RpbWVuc2lvbnNTdW1tYXJ5ID0gc3VtbWFyaXplRGltZW5zaW9ucyh0aGlzKTtcbiAgLyoqXG4gICAqIEB0eXBlIHtPYmplY3QuPEFycmF5fFR5cGVkQXJyYXk+fVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuICB0aGlzLl9pbnZlcnRlZEluZGljZXNNYXAgPSBpbnZlcnRlZEluZGljZXNNYXA7XG4gIC8qKlxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuICB0aGlzLl9jYWxjdWxhdGlvbkluZm8gPSB7fTtcbn07XG5cbnZhciBsaXN0UHJvdG8gPSBMaXN0LnByb3RvdHlwZTtcbmxpc3RQcm90by50eXBlID0gJ2xpc3QnO1xuLyoqXG4gKiBJZiBlYWNoIGRhdGEgaXRlbSBoYXMgaXQncyBvd24gb3B0aW9uXG4gKiBAdHlwZSB7Ym9vbGVhbn1cbiAqL1xuXG5saXN0UHJvdG8uaGFzSXRlbU9wdGlvbiA9IHRydWU7XG4vKipcbiAqIEdldCBkaW1lbnNpb24gbmFtZVxuICogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfSBkaW1cbiAqICAgICAgICBEaW1lbnNpb24gY2FuIGJlIGNvbmNyZXRlIG5hbWVzIGxpa2UgeCwgeSwgeiwgbG5nLCBsYXQsIGFuZ2xlLCByYWRpdXNcbiAqICAgICAgICBPciBhIG9yZGluYWwgbnVtYmVyLiBGb3IgZXhhbXBsZSBnZXREaW1lbnNpb25JbmZvKDApIHdpbGwgcmV0dXJuICd4JyBvciAnbG5nJyBvciAncmFkaXVzJ1xuICogQHJldHVybiB7c3RyaW5nfSBDb25jcmV0ZSBkaW0gbmFtZS5cbiAqL1xuXG5saXN0UHJvdG8uZ2V0RGltZW5zaW9uID0gZnVuY3Rpb24gKGRpbSkge1xuICBpZiAoIWlzTmFOKGRpbSkpIHtcbiAgICBkaW0gPSB0aGlzLmRpbWVuc2lvbnNbZGltXSB8fCBkaW07XG4gIH1cblxuICByZXR1cm4gZGltO1xufTtcbi8qKlxuICogR2V0IHR5cGUgYW5kIGNhbGN1bGF0aW9uIGluZm8gb2YgcGFydGljdWxhciBkaW1lbnNpb25cbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gZGltXG4gKiAgICAgICAgRGltZW5zaW9uIGNhbiBiZSBjb25jcmV0ZSBuYW1lcyBsaWtlIHgsIHksIHosIGxuZywgbGF0LCBhbmdsZSwgcmFkaXVzXG4gKiAgICAgICAgT3IgYSBvcmRpbmFsIG51bWJlci4gRm9yIGV4YW1wbGUgZ2V0RGltZW5zaW9uSW5mbygwKSB3aWxsIHJldHVybiAneCcgb3IgJ2xuZycgb3IgJ3JhZGl1cydcbiAqL1xuXG5cbmxpc3RQcm90by5nZXREaW1lbnNpb25JbmZvID0gZnVuY3Rpb24gKGRpbSkge1xuICAvLyBEbyBub3QgY2xvbmUsIGJlY2F1c2UgdGhlcmUgbWF5IGJlIGNhdGVnb3JpZXMgaW4gZGltSW5mby5cbiAgcmV0dXJuIHRoaXMuX2RpbWVuc2lvbkluZm9zW3RoaXMuZ2V0RGltZW5zaW9uKGRpbSldO1xufTtcbi8qKlxuICogQHJldHVybiB7QXJyYXkuPHN0cmluZz59IGNvbmNyZXRlIGRpbWVuc2lvbiBuYW1lIGxpc3Qgb24gY29vcmQuXG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0RGltZW5zaW9uc09uQ29vcmQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl9kaW1lbnNpb25zU3VtbWFyeS5kYXRhRGltc09uQ29vcmQuc2xpY2UoKTtcbn07XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb29yZERpbVxuICogQHBhcmFtIHtudW1iZXJ9IFtpZHhdIEEgY29vcmREaW0gbWF5IG1hcCB0byBtb3JlIHRoYW4gb25lIGRhdGEgZGltLlxuICogICAgICAgIElmIGlkeCBpcyBgdHJ1ZWAsIHJldHVybiBhIGFycmF5IG9mIGFsbCBtYXBwZWQgZGltcy5cbiAqICAgICAgICBJZiBpZHggaXMgbm90IHNwZWNpZmllZCwgcmV0dXJuIHRoZSBmaXJzdCBkaW0gbm90IGV4dHJhLlxuICogQHJldHVybiB7c3RyaW5nfEFycmF5LjxzdHJpbmc+fSBjb25jcmV0ZSBkYXRhIGRpbS5cbiAqICAgICAgICBJZiBpZHggaXMgbnVtYmVyLCBhbmQgbm90IGZvdW5kLCByZXR1cm4gbnVsbC91bmRlZmluZWQuXG4gKiAgICAgICAgSWYgaWR4IGlzIGB0cnVlYCwgYW5kIG5vdCBmb3VuZCwgcmV0dXJuIGVtcHR5IGFycmF5IChhbHdheXMgcmV0dXJuIGFycmF5KS5cbiAqL1xuXG5cbmxpc3RQcm90by5tYXBEaW1lbnNpb24gPSBmdW5jdGlvbiAoY29vcmREaW0sIGlkeCkge1xuICB2YXIgZGltZW5zaW9uc1N1bW1hcnkgPSB0aGlzLl9kaW1lbnNpb25zU3VtbWFyeTtcblxuICBpZiAoaWR4ID09IG51bGwpIHtcbiAgICByZXR1cm4gZGltZW5zaW9uc1N1bW1hcnkuZW5jb2RlRmlyc3REaW1Ob3RFeHRyYVtjb29yZERpbV07XG4gIH1cblxuICB2YXIgZGltcyA9IGRpbWVuc2lvbnNTdW1tYXJ5LmVuY29kZVtjb29yZERpbV07XG4gIHJldHVybiBpZHggPT09IHRydWUgLy8gYWx3YXlzIHJldHVybiBhcnJheSBpZiBpZHggaXMgYHRydWVgXG4gID8gKGRpbXMgfHwgW10pLnNsaWNlKCkgOiBkaW1zICYmIGRpbXNbaWR4XTtcbn07XG4vKipcbiAqIEluaXRpYWxpemUgZnJvbSBkYXRhXG4gKiBAcGFyYW0ge0FycmF5LjxPYmplY3R8bnVtYmVyfEFycmF5Pn0gZGF0YSBzb3VyY2Ugb3IgZGF0YSBvciBkYXRhIHByb3ZpZGVyLlxuICogQHBhcmFtIHtBcnJheS48c3RyaW5nPn0gW25hbWVMSXN0XSBUaGUgbmFtZSBvZiBhIGRhdHVtIGlzIHVzZWQgb24gZGF0YSBkaWZmIGFuZFxuICogICAgICAgIGRlZnVhbHQgbGFiZWwvdG9vbHRpcC5cbiAqICAgICAgICBBIG5hbWUgY2FuIGJlIHNwZWNpZmllZCBpbiBlbmNvZGUuaXRlbU5hbWUsXG4gKiAgICAgICAgb3IgZGF0YUl0ZW0ubmFtZSAob25seSBmb3Igc2VyaWVzIG9wdGlvbiBkYXRhKSxcbiAqICAgICAgICBvciBwcm92aWRlZCBpbiBuYW1lTGlzdCBmcm9tIG91dHNpZGUuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZGltVmFsdWVHZXR0ZXJdIChkYXRhSXRlbSwgZGltTmFtZSwgZGF0YUluZGV4LCBkaW1JbmRleCkgPT4gbnVtYmVyXG4gKi9cblxuXG5saXN0UHJvdG8uaW5pdERhdGEgPSBmdW5jdGlvbiAoZGF0YSwgbmFtZUxpc3QsIGRpbVZhbHVlR2V0dGVyKSB7XG4gIHZhciBub3RQcm92aWRlciA9IFNvdXJjZS5pc0luc3RhbmNlKGRhdGEpIHx8IHpyVXRpbC5pc0FycmF5TGlrZShkYXRhKTtcblxuICBpZiAobm90UHJvdmlkZXIpIHtcbiAgICBkYXRhID0gbmV3IERlZmF1bHREYXRhUHJvdmlkZXIoZGF0YSwgdGhpcy5kaW1lbnNpb25zLmxlbmd0aCk7XG4gIH1cblxuICB0aGlzLl9yYXdEYXRhID0gZGF0YTsgLy8gQ2xlYXJcblxuICB0aGlzLl9zdG9yYWdlID0ge307XG4gIHRoaXMuX2luZGljZXMgPSBudWxsO1xuICB0aGlzLl9uYW1lTGlzdCA9IG5hbWVMaXN0IHx8IFtdO1xuICB0aGlzLl9pZExpc3QgPSBbXTtcbiAgdGhpcy5fbmFtZVJlcGVhdENvdW50ID0ge307XG5cbiAgaWYgKCFkaW1WYWx1ZUdldHRlcikge1xuICAgIHRoaXMuaGFzSXRlbU9wdGlvbiA9IGZhbHNlO1xuICB9XG4gIC8qKlxuICAgKiBAcmVhZE9ubHlcbiAgICovXG5cblxuICB0aGlzLmRlZmF1bHREaW1WYWx1ZUdldHRlciA9IGRlZmF1bHREaW1WYWx1ZUdldHRlcnNbdGhpcy5fcmF3RGF0YS5nZXRTb3VyY2UoKS5zb3VyY2VGb3JtYXRdOyAvLyBEZWZhdWx0IGRpbSB2YWx1ZSBnZXR0ZXJcblxuICB0aGlzLl9kaW1WYWx1ZUdldHRlciA9IGRpbVZhbHVlR2V0dGVyID0gZGltVmFsdWVHZXR0ZXIgfHwgdGhpcy5kZWZhdWx0RGltVmFsdWVHZXR0ZXI7IC8vIFJlc2V0IHJhdyBleHRlbnQuXG5cbiAgdGhpcy5fcmF3RXh0ZW50ID0ge307XG5cbiAgdGhpcy5faW5pdERhdGFGcm9tUHJvdmlkZXIoMCwgZGF0YS5jb3VudCgpKTsgLy8gSWYgZGF0YSBoYXMgbm8gaXRlbSBvcHRpb24uXG5cblxuICBpZiAoZGF0YS5wdXJlKSB7XG4gICAgdGhpcy5oYXNJdGVtT3B0aW9uID0gZmFsc2U7XG4gIH1cbn07XG5cbmxpc3RQcm90by5nZXRQcm92aWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuX3Jhd0RhdGE7XG59O1xuXG5saXN0UHJvdG8uYXBwZW5kRGF0YSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gIHZhciByYXdEYXRhID0gdGhpcy5fcmF3RGF0YTtcbiAgdmFyIHN0YXJ0ID0gdGhpcy5jb3VudCgpO1xuICByYXdEYXRhLmFwcGVuZERhdGEoZGF0YSk7XG4gIHZhciBlbmQgPSByYXdEYXRhLmNvdW50KCk7XG5cbiAgaWYgKCFyYXdEYXRhLnBlcnNpc3RlbnQpIHtcbiAgICBlbmQgKz0gc3RhcnQ7XG4gIH1cblxuICB0aGlzLl9pbml0RGF0YUZyb21Qcm92aWRlcihzdGFydCwgZW5kKTtcbn07XG5cbmxpc3RQcm90by5faW5pdERhdGFGcm9tUHJvdmlkZXIgPSBmdW5jdGlvbiAoc3RhcnQsIGVuZCkge1xuICAvLyBPcHRpbWl6ZS5cbiAgaWYgKHN0YXJ0ID49IGVuZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBjaHVua1NpemUgPSB0aGlzLl9jaHVua1NpemU7XG4gIHZhciByYXdEYXRhID0gdGhpcy5fcmF3RGF0YTtcbiAgdmFyIHN0b3JhZ2UgPSB0aGlzLl9zdG9yYWdlO1xuICB2YXIgZGltZW5zaW9ucyA9IHRoaXMuZGltZW5zaW9ucztcbiAgdmFyIGRpbUxlbiA9IGRpbWVuc2lvbnMubGVuZ3RoO1xuICB2YXIgZGltZW5zaW9uSW5mb01hcCA9IHRoaXMuX2RpbWVuc2lvbkluZm9zO1xuICB2YXIgbmFtZUxpc3QgPSB0aGlzLl9uYW1lTGlzdDtcbiAgdmFyIGlkTGlzdCA9IHRoaXMuX2lkTGlzdDtcbiAgdmFyIHJhd0V4dGVudCA9IHRoaXMuX3Jhd0V4dGVudDtcbiAgdmFyIG5hbWVSZXBlYXRDb3VudCA9IHRoaXMuX25hbWVSZXBlYXRDb3VudCA9IHt9O1xuICB2YXIgbmFtZURpbUlkeDtcbiAgdmFyIGNodW5rQ291bnQgPSB0aGlzLl9jaHVua0NvdW50O1xuICB2YXIgbGFzdENodW5rSW5kZXggPSBjaHVua0NvdW50IC0gMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGRpbUxlbjsgaSsrKSB7XG4gICAgdmFyIGRpbSA9IGRpbWVuc2lvbnNbaV07XG5cbiAgICBpZiAoIXJhd0V4dGVudFtkaW1dKSB7XG4gICAgICByYXdFeHRlbnRbZGltXSA9IGdldEluaXRpYWxFeHRlbnQoKTtcbiAgICB9XG5cbiAgICB2YXIgZGltSW5mbyA9IGRpbWVuc2lvbkluZm9NYXBbZGltXTtcblxuICAgIGlmIChkaW1JbmZvLm90aGVyRGltcy5pdGVtTmFtZSA9PT0gMCkge1xuICAgICAgbmFtZURpbUlkeCA9IHRoaXMuX25hbWVEaW1JZHggPSBpO1xuICAgIH1cblxuICAgIGlmIChkaW1JbmZvLm90aGVyRGltcy5pdGVtSWQgPT09IDApIHtcbiAgICAgIHRoaXMuX2lkRGltSWR4ID0gaTtcbiAgICB9XG5cbiAgICB2YXIgRGF0YUN0b3IgPSBkYXRhQ3RvcnNbZGltSW5mby50eXBlXTtcblxuICAgIGlmICghc3RvcmFnZVtkaW1dKSB7XG4gICAgICBzdG9yYWdlW2RpbV0gPSBbXTtcbiAgICB9XG5cbiAgICB2YXIgcmVzaXplQ2h1bmtBcnJheSA9IHN0b3JhZ2VbZGltXVtsYXN0Q2h1bmtJbmRleF07XG5cbiAgICBpZiAocmVzaXplQ2h1bmtBcnJheSAmJiByZXNpemVDaHVua0FycmF5Lmxlbmd0aCA8IGNodW5rU2l6ZSkge1xuICAgICAgdmFyIG5ld1N0b3JlID0gbmV3IERhdGFDdG9yKE1hdGgubWluKGVuZCAtIGxhc3RDaHVua0luZGV4ICogY2h1bmtTaXplLCBjaHVua1NpemUpKTsgLy8gVGhlIGNvc3Qgb2YgdGhlIGNvcHkgaXMgcHJvYmFibHkgaW5jb25zaWRlcmFibGVcbiAgICAgIC8vIHdpdGhpbiB0aGUgaW5pdGlhbCBjaHVua1NpemUuXG5cbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcmVzaXplQ2h1bmtBcnJheS5sZW5ndGg7IGorKykge1xuICAgICAgICBuZXdTdG9yZVtqXSA9IHJlc2l6ZUNodW5rQXJyYXlbal07XG4gICAgICB9XG5cbiAgICAgIHN0b3JhZ2VbZGltXVtsYXN0Q2h1bmtJbmRleF0gPSBuZXdTdG9yZTtcbiAgICB9IC8vIENyZWF0ZSBuZXcgY2h1bmtzLlxuXG5cbiAgICBmb3IgKHZhciBrID0gY2h1bmtDb3VudCAqIGNodW5rU2l6ZTsgayA8IGVuZDsgayArPSBjaHVua1NpemUpIHtcbiAgICAgIHN0b3JhZ2VbZGltXS5wdXNoKG5ldyBEYXRhQ3RvcihNYXRoLm1pbihlbmQgLSBrLCBjaHVua1NpemUpKSk7XG4gICAgfVxuXG4gICAgdGhpcy5fY2h1bmtDb3VudCA9IHN0b3JhZ2VbZGltXS5sZW5ndGg7XG4gIH1cblxuICB2YXIgZGF0YUl0ZW0gPSBuZXcgQXJyYXkoZGltTGVuKTtcblxuICBmb3IgKHZhciBpZHggPSBzdGFydDsgaWR4IDwgZW5kOyBpZHgrKykge1xuICAgIC8vIE5PVElDRTogVHJ5IG5vdCB0byB3cml0ZSB0aGluZ3MgaW50byBkYXRhSXRlbVxuICAgIGRhdGFJdGVtID0gcmF3RGF0YS5nZXRJdGVtKGlkeCwgZGF0YUl0ZW0pOyAvLyBFYWNoIGRhdGEgaXRlbSBpcyB2YWx1ZVxuICAgIC8vIFsxLCAyXVxuICAgIC8vIDJcbiAgICAvLyBCYXIgY2hhcnQsIGxpbmUgY2hhcnQgd2hpY2ggdXNlcyBjYXRlZ29yeSBheGlzXG4gICAgLy8gb25seSBnaXZlcyB0aGUgJ3knIHZhbHVlLiAneCcgdmFsdWUgaXMgdGhlIGluZGljZXMgb2YgY2F0ZWdvcnlcbiAgICAvLyBVc2UgYSB0ZW1wVmFsdWUgdG8gbm9ybWFsaXplIHRoZSB2YWx1ZSB0byBiZSBhICh4LCB5KSB2YWx1ZVxuXG4gICAgdmFyIGNodW5rSW5kZXggPSBNYXRoLmZsb29yKGlkeCAvIGNodW5rU2l6ZSk7XG4gICAgdmFyIGNodW5rT2Zmc2V0ID0gaWR4ICUgY2h1bmtTaXplOyAvLyBTdG9yZSB0aGUgZGF0YSBieSBkaW1lbnNpb25zXG5cbiAgICBmb3IgKHZhciBrID0gMDsgayA8IGRpbUxlbjsgaysrKSB7XG4gICAgICB2YXIgZGltID0gZGltZW5zaW9uc1trXTtcbiAgICAgIHZhciBkaW1TdG9yYWdlID0gc3RvcmFnZVtkaW1dW2NodW5rSW5kZXhdOyAvLyBQRU5ESU5HIE5VTEwgaXMgZW1wdHkgb3IgemVyb1xuXG4gICAgICB2YXIgdmFsID0gdGhpcy5fZGltVmFsdWVHZXR0ZXIoZGF0YUl0ZW0sIGRpbSwgaWR4LCBrKTtcblxuICAgICAgZGltU3RvcmFnZVtjaHVua09mZnNldF0gPSB2YWw7XG4gICAgICB2YXIgZGltUmF3RXh0ZW50ID0gcmF3RXh0ZW50W2RpbV07XG5cbiAgICAgIGlmICh2YWwgPCBkaW1SYXdFeHRlbnRbMF0pIHtcbiAgICAgICAgZGltUmF3RXh0ZW50WzBdID0gdmFsO1xuICAgICAgfVxuXG4gICAgICBpZiAodmFsID4gZGltUmF3RXh0ZW50WzFdKSB7XG4gICAgICAgIGRpbVJhd0V4dGVudFsxXSA9IHZhbDtcbiAgICAgIH1cbiAgICB9IC8vID8/PyBGSVhNRSBub3QgY2hlY2sgYnkgcHVyZSBidXQgc291cmNlRm9ybWF0P1xuICAgIC8vIFRPRE8gcmVmYWN0b3IgdGhlc2UgbG9naWMuXG5cblxuICAgIGlmICghcmF3RGF0YS5wdXJlKSB7XG4gICAgICB2YXIgbmFtZSA9IG5hbWVMaXN0W2lkeF07XG5cbiAgICAgIGlmIChkYXRhSXRlbSAmJiBuYW1lID09IG51bGwpIHtcbiAgICAgICAgLy8gSWYgZGF0YUl0ZW0gaXMge25hbWU6IC4uLn0sIGl0IGhhcyBoaWdoZXN0IHByaW9yaXR5LlxuICAgICAgICAvLyBUaGF0IGlzIGFwcHJvcHJpYXRlIGZvciBtYW55IGNvbW1vbiBjYXNlcy5cbiAgICAgICAgaWYgKGRhdGFJdGVtLm5hbWUgIT0gbnVsbCkge1xuICAgICAgICAgIC8vIFRoZXJlIGlzIG5vIG90aGVyIHBsYWNlIHRvIHBlcnNpc3RlbnQgZGF0YUl0ZW0ubmFtZSxcbiAgICAgICAgICAvLyBzbyBzYXZlIGl0IHRvIG5hbWVMaXN0LlxuICAgICAgICAgIG5hbWVMaXN0W2lkeF0gPSBuYW1lID0gZGF0YUl0ZW0ubmFtZTtcbiAgICAgICAgfSBlbHNlIGlmIChuYW1lRGltSWR4ICE9IG51bGwpIHtcbiAgICAgICAgICB2YXIgbmFtZURpbSA9IGRpbWVuc2lvbnNbbmFtZURpbUlkeF07XG4gICAgICAgICAgdmFyIG5hbWVEaW1DaHVuayA9IHN0b3JhZ2VbbmFtZURpbV1bY2h1bmtJbmRleF07XG5cbiAgICAgICAgICBpZiAobmFtZURpbUNodW5rKSB7XG4gICAgICAgICAgICBuYW1lID0gbmFtZURpbUNodW5rW2NodW5rT2Zmc2V0XTtcbiAgICAgICAgICAgIHZhciBvcmRpbmFsTWV0YSA9IGRpbWVuc2lvbkluZm9NYXBbbmFtZURpbV0ub3JkaW5hbE1ldGE7XG5cbiAgICAgICAgICAgIGlmIChvcmRpbmFsTWV0YSAmJiBvcmRpbmFsTWV0YS5jYXRlZ29yaWVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICBuYW1lID0gb3JkaW5hbE1ldGEuY2F0ZWdvcmllc1tuYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gLy8gVHJ5IHVzaW5nIHRoZSBpZCBpbiBvcHRpb25cbiAgICAgIC8vIGlkIG9yIG5hbWUgaXMgdXNlZCBvbiBkeW5hbWljYWwgZGF0YSwgbWFwcGluZyBvbGQgYW5kIG5ldyBpdGVtcy5cblxuXG4gICAgICB2YXIgaWQgPSBkYXRhSXRlbSA9PSBudWxsID8gbnVsbCA6IGRhdGFJdGVtLmlkO1xuXG4gICAgICBpZiAoaWQgPT0gbnVsbCAmJiBuYW1lICE9IG51bGwpIHtcbiAgICAgICAgLy8gVXNlIG5hbWUgYXMgaWQgYW5kIGFkZCBjb3VudGVyIHRvIGF2b2lkIHNhbWUgbmFtZVxuICAgICAgICBuYW1lUmVwZWF0Q291bnRbbmFtZV0gPSBuYW1lUmVwZWF0Q291bnRbbmFtZV0gfHwgMDtcbiAgICAgICAgaWQgPSBuYW1lO1xuXG4gICAgICAgIGlmIChuYW1lUmVwZWF0Q291bnRbbmFtZV0gPiAwKSB7XG4gICAgICAgICAgaWQgKz0gJ19fZWNfXycgKyBuYW1lUmVwZWF0Q291bnRbbmFtZV07XG4gICAgICAgIH1cblxuICAgICAgICBuYW1lUmVwZWF0Q291bnRbbmFtZV0rKztcbiAgICAgIH1cblxuICAgICAgaWQgIT0gbnVsbCAmJiAoaWRMaXN0W2lkeF0gPSBpZCk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFyYXdEYXRhLnBlcnNpc3RlbnQgJiYgcmF3RGF0YS5jbGVhbikge1xuICAgIC8vIENsZWFuIHVudXNlZCBkYXRhIGlmIGRhdGEgc291cmNlIGlzIHR5cGVkIGFycmF5LlxuICAgIHJhd0RhdGEuY2xlYW4oKTtcbiAgfVxuXG4gIHRoaXMuX3Jhd0NvdW50ID0gdGhpcy5fY291bnQgPSBlbmQ7IC8vIFJlc2V0IGRhdGEgZXh0ZW50XG5cbiAgdGhpcy5fZXh0ZW50ID0ge307XG4gIHByZXBhcmVJbnZlcnRlZEluZGV4KHRoaXMpO1xufTtcblxuZnVuY3Rpb24gcHJlcGFyZUludmVydGVkSW5kZXgobGlzdCkge1xuICB2YXIgaW52ZXJ0ZWRJbmRpY2VzTWFwID0gbGlzdC5faW52ZXJ0ZWRJbmRpY2VzTWFwO1xuICB6clV0aWwuZWFjaChpbnZlcnRlZEluZGljZXNNYXAsIGZ1bmN0aW9uIChpbnZlcnRlZEluZGljZXMsIGRpbSkge1xuICAgIHZhciBkaW1JbmZvID0gbGlzdC5fZGltZW5zaW9uSW5mb3NbZGltXTsgLy8gQ3VycmVudGx5LCBvbmx5IGRpbWVuc2lvbnMgdGhhdCBoYXMgb3JkaW5hbE1ldGEgY2FuIGNyZWF0ZSBpbnZlcnRlZCBpbmRpY2VzLlxuXG4gICAgdmFyIG9yZGluYWxNZXRhID0gZGltSW5mby5vcmRpbmFsTWV0YTtcblxuICAgIGlmIChvcmRpbmFsTWV0YSkge1xuICAgICAgaW52ZXJ0ZWRJbmRpY2VzID0gaW52ZXJ0ZWRJbmRpY2VzTWFwW2RpbV0gPSBuZXcgQ3RvclVpbnQzMkFycmF5KG9yZGluYWxNZXRhLmNhdGVnb3JpZXMubGVuZ3RoKTsgLy8gVGhlIGRlZmF1bHQgdmFsdWUgb2YgVHlwZWRBcnJheSBpcyAwLiBUbyBhdm9pZCBtaXNzXG4gICAgICAvLyBtYXBwaW5nIHRvIDAsIHdlIHNob3VsZCBzZXQgaXQgYXMgTmFOLlxuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGludmVydGVkSW5kaWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpbnZlcnRlZEluZGljZXNbaV0gPSBOYU47XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5fY291bnQ7IGkrKykge1xuICAgICAgICAvLyBPbmx5IHN1cHBvcnQgdGhlIGNhc2UgdGhhdCBhbGwgdmFsdWVzIGFyZSBkaXN0aW5jdC5cbiAgICAgICAgaW52ZXJ0ZWRJbmRpY2VzW2xpc3QuZ2V0KGRpbSwgaSldID0gaTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRSYXdWYWx1ZUZyb21TdG9yZShsaXN0LCBkaW1JbmRleCwgcmF3SW5kZXgpIHtcbiAgdmFyIHZhbDtcblxuICBpZiAoZGltSW5kZXggIT0gbnVsbCkge1xuICAgIHZhciBjaHVua1NpemUgPSBsaXN0Ll9jaHVua1NpemU7XG4gICAgdmFyIGNodW5rSW5kZXggPSBNYXRoLmZsb29yKHJhd0luZGV4IC8gY2h1bmtTaXplKTtcbiAgICB2YXIgY2h1bmtPZmZzZXQgPSByYXdJbmRleCAlIGNodW5rU2l6ZTtcbiAgICB2YXIgZGltID0gbGlzdC5kaW1lbnNpb25zW2RpbUluZGV4XTtcbiAgICB2YXIgY2h1bmsgPSBsaXN0Ll9zdG9yYWdlW2RpbV1bY2h1bmtJbmRleF07XG5cbiAgICBpZiAoY2h1bmspIHtcbiAgICAgIHZhbCA9IGNodW5rW2NodW5rT2Zmc2V0XTtcbiAgICAgIHZhciBvcmRpbmFsTWV0YSA9IGxpc3QuX2RpbWVuc2lvbkluZm9zW2RpbV0ub3JkaW5hbE1ldGE7XG5cbiAgICAgIGlmIChvcmRpbmFsTWV0YSAmJiBvcmRpbmFsTWV0YS5jYXRlZ29yaWVzLmxlbmd0aCkge1xuICAgICAgICB2YWwgPSBvcmRpbmFsTWV0YS5jYXRlZ29yaWVzW3ZhbF07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHZhbDtcbn1cbi8qKlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5cblxubGlzdFByb3RvLmNvdW50ID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5fY291bnQ7XG59O1xuXG5saXN0UHJvdG8uZ2V0SW5kaWNlcyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIG5ld0luZGljZXM7XG4gIHZhciBpbmRpY2VzID0gdGhpcy5faW5kaWNlcztcblxuICBpZiAoaW5kaWNlcykge1xuICAgIHZhciBDdG9yID0gaW5kaWNlcy5jb25zdHJ1Y3RvcjtcbiAgICB2YXIgdGhpc0NvdW50ID0gdGhpcy5fY291bnQ7IC8vIGBuZXcgQXJyYXkoYSwgYiwgYylgIGlzIGRpZmZlcmVudCBmcm9tIGBuZXcgVWludDMyQXJyYXkoYSwgYiwgYylgLlxuXG4gICAgaWYgKEN0b3IgPT09IEFycmF5KSB7XG4gICAgICBuZXdJbmRpY2VzID0gbmV3IEN0b3IodGhpc0NvdW50KTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzQ291bnQ7IGkrKykge1xuICAgICAgICBuZXdJbmRpY2VzW2ldID0gaW5kaWNlc1tpXTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbmV3SW5kaWNlcyA9IG5ldyBDdG9yKGluZGljZXMuYnVmZmVyLCAwLCB0aGlzQ291bnQpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgQ3RvciA9IGdldEluZGljZXNDdG9yKHRoaXMpO1xuICAgIHZhciBuZXdJbmRpY2VzID0gbmV3IEN0b3IodGhpcy5jb3VudCgpKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV3SW5kaWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgbmV3SW5kaWNlc1tpXSA9IGk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld0luZGljZXM7XG59O1xuLyoqXG4gKiBHZXQgdmFsdWUuIFJldHVybiBOYU4gaWYgaWR4IGlzIG91dCBvZiByYW5nZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBkaW0gRGltIG11c3QgYmUgY29uY3JldGUgbmFtZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBpZHhcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gc3RhY2tcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuXG5cbmxpc3RQcm90by5nZXQgPSBmdW5jdGlvbiAoZGltLCBpZHhcbi8qLCBzdGFjayAqL1xuKSB7XG4gIGlmICghKGlkeCA+PSAwICYmIGlkeCA8IHRoaXMuX2NvdW50KSkge1xuICAgIHJldHVybiBOYU47XG4gIH1cblxuICB2YXIgc3RvcmFnZSA9IHRoaXMuX3N0b3JhZ2U7XG5cbiAgaWYgKCFzdG9yYWdlW2RpbV0pIHtcbiAgICAvLyBUT0RPIFdhcm4gP1xuICAgIHJldHVybiBOYU47XG4gIH1cblxuICBpZHggPSB0aGlzLmdldFJhd0luZGV4KGlkeCk7XG4gIHZhciBjaHVua0luZGV4ID0gTWF0aC5mbG9vcihpZHggLyB0aGlzLl9jaHVua1NpemUpO1xuICB2YXIgY2h1bmtPZmZzZXQgPSBpZHggJSB0aGlzLl9jaHVua1NpemU7XG4gIHZhciBjaHVua1N0b3JlID0gc3RvcmFnZVtkaW1dW2NodW5rSW5kZXhdO1xuICB2YXIgdmFsdWUgPSBjaHVua1N0b3JlW2NodW5rT2Zmc2V0XTsgLy8gRklYTUUgb3JkaW5hbCBkYXRhIHR5cGUgaXMgbm90IHN0YWNrYWJsZVxuICAvLyBpZiAoc3RhY2spIHtcbiAgLy8gICAgIHZhciBkaW1lbnNpb25JbmZvID0gdGhpcy5fZGltZW5zaW9uSW5mb3NbZGltXTtcbiAgLy8gICAgIGlmIChkaW1lbnNpb25JbmZvICYmIGRpbWVuc2lvbkluZm8uc3RhY2thYmxlKSB7XG4gIC8vICAgICAgICAgdmFyIHN0YWNrZWRPbiA9IHRoaXMuc3RhY2tlZE9uO1xuICAvLyAgICAgICAgIHdoaWxlIChzdGFja2VkT24pIHtcbiAgLy8gICAgICAgICAgICAgLy8gR2V0IG5vIHN0YWNrZWQgZGF0YSBvZiBzdGFja2VkIG9uXG4gIC8vICAgICAgICAgICAgIHZhciBzdGFja2VkVmFsdWUgPSBzdGFja2VkT24uZ2V0KGRpbSwgaWR4KTtcbiAgLy8gICAgICAgICAgICAgLy8gQ29uc2lkZXJpbmcgcG9zaXRpdmUgc3RhY2ssIG5lZ2F0aXZlIHN0YWNrIGFuZCBlbXB0eSBkYXRhXG4gIC8vICAgICAgICAgICAgIGlmICgodmFsdWUgPj0gMCAmJiBzdGFja2VkVmFsdWUgPiAwKSAgLy8gUG9zaXRpdmUgc3RhY2tcbiAgLy8gICAgICAgICAgICAgICAgIHx8ICh2YWx1ZSA8PSAwICYmIHN0YWNrZWRWYWx1ZSA8IDApIC8vIE5lZ2F0aXZlIHN0YWNrXG4gIC8vICAgICAgICAgICAgICkge1xuICAvLyAgICAgICAgICAgICAgICAgdmFsdWUgKz0gc3RhY2tlZFZhbHVlO1xuICAvLyAgICAgICAgICAgICB9XG4gIC8vICAgICAgICAgICAgIHN0YWNrZWRPbiA9IHN0YWNrZWRPbi5zdGFja2VkT247XG4gIC8vICAgICAgICAgfVxuICAvLyAgICAgfVxuICAvLyB9XG5cbiAgcmV0dXJuIHZhbHVlO1xufTtcbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IGRpbSBjb25jcmV0ZSBkaW1cbiAqIEBwYXJhbSB7bnVtYmVyfSByYXdJbmRleFxuICogQHJldHVybiB7bnVtYmVyfHN0cmluZ31cbiAqL1xuXG5cbmxpc3RQcm90by5nZXRCeVJhd0luZGV4ID0gZnVuY3Rpb24gKGRpbSwgcmF3SWR4KSB7XG4gIGlmICghKHJhd0lkeCA+PSAwICYmIHJhd0lkeCA8IHRoaXMuX3Jhd0NvdW50KSkge1xuICAgIHJldHVybiBOYU47XG4gIH1cblxuICB2YXIgZGltU3RvcmUgPSB0aGlzLl9zdG9yYWdlW2RpbV07XG5cbiAgaWYgKCFkaW1TdG9yZSkge1xuICAgIC8vIFRPRE8gV2FybiA/XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHZhciBjaHVua0luZGV4ID0gTWF0aC5mbG9vcihyYXdJZHggLyB0aGlzLl9jaHVua1NpemUpO1xuICB2YXIgY2h1bmtPZmZzZXQgPSByYXdJZHggJSB0aGlzLl9jaHVua1NpemU7XG4gIHZhciBjaHVua1N0b3JlID0gZGltU3RvcmVbY2h1bmtJbmRleF07XG4gIHJldHVybiBjaHVua1N0b3JlW2NodW5rT2Zmc2V0XTtcbn07XG4vKipcbiAqIEZJWE1FIFVzZSBgZ2V0YCBvbiBjaHJvbWUgbWF5YmUgc2xvdyhpbiBmaWx0ZXJTZWxmIGFuZCBzZWxlY3RSYW5nZSkuXG4gKiBIYWNrIGEgbXVjaCBzaW1wbGVyIF9nZXRGYXN0XG4gKiBAcHJpdmF0ZVxuICovXG5cblxubGlzdFByb3RvLl9nZXRGYXN0ID0gZnVuY3Rpb24gKGRpbSwgcmF3SWR4KSB7XG4gIHZhciBjaHVua0luZGV4ID0gTWF0aC5mbG9vcihyYXdJZHggLyB0aGlzLl9jaHVua1NpemUpO1xuICB2YXIgY2h1bmtPZmZzZXQgPSByYXdJZHggJSB0aGlzLl9jaHVua1NpemU7XG4gIHZhciBjaHVua1N0b3JlID0gdGhpcy5fc3RvcmFnZVtkaW1dW2NodW5rSW5kZXhdO1xuICByZXR1cm4gY2h1bmtTdG9yZVtjaHVua09mZnNldF07XG59O1xuLyoqXG4gKiBHZXQgdmFsdWUgZm9yIG11bHRpIGRpbWVuc2lvbnMuXG4gKiBAcGFyYW0ge0FycmF5LjxzdHJpbmc+fSBbZGltZW5zaW9uc10gSWYgaWdub3JlZCwgdXNpbmcgYWxsIGRpbWVuc2lvbnMuXG4gKiBAcGFyYW0ge251bWJlcn0gaWR4XG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0VmFsdWVzID0gZnVuY3Rpb24gKGRpbWVuc2lvbnMsIGlkeFxuLyosIHN0YWNrICovXG4pIHtcbiAgdmFyIHZhbHVlcyA9IFtdO1xuXG4gIGlmICghenJVdGlsLmlzQXJyYXkoZGltZW5zaW9ucykpIHtcbiAgICAvLyBzdGFjayA9IGlkeDtcbiAgICBpZHggPSBkaW1lbnNpb25zO1xuICAgIGRpbWVuc2lvbnMgPSB0aGlzLmRpbWVuc2lvbnM7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gZGltZW5zaW9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIHZhbHVlcy5wdXNoKHRoaXMuZ2V0KGRpbWVuc2lvbnNbaV0sIGlkeFxuICAgIC8qLCBzdGFjayAqL1xuICAgICkpO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlcztcbn07XG4vKipcbiAqIElmIHZhbHVlIGlzIE5hTi4gSW5sY3VkaW5nICctJ1xuICogT25seSBjaGVjayB0aGUgY29vcmQgZGltZW5zaW9ucy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBkaW1cbiAqIEBwYXJhbSB7bnVtYmVyfSBpZHhcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuXG5cbmxpc3RQcm90by5oYXNWYWx1ZSA9IGZ1bmN0aW9uIChpZHgpIHtcbiAgdmFyIGRhdGFEaW1zT25Db29yZCA9IHRoaXMuX2RpbWVuc2lvbnNTdW1tYXJ5LmRhdGFEaW1zT25Db29yZDtcbiAgdmFyIGRpbWVuc2lvbkluZm9zID0gdGhpcy5fZGltZW5zaW9uSW5mb3M7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGRhdGFEaW1zT25Db29yZC5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGlmICggLy8gT3JkaW5hbCB0eXBlIGNhbiBiZSBzdHJpbmcgb3IgbnVtYmVyXG4gICAgZGltZW5zaW9uSW5mb3NbZGF0YURpbXNPbkNvb3JkW2ldXS50eXBlICE9PSAnb3JkaW5hbCcgLy8gRklYTUUgY2hlY2sgb3JkaW5hbCB3aGVuIHVzaW5nIGluZGV4P1xuICAgICYmIGlzTmFOKHRoaXMuZ2V0KGRhdGFEaW1zT25Db29yZFtpXSwgaWR4KSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG4vKipcbiAqIEdldCBleHRlbnQgb2YgZGF0YSBpbiBvbmUgZGltZW5zaW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gZGltXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHN0YWNrXG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0RGF0YUV4dGVudCA9IGZ1bmN0aW9uIChkaW1cbi8qLCBzdGFjayAqL1xuKSB7XG4gIC8vIE1ha2Ugc3VyZSB1c2UgY29uY3JldGUgZGltIGFzIGNhY2hlIG5hbWUuXG4gIGRpbSA9IHRoaXMuZ2V0RGltZW5zaW9uKGRpbSk7XG4gIHZhciBkaW1EYXRhID0gdGhpcy5fc3RvcmFnZVtkaW1dO1xuICB2YXIgaW5pdGlhbEV4dGVudCA9IGdldEluaXRpYWxFeHRlbnQoKTsgLy8gc3RhY2sgPSAhISgoc3RhY2sgfHwgZmFsc2UpICYmIHRoaXMuZ2V0Q2FsY3VsYXRpb25JbmZvKGRpbSkpO1xuXG4gIGlmICghZGltRGF0YSkge1xuICAgIHJldHVybiBpbml0aWFsRXh0ZW50O1xuICB9IC8vIE1ha2UgbW9yZSBzdHJpY3QgY2hlY2tpbmdzIHRvIGVuc3VyZSBoaXR0aW5nIGNhY2hlLlxuXG5cbiAgdmFyIGN1cnJFbmQgPSB0aGlzLmNvdW50KCk7IC8vIHZhciBjYWNoZU5hbWUgPSBbZGltLCAhIXN0YWNrXS5qb2luKCdfJyk7XG4gIC8vIHZhciBjYWNoZU5hbWUgPSBkaW07XG4gIC8vIENvbnNpZGVyIHRoZSBtb3N0IGNhc2VzIHdoZW4gdXNpbmcgZGF0YSB6b29tLCBgZ2V0RGF0YUV4dGVudGBcbiAgLy8gaGFwcGVuZWQgYmVmb3JlIGZpbHRlcmluZy4gV2UgY2FjaGUgcmF3IGV4dGVudCwgd2hpY2ggaXMgbm90XG4gIC8vIG5lY2Vzc2FyeSB0byBiZSBjbGVhcmVkIGFuZCByZWNhbGN1bGF0ZWQgd2hlbiByZXN0b3JlIGRhdGEuXG5cbiAgdmFyIHVzZVJhdyA9ICF0aGlzLl9pbmRpY2VzOyAvLyAmJiAhc3RhY2s7XG5cbiAgdmFyIGRpbUV4dGVudDtcblxuICBpZiAodXNlUmF3KSB7XG4gICAgcmV0dXJuIHRoaXMuX3Jhd0V4dGVudFtkaW1dLnNsaWNlKCk7XG4gIH1cblxuICBkaW1FeHRlbnQgPSB0aGlzLl9leHRlbnRbZGltXTtcblxuICBpZiAoZGltRXh0ZW50KSB7XG4gICAgcmV0dXJuIGRpbUV4dGVudC5zbGljZSgpO1xuICB9XG5cbiAgZGltRXh0ZW50ID0gaW5pdGlhbEV4dGVudDtcbiAgdmFyIG1pbiA9IGRpbUV4dGVudFswXTtcbiAgdmFyIG1heCA9IGRpbUV4dGVudFsxXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGN1cnJFbmQ7IGkrKykge1xuICAgIC8vIHZhciB2YWx1ZSA9IHN0YWNrID8gdGhpcy5nZXQoZGltLCBpLCB0cnVlKSA6IHRoaXMuX2dldEZhc3QoZGltLCB0aGlzLmdldFJhd0luZGV4KGkpKTtcbiAgICB2YXIgdmFsdWUgPSB0aGlzLl9nZXRGYXN0KGRpbSwgdGhpcy5nZXRSYXdJbmRleChpKSk7XG5cbiAgICB2YWx1ZSA8IG1pbiAmJiAobWluID0gdmFsdWUpO1xuICAgIHZhbHVlID4gbWF4ICYmIChtYXggPSB2YWx1ZSk7XG4gIH1cblxuICBkaW1FeHRlbnQgPSBbbWluLCBtYXhdO1xuICB0aGlzLl9leHRlbnRbZGltXSA9IGRpbUV4dGVudDtcbiAgcmV0dXJuIGRpbUV4dGVudDtcbn07XG4vKipcbiAqIE9wdGltaXplIGZvciB0aGUgc2NlbmFyaW8gdGhhdCBkYXRhIGlzIGZpbHRlcmVkIGJ5IGEgZ2l2ZW4gZXh0ZW50LlxuICogQ29uc2lkZXIgdGhhdCBpZiBkYXRhIGFtb3VudCBpcyBtb3JlIHRoYW4gaHVuZHJlZHMgb2YgdGhvdXNhbmQsXG4gKiBleHRlbnQgY2FsY3VsYXRpb24gd2lsbCBjb3N0IG1vcmUgdGhhbiAxMG1zIGFuZCB0aGUgY2FjaGUgd2lsbFxuICogYmUgZXJhc2VkIGJlY2F1c2Ugb2YgdGhlIGZpbHRlcmluZy5cbiAqL1xuXG5cbmxpc3RQcm90by5nZXRBcHByb3hpbWF0ZUV4dGVudCA9IGZ1bmN0aW9uIChkaW1cbi8qLCBzdGFjayAqL1xuKSB7XG4gIGRpbSA9IHRoaXMuZ2V0RGltZW5zaW9uKGRpbSk7XG4gIHJldHVybiB0aGlzLl9hcHByb3hpbWF0ZUV4dGVudFtkaW1dIHx8IHRoaXMuZ2V0RGF0YUV4dGVudChkaW1cbiAgLyosIHN0YWNrICovXG4gICk7XG59O1xuXG5saXN0UHJvdG8uc2V0QXBwcm94aW1hdGVFeHRlbnQgPSBmdW5jdGlvbiAoZXh0ZW50LCBkaW1cbi8qLCBzdGFjayAqL1xuKSB7XG4gIGRpbSA9IHRoaXMuZ2V0RGltZW5zaW9uKGRpbSk7XG4gIHRoaXMuX2FwcHJveGltYXRlRXh0ZW50W2RpbV0gPSBleHRlbnQuc2xpY2UoKTtcbn07XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAqIEByZXR1cm4geyp9XG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0Q2FsY3VsYXRpb25JbmZvID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gdGhpcy5fY2FsY3VsYXRpb25JbmZvW2tleV07XG59O1xuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ3xPYmplY3R9IGtleSBvciBrLXYgb2JqZWN0XG4gKiBAcGFyYW0geyp9IFt2YWx1ZV1cbiAqL1xuXG5cbmxpc3RQcm90by5zZXRDYWxjdWxhdGlvbkluZm8gPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICBpc09iamVjdChrZXkpID8genJVdGlsLmV4dGVuZCh0aGlzLl9jYWxjdWxhdGlvbkluZm8sIGtleSkgOiB0aGlzLl9jYWxjdWxhdGlvbkluZm9ba2V5XSA9IHZhbHVlO1xufTtcbi8qKlxuICogR2V0IHN1bSBvZiBkYXRhIGluIG9uZSBkaW1lbnNpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBkaW1cbiAqL1xuXG5cbmxpc3RQcm90by5nZXRTdW0gPSBmdW5jdGlvbiAoZGltXG4vKiwgc3RhY2sgKi9cbikge1xuICB2YXIgZGltRGF0YSA9IHRoaXMuX3N0b3JhZ2VbZGltXTtcbiAgdmFyIHN1bSA9IDA7XG5cbiAgaWYgKGRpbURhdGEpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdGhpcy5jb3VudCgpOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIHZhciB2YWx1ZSA9IHRoaXMuZ2V0KGRpbSwgaVxuICAgICAgLyosIHN0YWNrICovXG4gICAgICApO1xuXG4gICAgICBpZiAoIWlzTmFOKHZhbHVlKSkge1xuICAgICAgICBzdW0gKz0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN1bTtcbn07XG4vKipcbiAqIEdldCBtZWRpYW4gb2YgZGF0YSBpbiBvbmUgZGltZW5zaW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gZGltXG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0TWVkaWFuID0gZnVuY3Rpb24gKGRpbVxuLyosIHN0YWNrICovXG4pIHtcbiAgdmFyIGRpbURhdGFBcnJheSA9IFtdOyAvLyBtYXAgYWxsIGRhdGEgb2Ygb25lIGRpbWVuc2lvblxuXG4gIHRoaXMuZWFjaChkaW0sIGZ1bmN0aW9uICh2YWwsIGlkeCkge1xuICAgIGlmICghaXNOYU4odmFsKSkge1xuICAgICAgZGltRGF0YUFycmF5LnB1c2godmFsKTtcbiAgICB9XG4gIH0pOyAvLyBUT0RPXG4gIC8vIFVzZSBxdWljayBzZWxlY3Q/XG4gIC8vIGltbXV0YWJpbGl0eSAmIHNvcnRcblxuICB2YXIgc29ydGVkRGltRGF0YUFycmF5ID0gW10uY29uY2F0KGRpbURhdGFBcnJheSkuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBhIC0gYjtcbiAgfSk7XG4gIHZhciBsZW4gPSB0aGlzLmNvdW50KCk7IC8vIGNhbGN1bGF0ZSBtZWRpYW5cblxuICByZXR1cm4gbGVuID09PSAwID8gMCA6IGxlbiAlIDIgPT09IDEgPyBzb3J0ZWREaW1EYXRhQXJyYXlbKGxlbiAtIDEpIC8gMl0gOiAoc29ydGVkRGltRGF0YUFycmF5W2xlbiAvIDJdICsgc29ydGVkRGltRGF0YUFycmF5W2xlbiAvIDIgLSAxXSkgLyAyO1xufTsgLy8gLyoqXG4vLyAgKiBSZXRyZWl2ZSB0aGUgaW5kZXggd2l0aCBnaXZlbiB2YWx1ZVxuLy8gICogQHBhcmFtIHtzdHJpbmd9IGRpbSBDb25jcmV0ZSBkaW1lbnNpb24uXG4vLyAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcbi8vICAqIEByZXR1cm4ge251bWJlcn1cbi8vICAqL1xuLy8gQ3VycmVudGx5IGluY29ycmVjdDogc2hvdWxkIHJldHVybiBkYXRhSW5kZXggYnV0IG5vdCByYXdJbmRleC5cbi8vIERvIG5vdCBmaXggaXQgdW50aWwgdGhpcyBtZXRob2QgaXMgdG8gYmUgdXNlZCBzb21ld2hlcmUuXG4vLyBGSVhNRSBQcmVjaXNpb24gb2YgZmxvYXQgdmFsdWVcbi8vIGxpc3RQcm90by5pbmRleE9mID0gZnVuY3Rpb24gKGRpbSwgdmFsdWUpIHtcbi8vICAgICB2YXIgc3RvcmFnZSA9IHRoaXMuX3N0b3JhZ2U7XG4vLyAgICAgdmFyIGRpbURhdGEgPSBzdG9yYWdlW2RpbV07XG4vLyAgICAgdmFyIGNodW5rU2l6ZSA9IHRoaXMuX2NodW5rU2l6ZTtcbi8vICAgICBpZiAoZGltRGF0YSkge1xuLy8gICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdGhpcy5jb3VudCgpOyBpIDwgbGVuOyBpKyspIHtcbi8vICAgICAgICAgICAgIHZhciBjaHVua0luZGV4ID0gTWF0aC5mbG9vcihpIC8gY2h1bmtTaXplKTtcbi8vICAgICAgICAgICAgIHZhciBjaHVua09mZnNldCA9IGkgJSBjaHVua1NpemU7XG4vLyAgICAgICAgICAgICBpZiAoZGltRGF0YVtjaHVua0luZGV4XVtjaHVua09mZnNldF0gPT09IHZhbHVlKSB7XG4vLyAgICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgIH1cbi8vICAgICB9XG4vLyAgICAgcmV0dXJuIC0xO1xuLy8gfTtcblxuLyoqXG4gKiBPbmx5IHN1cHBvcnQgdGhlIGRpbWVuc2lvbiB3aGljaCBpbnZlcnRlZCBpbmRleCBjcmVhdGVkLlxuICogRG8gbm90IHN1cHBvcnQgb3RoZXIgY2FzZXMgdW50aWwgcmVxdWlyZWQuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29uY3JldGUgZGltXG4gKiBAcGFyYW0ge251bWJlcnxzdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJuIHtudW1iZXJ9IHJhd0luZGV4XG4gKi9cblxuXG5saXN0UHJvdG8ucmF3SW5kZXhPZiA9IGZ1bmN0aW9uIChkaW0sIHZhbHVlKSB7XG4gIHZhciBpbnZlcnRlZEluZGljZXMgPSBkaW0gJiYgdGhpcy5faW52ZXJ0ZWRJbmRpY2VzTWFwW2RpbV07XG4gIHZhciByYXdJbmRleCA9IGludmVydGVkSW5kaWNlc1t2YWx1ZV07XG5cbiAgaWYgKHJhd0luZGV4ID09IG51bGwgfHwgaXNOYU4ocmF3SW5kZXgpKSB7XG4gICAgcmV0dXJuIC0xO1xuICB9XG5cbiAgcmV0dXJuIHJhd0luZGV4O1xufTtcbi8qKlxuICogUmV0cmVpdmUgdGhlIGluZGV4IHdpdGggZ2l2ZW4gbmFtZVxuICogQHBhcmFtIHtudW1iZXJ9IGlkeFxuICogQHBhcmFtIHtudW1iZXJ9IG5hbWVcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuXG5cbmxpc3RQcm90by5pbmRleE9mTmFtZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0aGlzLmNvdW50KCk7IGkgPCBsZW47IGkrKykge1xuICAgIGlmICh0aGlzLmdldE5hbWUoaSkgPT09IG5hbWUpIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAtMTtcbn07XG4vKipcbiAqIFJldHJlaXZlIHRoZSBpbmRleCB3aXRoIGdpdmVuIHJhdyBkYXRhIGluZGV4XG4gKiBAcGFyYW0ge251bWJlcn0gaWR4XG4gKiBAcGFyYW0ge251bWJlcn0gbmFtZVxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5cblxubGlzdFByb3RvLmluZGV4T2ZSYXdJbmRleCA9IGZ1bmN0aW9uIChyYXdJbmRleCkge1xuICBpZiAoIXRoaXMuX2luZGljZXMpIHtcbiAgICByZXR1cm4gcmF3SW5kZXg7XG4gIH1cblxuICBpZiAocmF3SW5kZXggPj0gdGhpcy5fcmF3Q291bnQgfHwgcmF3SW5kZXggPCAwKSB7XG4gICAgcmV0dXJuIC0xO1xuICB9IC8vIEluZGljZXMgYXJlIGFzY2VuZGluZ1xuXG5cbiAgdmFyIGluZGljZXMgPSB0aGlzLl9pbmRpY2VzOyAvLyBJZiByYXdJbmRleCA9PT0gZGF0YUluZGV4XG5cbiAgdmFyIHJhd0RhdGFJbmRleCA9IGluZGljZXNbcmF3SW5kZXhdO1xuXG4gIGlmIChyYXdEYXRhSW5kZXggIT0gbnVsbCAmJiByYXdEYXRhSW5kZXggPCB0aGlzLl9jb3VudCAmJiByYXdEYXRhSW5kZXggPT09IHJhd0luZGV4KSB7XG4gICAgcmV0dXJuIHJhd0luZGV4O1xuICB9XG5cbiAgdmFyIGxlZnQgPSAwO1xuICB2YXIgcmlnaHQgPSB0aGlzLl9jb3VudCAtIDE7XG5cbiAgd2hpbGUgKGxlZnQgPD0gcmlnaHQpIHtcbiAgICB2YXIgbWlkID0gKGxlZnQgKyByaWdodCkgLyAyIHwgMDtcblxuICAgIGlmIChpbmRpY2VzW21pZF0gPCByYXdJbmRleCkge1xuICAgICAgbGVmdCA9IG1pZCArIDE7XG4gICAgfSBlbHNlIGlmIChpbmRpY2VzW21pZF0gPiByYXdJbmRleCkge1xuICAgICAgcmlnaHQgPSBtaWQgLSAxO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbWlkO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAtMTtcbn07XG4vKipcbiAqIFJldHJlaXZlIHRoZSBpbmRleCBvZiBuZWFyZXN0IHZhbHVlXG4gKiBAcGFyYW0ge3N0cmluZ30gZGltXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcbiAqIEBwYXJhbSB7bnVtYmVyfSBbbWF4RGlzdGFuY2U9SW5maW5pdHldXG4gKiBAcmV0dXJuIHtBcnJheS48bnVtYmVyPn0gQ29uc2lkZXJlIG11bHRpcGxlIHBvaW50cyBoYXMgdGhlIHNhbWUgdmFsdWUuXG4gKi9cblxuXG5saXN0UHJvdG8uaW5kaWNlc09mTmVhcmVzdCA9IGZ1bmN0aW9uIChkaW0sIHZhbHVlLCBtYXhEaXN0YW5jZSkge1xuICB2YXIgc3RvcmFnZSA9IHRoaXMuX3N0b3JhZ2U7XG4gIHZhciBkaW1EYXRhID0gc3RvcmFnZVtkaW1dO1xuICB2YXIgbmVhcmVzdEluZGljZXMgPSBbXTtcblxuICBpZiAoIWRpbURhdGEpIHtcbiAgICByZXR1cm4gbmVhcmVzdEluZGljZXM7XG4gIH1cblxuICBpZiAobWF4RGlzdGFuY2UgPT0gbnVsbCkge1xuICAgIG1heERpc3RhbmNlID0gSW5maW5pdHk7XG4gIH1cblxuICB2YXIgbWluRGlzdCA9IE51bWJlci5NQVhfVkFMVUU7XG4gIHZhciBtaW5EaWZmID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRoaXMuY291bnQoKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgdmFyIGRpZmYgPSB2YWx1ZSAtIHRoaXMuZ2V0KGRpbSwgaVxuICAgIC8qLCBzdGFjayAqL1xuICAgICk7XG4gICAgdmFyIGRpc3QgPSBNYXRoLmFicyhkaWZmKTtcblxuICAgIGlmIChkaWZmIDw9IG1heERpc3RhbmNlICYmIGRpc3QgPD0gbWluRGlzdCkge1xuICAgICAgLy8gRm9yIHRoZSBjYXNlIG9mIHR3byBkYXRhIGFyZSBzYW1lIG9uIHhBeGlzLCB3aGljaCBoYXMgc2VxdWVuY2UgZGF0YS5cbiAgICAgIC8vIFNob3cgdGhlIG5lYXJlc3QgaW5kZXhcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9lY29tZmUvZWNoYXJ0cy9pc3N1ZXMvMjg2OVxuICAgICAgaWYgKGRpc3QgPCBtaW5EaXN0IHx8IGRpZmYgPj0gMCAmJiBtaW5EaWZmIDwgMCkge1xuICAgICAgICBtaW5EaXN0ID0gZGlzdDtcbiAgICAgICAgbWluRGlmZiA9IGRpZmY7XG4gICAgICAgIG5lYXJlc3RJbmRpY2VzLmxlbmd0aCA9IDA7XG4gICAgICB9XG5cbiAgICAgIG5lYXJlc3RJbmRpY2VzLnB1c2goaSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5lYXJlc3RJbmRpY2VzO1xufTtcbi8qKlxuICogR2V0IHJhdyBkYXRhIGluZGV4XG4gKiBAcGFyYW0ge251bWJlcn0gaWR4XG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0UmF3SW5kZXggPSBnZXRSYXdJbmRleFdpdGhvdXRJbmRpY2VzO1xuXG5mdW5jdGlvbiBnZXRSYXdJbmRleFdpdGhvdXRJbmRpY2VzKGlkeCkge1xuICByZXR1cm4gaWR4O1xufVxuXG5mdW5jdGlvbiBnZXRSYXdJbmRleFdpdGhJbmRpY2VzKGlkeCkge1xuICBpZiAoaWR4IDwgdGhpcy5fY291bnQgJiYgaWR4ID49IDApIHtcbiAgICByZXR1cm4gdGhpcy5faW5kaWNlc1tpZHhdO1xuICB9XG5cbiAgcmV0dXJuIC0xO1xufVxuLyoqXG4gKiBHZXQgcmF3IGRhdGEgaXRlbVxuICogQHBhcmFtIHtudW1iZXJ9IGlkeFxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5cblxubGlzdFByb3RvLmdldFJhd0RhdGFJdGVtID0gZnVuY3Rpb24gKGlkeCkge1xuICBpZiAoIXRoaXMuX3Jhd0RhdGEucGVyc2lzdGVudCkge1xuICAgIHZhciB2YWwgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5kaW1lbnNpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGltID0gdGhpcy5kaW1lbnNpb25zW2ldO1xuICAgICAgdmFsLnB1c2godGhpcy5nZXQoZGltLCBpZHgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB0aGlzLl9yYXdEYXRhLmdldEl0ZW0odGhpcy5nZXRSYXdJbmRleChpZHgpKTtcbiAgfVxufTtcbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IGlkeFxuICogQHBhcmFtIHtib29sZWFufSBbbm90RGVmYXVsdElkeD1mYWxzZV1cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuXG5cbmxpc3RQcm90by5nZXROYW1lID0gZnVuY3Rpb24gKGlkeCkge1xuICB2YXIgcmF3SW5kZXggPSB0aGlzLmdldFJhd0luZGV4KGlkeCk7XG4gIHJldHVybiB0aGlzLl9uYW1lTGlzdFtyYXdJbmRleF0gfHwgZ2V0UmF3VmFsdWVGcm9tU3RvcmUodGhpcywgdGhpcy5fbmFtZURpbUlkeCwgcmF3SW5kZXgpIHx8ICcnO1xufTtcbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IGlkeFxuICogQHBhcmFtIHtib29sZWFufSBbbm90RGVmYXVsdElkeD1mYWxzZV1cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuXG5cbmxpc3RQcm90by5nZXRJZCA9IGZ1bmN0aW9uIChpZHgpIHtcbiAgcmV0dXJuIGdldElkKHRoaXMsIHRoaXMuZ2V0UmF3SW5kZXgoaWR4KSk7XG59O1xuXG5mdW5jdGlvbiBnZXRJZChsaXN0LCByYXdJbmRleCkge1xuICB2YXIgaWQgPSBsaXN0Ll9pZExpc3RbcmF3SW5kZXhdO1xuXG4gIGlmIChpZCA9PSBudWxsKSB7XG4gICAgaWQgPSBnZXRSYXdWYWx1ZUZyb21TdG9yZShsaXN0LCBsaXN0Ll9pZERpbUlkeCwgcmF3SW5kZXgpO1xuICB9XG5cbiAgaWYgKGlkID09IG51bGwpIHtcbiAgICAvLyBGSVhNRSBDaGVjayB0aGUgdXNhZ2UgaW4gZ3JhcGgsIHNob3VsZCBub3QgdXNlIHByZWZpeC5cbiAgICBpZCA9IElEX1BSRUZJWCArIHJhd0luZGV4O1xuICB9XG5cbiAgcmV0dXJuIGlkO1xufVxuXG5mdW5jdGlvbiBub3JtYWxpemVEaW1lbnNpb25zKGRpbWVuc2lvbnMpIHtcbiAgaWYgKCF6clV0aWwuaXNBcnJheShkaW1lbnNpb25zKSkge1xuICAgIGRpbWVuc2lvbnMgPSBbZGltZW5zaW9uc107XG4gIH1cblxuICByZXR1cm4gZGltZW5zaW9ucztcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVEaW1lbnNpb25zKGxpc3QsIGRpbXMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBkaW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgLy8gc3Ryb2FnZSBtYXkgYmUgZW1wdHkgd2hlbiBubyBkYXRhLCBzbyB1c2VcbiAgICAvLyBkaW1lbnNpb25JbmZvcyB0byBjaGVjay5cbiAgICBpZiAoIWxpc3QuX2RpbWVuc2lvbkluZm9zW2RpbXNbaV1dKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdVbmtvd24gZGltZW5zaW9uICcgKyBkaW1zW2ldKTtcbiAgICB9XG4gIH1cbn1cbi8qKlxuICogRGF0YSBpdGVyYXRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfEFycmF5LjxzdHJpbmc+fVxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2JcbiAqIEBwYXJhbSB7Kn0gW2NvbnRleHQ9dGhpc11cbiAqXG4gKiBAZXhhbXBsZVxuICogIGxpc3QuZWFjaCgneCcsIGZ1bmN0aW9uICh4LCBpZHgpIHt9KTtcbiAqICBsaXN0LmVhY2goWyd4JywgJ3knXSwgZnVuY3Rpb24gKHgsIHksIGlkeCkge30pO1xuICogIGxpc3QuZWFjaChmdW5jdGlvbiAoaWR4KSB7fSlcbiAqL1xuXG5cbmxpc3RQcm90by5lYWNoID0gZnVuY3Rpb24gKGRpbXMsIGNiLCBjb250ZXh0LCBjb250ZXh0Q29tcGF0KSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBpZiAoIXRoaXMuX2NvdW50KSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBkaW1zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29udGV4dENvbXBhdCA9IGNvbnRleHQ7XG4gICAgY29udGV4dCA9IGNiO1xuICAgIGNiID0gZGltcztcbiAgICBkaW1zID0gW107XG4gIH0gLy8gY29udGV4dENvbXBhdCBqdXN0IGZvciBjb21wYXQgZWNoYXJ0czNcblxuXG4gIGNvbnRleHQgPSBjb250ZXh0IHx8IGNvbnRleHRDb21wYXQgfHwgdGhpcztcbiAgZGltcyA9IHpyVXRpbC5tYXAobm9ybWFsaXplRGltZW5zaW9ucyhkaW1zKSwgdGhpcy5nZXREaW1lbnNpb24sIHRoaXMpO1xuICB2YXIgZGltU2l6ZSA9IGRpbXMubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jb3VudCgpOyBpKyspIHtcbiAgICAvLyBTaW1wbGUgb3B0aW1pemF0aW9uXG4gICAgc3dpdGNoIChkaW1TaXplKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICAgIGNiLmNhbGwoY29udGV4dCwgaSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDE6XG4gICAgICAgIGNiLmNhbGwoY29udGV4dCwgdGhpcy5nZXQoZGltc1swXSwgaSksIGkpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAyOlxuICAgICAgICBjYi5jYWxsKGNvbnRleHQsIHRoaXMuZ2V0KGRpbXNbMF0sIGkpLCB0aGlzLmdldChkaW1zWzFdLCBpKSwgaSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB2YXIgayA9IDA7XG4gICAgICAgIHZhciB2YWx1ZSA9IFtdO1xuXG4gICAgICAgIGZvciAoOyBrIDwgZGltU2l6ZTsgaysrKSB7XG4gICAgICAgICAgdmFsdWVba10gPSB0aGlzLmdldChkaW1zW2tdLCBpKTtcbiAgICAgICAgfSAvLyBJbmRleFxuXG5cbiAgICAgICAgdmFsdWVba10gPSBpO1xuICAgICAgICBjYi5hcHBseShjb250ZXh0LCB2YWx1ZSk7XG4gICAgfVxuICB9XG59O1xuLyoqXG4gKiBEYXRhIGZpbHRlclxuICogQHBhcmFtIHtzdHJpbmd8QXJyYXkuPHN0cmluZz59XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYlxuICogQHBhcmFtIHsqfSBbY29udGV4dD10aGlzXVxuICovXG5cblxubGlzdFByb3RvLmZpbHRlclNlbGYgPSBmdW5jdGlvbiAoZGltZW5zaW9ucywgY2IsIGNvbnRleHQsIGNvbnRleHRDb21wYXQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGlmICghdGhpcy5fY291bnQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAodHlwZW9mIGRpbWVuc2lvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjb250ZXh0Q29tcGF0ID0gY29udGV4dDtcbiAgICBjb250ZXh0ID0gY2I7XG4gICAgY2IgPSBkaW1lbnNpb25zO1xuICAgIGRpbWVuc2lvbnMgPSBbXTtcbiAgfSAvLyBjb250ZXh0Q29tcGF0IGp1c3QgZm9yIGNvbXBhdCBlY2hhcnRzM1xuXG5cbiAgY29udGV4dCA9IGNvbnRleHQgfHwgY29udGV4dENvbXBhdCB8fCB0aGlzO1xuICBkaW1lbnNpb25zID0genJVdGlsLm1hcChub3JtYWxpemVEaW1lbnNpb25zKGRpbWVuc2lvbnMpLCB0aGlzLmdldERpbWVuc2lvbiwgdGhpcyk7XG4gIHZhciBjb3VudCA9IHRoaXMuY291bnQoKTtcbiAgdmFyIEN0b3IgPSBnZXRJbmRpY2VzQ3Rvcih0aGlzKTtcbiAgdmFyIG5ld0luZGljZXMgPSBuZXcgQ3Rvcihjb3VudCk7XG4gIHZhciB2YWx1ZSA9IFtdO1xuICB2YXIgZGltU2l6ZSA9IGRpbWVuc2lvbnMubGVuZ3RoO1xuICB2YXIgb2Zmc2V0ID0gMDtcbiAgdmFyIGRpbTAgPSBkaW1lbnNpb25zWzBdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgIHZhciBrZWVwO1xuICAgIHZhciByYXdJZHggPSB0aGlzLmdldFJhd0luZGV4KGkpOyAvLyBTaW1wbGUgb3B0aW1pemF0aW9uXG5cbiAgICBpZiAoZGltU2l6ZSA9PT0gMCkge1xuICAgICAga2VlcCA9IGNiLmNhbGwoY29udGV4dCwgaSk7XG4gICAgfSBlbHNlIGlmIChkaW1TaXplID09PSAxKSB7XG4gICAgICB2YXIgdmFsID0gdGhpcy5fZ2V0RmFzdChkaW0wLCByYXdJZHgpO1xuXG4gICAgICBrZWVwID0gY2IuY2FsbChjb250ZXh0LCB2YWwsIGkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IGRpbVNpemU7IGsrKykge1xuICAgICAgICB2YWx1ZVtrXSA9IHRoaXMuX2dldEZhc3QoZGltMCwgcmF3SWR4KTtcbiAgICAgIH1cblxuICAgICAgdmFsdWVba10gPSBpO1xuICAgICAga2VlcCA9IGNiLmFwcGx5KGNvbnRleHQsIHZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAoa2VlcCkge1xuICAgICAgbmV3SW5kaWNlc1tvZmZzZXQrK10gPSByYXdJZHg7XG4gICAgfVxuICB9IC8vIFNldCBpbmRpY2VzIGFmdGVyIGZpbHRlcmVkLlxuXG5cbiAgaWYgKG9mZnNldCA8IGNvdW50KSB7XG4gICAgdGhpcy5faW5kaWNlcyA9IG5ld0luZGljZXM7XG4gIH1cblxuICB0aGlzLl9jb3VudCA9IG9mZnNldDsgLy8gUmVzZXQgZGF0YSBleHRlbnRcblxuICB0aGlzLl9leHRlbnQgPSB7fTtcbiAgdGhpcy5nZXRSYXdJbmRleCA9IHRoaXMuX2luZGljZXMgPyBnZXRSYXdJbmRleFdpdGhJbmRpY2VzIDogZ2V0UmF3SW5kZXhXaXRob3V0SW5kaWNlcztcbiAgcmV0dXJuIHRoaXM7XG59O1xuLyoqXG4gKiBTZWxlY3QgZGF0YSBpbiByYW5nZS4gKEZvciBvcHRpbWl6YXRpb24gb2YgZmlsdGVyKVxuICogKE1hbnVhbGx5IGlubGluZSBjb2RlLCBzdXBwb3J0IDUgbWlsbGlvbiBkYXRhIGZpbHRlcmluZyBpbiBkYXRhIHpvb20uKVxuICovXG5cblxubGlzdFByb3RvLnNlbGVjdFJhbmdlID0gZnVuY3Rpb24gKHJhbmdlKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBpZiAoIXRoaXMuX2NvdW50KSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGRpbWVuc2lvbnMgPSBbXTtcblxuICBmb3IgKHZhciBkaW0gaW4gcmFuZ2UpIHtcbiAgICBpZiAocmFuZ2UuaGFzT3duUHJvcGVydHkoZGltKSkge1xuICAgICAgZGltZW5zaW9ucy5wdXNoKGRpbSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGRpbVNpemUgPSBkaW1lbnNpb25zLmxlbmd0aDtcblxuICBpZiAoIWRpbVNpemUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgb3JpZ2luYWxDb3VudCA9IHRoaXMuY291bnQoKTtcbiAgdmFyIEN0b3IgPSBnZXRJbmRpY2VzQ3Rvcih0aGlzKTtcbiAgdmFyIG5ld0luZGljZXMgPSBuZXcgQ3RvcihvcmlnaW5hbENvdW50KTtcbiAgdmFyIG9mZnNldCA9IDA7XG4gIHZhciBkaW0wID0gZGltZW5zaW9uc1swXTtcbiAgdmFyIG1pbiA9IHJhbmdlW2RpbTBdWzBdO1xuICB2YXIgbWF4ID0gcmFuZ2VbZGltMF1bMV07XG4gIHZhciBxdWlja0ZpbmlzaGVkID0gZmFsc2U7XG5cbiAgaWYgKCF0aGlzLl9pbmRpY2VzKSB7XG4gICAgLy8gRXh0cmVtZSBvcHRpbWl6YXRpb24gZm9yIGNvbW1vbiBjYXNlLiBBYm91dCAyeCBmYXN0ZXIgaW4gY2hyb21lLlxuICAgIHZhciBpZHggPSAwO1xuXG4gICAgaWYgKGRpbVNpemUgPT09IDEpIHtcbiAgICAgIHZhciBkaW1TdG9yYWdlID0gdGhpcy5fc3RvcmFnZVtkaW1lbnNpb25zWzBdXTtcblxuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLl9jaHVua0NvdW50OyBrKyspIHtcbiAgICAgICAgdmFyIGNodW5rU3RvcmFnZSA9IGRpbVN0b3JhZ2Vba107XG4gICAgICAgIHZhciBsZW4gPSBNYXRoLm1pbih0aGlzLl9jb3VudCAtIGsgKiB0aGlzLl9jaHVua1NpemUsIHRoaXMuX2NodW5rU2l6ZSk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgIHZhciB2YWwgPSBjaHVua1N0b3JhZ2VbaV07IC8vIE5hTiB3aWxsIG5vdCBiZSBmaWx0ZXJlZC4gQ29uc2lkZXIgdGhlIGNhc2UsIGluIGxpbmUgY2hhcnQsIGVtcHR5XG4gICAgICAgICAgLy8gdmFsdWUgaW5kaWNhdGVzIHRoZSBsaW5lIHNob3VsZCBiZSBicm9rZW4uIEJ1dCBmb3IgdGhlIGNhc2UgbGlrZVxuICAgICAgICAgIC8vIHNjYXR0ZXIgcGxvdCwgYSBkYXRhIGl0ZW0gd2l0aCBlbXB0eSB2YWx1ZSB3aWxsIG5vdCBiZSByZW5kZXJlZCxcbiAgICAgICAgICAvLyBidXQgdGhlIGF4aXMgZXh0ZW50IG1heSBiZSBlZmZlY3RlZCBpZiBzb21lIG90aGVyIGRpbSBvZiB0aGUgZGF0YVxuICAgICAgICAgIC8vIGl0ZW0gaGFzIHZhbHVlLiBGb3J0dW5hdGVseSBpdCBpcyBub3QgYSBzaWduaWZpY2FudCBuZWdhdGl2ZSBlZmZlY3QuXG5cbiAgICAgICAgICBpZiAodmFsID49IG1pbiAmJiB2YWwgPD0gbWF4IHx8IGlzTmFOKHZhbCkpIHtcbiAgICAgICAgICAgIG5ld0luZGljZXNbb2Zmc2V0KytdID0gaWR4O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlkeCsrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHF1aWNrRmluaXNoZWQgPSB0cnVlO1xuICAgIH0gZWxzZSBpZiAoZGltU2l6ZSA9PT0gMikge1xuICAgICAgdmFyIGRpbVN0b3JhZ2UgPSB0aGlzLl9zdG9yYWdlW2RpbTBdO1xuICAgICAgdmFyIGRpbVN0b3JhZ2UyID0gdGhpcy5fc3RvcmFnZVtkaW1lbnNpb25zWzFdXTtcbiAgICAgIHZhciBtaW4yID0gcmFuZ2VbZGltZW5zaW9uc1sxXV1bMF07XG4gICAgICB2YXIgbWF4MiA9IHJhbmdlW2RpbWVuc2lvbnNbMV1dWzFdO1xuXG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMuX2NodW5rQ291bnQ7IGsrKykge1xuICAgICAgICB2YXIgY2h1bmtTdG9yYWdlID0gZGltU3RvcmFnZVtrXTtcbiAgICAgICAgdmFyIGNodW5rU3RvcmFnZTIgPSBkaW1TdG9yYWdlMltrXTtcbiAgICAgICAgdmFyIGxlbiA9IE1hdGgubWluKHRoaXMuX2NvdW50IC0gayAqIHRoaXMuX2NodW5rU2l6ZSwgdGhpcy5fY2h1bmtTaXplKTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgdmFyIHZhbCA9IGNodW5rU3RvcmFnZVtpXTtcbiAgICAgICAgICB2YXIgdmFsMiA9IGNodW5rU3RvcmFnZTJbaV07IC8vIERvIG5vdCBmaWx0ZXIgTmFOLCBzZWUgY29tbWVudCBhYm92ZS5cblxuICAgICAgICAgIGlmICgodmFsID49IG1pbiAmJiB2YWwgPD0gbWF4IHx8IGlzTmFOKHZhbCkpICYmICh2YWwyID49IG1pbjIgJiYgdmFsMiA8PSBtYXgyIHx8IGlzTmFOKHZhbDIpKSkge1xuICAgICAgICAgICAgbmV3SW5kaWNlc1tvZmZzZXQrK10gPSBpZHg7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWR4Kys7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcXVpY2tGaW5pc2hlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFxdWlja0ZpbmlzaGVkKSB7XG4gICAgaWYgKGRpbVNpemUgPT09IDEpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3JpZ2luYWxDb3VudDsgaSsrKSB7XG4gICAgICAgIHZhciByYXdJbmRleCA9IHRoaXMuZ2V0UmF3SW5kZXgoaSk7XG5cbiAgICAgICAgdmFyIHZhbCA9IHRoaXMuX2dldEZhc3QoZGltMCwgcmF3SW5kZXgpOyAvLyBEbyBub3QgZmlsdGVyIE5hTiwgc2VlIGNvbW1lbnQgYWJvdmUuXG5cblxuICAgICAgICBpZiAodmFsID49IG1pbiAmJiB2YWwgPD0gbWF4IHx8IGlzTmFOKHZhbCkpIHtcbiAgICAgICAgICBuZXdJbmRpY2VzW29mZnNldCsrXSA9IHJhd0luZGV4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3JpZ2luYWxDb3VudDsgaSsrKSB7XG4gICAgICAgIHZhciBrZWVwID0gdHJ1ZTtcbiAgICAgICAgdmFyIHJhd0luZGV4ID0gdGhpcy5nZXRSYXdJbmRleChpKTtcblxuICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IGRpbVNpemU7IGsrKykge1xuICAgICAgICAgIHZhciBkaW1rID0gZGltZW5zaW9uc1trXTtcblxuICAgICAgICAgIHZhciB2YWwgPSB0aGlzLl9nZXRGYXN0KGRpbSwgcmF3SW5kZXgpOyAvLyBEbyBub3QgZmlsdGVyIE5hTiwgc2VlIGNvbW1lbnQgYWJvdmUuXG5cblxuICAgICAgICAgIGlmICh2YWwgPCByYW5nZVtkaW1rXVswXSB8fCB2YWwgPiByYW5nZVtkaW1rXVsxXSkge1xuICAgICAgICAgICAga2VlcCA9IGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChrZWVwKSB7XG4gICAgICAgICAgbmV3SW5kaWNlc1tvZmZzZXQrK10gPSB0aGlzLmdldFJhd0luZGV4KGkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IC8vIFNldCBpbmRpY2VzIGFmdGVyIGZpbHRlcmVkLlxuXG5cbiAgaWYgKG9mZnNldCA8IG9yaWdpbmFsQ291bnQpIHtcbiAgICB0aGlzLl9pbmRpY2VzID0gbmV3SW5kaWNlcztcbiAgfVxuXG4gIHRoaXMuX2NvdW50ID0gb2Zmc2V0OyAvLyBSZXNldCBkYXRhIGV4dGVudFxuXG4gIHRoaXMuX2V4dGVudCA9IHt9O1xuICB0aGlzLmdldFJhd0luZGV4ID0gdGhpcy5faW5kaWNlcyA/IGdldFJhd0luZGV4V2l0aEluZGljZXMgOiBnZXRSYXdJbmRleFdpdGhvdXRJbmRpY2VzO1xuICByZXR1cm4gdGhpcztcbn07XG4vKipcbiAqIERhdGEgbWFwcGluZyB0byBhIHBsYWluIGFycmF5XG4gKiBAcGFyYW0ge3N0cmluZ3xBcnJheS48c3RyaW5nPn0gW2RpbWVuc2lvbnNdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYlxuICogQHBhcmFtIHsqfSBbY29udGV4dD10aGlzXVxuICogQHJldHVybiB7QXJyYXl9XG4gKi9cblxuXG5saXN0UHJvdG8ubWFwQXJyYXkgPSBmdW5jdGlvbiAoZGltZW5zaW9ucywgY2IsIGNvbnRleHQsIGNvbnRleHRDb21wYXQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGlmICh0eXBlb2YgZGltZW5zaW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnRleHRDb21wYXQgPSBjb250ZXh0O1xuICAgIGNvbnRleHQgPSBjYjtcbiAgICBjYiA9IGRpbWVuc2lvbnM7XG4gICAgZGltZW5zaW9ucyA9IFtdO1xuICB9IC8vIGNvbnRleHRDb21wYXQganVzdCBmb3IgY29tcGF0IGVjaGFydHMzXG5cblxuICBjb250ZXh0ID0gY29udGV4dCB8fCBjb250ZXh0Q29tcGF0IHx8IHRoaXM7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdGhpcy5lYWNoKGRpbWVuc2lvbnMsIGZ1bmN0aW9uICgpIHtcbiAgICByZXN1bHQucHVzaChjYiAmJiBjYi5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfSwgY29udGV4dCk7XG4gIHJldHVybiByZXN1bHQ7XG59OyAvLyBEYXRhIGluIGV4Y2x1ZGVEaW1lbnNpb25zIGlzIGNvcGllZCwgb3RoZXJ3aXNlIHRyYW5zZmVyZWQuXG5cblxuZnVuY3Rpb24gY2xvbmVMaXN0Rm9yTWFwQW5kU2FtcGxlKG9yaWdpbmFsLCBleGNsdWRlRGltZW5zaW9ucykge1xuICB2YXIgYWxsRGltZW5zaW9ucyA9IG9yaWdpbmFsLmRpbWVuc2lvbnM7XG4gIHZhciBsaXN0ID0gbmV3IExpc3QoenJVdGlsLm1hcChhbGxEaW1lbnNpb25zLCBvcmlnaW5hbC5nZXREaW1lbnNpb25JbmZvLCBvcmlnaW5hbCksIG9yaWdpbmFsLmhvc3RNb2RlbCk7IC8vIEZJWE1FIElmIG5lZWRzIHN0YWNrZWRPbiwgdmFsdWUgbWF5IGFscmVhZHkgYmVlbiBzdGFja2VkXG5cbiAgdHJhbnNmZXJQcm9wZXJ0aWVzKGxpc3QsIG9yaWdpbmFsKTtcbiAgdmFyIHN0b3JhZ2UgPSBsaXN0Ll9zdG9yYWdlID0ge307XG4gIHZhciBvcmlnaW5hbFN0b3JhZ2UgPSBvcmlnaW5hbC5fc3RvcmFnZTsgLy8gSW5pdCBzdG9yYWdlXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxEaW1lbnNpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRpbSA9IGFsbERpbWVuc2lvbnNbaV07XG5cbiAgICBpZiAob3JpZ2luYWxTdG9yYWdlW2RpbV0pIHtcbiAgICAgIC8vIE5vdGljZSB0aGF0IHdlIGRvIG5vdCByZXNldCBpbnZlcnRlZEluZGljZXNNYXAgaGVyZSwgYmVjdWFzZVxuICAgICAgLy8gdGhlcmUgaXMgbm8gc2NlbmFyaW8gb2YgbWFwcGluZyBvciBzYW1wbGluZyBvcmRpbmFsIGRpbWVuc2lvbi5cbiAgICAgIGlmICh6clV0aWwuaW5kZXhPZihleGNsdWRlRGltZW5zaW9ucywgZGltKSA+PSAwKSB7XG4gICAgICAgIHN0b3JhZ2VbZGltXSA9IGNsb25lRGltU3RvcmUob3JpZ2luYWxTdG9yYWdlW2RpbV0pO1xuICAgICAgICBsaXN0Ll9yYXdFeHRlbnRbZGltXSA9IGdldEluaXRpYWxFeHRlbnQoKTtcbiAgICAgICAgbGlzdC5fZXh0ZW50W2RpbV0gPSBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gRGlyZWN0IHJlZmVyZW5jZSBmb3Igb3RoZXIgZGltZW5zaW9uc1xuICAgICAgICBzdG9yYWdlW2RpbV0gPSBvcmlnaW5hbFN0b3JhZ2VbZGltXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbGlzdDtcbn1cblxuZnVuY3Rpb24gY2xvbmVEaW1TdG9yZShvcmlnaW5hbERpbVN0b3JlKSB7XG4gIHZhciBuZXdEaW1TdG9yZSA9IG5ldyBBcnJheShvcmlnaW5hbERpbVN0b3JlLmxlbmd0aCk7XG5cbiAgZm9yICh2YXIgaiA9IDA7IGogPCBvcmlnaW5hbERpbVN0b3JlLmxlbmd0aDsgaisrKSB7XG4gICAgbmV3RGltU3RvcmVbal0gPSBjbG9uZUNodW5rKG9yaWdpbmFsRGltU3RvcmVbal0pO1xuICB9XG5cbiAgcmV0dXJuIG5ld0RpbVN0b3JlO1xufVxuXG5mdW5jdGlvbiBnZXRJbml0aWFsRXh0ZW50KCkge1xuICByZXR1cm4gW0luZmluaXR5LCAtSW5maW5pdHldO1xufVxuLyoqXG4gKiBEYXRhIG1hcHBpbmcgdG8gYSBuZXcgTGlzdCB3aXRoIGdpdmVuIGRpbWVuc2lvbnNcbiAqIEBwYXJhbSB7c3RyaW5nfEFycmF5LjxzdHJpbmc+fSBkaW1lbnNpb25zXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYlxuICogQHBhcmFtIHsqfSBbY29udGV4dD10aGlzXVxuICogQHJldHVybiB7QXJyYXl9XG4gKi9cblxuXG5saXN0UHJvdG8ubWFwID0gZnVuY3Rpb24gKGRpbWVuc2lvbnMsIGNiLCBjb250ZXh0LCBjb250ZXh0Q29tcGF0KSB7XG4gICd1c2Ugc3RyaWN0JzsgLy8gY29udGV4dENvbXBhdCBqdXN0IGZvciBjb21wYXQgZWNoYXJ0czNcblxuICBjb250ZXh0ID0gY29udGV4dCB8fCBjb250ZXh0Q29tcGF0IHx8IHRoaXM7XG4gIGRpbWVuc2lvbnMgPSB6clV0aWwubWFwKG5vcm1hbGl6ZURpbWVuc2lvbnMoZGltZW5zaW9ucyksIHRoaXMuZ2V0RGltZW5zaW9uLCB0aGlzKTtcbiAgdmFyIGxpc3QgPSBjbG9uZUxpc3RGb3JNYXBBbmRTYW1wbGUodGhpcywgZGltZW5zaW9ucyk7IC8vIEZvbGxvd2luZyBwcm9wZXJ0aWVzIGFyZSBhbGwgaW1tdXRhYmxlLlxuICAvLyBTbyB3ZSBjYW4gcmVmZXJlbmNlIHRvIHRoZSBzYW1lIHZhbHVlXG5cbiAgbGlzdC5faW5kaWNlcyA9IHRoaXMuX2luZGljZXM7XG4gIGxpc3QuZ2V0UmF3SW5kZXggPSBsaXN0Ll9pbmRpY2VzID8gZ2V0UmF3SW5kZXhXaXRoSW5kaWNlcyA6IGdldFJhd0luZGV4V2l0aG91dEluZGljZXM7XG4gIHZhciBzdG9yYWdlID0gbGlzdC5fc3RvcmFnZTtcbiAgdmFyIHRtcFJldFZhbHVlID0gW107XG4gIHZhciBjaHVua1NpemUgPSB0aGlzLl9jaHVua1NpemU7XG4gIHZhciBkaW1TaXplID0gZGltZW5zaW9ucy5sZW5ndGg7XG4gIHZhciBkYXRhQ291bnQgPSB0aGlzLmNvdW50KCk7XG4gIHZhciB2YWx1ZXMgPSBbXTtcbiAgdmFyIHJhd0V4dGVudCA9IGxpc3QuX3Jhd0V4dGVudDtcblxuICBmb3IgKHZhciBkYXRhSW5kZXggPSAwOyBkYXRhSW5kZXggPCBkYXRhQ291bnQ7IGRhdGFJbmRleCsrKSB7XG4gICAgZm9yICh2YXIgZGltSW5kZXggPSAwOyBkaW1JbmRleCA8IGRpbVNpemU7IGRpbUluZGV4KyspIHtcbiAgICAgIHZhbHVlc1tkaW1JbmRleF0gPSB0aGlzLmdldChkaW1lbnNpb25zW2RpbUluZGV4XSwgZGF0YUluZGV4XG4gICAgICAvKiwgc3RhY2sgKi9cbiAgICAgICk7XG4gICAgfVxuXG4gICAgdmFsdWVzW2RpbVNpemVdID0gZGF0YUluZGV4O1xuICAgIHZhciByZXRWYWx1ZSA9IGNiICYmIGNiLmFwcGx5KGNvbnRleHQsIHZhbHVlcyk7XG5cbiAgICBpZiAocmV0VmFsdWUgIT0gbnVsbCkge1xuICAgICAgLy8gYSBudW1iZXIgb3Igc3RyaW5nIChpbiBvcmlkaW5hbCBkaW1lbnNpb24pP1xuICAgICAgaWYgKHR5cGVvZiByZXRWYWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgdG1wUmV0VmFsdWVbMF0gPSByZXRWYWx1ZTtcbiAgICAgICAgcmV0VmFsdWUgPSB0bXBSZXRWYWx1ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIHJhd0luZGV4ID0gdGhpcy5nZXRSYXdJbmRleChkYXRhSW5kZXgpO1xuICAgICAgdmFyIGNodW5rSW5kZXggPSBNYXRoLmZsb29yKHJhd0luZGV4IC8gY2h1bmtTaXplKTtcbiAgICAgIHZhciBjaHVua09mZnNldCA9IHJhd0luZGV4ICUgY2h1bmtTaXplO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJldFZhbHVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBkaW0gPSBkaW1lbnNpb25zW2ldO1xuICAgICAgICB2YXIgdmFsID0gcmV0VmFsdWVbaV07XG4gICAgICAgIHZhciByYXdFeHRlbnRPbkRpbSA9IHJhd0V4dGVudFtkaW1dO1xuICAgICAgICB2YXIgZGltU3RvcmUgPSBzdG9yYWdlW2RpbV07XG5cbiAgICAgICAgaWYgKGRpbVN0b3JlKSB7XG4gICAgICAgICAgZGltU3RvcmVbY2h1bmtJbmRleF1bY2h1bmtPZmZzZXRdID0gdmFsO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbCA8IHJhd0V4dGVudE9uRGltWzBdKSB7XG4gICAgICAgICAgcmF3RXh0ZW50T25EaW1bMF0gPSB2YWw7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsID4gcmF3RXh0ZW50T25EaW1bMV0pIHtcbiAgICAgICAgICByYXdFeHRlbnRPbkRpbVsxXSA9IHZhbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsaXN0O1xufTtcbi8qKlxuICogTGFyZ2UgZGF0YSBkb3duIHNhbXBsaW5nIG9uIGdpdmVuIGRpbWVuc2lvblxuICogQHBhcmFtIHtzdHJpbmd9IGRpbWVuc2lvblxuICogQHBhcmFtIHtudW1iZXJ9IHJhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHNhbXBsZVZhbHVlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBzYW1wbGVJbmRleCBTYW1wbGUgaW5kZXggZm9yIG5hbWUgYW5kIGlkXG4gKi9cblxuXG5saXN0UHJvdG8uZG93blNhbXBsZSA9IGZ1bmN0aW9uIChkaW1lbnNpb24sIHJhdGUsIHNhbXBsZVZhbHVlLCBzYW1wbGVJbmRleCkge1xuICB2YXIgbGlzdCA9IGNsb25lTGlzdEZvck1hcEFuZFNhbXBsZSh0aGlzLCBbZGltZW5zaW9uXSk7XG4gIHZhciB0YXJnZXRTdG9yYWdlID0gbGlzdC5fc3RvcmFnZTtcbiAgdmFyIGZyYW1lVmFsdWVzID0gW107XG4gIHZhciBmcmFtZVNpemUgPSBNYXRoLmZsb29yKDEgLyByYXRlKTtcbiAgdmFyIGRpbVN0b3JlID0gdGFyZ2V0U3RvcmFnZVtkaW1lbnNpb25dO1xuICB2YXIgbGVuID0gdGhpcy5jb3VudCgpO1xuICB2YXIgY2h1bmtTaXplID0gdGhpcy5fY2h1bmtTaXplO1xuICB2YXIgcmF3RXh0ZW50T25EaW0gPSBsaXN0Ll9yYXdFeHRlbnRbZGltZW5zaW9uXTtcbiAgdmFyIG5ld0luZGljZXMgPSBuZXcgKGdldEluZGljZXNDdG9yKHRoaXMpKShsZW4pO1xuICB2YXIgb2Zmc2V0ID0gMDtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSBmcmFtZVNpemUpIHtcbiAgICAvLyBMYXN0IGZyYW1lXG4gICAgaWYgKGZyYW1lU2l6ZSA+IGxlbiAtIGkpIHtcbiAgICAgIGZyYW1lU2l6ZSA9IGxlbiAtIGk7XG4gICAgICBmcmFtZVZhbHVlcy5sZW5ndGggPSBmcmFtZVNpemU7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgayA9IDA7IGsgPCBmcmFtZVNpemU7IGsrKykge1xuICAgICAgdmFyIGRhdGFJZHggPSB0aGlzLmdldFJhd0luZGV4KGkgKyBrKTtcbiAgICAgIHZhciBvcmlnaW5hbENodW5rSW5kZXggPSBNYXRoLmZsb29yKGRhdGFJZHggLyBjaHVua1NpemUpO1xuICAgICAgdmFyIG9yaWdpbmFsQ2h1bmtPZmZzZXQgPSBkYXRhSWR4ICUgY2h1bmtTaXplO1xuICAgICAgZnJhbWVWYWx1ZXNba10gPSBkaW1TdG9yZVtvcmlnaW5hbENodW5rSW5kZXhdW29yaWdpbmFsQ2h1bmtPZmZzZXRdO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZSA9IHNhbXBsZVZhbHVlKGZyYW1lVmFsdWVzKTtcbiAgICB2YXIgc2FtcGxlRnJhbWVJZHggPSB0aGlzLmdldFJhd0luZGV4KE1hdGgubWluKGkgKyBzYW1wbGVJbmRleChmcmFtZVZhbHVlcywgdmFsdWUpIHx8IDAsIGxlbiAtIDEpKTtcbiAgICB2YXIgc2FtcGxlQ2h1bmtJbmRleCA9IE1hdGguZmxvb3Ioc2FtcGxlRnJhbWVJZHggLyBjaHVua1NpemUpO1xuICAgIHZhciBzYW1wbGVDaHVua09mZnNldCA9IHNhbXBsZUZyYW1lSWR4ICUgY2h1bmtTaXplOyAvLyBPbmx5IHdyaXRlIHZhbHVlIG9uIHRoZSBmaWx0ZXJlZCBkYXRhXG5cbiAgICBkaW1TdG9yZVtzYW1wbGVDaHVua0luZGV4XVtzYW1wbGVDaHVua09mZnNldF0gPSB2YWx1ZTtcblxuICAgIGlmICh2YWx1ZSA8IHJhd0V4dGVudE9uRGltWzBdKSB7XG4gICAgICByYXdFeHRlbnRPbkRpbVswXSA9IHZhbHVlO1xuICAgIH1cblxuICAgIGlmICh2YWx1ZSA+IHJhd0V4dGVudE9uRGltWzFdKSB7XG4gICAgICByYXdFeHRlbnRPbkRpbVsxXSA9IHZhbHVlO1xuICAgIH1cblxuICAgIG5ld0luZGljZXNbb2Zmc2V0KytdID0gc2FtcGxlRnJhbWVJZHg7XG4gIH1cblxuICBsaXN0Ll9jb3VudCA9IG9mZnNldDtcbiAgbGlzdC5faW5kaWNlcyA9IG5ld0luZGljZXM7XG4gIGxpc3QuZ2V0UmF3SW5kZXggPSBnZXRSYXdJbmRleFdpdGhJbmRpY2VzO1xuICByZXR1cm4gbGlzdDtcbn07XG4vKipcbiAqIEdldCBtb2RlbCBvZiBvbmUgZGF0YSBpdGVtLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBpZHhcbiAqL1xuLy8gRklYTUUgTW9kZWwgcHJveHkgP1xuXG5cbmxpc3RQcm90by5nZXRJdGVtTW9kZWwgPSBmdW5jdGlvbiAoaWR4KSB7XG4gIHZhciBob3N0TW9kZWwgPSB0aGlzLmhvc3RNb2RlbDtcbiAgcmV0dXJuIG5ldyBNb2RlbCh0aGlzLmdldFJhd0RhdGFJdGVtKGlkeCksIGhvc3RNb2RlbCwgaG9zdE1vZGVsICYmIGhvc3RNb2RlbC5lY01vZGVsKTtcbn07XG4vKipcbiAqIENyZWF0ZSBhIGRhdGEgZGlmZmVyXG4gKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2RhdGEvTGlzdH0gb3RoZXJMaXN0XG4gKiBAcmV0dXJuIHttb2R1bGU6ZWNoYXJ0cy9kYXRhL0RhdGFEaWZmZXJ9XG4gKi9cblxuXG5saXN0UHJvdG8uZGlmZiA9IGZ1bmN0aW9uIChvdGhlckxpc3QpIHtcbiAgdmFyIHRoaXNMaXN0ID0gdGhpcztcbiAgcmV0dXJuIG5ldyBEYXRhRGlmZmVyKG90aGVyTGlzdCA/IG90aGVyTGlzdC5nZXRJbmRpY2VzKCkgOiBbXSwgdGhpcy5nZXRJbmRpY2VzKCksIGZ1bmN0aW9uIChpZHgpIHtcbiAgICByZXR1cm4gZ2V0SWQob3RoZXJMaXN0LCBpZHgpO1xuICB9LCBmdW5jdGlvbiAoaWR4KSB7XG4gICAgcmV0dXJuIGdldElkKHRoaXNMaXN0LCBpZHgpO1xuICB9KTtcbn07XG4vKipcbiAqIEdldCB2aXN1YWwgcHJvcGVydHkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0VmlzdWFsID0gZnVuY3Rpb24gKGtleSkge1xuICB2YXIgdmlzdWFsID0gdGhpcy5fdmlzdWFsO1xuICByZXR1cm4gdmlzdWFsICYmIHZpc3VhbFtrZXldO1xufTtcbi8qKlxuICogU2V0IHZpc3VhbCBwcm9wZXJ0eVxuICogQHBhcmFtIHtzdHJpbmd8T2JqZWN0fSBrZXlcbiAqIEBwYXJhbSB7Kn0gW3ZhbHVlXVxuICpcbiAqIEBleGFtcGxlXG4gKiAgc2V0VmlzdWFsKCdjb2xvcicsIGNvbG9yKTtcbiAqICBzZXRWaXN1YWwoe1xuICogICAgICAnY29sb3InOiBjb2xvclxuICogIH0pO1xuICovXG5cblxubGlzdFByb3RvLnNldFZpc3VhbCA9IGZ1bmN0aW9uIChrZXksIHZhbCkge1xuICBpZiAoaXNPYmplY3Qoa2V5KSkge1xuICAgIGZvciAodmFyIG5hbWUgaW4ga2V5KSB7XG4gICAgICBpZiAoa2V5Lmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgIHRoaXMuc2V0VmlzdWFsKG5hbWUsIGtleVtuYW1lXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5fdmlzdWFsID0gdGhpcy5fdmlzdWFsIHx8IHt9O1xuICB0aGlzLl92aXN1YWxba2V5XSA9IHZhbDtcbn07XG4vKipcbiAqIFNldCBsYXlvdXQgcHJvcGVydHkuXG4gKiBAcGFyYW0ge3N0cmluZ3xPYmplY3R9IGtleVxuICogQHBhcmFtIHsqfSBbdmFsXVxuICovXG5cblxubGlzdFByb3RvLnNldExheW91dCA9IGZ1bmN0aW9uIChrZXksIHZhbCkge1xuICBpZiAoaXNPYmplY3Qoa2V5KSkge1xuICAgIGZvciAodmFyIG5hbWUgaW4ga2V5KSB7XG4gICAgICBpZiAoa2V5Lmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgIHRoaXMuc2V0TGF5b3V0KG5hbWUsIGtleVtuYW1lXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5fbGF5b3V0W2tleV0gPSB2YWw7XG59O1xuLyoqXG4gKiBHZXQgbGF5b3V0IHByb3BlcnR5LlxuICogQHBhcmFtICB7c3RyaW5nfSBrZXkuXG4gKiBAcmV0dXJuIHsqfVxuICovXG5cblxubGlzdFByb3RvLmdldExheW91dCA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX2xheW91dFtrZXldO1xufTtcbi8qKlxuICogR2V0IGxheW91dCBvZiBzaW5nbGUgZGF0YSBpdGVtXG4gKiBAcGFyYW0ge251bWJlcn0gaWR4XG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0SXRlbUxheW91dCA9IGZ1bmN0aW9uIChpZHgpIHtcbiAgcmV0dXJuIHRoaXMuX2l0ZW1MYXlvdXRzW2lkeF07XG59O1xuLyoqXG4gKiBTZXQgbGF5b3V0IG9mIHNpbmdsZSBkYXRhIGl0ZW1cbiAqIEBwYXJhbSB7bnVtYmVyfSBpZHhcbiAqIEBwYXJhbSB7T2JqZWN0fSBsYXlvdXRcbiAqIEBwYXJhbSB7Ym9vbGVhbj19IFttZXJnZT1mYWxzZV1cbiAqL1xuXG5cbmxpc3RQcm90by5zZXRJdGVtTGF5b3V0ID0gZnVuY3Rpb24gKGlkeCwgbGF5b3V0LCBtZXJnZSkge1xuICB0aGlzLl9pdGVtTGF5b3V0c1tpZHhdID0gbWVyZ2UgPyB6clV0aWwuZXh0ZW5kKHRoaXMuX2l0ZW1MYXlvdXRzW2lkeF0gfHwge30sIGxheW91dCkgOiBsYXlvdXQ7XG59O1xuLyoqXG4gKiBDbGVhciBhbGwgbGF5b3V0IG9mIHNpbmdsZSBkYXRhIGl0ZW1cbiAqL1xuXG5cbmxpc3RQcm90by5jbGVhckl0ZW1MYXlvdXRzID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9pdGVtTGF5b3V0cy5sZW5ndGggPSAwO1xufTtcbi8qKlxuICogR2V0IHZpc3VhbCBwcm9wZXJ0eSBvZiBzaW5nbGUgZGF0YSBpdGVtXG4gKiBAcGFyYW0ge251bWJlcn0gaWR4XG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpZ25vcmVQYXJlbnQ9ZmFsc2VdXG4gKi9cblxuXG5saXN0UHJvdG8uZ2V0SXRlbVZpc3VhbCA9IGZ1bmN0aW9uIChpZHgsIGtleSwgaWdub3JlUGFyZW50KSB7XG4gIHZhciBpdGVtVmlzdWFsID0gdGhpcy5faXRlbVZpc3VhbHNbaWR4XTtcbiAgdmFyIHZhbCA9IGl0ZW1WaXN1YWwgJiYgaXRlbVZpc3VhbFtrZXldO1xuXG4gIGlmICh2YWwgPT0gbnVsbCAmJiAhaWdub3JlUGFyZW50KSB7XG4gICAgLy8gVXNlIGdsb2JhbCB2aXN1YWwgcHJvcGVydHlcbiAgICByZXR1cm4gdGhpcy5nZXRWaXN1YWwoa2V5KTtcbiAgfVxuXG4gIHJldHVybiB2YWw7XG59O1xuLyoqXG4gKiBTZXQgdmlzdWFsIHByb3BlcnR5IG9mIHNpbmdsZSBkYXRhIGl0ZW1cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gaWR4XG4gKiBAcGFyYW0ge3N0cmluZ3xPYmplY3R9IGtleVxuICogQHBhcmFtIHsqfSBbdmFsdWVdXG4gKlxuICogQGV4YW1wbGVcbiAqICBzZXRJdGVtVmlzdWFsKDAsICdjb2xvcicsIGNvbG9yKTtcbiAqICBzZXRJdGVtVmlzdWFsKDAsIHtcbiAqICAgICAgJ2NvbG9yJzogY29sb3JcbiAqICB9KTtcbiAqL1xuXG5cbmxpc3RQcm90by5zZXRJdGVtVmlzdWFsID0gZnVuY3Rpb24gKGlkeCwga2V5LCB2YWx1ZSkge1xuICB2YXIgaXRlbVZpc3VhbCA9IHRoaXMuX2l0ZW1WaXN1YWxzW2lkeF0gfHwge307XG4gIHZhciBoYXNJdGVtVmlzdWFsID0gdGhpcy5oYXNJdGVtVmlzdWFsO1xuICB0aGlzLl9pdGVtVmlzdWFsc1tpZHhdID0gaXRlbVZpc3VhbDtcblxuICBpZiAoaXNPYmplY3Qoa2V5KSkge1xuICAgIGZvciAodmFyIG5hbWUgaW4ga2V5KSB7XG4gICAgICBpZiAoa2V5Lmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgIGl0ZW1WaXN1YWxbbmFtZV0gPSBrZXlbbmFtZV07XG4gICAgICAgIGhhc0l0ZW1WaXN1YWxbbmFtZV0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGl0ZW1WaXN1YWxba2V5XSA9IHZhbHVlO1xuICBoYXNJdGVtVmlzdWFsW2tleV0gPSB0cnVlO1xufTtcbi8qKlxuICogQ2xlYXIgaXRlbVZpc3VhbHMgYW5kIGxpc3QgdmlzdWFsLlxuICovXG5cblxubGlzdFByb3RvLmNsZWFyQWxsVmlzdWFsID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl92aXN1YWwgPSB7fTtcbiAgdGhpcy5faXRlbVZpc3VhbHMgPSBbXTtcbiAgdGhpcy5oYXNJdGVtVmlzdWFsID0ge307XG59O1xuXG52YXIgc2V0SXRlbURhdGFBbmRTZXJpZXNJbmRleCA9IGZ1bmN0aW9uIChjaGlsZCkge1xuICBjaGlsZC5zZXJpZXNJbmRleCA9IHRoaXMuc2VyaWVzSW5kZXg7XG4gIGNoaWxkLmRhdGFJbmRleCA9IHRoaXMuZGF0YUluZGV4O1xuICBjaGlsZC5kYXRhVHlwZSA9IHRoaXMuZGF0YVR5cGU7XG59O1xuLyoqXG4gKiBTZXQgZ3JhcGhpYyBlbGVtZW50IHJlbGF0aXZlIHRvIGRhdGEuIEl0IGNhbiBiZSBzZXQgYXMgbnVsbFxuICogQHBhcmFtIHtudW1iZXJ9IGlkeFxuICogQHBhcmFtIHttb2R1bGU6enJlbmRlci9FbGVtZW50fSBbZWxdXG4gKi9cblxuXG5saXN0UHJvdG8uc2V0SXRlbUdyYXBoaWNFbCA9IGZ1bmN0aW9uIChpZHgsIGVsKSB7XG4gIHZhciBob3N0TW9kZWwgPSB0aGlzLmhvc3RNb2RlbDtcblxuICBpZiAoZWwpIHtcbiAgICAvLyBBZGQgZGF0YSBpbmRleCBhbmQgc2VyaWVzIGluZGV4IGZvciBpbmRleGluZyB0aGUgZGF0YSBieSBlbGVtZW50XG4gICAgLy8gVXNlZnVsIGluIHRvb2x0aXBcbiAgICBlbC5kYXRhSW5kZXggPSBpZHg7XG4gICAgZWwuZGF0YVR5cGUgPSB0aGlzLmRhdGFUeXBlO1xuICAgIGVsLnNlcmllc0luZGV4ID0gaG9zdE1vZGVsICYmIGhvc3RNb2RlbC5zZXJpZXNJbmRleDtcblxuICAgIGlmIChlbC50eXBlID09PSAnZ3JvdXAnKSB7XG4gICAgICBlbC50cmF2ZXJzZShzZXRJdGVtRGF0YUFuZFNlcmllc0luZGV4LCBlbCk7XG4gICAgfVxuICB9XG5cbiAgdGhpcy5fZ3JhcGhpY0Vsc1tpZHhdID0gZWw7XG59O1xuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gaWR4XG4gKiBAcmV0dXJuIHttb2R1bGU6enJlbmRlci9FbGVtZW50fVxuICovXG5cblxubGlzdFByb3RvLmdldEl0ZW1HcmFwaGljRWwgPSBmdW5jdGlvbiAoaWR4KSB7XG4gIHJldHVybiB0aGlzLl9ncmFwaGljRWxzW2lkeF07XG59O1xuLyoqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYlxuICogQHBhcmFtIHsqfSBjb250ZXh0XG4gKi9cblxuXG5saXN0UHJvdG8uZWFjaEl0ZW1HcmFwaGljRWwgPSBmdW5jdGlvbiAoY2IsIGNvbnRleHQpIHtcbiAgenJVdGlsLmVhY2godGhpcy5fZ3JhcGhpY0VscywgZnVuY3Rpb24gKGVsLCBpZHgpIHtcbiAgICBpZiAoZWwpIHtcbiAgICAgIGNiICYmIGNiLmNhbGwoY29udGV4dCwgZWwsIGlkeCk7XG4gICAgfVxuICB9KTtcbn07XG4vKipcbiAqIFNoYWxsb3cgY2xvbmUgYSBuZXcgbGlzdCBleGNlcHQgdmlzdWFsIGFuZCBsYXlvdXQgcHJvcGVydGllcywgYW5kIGdyYXBoIGVsZW1lbnRzLlxuICogTmV3IGxpc3Qgb25seSBjaGFuZ2UgdGhlIGluZGljZXMuXG4gKi9cblxuXG5saXN0UHJvdG8uY2xvbmVTaGFsbG93ID0gZnVuY3Rpb24gKGxpc3QpIHtcbiAgaWYgKCFsaXN0KSB7XG4gICAgdmFyIGRpbWVuc2lvbkluZm9MaXN0ID0genJVdGlsLm1hcCh0aGlzLmRpbWVuc2lvbnMsIHRoaXMuZ2V0RGltZW5zaW9uSW5mbywgdGhpcyk7XG4gICAgbGlzdCA9IG5ldyBMaXN0KGRpbWVuc2lvbkluZm9MaXN0LCB0aGlzLmhvc3RNb2RlbCk7XG4gIH0gLy8gRklYTUVcblxuXG4gIGxpc3QuX3N0b3JhZ2UgPSB0aGlzLl9zdG9yYWdlO1xuICB0cmFuc2ZlclByb3BlcnRpZXMobGlzdCwgdGhpcyk7IC8vIENsb25lIHdpbGwgbm90IGNoYW5nZSB0aGUgZGF0YSBleHRlbnQgYW5kIGluZGljZXNcblxuICBpZiAodGhpcy5faW5kaWNlcykge1xuICAgIHZhciBDdG9yID0gdGhpcy5faW5kaWNlcy5jb25zdHJ1Y3RvcjtcbiAgICBsaXN0Ll9pbmRpY2VzID0gbmV3IEN0b3IodGhpcy5faW5kaWNlcyk7XG4gIH0gZWxzZSB7XG4gICAgbGlzdC5faW5kaWNlcyA9IG51bGw7XG4gIH1cblxuICBsaXN0LmdldFJhd0luZGV4ID0gbGlzdC5faW5kaWNlcyA/IGdldFJhd0luZGV4V2l0aEluZGljZXMgOiBnZXRSYXdJbmRleFdpdGhvdXRJbmRpY2VzO1xuICByZXR1cm4gbGlzdDtcbn07XG4vKipcbiAqIFdyYXAgc29tZSBtZXRob2QgdG8gYWRkIG1vcmUgZmVhdHVyZVxuICogQHBhcmFtIHtzdHJpbmd9IG1ldGhvZE5hbWVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGluamVjdEZ1bmN0aW9uXG4gKi9cblxuXG5saXN0UHJvdG8ud3JhcE1ldGhvZCA9IGZ1bmN0aW9uIChtZXRob2ROYW1lLCBpbmplY3RGdW5jdGlvbikge1xuICB2YXIgb3JpZ2luYWxNZXRob2QgPSB0aGlzW21ldGhvZE5hbWVdO1xuXG4gIGlmICh0eXBlb2Ygb3JpZ2luYWxNZXRob2QgIT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLl9fd3JhcHBlZE1ldGhvZHMgPSB0aGlzLl9fd3JhcHBlZE1ldGhvZHMgfHwgW107XG5cbiAgdGhpcy5fX3dyYXBwZWRNZXRob2RzLnB1c2gobWV0aG9kTmFtZSk7XG5cbiAgdGhpc1ttZXRob2ROYW1lXSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVzID0gb3JpZ2luYWxNZXRob2QuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gaW5qZWN0RnVuY3Rpb24uYXBwbHkodGhpcywgW3Jlc10uY29uY2F0KHpyVXRpbC5zbGljZShhcmd1bWVudHMpKSk7XG4gIH07XG59OyAvLyBNZXRob2RzIHRoYXQgY3JlYXRlIGEgbmV3IGxpc3QgYmFzZWQgb24gdGhpcyBsaXN0IHNob3VsZCBiZSBsaXN0ZWQgaGVyZS5cbi8vIE5vdGljZSB0aGF0IHRob3NlIG1ldGhvZCBzaG91bGQgYFJFVFVSTmAgdGhlIG5ldyBsaXN0LlxuXG5cbmxpc3RQcm90by5UUkFOU0ZFUkFCTEVfTUVUSE9EUyA9IFsnY2xvbmVTaGFsbG93JywgJ2Rvd25TYW1wbGUnLCAnbWFwJ107IC8vIE1ldGhvZHMgdGhhdCBjaGFuZ2UgaW5kaWNlcyBvZiB0aGlzIGxpc3Qgc2hvdWxkIGJlIGxpc3RlZCBoZXJlLlxuXG5saXN0UHJvdG8uQ0hBTkdBQkxFX01FVEhPRFMgPSBbJ2ZpbHRlclNlbGYnLCAnc2VsZWN0UmFuZ2UnXTtcbnZhciBfZGVmYXVsdCA9IExpc3Q7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///159\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar completeDimensions = __webpack_require__(161);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Substitute `completeDimensions`.\\n * `completeDimensions` is to be deprecated.\\n */\\n\\n/**\\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\\n * @param {Object|Array} [opt]\\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\\n * @param {number} [opt.dimensionsCount]\\n * @param {string} [opt.generateCoord]\\n * @param {string} [opt.generateCoordCount]\\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\\n * @return {Array.<Object>} dimensionsInfo\\n */\\nfunction _default(source, opt) {\\n  opt = opt || {};\\n  return completeDimensions(opt.coordDimensions || [], source, {\\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\\n    encodeDef: opt.encodeDefine || source.encodeDefine,\\n    dimCount: opt.dimensionsCount,\\n    generateCoord: opt.generateCoord,\\n    generateCoordCount: opt.generateCoordCount\\n  });\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvZGF0YS9oZWxwZXIvY3JlYXRlRGltZW5zaW9ucy5qcz9iMWQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIsbUJBQU8sQ0FBQyxHQUFzQjs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLG9EQUFvRDtBQUMvRCxXQUFXLGFBQWE7QUFDeEIsV0FBVyxzQkFBc0I7QUFDakMsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxzQkFBc0I7QUFDakMsV0FBVyxlQUFlO0FBQzFCLFlBQVksZUFBZTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJmaWxlIjoiMTYwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciBjb21wbGV0ZURpbWVuc2lvbnMgPSByZXF1aXJlKFwiLi9jb21wbGV0ZURpbWVuc2lvbnNcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyoqXG4gKiBTdWJzdGl0dXRlIGBjb21wbGV0ZURpbWVuc2lvbnNgLlxuICogYGNvbXBsZXRlRGltZW5zaW9uc2AgaXMgdG8gYmUgZGVwcmVjYXRlZC5cbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvZGF0YS9Tb3VyY2V8bW9kdWxlOmVjaGFydHMvZGF0YS9MaXN0fSBzb3VyY2Ugb3IgZGF0YS5cbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBbb3B0XVxuICogQHBhcmFtIHtBcnJheS48c3RyaW5nfE9iamVjdD59IFtvcHQuY29vcmREaW1lbnNpb25zPVtdXVxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHQuZGltZW5zaW9uc0NvdW50XVxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHQuZ2VuZXJhdGVDb29yZF1cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0LmdlbmVyYXRlQ29vcmRDb3VudF1cbiAqIEBwYXJhbSB7QXJyYXkuPHN0cmluZ3xPYmplY3Q+fSBbb3B0LmRpbWVuc2lvbnNEZWZpbmU9c291cmNlLmRpbWVuc2lvbnNEZWZpbmVdIE92ZXJ3cml0ZSBzb3VyY2UgZGVmaW5lLlxuICogQHBhcmFtIHtPYmplY3R8SGFzaE1hcH0gW29wdC5lbmNvZGVEZWZpbmU9c291cmNlLmVuY29kZURlZmluZV0gT3ZlcndyaXRlIHNvdXJjZSBkZWZpbmUuXG4gKiBAcmV0dXJuIHtBcnJheS48T2JqZWN0Pn0gZGltZW5zaW9uc0luZm9cbiAqL1xuZnVuY3Rpb24gX2RlZmF1bHQoc291cmNlLCBvcHQpIHtcbiAgb3B0ID0gb3B0IHx8IHt9O1xuICByZXR1cm4gY29tcGxldGVEaW1lbnNpb25zKG9wdC5jb29yZERpbWVuc2lvbnMgfHwgW10sIHNvdXJjZSwge1xuICAgIGRpbXNEZWY6IG9wdC5kaW1lbnNpb25zRGVmaW5lIHx8IHNvdXJjZS5kaW1lbnNpb25zRGVmaW5lLFxuICAgIGVuY29kZURlZjogb3B0LmVuY29kZURlZmluZSB8fCBzb3VyY2UuZW5jb2RlRGVmaW5lLFxuICAgIGRpbUNvdW50OiBvcHQuZGltZW5zaW9uc0NvdW50LFxuICAgIGdlbmVyYXRlQ29vcmQ6IG9wdC5nZW5lcmF0ZUNvb3JkLFxuICAgIGdlbmVyYXRlQ29vcmRDb3VudDogb3B0LmdlbmVyYXRlQ29vcmRDb3VudFxuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///160\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar createHashMap = _util.createHashMap;\\nvar each = _util.each;\\nvar isString = _util.isString;\\nvar defaults = _util.defaults;\\nvar extend = _util.extend;\\nvar isObject = _util.isObject;\\nvar clone = _util.clone;\\n\\nvar _model = __webpack_require__(60);\\n\\nvar normalizeToArray = _model.normalizeToArray;\\n\\nvar _sourceHelper = __webpack_require__(91);\\n\\nvar guessOrdinal = _sourceHelper.guessOrdinal;\\n\\nvar Source = __webpack_require__(83);\\n\\nvar _dimensionHelper = __webpack_require__(111);\\n\\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @deprecated\\n * Use `echarts/data/helper/createDimensions` instead.\\n */\\n\\n/**\\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\\n *\\n * Complete the dimensions array, by user defined `dimension` and `encode`,\\n * and guessing from the data structure.\\n * If no 'value' dimension specified, the first no-named dimension will be\\n * named as 'value'.\\n *\\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\\n *      provides not only dim template, but also default order.\\n *      properties: 'name', 'type', 'displayName'.\\n *      `name` of each item provides default coord name.\\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\\n *                                    provide dims count that the sysDim required.\\n *      [{ordinalMeta}] can be specified.\\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\\n * @param {Object} [opt]\\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\\n *      For example: ['asdf', {name, type}, ...].\\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\\n *                 If not specified, extra dim names will be:\\n *                 'value', 'value0', 'value1', ...\\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\\n *                 If `generateCoordCount` specified, the generated dim names will be:\\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\\n *                 can be Infinity, indicate that use all of the remain columns.\\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\\n * @return {Array.<Object>} [{\\n *      name: string mandatory,\\n *      displayName: string, the origin name in dimsDef, see source helper.\\n *                 If displayName given, the tooltip will displayed vertically.\\n *      coordDim: string mandatory,\\n *      coordDimIndex: number mandatory,\\n *      type: string optional,\\n *      otherDims: { never null/undefined\\n *          tooltip: number optional,\\n *          label: number optional,\\n *          itemName: number optional,\\n *          seriesName: number optional,\\n *      },\\n *      isExtraCoord: boolean true if coord is generated\\n *          (not specified in encode and not series specified)\\n *      other props ...\\n * }]\\n */\\nfunction completeDimensions(sysDims, source, opt) {\\n  if (!Source.isInstance(source)) {\\n    source = Source.seriesDataToSource(source);\\n  }\\n\\n  opt = opt || {};\\n  sysDims = (sysDims || []).slice();\\n  var dimsDef = (opt.dimsDef || []).slice();\\n  var encodeDef = createHashMap(opt.encodeDef);\\n  var dataDimNameMap = createHashMap();\\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\\n\\n  var result = [];\\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\\n\\n  for (var i = 0; i < dimCount; i++) {\\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\\n      name: dimsDef[i]\\n    });\\n    var userDimName = dimDefItem.name;\\n    var resultItem = result[i] = {\\n      otherDims: {}\\n    }; // Name will be applied later for avoiding duplication.\\n\\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\\n      // Only if `series.dimensions` is defined in option\\n      // displayName, will be set, and dimension will be diplayed vertically in\\n      // tooltip by default.\\n      resultItem.name = resultItem.displayName = userDimName;\\n      dataDimNameMap.set(userDimName, i);\\n    }\\n\\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\\n\\n\\n  encodeDef.each(function (dataDims, coordDim) {\\n    dataDims = normalizeToArray(dataDims).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\\n    // this case.\\n\\n    if (dataDims.length === 1 && dataDims[0] < 0) {\\n      encodeDef.set(coordDim, false);\\n      return;\\n    }\\n\\n    var validDataDims = encodeDef.set(coordDim, []);\\n    each(dataDims, function (resultDimIdx, idx) {\\n      // The input resultDimIdx can be dim name or index.\\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\\n\\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\\n        validDataDims[idx] = resultDimIdx;\\n        applyDim(result[resultDimIdx], coordDim, idx);\\n      }\\n    });\\n  }); // Apply templetes and default order from `sysDims`.\\n\\n  var availDimIdx = 0;\\n  each(sysDims, function (sysDimItem, sysDimIndex) {\\n    var coordDim;\\n    var sysDimItem;\\n    var sysDimItemDimsDef;\\n    var sysDimItemOtherDims;\\n\\n    if (isString(sysDimItem)) {\\n      coordDim = sysDimItem;\\n      sysDimItem = {};\\n    } else {\\n      coordDim = sysDimItem.name;\\n      var ordinalMeta = sysDimItem.ordinalMeta;\\n      sysDimItem.ordinalMeta = null;\\n      sysDimItem = clone(sysDimItem);\\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\\n\\n      sysDimItemDimsDef = sysDimItem.dimsDef;\\n      sysDimItemOtherDims = sysDimItem.otherDims;\\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\\n    }\\n\\n    var dataDims = encodeDef.get(coordDim); // negative resultDimIdx means no need to mapping.\\n\\n    if (dataDims === false) {\\n      return;\\n    }\\n\\n    var dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\\n\\n    if (!dataDims.length) {\\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\\n          availDimIdx++;\\n        }\\n\\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\\n      }\\n    } // Apply templates.\\n\\n\\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\\n      var resultItem = result[resultDimIdx];\\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\\n\\n      if (resultItem.name == null && sysDimItemDimsDef) {\\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\\n          name: sysDimItemDimsDefItem\\n        });\\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\\n\\n\\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\\n    });\\n  });\\n\\n  function applyDim(resultItem, coordDim, coordDimIndex) {\\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\\n      resultItem.otherDims[coordDim] = coordDimIndex;\\n    } else {\\n      resultItem.coordDim = coordDim;\\n      resultItem.coordDimIndex = coordDimIndex;\\n      coordDimNameMap.set(coordDim, true);\\n    }\\n  } // Make sure the first extra dim is 'value'.\\n\\n\\n  var generateCoord = opt.generateCoord;\\n  var generateCoordCount = opt.generateCoordCount;\\n  var fromZero = generateCoordCount != null;\\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\\n\\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\\n    var coordDim = resultItem.coordDim;\\n\\n    if (coordDim == null) {\\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\\n      resultItem.coordDimIndex = 0;\\n\\n      if (!generateCoord || generateCoordCount <= 0) {\\n        resultItem.isExtraCoord = true;\\n      }\\n\\n      generateCoordCount--;\\n    }\\n\\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\\n\\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\\n      resultItem.type = 'ordinal';\\n    }\\n  }\\n\\n  return result;\\n} // ??? TODO\\n// Originally detect dimCount by data[0]. Should we\\n// optimize it to only by sysDims and dimensions and encode.\\n// So only necessary dims will be initialized.\\n// But\\n// (1) custom series should be considered. where other dims\\n// may be visited.\\n// (2) sometimes user need to calcualte bubble size or use visualMap\\n// on other dimensions besides coordSys needed.\\n// So, dims that is not used by system, should be shared in storage?\\n\\n\\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\\n  // Note that the result dimCount should not small than columns count\\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\\n  each(sysDims, function (sysDimItem) {\\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\\n  });\\n  return dimCount;\\n}\\n\\nfunction genName(name, map, fromZero) {\\n  if (fromZero || map.get(name) != null) {\\n    var i = 0;\\n\\n    while (map.get(name + i) != null) {\\n      i++;\\n    }\\n\\n    name += i;\\n  }\\n\\n  map.set(name, true);\\n  return name;\\n}\\n\\nvar _default = completeDimensions;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///161\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar createHashMap = _util.createHashMap;\\nvar isObject = _util.isObject;\\nvar map = _util.map;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @constructor\\n * @param {Object} [opt]\\n * @param {Object} [opt.categories=[]]\\n * @param {Object} [opt.needCollect=false]\\n * @param {Object} [opt.deduplication=false]\\n */\\nfunction OrdinalMeta(opt) {\\n  /**\\n   * @readOnly\\n   * @type {Array.<string>}\\n   */\\n  this.categories = opt.categories || [];\\n  /**\\n   * @private\\n   * @type {boolean}\\n   */\\n\\n  this._needCollect = opt.needCollect;\\n  /**\\n   * @private\\n   * @type {boolean}\\n   */\\n\\n  this._deduplication = opt.deduplication;\\n  /**\\n   * @private\\n   * @type {boolean}\\n   */\\n\\n  this._map;\\n}\\n/**\\n * @param {module:echarts/model/Model} axisModel\\n * @return {module:echarts/data/OrdinalMeta}\\n */\\n\\n\\nOrdinalMeta.createByAxisModel = function (axisModel) {\\n  var option = axisModel.option;\\n  var data = option.data;\\n  var categories = data && map(data, getName);\\n  return new OrdinalMeta({\\n    categories: categories,\\n    needCollect: !categories,\\n    // deduplication is default in axis.\\n    deduplication: option.dedplication !== false\\n  });\\n};\\n\\nvar proto = OrdinalMeta.prototype;\\n/**\\n * @param {string} category\\n * @return {number} ordinal\\n */\\n\\nproto.getOrdinal = function (category) {\\n  return getOrCreateMap(this).get(category);\\n};\\n/**\\n * @param {*} category\\n * @return {number} The ordinal. If not found, return NaN.\\n */\\n\\n\\nproto.parseAndCollect = function (category) {\\n  var index;\\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\\n  // This feature is only supported when !needCollect, because we should\\n  // consider a common case: a value is 2017, which is a number but is\\n  // expected to be tread as a category. This case usually happen in dataset,\\n  // where it happent to be no need of the index feature.\\n\\n  if (typeof category !== 'string' && !needCollect) {\\n    return category;\\n  } // Optimize for the scenario:\\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\\n  // data has been ensured not duplicate and is large data.\\n  // Notice, if a dataset dimension provide categroies, usually echarts\\n  // should remove duplication except user tell echarts dont do that\\n  // (set axis.deduplication = false), because echarts do not know whether\\n  // the values in the category dimension has duplication (consider the\\n  // parallel-aqi example)\\n\\n\\n  if (needCollect && !this._deduplication) {\\n    index = this.categories.length;\\n    this.categories[index] = category;\\n    return index;\\n  }\\n\\n  var map = getOrCreateMap(this);\\n  index = map.get(category);\\n\\n  if (index == null) {\\n    if (needCollect) {\\n      index = this.categories.length;\\n      this.categories[index] = category;\\n      map.set(category, index);\\n    } else {\\n      index = NaN;\\n    }\\n  }\\n\\n  return index;\\n}; // Consider big data, do not create map until needed.\\n\\n\\nfunction getOrCreateMap(ordinalMeta) {\\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\\n}\\n\\nfunction getName(obj) {\\n  if (isObject(obj) && obj.value != null) {\\n    return obj.value;\\n  } else {\\n    return obj + '';\\n  }\\n}\\n\\nvar _default = OrdinalMeta;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvZGF0YS9PcmRpbmFsTWV0YS5qcz84ZTQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLG1CQUFPLENBQUMsRUFBdUI7O0FBRTNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVywyQkFBMkI7QUFDdEMsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZLE9BQU87QUFDbkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixZQUFZLE9BQU87QUFDbkI7OztBQUdBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTs7O0FBR0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxNjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIF91dGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIGNyZWF0ZUhhc2hNYXAgPSBfdXRpbC5jcmVhdGVIYXNoTWFwO1xudmFyIGlzT2JqZWN0ID0gX3V0aWwuaXNPYmplY3Q7XG52YXIgbWFwID0gX3V0aWwubWFwO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbi8qKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdF1cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0LmNhdGVnb3JpZXM9W11dXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdC5uZWVkQ29sbGVjdD1mYWxzZV1cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0LmRlZHVwbGljYXRpb249ZmFsc2VdXG4gKi9cbmZ1bmN0aW9uIE9yZGluYWxNZXRhKG9wdCkge1xuICAvKipcbiAgICogQHJlYWRPbmx5XG4gICAqIEB0eXBlIHtBcnJheS48c3RyaW5nPn1cbiAgICovXG4gIHRoaXMuY2F0ZWdvcmllcyA9IG9wdC5jYXRlZ29yaWVzIHx8IFtdO1xuICAvKipcbiAgICogQHByaXZhdGVcbiAgICogQHR5cGUge2Jvb2xlYW59XG4gICAqL1xuXG4gIHRoaXMuX25lZWRDb2xsZWN0ID0gb3B0Lm5lZWRDb2xsZWN0O1xuICAvKipcbiAgICogQHByaXZhdGVcbiAgICogQHR5cGUge2Jvb2xlYW59XG4gICAqL1xuXG4gIHRoaXMuX2RlZHVwbGljYXRpb24gPSBvcHQuZGVkdXBsaWNhdGlvbjtcbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqIEB0eXBlIHtib29sZWFufVxuICAgKi9cblxuICB0aGlzLl9tYXA7XG59XG4vKipcbiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvbW9kZWwvTW9kZWx9IGF4aXNNb2RlbFxuICogQHJldHVybiB7bW9kdWxlOmVjaGFydHMvZGF0YS9PcmRpbmFsTWV0YX1cbiAqL1xuXG5cbk9yZGluYWxNZXRhLmNyZWF0ZUJ5QXhpc01vZGVsID0gZnVuY3Rpb24gKGF4aXNNb2RlbCkge1xuICB2YXIgb3B0aW9uID0gYXhpc01vZGVsLm9wdGlvbjtcbiAgdmFyIGRhdGEgPSBvcHRpb24uZGF0YTtcbiAgdmFyIGNhdGVnb3JpZXMgPSBkYXRhICYmIG1hcChkYXRhLCBnZXROYW1lKTtcbiAgcmV0dXJuIG5ldyBPcmRpbmFsTWV0YSh7XG4gICAgY2F0ZWdvcmllczogY2F0ZWdvcmllcyxcbiAgICBuZWVkQ29sbGVjdDogIWNhdGVnb3JpZXMsXG4gICAgLy8gZGVkdXBsaWNhdGlvbiBpcyBkZWZhdWx0IGluIGF4aXMuXG4gICAgZGVkdXBsaWNhdGlvbjogb3B0aW9uLmRlZHBsaWNhdGlvbiAhPT0gZmFsc2VcbiAgfSk7XG59O1xuXG52YXIgcHJvdG8gPSBPcmRpbmFsTWV0YS5wcm90b3R5cGU7XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBjYXRlZ29yeVxuICogQHJldHVybiB7bnVtYmVyfSBvcmRpbmFsXG4gKi9cblxucHJvdG8uZ2V0T3JkaW5hbCA9IGZ1bmN0aW9uIChjYXRlZ29yeSkge1xuICByZXR1cm4gZ2V0T3JDcmVhdGVNYXAodGhpcykuZ2V0KGNhdGVnb3J5KTtcbn07XG4vKipcbiAqIEBwYXJhbSB7Kn0gY2F0ZWdvcnlcbiAqIEByZXR1cm4ge251bWJlcn0gVGhlIG9yZGluYWwuIElmIG5vdCBmb3VuZCwgcmV0dXJuIE5hTi5cbiAqL1xuXG5cbnByb3RvLnBhcnNlQW5kQ29sbGVjdCA9IGZ1bmN0aW9uIChjYXRlZ29yeSkge1xuICB2YXIgaW5kZXg7XG4gIHZhciBuZWVkQ29sbGVjdCA9IHRoaXMuX25lZWRDb2xsZWN0OyAvLyBUaGUgdmFsdWUgb2YgY2F0ZWdvcnkgZGltIGNhbiBiZSB0aGUgaW5kZXggb2YgdGhlIGdpdmVuIGNhdGVnb3J5IHNldC5cbiAgLy8gVGhpcyBmZWF0dXJlIGlzIG9ubHkgc3VwcG9ydGVkIHdoZW4gIW5lZWRDb2xsZWN0LCBiZWNhdXNlIHdlIHNob3VsZFxuICAvLyBjb25zaWRlciBhIGNvbW1vbiBjYXNlOiBhIHZhbHVlIGlzIDIwMTcsIHdoaWNoIGlzIGEgbnVtYmVyIGJ1dCBpc1xuICAvLyBleHBlY3RlZCB0byBiZSB0cmVhZCBhcyBhIGNhdGVnb3J5LiBUaGlzIGNhc2UgdXN1YWxseSBoYXBwZW4gaW4gZGF0YXNldCxcbiAgLy8gd2hlcmUgaXQgaGFwcGVudCB0byBiZSBubyBuZWVkIG9mIHRoZSBpbmRleCBmZWF0dXJlLlxuXG4gIGlmICh0eXBlb2YgY2F0ZWdvcnkgIT09ICdzdHJpbmcnICYmICFuZWVkQ29sbGVjdCkge1xuICAgIHJldHVybiBjYXRlZ29yeTtcbiAgfSAvLyBPcHRpbWl6ZSBmb3IgdGhlIHNjZW5hcmlvOlxuICAvLyBjYXRlZ29yeSBpcyBbJzIwMTItMDEtMDEnLCAnMjAxMi0wMS0wMicsIC4uLl0sIHdoZXJlIHRoZSBpbnB1dFxuICAvLyBkYXRhIGhhcyBiZWVuIGVuc3VyZWQgbm90IGR1cGxpY2F0ZSBhbmQgaXMgbGFyZ2UgZGF0YS5cbiAgLy8gTm90aWNlLCBpZiBhIGRhdGFzZXQgZGltZW5zaW9uIHByb3ZpZGUgY2F0ZWdyb2llcywgdXN1YWxseSBlY2hhcnRzXG4gIC8vIHNob3VsZCByZW1vdmUgZHVwbGljYXRpb24gZXhjZXB0IHVzZXIgdGVsbCBlY2hhcnRzIGRvbnQgZG8gdGhhdFxuICAvLyAoc2V0IGF4aXMuZGVkdXBsaWNhdGlvbiA9IGZhbHNlKSwgYmVjYXVzZSBlY2hhcnRzIGRvIG5vdCBrbm93IHdoZXRoZXJcbiAgLy8gdGhlIHZhbHVlcyBpbiB0aGUgY2F0ZWdvcnkgZGltZW5zaW9uIGhhcyBkdXBsaWNhdGlvbiAoY29uc2lkZXIgdGhlXG4gIC8vIHBhcmFsbGVsLWFxaSBleGFtcGxlKVxuXG5cbiAgaWYgKG5lZWRDb2xsZWN0ICYmICF0aGlzLl9kZWR1cGxpY2F0aW9uKSB7XG4gICAgaW5kZXggPSB0aGlzLmNhdGVnb3JpZXMubGVuZ3RoO1xuICAgIHRoaXMuY2F0ZWdvcmllc1tpbmRleF0gPSBjYXRlZ29yeTtcbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cblxuICB2YXIgbWFwID0gZ2V0T3JDcmVhdGVNYXAodGhpcyk7XG4gIGluZGV4ID0gbWFwLmdldChjYXRlZ29yeSk7XG5cbiAgaWYgKGluZGV4ID09IG51bGwpIHtcbiAgICBpZiAobmVlZENvbGxlY3QpIHtcbiAgICAgIGluZGV4ID0gdGhpcy5jYXRlZ29yaWVzLmxlbmd0aDtcbiAgICAgIHRoaXMuY2F0ZWdvcmllc1tpbmRleF0gPSBjYXRlZ29yeTtcbiAgICAgIG1hcC5zZXQoY2F0ZWdvcnksIGluZGV4KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5kZXggPSBOYU47XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGluZGV4O1xufTsgLy8gQ29uc2lkZXIgYmlnIGRhdGEsIGRvIG5vdCBjcmVhdGUgbWFwIHVudGlsIG5lZWRlZC5cblxuXG5mdW5jdGlvbiBnZXRPckNyZWF0ZU1hcChvcmRpbmFsTWV0YSkge1xuICByZXR1cm4gb3JkaW5hbE1ldGEuX21hcCB8fCAob3JkaW5hbE1ldGEuX21hcCA9IGNyZWF0ZUhhc2hNYXAob3JkaW5hbE1ldGEuY2F0ZWdvcmllcykpO1xufVxuXG5mdW5jdGlvbiBnZXROYW1lKG9iaikge1xuICBpZiAoaXNPYmplY3Qob2JqKSAmJiBvYmoudmFsdWUgIT0gbnVsbCkge1xuICAgIHJldHVybiBvYmoudmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG9iaiArICcnO1xuICB9XG59XG5cbnZhciBfZGVmYXVsdCA9IE9yZGluYWxNZXRhO1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///162\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar numberUtil = __webpack_require__(65);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * For testable.\\n */\\nvar roundNumber = numberUtil.round;\\n/**\\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\\n *                                Should be extent[0] < extent[1].\\n * @param {number} splitNumber splitNumber should be >= 1.\\n * @param {number} [minInterval]\\n * @param {number} [maxInterval]\\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\\n */\\n\\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\\n  var result = {};\\n  var span = extent[1] - extent[0];\\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\\n\\n  if (minInterval != null && interval < minInterval) {\\n    interval = result.interval = minInterval;\\n  }\\n\\n  if (maxInterval != null && interval > maxInterval) {\\n    interval = result.interval = maxInterval;\\n  } // Tow more digital for tick.\\n\\n\\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\\n\\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\\n  fixExtent(niceTickExtent, extent);\\n  return result;\\n}\\n/**\\n * @param {number} interval\\n * @return {number} interval precision\\n */\\n\\n\\nfunction getIntervalPrecision(interval) {\\n  // Tow more digital for tick.\\n  return numberUtil.getPrecisionSafe(interval) + 2;\\n}\\n\\nfunction clamp(niceTickExtent, idx, extent) {\\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\\n\\n\\nfunction fixExtent(niceTickExtent, extent) {\\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\\n  clamp(niceTickExtent, 0, extent);\\n  clamp(niceTickExtent, 1, extent);\\n\\n  if (niceTickExtent[0] > niceTickExtent[1]) {\\n    niceTickExtent[0] = niceTickExtent[1];\\n  }\\n}\\n\\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\\n  var ticks = []; // If interval is 0, return [];\\n\\n  if (!interval) {\\n    return ticks;\\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\\n\\n\\n  var safeLimit = 10000;\\n\\n  if (extent[0] < niceTickExtent[0]) {\\n    ticks.push(extent[0]);\\n  }\\n\\n  var tick = niceTickExtent[0];\\n\\n  while (tick <= niceTickExtent[1]) {\\n    ticks.push(tick); // Avoid rounding error\\n\\n    tick = roundNumber(tick + interval, intervalPrecision);\\n\\n    if (tick === ticks[ticks.length - 1]) {\\n      // Consider out of safe float point, e.g.,\\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\\n      break;\\n    }\\n\\n    if (ticks.length > safeLimit) {\\n      return [];\\n    }\\n  } // Consider this case: the last item of ticks is smaller\\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\\n\\n\\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\\n    ticks.push(extent[1]);\\n  }\\n\\n  return ticks;\\n}\\n\\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\\nexports.getIntervalPrecision = getIntervalPrecision;\\nexports.fixExtent = fixExtent;\\nexports.intervalScaleGetTicks = intervalScaleGetTicks;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvc2NhbGUvaGVscGVyLmpzPzk0NGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLEVBQWdCOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWSxPQUFPLEVBQUU7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSCw0RUFBNEU7O0FBRTVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWSxPQUFPO0FBQ25COzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7O0FBR0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBLEdBQUc7OztBQUdIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHFCQUFxQjs7QUFFckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE2My5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgbnVtYmVyVXRpbCA9IHJlcXVpcmUoXCIuLi91dGlsL251bWJlclwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG4vKipcbiAqIEZvciB0ZXN0YWJsZS5cbiAqL1xudmFyIHJvdW5kTnVtYmVyID0gbnVtYmVyVXRpbC5yb3VuZDtcbi8qKlxuICogQHBhcmFtIHtBcnJheS48bnVtYmVyPn0gZXh0ZW50IEJvdGggZXh0ZW50WzBdIGFuZCBleHRlbnRbMV0gc2hvdWxkIGJlIHZhbGlkIG51bWJlci5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTaG91bGQgYmUgZXh0ZW50WzBdIDwgZXh0ZW50WzFdLlxuICogQHBhcmFtIHtudW1iZXJ9IHNwbGl0TnVtYmVyIHNwbGl0TnVtYmVyIHNob3VsZCBiZSA+PSAxLlxuICogQHBhcmFtIHtudW1iZXJ9IFttaW5JbnRlcnZhbF1cbiAqIEBwYXJhbSB7bnVtYmVyfSBbbWF4SW50ZXJ2YWxdXG4gKiBAcmV0dXJuIHtPYmplY3R9IHtpbnRlcnZhbCwgaW50ZXJ2YWxQcmVjaXNpb24sIG5pY2VUaWNrRXh0ZW50fVxuICovXG5cbmZ1bmN0aW9uIGludGVydmFsU2NhbGVOaWNlVGlja3MoZXh0ZW50LCBzcGxpdE51bWJlciwgbWluSW50ZXJ2YWwsIG1heEludGVydmFsKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgdmFyIHNwYW4gPSBleHRlbnRbMV0gLSBleHRlbnRbMF07XG4gIHZhciBpbnRlcnZhbCA9IHJlc3VsdC5pbnRlcnZhbCA9IG51bWJlclV0aWwubmljZShzcGFuIC8gc3BsaXROdW1iZXIsIHRydWUpO1xuXG4gIGlmIChtaW5JbnRlcnZhbCAhPSBudWxsICYmIGludGVydmFsIDwgbWluSW50ZXJ2YWwpIHtcbiAgICBpbnRlcnZhbCA9IHJlc3VsdC5pbnRlcnZhbCA9IG1pbkludGVydmFsO1xuICB9XG5cbiAgaWYgKG1heEludGVydmFsICE9IG51bGwgJiYgaW50ZXJ2YWwgPiBtYXhJbnRlcnZhbCkge1xuICAgIGludGVydmFsID0gcmVzdWx0LmludGVydmFsID0gbWF4SW50ZXJ2YWw7XG4gIH0gLy8gVG93IG1vcmUgZGlnaXRhbCBmb3IgdGljay5cblxuXG4gIHZhciBwcmVjaXNpb24gPSByZXN1bHQuaW50ZXJ2YWxQcmVjaXNpb24gPSBnZXRJbnRlcnZhbFByZWNpc2lvbihpbnRlcnZhbCk7IC8vIE5pY2VkIGV4dGVudCBpbnNpZGUgb3JpZ2luYWwgZXh0ZW50XG5cbiAgdmFyIG5pY2VUaWNrRXh0ZW50ID0gcmVzdWx0Lm5pY2VUaWNrRXh0ZW50ID0gW3JvdW5kTnVtYmVyKE1hdGguY2VpbChleHRlbnRbMF0gLyBpbnRlcnZhbCkgKiBpbnRlcnZhbCwgcHJlY2lzaW9uKSwgcm91bmROdW1iZXIoTWF0aC5mbG9vcihleHRlbnRbMV0gLyBpbnRlcnZhbCkgKiBpbnRlcnZhbCwgcHJlY2lzaW9uKV07XG4gIGZpeEV4dGVudChuaWNlVGlja0V4dGVudCwgZXh0ZW50KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IGludGVydmFsXG4gKiBAcmV0dXJuIHtudW1iZXJ9IGludGVydmFsIHByZWNpc2lvblxuICovXG5cblxuZnVuY3Rpb24gZ2V0SW50ZXJ2YWxQcmVjaXNpb24oaW50ZXJ2YWwpIHtcbiAgLy8gVG93IG1vcmUgZGlnaXRhbCBmb3IgdGljay5cbiAgcmV0dXJuIG51bWJlclV0aWwuZ2V0UHJlY2lzaW9uU2FmZShpbnRlcnZhbCkgKyAyO1xufVxuXG5mdW5jdGlvbiBjbGFtcChuaWNlVGlja0V4dGVudCwgaWR4LCBleHRlbnQpIHtcbiAgbmljZVRpY2tFeHRlbnRbaWR4XSA9IE1hdGgubWF4KE1hdGgubWluKG5pY2VUaWNrRXh0ZW50W2lkeF0sIGV4dGVudFsxXSksIGV4dGVudFswXSk7XG59IC8vIEluIHNvbWUgY2FzZXMgKGUuZy4sIHNwbGl0TnVtYmVyIGlzIDEpLCBuaWNlVGlja0V4dGVudCBtYXkgYmUgb3V0IG9mIGV4dGVudC5cblxuXG5mdW5jdGlvbiBmaXhFeHRlbnQobmljZVRpY2tFeHRlbnQsIGV4dGVudCkge1xuICAhaXNGaW5pdGUobmljZVRpY2tFeHRlbnRbMF0pICYmIChuaWNlVGlja0V4dGVudFswXSA9IGV4dGVudFswXSk7XG4gICFpc0Zpbml0ZShuaWNlVGlja0V4dGVudFsxXSkgJiYgKG5pY2VUaWNrRXh0ZW50WzFdID0gZXh0ZW50WzFdKTtcbiAgY2xhbXAobmljZVRpY2tFeHRlbnQsIDAsIGV4dGVudCk7XG4gIGNsYW1wKG5pY2VUaWNrRXh0ZW50LCAxLCBleHRlbnQpO1xuXG4gIGlmIChuaWNlVGlja0V4dGVudFswXSA+IG5pY2VUaWNrRXh0ZW50WzFdKSB7XG4gICAgbmljZVRpY2tFeHRlbnRbMF0gPSBuaWNlVGlja0V4dGVudFsxXTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnRlcnZhbFNjYWxlR2V0VGlja3MoaW50ZXJ2YWwsIGV4dGVudCwgbmljZVRpY2tFeHRlbnQsIGludGVydmFsUHJlY2lzaW9uKSB7XG4gIHZhciB0aWNrcyA9IFtdOyAvLyBJZiBpbnRlcnZhbCBpcyAwLCByZXR1cm4gW107XG5cbiAgaWYgKCFpbnRlcnZhbCkge1xuICAgIHJldHVybiB0aWNrcztcbiAgfSAvLyBDb25zaWRlciB0aGlzIGNhc2U6IHVzaW5nIGRhdGFab29tIHRvb2xib3gsIHpvb20gYW5kIHpvb20uXG5cblxuICB2YXIgc2FmZUxpbWl0ID0gMTAwMDA7XG5cbiAgaWYgKGV4dGVudFswXSA8IG5pY2VUaWNrRXh0ZW50WzBdKSB7XG4gICAgdGlja3MucHVzaChleHRlbnRbMF0pO1xuICB9XG5cbiAgdmFyIHRpY2sgPSBuaWNlVGlja0V4dGVudFswXTtcblxuICB3aGlsZSAodGljayA8PSBuaWNlVGlja0V4dGVudFsxXSkge1xuICAgIHRpY2tzLnB1c2godGljayk7IC8vIEF2b2lkIHJvdW5kaW5nIGVycm9yXG5cbiAgICB0aWNrID0gcm91bmROdW1iZXIodGljayArIGludGVydmFsLCBpbnRlcnZhbFByZWNpc2lvbik7XG5cbiAgICBpZiAodGljayA9PT0gdGlja3NbdGlja3MubGVuZ3RoIC0gMV0pIHtcbiAgICAgIC8vIENvbnNpZGVyIG91dCBvZiBzYWZlIGZsb2F0IHBvaW50LCBlLmcuLFxuICAgICAgLy8gLTM3MTExMjYuOTkwNzcwNyArIDJlLTEwID09PSAtMzcxMTEyNi45OTA3NzA3XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpZiAodGlja3MubGVuZ3RoID4gc2FmZUxpbWl0KSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICB9IC8vIENvbnNpZGVyIHRoaXMgY2FzZTogdGhlIGxhc3QgaXRlbSBvZiB0aWNrcyBpcyBzbWFsbGVyXG4gIC8vIHRoYW4gbmljZVRpY2tFeHRlbnRbMV0gYW5kIG5pY2VUaWNrRXh0ZW50WzFdID09PSBleHRlbnRbMV0uXG5cblxuICBpZiAoZXh0ZW50WzFdID4gKHRpY2tzLmxlbmd0aCA/IHRpY2tzW3RpY2tzLmxlbmd0aCAtIDFdIDogbmljZVRpY2tFeHRlbnRbMV0pKSB7XG4gICAgdGlja3MucHVzaChleHRlbnRbMV0pO1xuICB9XG5cbiAgcmV0dXJuIHRpY2tzO1xufVxuXG5leHBvcnRzLmludGVydmFsU2NhbGVOaWNlVGlja3MgPSBpbnRlcnZhbFNjYWxlTmljZVRpY2tzO1xuZXhwb3J0cy5nZXRJbnRlcnZhbFByZWNpc2lvbiA9IGdldEludGVydmFsUHJlY2lzaW9uO1xuZXhwb3J0cy5maXhFeHRlbnQgPSBmaXhFeHRlbnQ7XG5leHBvcnRzLmludGVydmFsU2NhbGVHZXRUaWNrcyA9IGludGVydmFsU2NhbGVHZXRUaWNrczsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///163\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// import * as axisHelper from './axisHelper';\\nvar _default = {\\n  /**\\n   * @param {boolean} origin\\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\\n   */\\n  getMin: function (origin) {\\n    var option = this.option;\\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\\n\\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\\n      min = this.axis.scale.parse(min);\\n    }\\n\\n    return min;\\n  },\\n\\n  /**\\n   * @param {boolean} origin\\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\\n   */\\n  getMax: function (origin) {\\n    var option = this.option;\\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\\n\\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\\n      max = this.axis.scale.parse(max);\\n    }\\n\\n    return max;\\n  },\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  getNeedCrossZero: function () {\\n    var option = this.option;\\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\\n  },\\n\\n  /**\\n   * Should be implemented by each axis model if necessary.\\n   * @return {module:echarts/model/Component} coordinate system model\\n   */\\n  getCoordSysModel: zrUtil.noop,\\n\\n  /**\\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\\n   */\\n  setRange: function (rangeStart, rangeEnd) {\\n    this.option.rangeStart = rangeStart;\\n    this.option.rangeEnd = rangeEnd;\\n  },\\n\\n  /**\\n   * Reset range\\n   */\\n  resetRange: function () {\\n    // rangeStart and rangeEnd is readonly.\\n    this.option.rangeStart = this.option.rangeEnd = null;\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvYXhpc01vZGVsQ29tbW9uTWl4aW4uanM/MjAyMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLEVBQXVCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLGNBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLGNBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLGNBQWMsK0JBQStCO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLE9BQU87QUFDcEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTY0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG4vLyBpbXBvcnQgKiBhcyBheGlzSGVscGVyIGZyb20gJy4vYXhpc0hlbHBlcic7XG52YXIgX2RlZmF1bHQgPSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IG9yaWdpblxuICAgKiBAcmV0dXJuIHtudW1iZXJ8c3RyaW5nfSBtaW4gdmFsdWUgb3IgJ2RhdGFNaW4nIG9yIG51bGwvdW5kZWZpbmVkIChtZWFucyBhdXRvKSBvciBOYU5cbiAgICovXG4gIGdldE1pbjogZnVuY3Rpb24gKG9yaWdpbikge1xuICAgIHZhciBvcHRpb24gPSB0aGlzLm9wdGlvbjtcbiAgICB2YXIgbWluID0gIW9yaWdpbiAmJiBvcHRpb24ucmFuZ2VTdGFydCAhPSBudWxsID8gb3B0aW9uLnJhbmdlU3RhcnQgOiBvcHRpb24ubWluO1xuXG4gICAgaWYgKHRoaXMuYXhpcyAmJiBtaW4gIT0gbnVsbCAmJiBtaW4gIT09ICdkYXRhTWluJyAmJiB0eXBlb2YgbWluICE9PSAnZnVuY3Rpb24nICYmICF6clV0aWwuZXFOYU4obWluKSkge1xuICAgICAgbWluID0gdGhpcy5heGlzLnNjYWxlLnBhcnNlKG1pbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1pbjtcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHtib29sZWFufSBvcmlnaW5cbiAgICogQHJldHVybiB7bnVtYmVyfHN0cmluZ30gbWF4IHZhbHVlIG9yICdkYXRhTWF4JyBvciBudWxsL3VuZGVmaW5lZCAobWVhbnMgYXV0bykgb3IgTmFOXG4gICAqL1xuICBnZXRNYXg6IGZ1bmN0aW9uIChvcmlnaW4pIHtcbiAgICB2YXIgb3B0aW9uID0gdGhpcy5vcHRpb247XG4gICAgdmFyIG1heCA9ICFvcmlnaW4gJiYgb3B0aW9uLnJhbmdlRW5kICE9IG51bGwgPyBvcHRpb24ucmFuZ2VFbmQgOiBvcHRpb24ubWF4O1xuXG4gICAgaWYgKHRoaXMuYXhpcyAmJiBtYXggIT0gbnVsbCAmJiBtYXggIT09ICdkYXRhTWF4JyAmJiB0eXBlb2YgbWF4ICE9PSAnZnVuY3Rpb24nICYmICF6clV0aWwuZXFOYU4obWF4KSkge1xuICAgICAgbWF4ID0gdGhpcy5heGlzLnNjYWxlLnBhcnNlKG1heCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1heDtcbiAgfSxcblxuICAvKipcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGdldE5lZWRDcm9zc1plcm86IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgb3B0aW9uID0gdGhpcy5vcHRpb247XG4gICAgcmV0dXJuIG9wdGlvbi5yYW5nZVN0YXJ0ICE9IG51bGwgfHwgb3B0aW9uLnJhbmdlRW5kICE9IG51bGwgPyBmYWxzZSA6ICFvcHRpb24uc2NhbGU7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFNob3VsZCBiZSBpbXBsZW1lbnRlZCBieSBlYWNoIGF4aXMgbW9kZWwgaWYgbmVjZXNzYXJ5LlxuICAgKiBAcmV0dXJuIHttb2R1bGU6ZWNoYXJ0cy9tb2RlbC9Db21wb25lbnR9IGNvb3JkaW5hdGUgc3lzdGVtIG1vZGVsXG4gICAqL1xuICBnZXRDb29yZFN5c01vZGVsOiB6clV0aWwubm9vcCxcblxuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IHJhbmdlU3RhcnQgQ2FuIG9ubHkgYmUgZmluaXRlIG51bWJlciBvciBudWxsL3VuZGVmaW5lZCBvciBOYU4uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByYW5nZUVuZCBDYW4gb25seSBiZSBmaW5pdGUgbnVtYmVyIG9yIG51bGwvdW5kZWZpbmVkIG9yIE5hTi5cbiAgICovXG4gIHNldFJhbmdlOiBmdW5jdGlvbiAocmFuZ2VTdGFydCwgcmFuZ2VFbmQpIHtcbiAgICB0aGlzLm9wdGlvbi5yYW5nZVN0YXJ0ID0gcmFuZ2VTdGFydDtcbiAgICB0aGlzLm9wdGlvbi5yYW5nZUVuZCA9IHJhbmdlRW5kO1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZXNldCByYW5nZVxuICAgKi9cbiAgcmVzZXRSYW5nZTogZnVuY3Rpb24gKCkge1xuICAgIC8vIHJhbmdlU3RhcnQgYW5kIHJhbmdlRW5kIGlzIHJlYWRvbmx5LlxuICAgIHRoaXMub3B0aW9uLnJhbmdlU3RhcnQgPSB0aGlzLm9wdGlvbi5yYW5nZUVuZCA9IG51bGw7XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///164\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar each = _util.each;\\nvar map = _util.map;\\n\\nvar _number = __webpack_require__(65);\\n\\nvar linearMap = _number.linearMap;\\nvar getPixelPrecision = _number.getPixelPrecision;\\n\\nvar _axisTickLabelBuilder = __webpack_require__(252);\\n\\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar NORMALIZED_EXTENT = [0, 1];\\n/**\\n * Base class of Axis.\\n * @constructor\\n */\\n\\nvar Axis = function (dim, scale, extent) {\\n  /**\\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\\n   * @type {string}\\n   */\\n  this.dim = dim;\\n  /**\\n   * Axis scale\\n   * @type {module:echarts/coord/scale/*}\\n   */\\n\\n  this.scale = scale;\\n  /**\\n   * @type {Array.<number>}\\n   * @private\\n   */\\n\\n  this._extent = extent || [0, 0];\\n  /**\\n   * @type {boolean}\\n   */\\n\\n  this.inverse = false;\\n  /**\\n   * Usually true when axis has a ordinal scale\\n   * @type {boolean}\\n   */\\n\\n  this.onBand = false;\\n};\\n\\nAxis.prototype = {\\n  constructor: Axis,\\n\\n  /**\\n   * If axis extent contain given coord\\n   * @param {number} coord\\n   * @return {boolean}\\n   */\\n  contain: function (coord) {\\n    var extent = this._extent;\\n    var min = Math.min(extent[0], extent[1]);\\n    var max = Math.max(extent[0], extent[1]);\\n    return coord >= min && coord <= max;\\n  },\\n\\n  /**\\n   * If axis extent contain given data\\n   * @param {number} data\\n   * @return {boolean}\\n   */\\n  containData: function (data) {\\n    return this.contain(this.dataToCoord(data));\\n  },\\n\\n  /**\\n   * Get coord extent.\\n   * @return {Array.<number>}\\n   */\\n  getExtent: function () {\\n    return this._extent.slice();\\n  },\\n\\n  /**\\n   * Get precision used for formatting\\n   * @param {Array.<number>} [dataExtent]\\n   * @return {number}\\n   */\\n  getPixelPrecision: function (dataExtent) {\\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\\n  },\\n\\n  /**\\n   * Set coord extent\\n   * @param {number} start\\n   * @param {number} end\\n   */\\n  setExtent: function (start, end) {\\n    var extent = this._extent;\\n    extent[0] = start;\\n    extent[1] = end;\\n  },\\n\\n  /**\\n   * Convert data to coord. Data is the rank if it has an ordinal scale\\n   * @param {number} data\\n   * @param  {boolean} clamp\\n   * @return {number}\\n   */\\n  dataToCoord: function (data, clamp) {\\n    var extent = this._extent;\\n    var scale = this.scale;\\n    data = scale.normalize(data);\\n\\n    if (this.onBand && scale.type === 'ordinal') {\\n      extent = extent.slice();\\n      fixExtentWithBands(extent, scale.count());\\n    }\\n\\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\\n  },\\n\\n  /**\\n   * Convert coord to data. Data is the rank if it has an ordinal scale\\n   * @param {number} coord\\n   * @param  {boolean} clamp\\n   * @return {number}\\n   */\\n  coordToData: function (coord, clamp) {\\n    var extent = this._extent;\\n    var scale = this.scale;\\n\\n    if (this.onBand && scale.type === 'ordinal') {\\n      extent = extent.slice();\\n      fixExtentWithBands(extent, scale.count());\\n    }\\n\\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\\n    return this.scale.scale(t);\\n  },\\n\\n  /**\\n   * Convert pixel point to data in axis\\n   * @param {Array.<number>} point\\n   * @param  {boolean} clamp\\n   * @return {number} data\\n   */\\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\\n  },\\n\\n  /**\\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\\n   * `axis.getTicksCoords` considers `onBand`, which is used by\\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\\n   * @param {Object} [opt]\\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\\n   *        tick must be at the axis end points. Otherwise, clip ticks\\n   *        that outside the axis extent.\\n   * @return {Array.<Object>} [{\\n   *     coord: ...,\\n   *     tickValue: ...\\n   * }, ...]\\n   */\\n  getTicksCoords: function (opt) {\\n    opt = opt || {};\\n    var tickModel = opt.tickModel || this.getTickModel();\\n    var result = createAxisTicks(this, tickModel);\\n    var ticks = result.ticks;\\n    var ticksCoords = map(ticks, function (tickValue) {\\n      return {\\n        coord: this.dataToCoord(tickValue),\\n        tickValue: tickValue\\n      };\\n    }, this);\\n    var alignWithLabel = tickModel.get('alignWithLabel');\\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\\n    return ticksCoords;\\n  },\\n\\n  /**\\n   * @return {Array.<Object>} [{\\n   *     formattedLabel: string,\\n   *     rawLabel: axis.scale.getLabel(tickValue)\\n   *     tickValue: number\\n   * }, ...]\\n   */\\n  getViewLabels: function () {\\n    return createAxisLabels(this).labels;\\n  },\\n\\n  /**\\n   * @return {module:echarts/coord/model/Model}\\n   */\\n  getLabelModel: function () {\\n    return this.model.getModel('axisLabel');\\n  },\\n\\n  /**\\n   * Notice here we only get the default tick model. For splitLine\\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\\n   * manually when calling `getTicksCoords`.\\n   * In GL, this method may be overrided to:\\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\\n   * @return {module:echarts/coord/model/Model}\\n   */\\n  getTickModel: function () {\\n    return this.model.getModel('axisTick');\\n  },\\n\\n  /**\\n   * Get width of band\\n   * @return {number}\\n   */\\n  getBandWidth: function () {\\n    var axisExtent = this._extent;\\n    var dataExtent = this.scale.getExtent();\\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\\n\\n    len === 0 && (len = 1);\\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\\n    return Math.abs(size) / len;\\n  },\\n\\n  /**\\n   * @abstract\\n   * @return {boolean} Is horizontal\\n   */\\n  isHorizontal: null,\\n\\n  /**\\n   * @abstract\\n   * @return {number} Get axis rotate, by degree.\\n   */\\n  getRotate: null,\\n\\n  /**\\n   * Only be called in category axis.\\n   * Can be overrided, consider other axes like in 3D.\\n   * @return {number} Auto interval for cateogry axis tick and label\\n   */\\n  calculateCategoryInterval: function () {\\n    return calculateCategoryInterval(this);\\n  }\\n};\\n\\nfunction fixExtentWithBands(extent, nTick) {\\n  var size = extent[1] - extent[0];\\n  var len = nTick;\\n  var margin = size / len / 2;\\n  extent[0] += margin;\\n  extent[1] -= margin;\\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\\n// |---1---|---2---|---3---|---4---|.\\n// So the displayed ticks and splitLine/splitArea should between\\n// each data item, otherwise cause misleading (e.g., split tow bars\\n// of a single data item when there are two bar series).\\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\\n// splitLine/spliteArea should layout appropriately corresponding\\n// to displayed labels. (So we should not use `getBandWidth` in this\\n// case).\\n\\n\\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\\n  var ticksLen = ticksCoords.length;\\n\\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\\n    return;\\n  }\\n\\n  var axisExtent = axis.getExtent();\\n  var last;\\n\\n  if (ticksLen === 1) {\\n    ticksCoords[0].coord = axisExtent[0];\\n    last = ticksCoords[1] = {\\n      coord: axisExtent[0]\\n    };\\n  } else {\\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\\n    each(ticksCoords, function (ticksItem) {\\n      ticksItem.coord -= shift / 2;\\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\\n\\n      if (tickCategoryInterval % 2 > 0) {\\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\\n      }\\n    });\\n    last = {\\n      coord: ticksCoords[ticksLen - 1].coord + shift\\n    };\\n    ticksCoords.push(last);\\n  }\\n\\n  var inverse = axisExtent[0] > axisExtent[1];\\n\\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\\n  }\\n\\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\\n    ticksCoords.unshift({\\n      coord: axisExtent[0]\\n    });\\n  }\\n\\n  if (littleThan(axisExtent[1], last.coord)) {\\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\\n  }\\n\\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\\n    ticksCoords.push({\\n      coord: axisExtent[1]\\n    });\\n  }\\n\\n  function littleThan(a, b) {\\n    return inverse ? a > b : a < b;\\n  }\\n}\\n\\nvar _default = Axis;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///165\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar _symbol = __webpack_require__(113);\\n\\nvar createSymbol = _symbol.createSymbol;\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar _number = __webpack_require__(65);\\n\\nvar parsePercent = _number.parsePercent;\\n\\nvar _labelHelper = __webpack_require__(257);\\n\\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @module echarts/chart/helper/Symbol\\n */\\n\\n/**\\n * @constructor\\n * @alias {module:echarts/chart/helper/Symbol}\\n * @param {module:echarts/data/List} data\\n * @param {number} idx\\n * @extends {module:zrender/graphic/Group}\\n */\\nfunction SymbolClz(data, idx, seriesScope) {\\n  graphic.Group.call(this);\\n  this.updateData(data, idx, seriesScope);\\n}\\n\\nvar symbolProto = SymbolClz.prototype;\\n/**\\n * @public\\n * @static\\n * @param {module:echarts/data/List} data\\n * @param {number} dataIndex\\n * @return {Array.<number>} [width, height]\\n */\\n\\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\\n};\\n\\nfunction getScale(symbolSize) {\\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\\n}\\n\\nfunction driftSymbol(dx, dy) {\\n  this.parent.drift(dx, dy);\\n}\\n\\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\\n  // Remove paths created before\\n  this.removeAll();\\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\\n  //     symbolType, -0.5, -0.5, 1, 1, color\\n  // );\\n  // If width/height are set too small (e.g., set to 1) on ios10\\n  // and macOS Sierra, a circle stroke become a rect, no matter what\\n  // the scale is set. So we set width/height as 2. See #4150.\\n\\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\\n  symbolPath.attr({\\n    z2: 100,\\n    culling: true,\\n    scale: getScale(symbolSize)\\n  }); // Rewrite drift method\\n\\n  symbolPath.drift = driftSymbol;\\n  this._symbolType = symbolType;\\n  this.add(symbolPath);\\n};\\n/**\\n * Stop animation\\n * @param {boolean} toLastFrame\\n */\\n\\n\\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\\n  this.childAt(0).stopAnimation(toLastFrame);\\n};\\n/**\\n * FIXME:\\n * Caution: This method breaks the encapsulation of this module,\\n * but it indeed brings convenience. So do not use the method\\n * unless you detailedly know all the implements of `Symbol`,\\n * especially animation.\\n *\\n * Get symbol path element.\\n */\\n\\n\\nsymbolProto.getSymbolPath = function () {\\n  return this.childAt(0);\\n};\\n/**\\n * Get scale(aka, current symbol size).\\n * Including the change caused by animation\\n */\\n\\n\\nsymbolProto.getScale = function () {\\n  return this.childAt(0).scale;\\n};\\n/**\\n * Highlight symbol\\n */\\n\\n\\nsymbolProto.highlight = function () {\\n  this.childAt(0).trigger('emphasis');\\n};\\n/**\\n * Downplay symbol\\n */\\n\\n\\nsymbolProto.downplay = function () {\\n  this.childAt(0).trigger('normal');\\n};\\n/**\\n * @param {number} zlevel\\n * @param {number} z\\n */\\n\\n\\nsymbolProto.setZ = function (zlevel, z) {\\n  var symbolPath = this.childAt(0);\\n  symbolPath.zlevel = zlevel;\\n  symbolPath.z = z;\\n};\\n\\nsymbolProto.setDraggable = function (draggable) {\\n  var symbolPath = this.childAt(0);\\n  symbolPath.draggable = draggable;\\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\\n};\\n/**\\n * Update symbol properties\\n * @param {module:echarts/data/List} data\\n * @param {number} idx\\n * @param {Object} [seriesScope]\\n * @param {Object} [seriesScope.itemStyle]\\n * @param {Object} [seriesScope.hoverItemStyle]\\n * @param {Object} [seriesScope.symbolRotate]\\n * @param {Object} [seriesScope.symbolOffset]\\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\\n * @param {boolean} [seriesScope.hoverAnimation]\\n * @param {Object} [seriesScope.cursorStyle]\\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\\n * @param {string} [seriesScope.symbolInnerColor]\\n * @param {Object} [seriesScope.fadeIn=false]\\n */\\n\\n\\nsymbolProto.updateData = function (data, idx, seriesScope) {\\n  this.silent = false;\\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\\n  var seriesModel = data.hostModel;\\n  var symbolSize = getSymbolSize(data, idx);\\n  var isInit = symbolType !== this._symbolType;\\n\\n  if (isInit) {\\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\\n\\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\\n  } else {\\n    var symbolPath = this.childAt(0);\\n    symbolPath.silent = false;\\n    graphic.updateProps(symbolPath, {\\n      scale: getScale(symbolSize)\\n    }, seriesModel, idx);\\n  }\\n\\n  this._updateCommon(data, idx, symbolSize, seriesScope);\\n\\n  if (isInit) {\\n    var symbolPath = this.childAt(0);\\n    var fadeIn = seriesScope && seriesScope.fadeIn;\\n    var target = {\\n      scale: symbolPath.scale.slice()\\n    };\\n    fadeIn && (target.style = {\\n      opacity: symbolPath.style.opacity\\n    });\\n    symbolPath.scale = [0, 0];\\n    fadeIn && (symbolPath.style.opacity = 0);\\n    graphic.initProps(symbolPath, target, seriesModel, idx);\\n  }\\n\\n  this._seriesModel = seriesModel;\\n}; // Update common properties\\n\\n\\nvar normalStyleAccessPath = ['itemStyle'];\\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\\nvar normalLabelAccessPath = ['label'];\\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\\n/**\\n * @param {module:echarts/data/List} data\\n * @param {number} idx\\n * @param {Array.<number>} symbolSize\\n * @param {Object} [seriesScope]\\n */\\n\\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\\n  var symbolPath = this.childAt(0);\\n  var seriesModel = data.hostModel;\\n  var color = data.getItemVisual(idx, 'color'); // Reset style\\n\\n  if (symbolPath.type !== 'image') {\\n    symbolPath.useStyle({\\n      strokeNoScale: true\\n    });\\n  }\\n\\n  var itemStyle = seriesScope && seriesScope.itemStyle;\\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\\n  var labelModel = seriesScope && seriesScope.labelModel;\\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\\n\\n  if (!seriesScope || data.hasItemOption) {\\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\\n    // Because symbol provide setColor individually to set fill and stroke\\n\\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\\n    symbolRotate = itemModel.getShallow('symbolRotate');\\n    symbolOffset = itemModel.getShallow('symbolOffset');\\n    labelModel = itemModel.getModel(normalLabelAccessPath);\\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\\n    cursorStyle = itemModel.getShallow('cursor');\\n  } else {\\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\\n  }\\n\\n  var elStyle = symbolPath.style;\\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\\n\\n  if (symbolOffset) {\\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\\n  }\\n\\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\\n\\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\\n  symbolPath.setStyle(itemStyle);\\n  var opacity = data.getItemVisual(idx, 'opacity');\\n\\n  if (opacity != null) {\\n    elStyle.opacity = opacity;\\n  }\\n\\n  var liftZ = data.getItemVisual(idx, 'liftZ');\\n  var z2Origin = symbolPath.__z2Origin;\\n\\n  if (liftZ != null) {\\n    if (z2Origin == null) {\\n      symbolPath.__z2Origin = symbolPath.z2;\\n      symbolPath.z2 += liftZ;\\n    }\\n  } else if (z2Origin != null) {\\n    symbolPath.z2 = z2Origin;\\n    symbolPath.__z2Origin = null;\\n  }\\n\\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\\n    labelFetcher: seriesModel,\\n    labelDataIndex: idx,\\n    defaultText: getLabelDefaultText,\\n    isRectText: true,\\n    autoColor: color\\n  }); // Do not execute util needed.\\n\\n  function getLabelDefaultText(idx, opt) {\\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\\n  }\\n\\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\\n\\n  graphic.setHoverStyle(symbolPath);\\n  symbolPath.__symbolOriginalScale = getScale(symbolSize);\\n\\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\\n    // Note: consider `off`, should use static function here.\\n    symbolPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut).on('emphasis', onEmphasis).on('normal', onNormal);\\n  }\\n};\\n\\nfunction onMouseOver() {\\n  // see comment in `graphic.isInEmphasis`\\n  !graphic.isInEmphasis(this) && onEmphasis.call(this);\\n}\\n\\nfunction onMouseOut() {\\n  // see comment in `graphic.isInEmphasis`\\n  !graphic.isInEmphasis(this) && onNormal.call(this);\\n}\\n\\nfunction onEmphasis() {\\n  // Do not support this hover animation util some scenario required.\\n  // Animation can only be supported in hover layer when using `el.incremetal`.\\n  if (this.incremental || this.useHoverLayer) {\\n    return;\\n  }\\n\\n  var scale = this.__symbolOriginalScale;\\n  var ratio = scale[1] / scale[0];\\n  this.animateTo({\\n    scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\\n  }, 400, 'elasticOut');\\n}\\n\\nfunction onNormal() {\\n  if (this.incremental || this.useHoverLayer) {\\n    return;\\n  }\\n\\n  this.animateTo({\\n    scale: this.__symbolOriginalScale\\n  }, 400, 'elasticOut');\\n}\\n/**\\n * @param {Function} cb\\n * @param {Object} [opt]\\n * @param {Object} [opt.keepLabel=true]\\n */\\n\\n\\nsymbolProto.fadeOut = function (cb, opt) {\\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\\n\\n  this.silent = symbolPath.silent = true; // Not show text when animating\\n\\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\\n  graphic.updateProps(symbolPath, {\\n    style: {\\n      opacity: 0\\n    },\\n    scale: [0, 0]\\n  }, this._seriesModel, this.dataIndex, cb);\\n};\\n\\nzrUtil.inherits(SymbolClz, graphic.Group);\\nvar _default = SymbolClz;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///166\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _dataStackHelper = __webpack_require__(79);\\n\\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\\n\\nvar _util = __webpack_require__(59);\\n\\nvar map = _util.map;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @param {Object} coordSys\\n * @param {module:echarts/data/List} data\\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\\n */\\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\\n  var baseAxis = coordSys.getBaseAxis();\\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\\n  var valueStart = getValueStart(valueAxis, valueOrigin);\\n  var baseAxisDim = baseAxis.dim;\\n  var valueAxisDim = valueAxis.dim;\\n  var valueDim = data.mapDimension(valueAxisDim);\\n  var baseDim = data.mapDimension(baseAxisDim);\\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\\n  var dims = map(coordSys.dimensions, function (coordDim) {\\n    return data.mapDimension(coordDim);\\n  });\\n  var stacked;\\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\\n\\n  if (stacked |= isDimensionStacked(data, dims[0]\\n  /*, dims[1]*/\\n  )) {\\n    // jshint ignore:line\\n    dims[0] = stackResultDim;\\n  }\\n\\n  if (stacked |= isDimensionStacked(data, dims[1]\\n  /*, dims[0]*/\\n  )) {\\n    // jshint ignore:line\\n    dims[1] = stackResultDim;\\n  }\\n\\n  return {\\n    dataDimsForPoint: dims,\\n    valueStart: valueStart,\\n    valueAxisDim: valueAxisDim,\\n    baseAxisDim: baseAxisDim,\\n    stacked: !!stacked,\\n    valueDim: valueDim,\\n    baseDim: baseDim,\\n    baseDataOffset: baseDataOffset,\\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\\n  };\\n}\\n\\nfunction getValueStart(valueAxis, valueOrigin) {\\n  var valueStart = 0;\\n  var extent = valueAxis.scale.getExtent();\\n\\n  if (valueOrigin === 'start') {\\n    valueStart = extent[0];\\n  } else if (valueOrigin === 'end') {\\n    valueStart = extent[1];\\n  } // auto\\n  else {\\n      // Both positive\\n      if (extent[0] > 0) {\\n        valueStart = extent[0];\\n      } // Both negative\\n      else if (extent[1] < 0) {\\n          valueStart = extent[1];\\n        } // If is one positive, and one negative, onZero shall be true\\n\\n    }\\n\\n  return valueStart;\\n}\\n\\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\\n  var value = NaN;\\n\\n  if (dataCoordInfo.stacked) {\\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\\n  }\\n\\n  if (isNaN(value)) {\\n    value = dataCoordInfo.valueStart;\\n  }\\n\\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\\n  var stackedData = [];\\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\\n  stackedData[1 - baseDataOffset] = value;\\n  return coordSys.dataToPoint(stackedData);\\n}\\n\\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\\nexports.getStackedOnPoint = getStackedOnPoint;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY2hhcnQvbGluZS9oZWxwZXIuanM/OWY4MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLG1CQUFPLENBQUMsRUFBbUM7O0FBRWxFOztBQUVBLFlBQVksbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFM0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyx5QkFBeUI7QUFDcEMsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxTQUFTOztBQUVUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE2Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgX2RhdGFTdGFja0hlbHBlciA9IHJlcXVpcmUoXCIuLi8uLi9kYXRhL2hlbHBlci9kYXRhU3RhY2tIZWxwZXJcIik7XG5cbnZhciBpc0RpbWVuc2lvblN0YWNrZWQgPSBfZGF0YVN0YWNrSGVscGVyLmlzRGltZW5zaW9uU3RhY2tlZDtcblxudmFyIF91dGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIG1hcCA9IF91dGlsLm1hcDtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb29yZFN5c1xuICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9kYXRhL0xpc3R9IGRhdGFcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZU9yaWdpbiBsaW5lU2VyaWVzLm9wdGlvbi5hcmVhU3R5bGUub3JpZ2luXG4gKi9cbmZ1bmN0aW9uIHByZXBhcmVEYXRhQ29vcmRJbmZvKGNvb3JkU3lzLCBkYXRhLCB2YWx1ZU9yaWdpbikge1xuICB2YXIgYmFzZUF4aXMgPSBjb29yZFN5cy5nZXRCYXNlQXhpcygpO1xuICB2YXIgdmFsdWVBeGlzID0gY29vcmRTeXMuZ2V0T3RoZXJBeGlzKGJhc2VBeGlzKTtcbiAgdmFyIHZhbHVlU3RhcnQgPSBnZXRWYWx1ZVN0YXJ0KHZhbHVlQXhpcywgdmFsdWVPcmlnaW4pO1xuICB2YXIgYmFzZUF4aXNEaW0gPSBiYXNlQXhpcy5kaW07XG4gIHZhciB2YWx1ZUF4aXNEaW0gPSB2YWx1ZUF4aXMuZGltO1xuICB2YXIgdmFsdWVEaW0gPSBkYXRhLm1hcERpbWVuc2lvbih2YWx1ZUF4aXNEaW0pO1xuICB2YXIgYmFzZURpbSA9IGRhdGEubWFwRGltZW5zaW9uKGJhc2VBeGlzRGltKTtcbiAgdmFyIGJhc2VEYXRhT2Zmc2V0ID0gdmFsdWVBeGlzRGltID09PSAneCcgfHwgdmFsdWVBeGlzRGltID09PSAncmFkaXVzJyA/IDEgOiAwO1xuICB2YXIgZGltcyA9IG1hcChjb29yZFN5cy5kaW1lbnNpb25zLCBmdW5jdGlvbiAoY29vcmREaW0pIHtcbiAgICByZXR1cm4gZGF0YS5tYXBEaW1lbnNpb24oY29vcmREaW0pO1xuICB9KTtcbiAgdmFyIHN0YWNrZWQ7XG4gIHZhciBzdGFja1Jlc3VsdERpbSA9IGRhdGEuZ2V0Q2FsY3VsYXRpb25JbmZvKCdzdGFja1Jlc3VsdERpbWVuc2lvbicpO1xuXG4gIGlmIChzdGFja2VkIHw9IGlzRGltZW5zaW9uU3RhY2tlZChkYXRhLCBkaW1zWzBdXG4gIC8qLCBkaW1zWzFdKi9cbiAgKSkge1xuICAgIC8vIGpzaGludCBpZ25vcmU6bGluZVxuICAgIGRpbXNbMF0gPSBzdGFja1Jlc3VsdERpbTtcbiAgfVxuXG4gIGlmIChzdGFja2VkIHw9IGlzRGltZW5zaW9uU3RhY2tlZChkYXRhLCBkaW1zWzFdXG4gIC8qLCBkaW1zWzBdKi9cbiAgKSkge1xuICAgIC8vIGpzaGludCBpZ25vcmU6bGluZVxuICAgIGRpbXNbMV0gPSBzdGFja1Jlc3VsdERpbTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZGF0YURpbXNGb3JQb2ludDogZGltcyxcbiAgICB2YWx1ZVN0YXJ0OiB2YWx1ZVN0YXJ0LFxuICAgIHZhbHVlQXhpc0RpbTogdmFsdWVBeGlzRGltLFxuICAgIGJhc2VBeGlzRGltOiBiYXNlQXhpc0RpbSxcbiAgICBzdGFja2VkOiAhIXN0YWNrZWQsXG4gICAgdmFsdWVEaW06IHZhbHVlRGltLFxuICAgIGJhc2VEaW06IGJhc2VEaW0sXG4gICAgYmFzZURhdGFPZmZzZXQ6IGJhc2VEYXRhT2Zmc2V0LFxuICAgIHN0YWNrZWRPdmVyRGltZW5zaW9uOiBkYXRhLmdldENhbGN1bGF0aW9uSW5mbygnc3RhY2tlZE92ZXJEaW1lbnNpb24nKVxuICB9O1xufVxuXG5mdW5jdGlvbiBnZXRWYWx1ZVN0YXJ0KHZhbHVlQXhpcywgdmFsdWVPcmlnaW4pIHtcbiAgdmFyIHZhbHVlU3RhcnQgPSAwO1xuICB2YXIgZXh0ZW50ID0gdmFsdWVBeGlzLnNjYWxlLmdldEV4dGVudCgpO1xuXG4gIGlmICh2YWx1ZU9yaWdpbiA9PT0gJ3N0YXJ0Jykge1xuICAgIHZhbHVlU3RhcnQgPSBleHRlbnRbMF07XG4gIH0gZWxzZSBpZiAodmFsdWVPcmlnaW4gPT09ICdlbmQnKSB7XG4gICAgdmFsdWVTdGFydCA9IGV4dGVudFsxXTtcbiAgfSAvLyBhdXRvXG4gIGVsc2Uge1xuICAgICAgLy8gQm90aCBwb3NpdGl2ZVxuICAgICAgaWYgKGV4dGVudFswXSA+IDApIHtcbiAgICAgICAgdmFsdWVTdGFydCA9IGV4dGVudFswXTtcbiAgICAgIH0gLy8gQm90aCBuZWdhdGl2ZVxuICAgICAgZWxzZSBpZiAoZXh0ZW50WzFdIDwgMCkge1xuICAgICAgICAgIHZhbHVlU3RhcnQgPSBleHRlbnRbMV07XG4gICAgICAgIH0gLy8gSWYgaXMgb25lIHBvc2l0aXZlLCBhbmQgb25lIG5lZ2F0aXZlLCBvblplcm8gc2hhbGwgYmUgdHJ1ZVxuXG4gICAgfVxuXG4gIHJldHVybiB2YWx1ZVN0YXJ0O1xufVxuXG5mdW5jdGlvbiBnZXRTdGFja2VkT25Qb2ludChkYXRhQ29vcmRJbmZvLCBjb29yZFN5cywgZGF0YSwgaWR4KSB7XG4gIHZhciB2YWx1ZSA9IE5hTjtcblxuICBpZiAoZGF0YUNvb3JkSW5mby5zdGFja2VkKSB7XG4gICAgdmFsdWUgPSBkYXRhLmdldChkYXRhLmdldENhbGN1bGF0aW9uSW5mbygnc3RhY2tlZE92ZXJEaW1lbnNpb24nKSwgaWR4KTtcbiAgfVxuXG4gIGlmIChpc05hTih2YWx1ZSkpIHtcbiAgICB2YWx1ZSA9IGRhdGFDb29yZEluZm8udmFsdWVTdGFydDtcbiAgfVxuXG4gIHZhciBiYXNlRGF0YU9mZnNldCA9IGRhdGFDb29yZEluZm8uYmFzZURhdGFPZmZzZXQ7XG4gIHZhciBzdGFja2VkRGF0YSA9IFtdO1xuICBzdGFja2VkRGF0YVtiYXNlRGF0YU9mZnNldF0gPSBkYXRhLmdldChkYXRhQ29vcmRJbmZvLmJhc2VEaW0sIGlkeCk7XG4gIHN0YWNrZWREYXRhWzEgLSBiYXNlRGF0YU9mZnNldF0gPSB2YWx1ZTtcbiAgcmV0dXJuIGNvb3JkU3lzLmRhdGFUb1BvaW50KHN0YWNrZWREYXRhKTtcbn1cblxuZXhwb3J0cy5wcmVwYXJlRGF0YUNvb3JkSW5mbyA9IHByZXBhcmVEYXRhQ29vcmRJbmZvO1xuZXhwb3J0cy5nZXRTdGFja2VkT25Qb2ludCA9IGdldFN0YWNrZWRPblBvaW50OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///167\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar ComponentModel = __webpack_require__(72);\\n\\nvar axisModelCreator = __webpack_require__(269);\\n\\nvar axisModelCommonMixin = __webpack_require__(164);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar AxisModel = ComponentModel.extend({\\n  type: 'cartesian2dAxis',\\n\\n  /**\\n   * @type {module:echarts/coord/cartesian/Axis2D}\\n   */\\n  axis: null,\\n\\n  /**\\n   * @override\\n   */\\n  init: function () {\\n    AxisModel.superApply(this, 'init', arguments);\\n    this.resetRange();\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  mergeOption: function () {\\n    AxisModel.superApply(this, 'mergeOption', arguments);\\n    this.resetRange();\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  restoreData: function () {\\n    AxisModel.superApply(this, 'restoreData', arguments);\\n    this.resetRange();\\n  },\\n\\n  /**\\n   * @override\\n   * @return {module:echarts/model/Component}\\n   */\\n  getCoordSysModel: function () {\\n    return this.ecModel.queryComponents({\\n      mainType: 'grid',\\n      index: this.option.gridIndex,\\n      id: this.option.gridId\\n    })[0];\\n  }\\n});\\n\\nfunction getAxisType(axisDim, option) {\\n  // Default axis with data is category axis\\n  return option.type || (option.data ? 'category' : 'value');\\n}\\n\\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\\nvar extraOption = {\\n  // gridIndex: 0,\\n  // gridId: '',\\n  // Offset is for multiple axis on the same position\\n  offset: 0\\n};\\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\\nvar _default = AxisModel;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvY2FydGVzaWFuL0F4aXNNb2RlbC5qcz80OGM3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDLHFCQUFxQixtQkFBTyxDQUFDLEVBQXVCOztBQUVwRCx1QkFBdUIsbUJBQU8sQ0FBQyxHQUFxQjs7QUFFcEQsMkJBQTJCLG1CQUFPLENBQUMsR0FBeUI7O0FBRTVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE2OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIENvbXBvbmVudE1vZGVsID0gcmVxdWlyZShcIi4uLy4uL21vZGVsL0NvbXBvbmVudFwiKTtcblxudmFyIGF4aXNNb2RlbENyZWF0b3IgPSByZXF1aXJlKFwiLi4vYXhpc01vZGVsQ3JlYXRvclwiKTtcblxudmFyIGF4aXNNb2RlbENvbW1vbk1peGluID0gcmVxdWlyZShcIi4uL2F4aXNNb2RlbENvbW1vbk1peGluXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG52YXIgQXhpc01vZGVsID0gQ29tcG9uZW50TW9kZWwuZXh0ZW5kKHtcbiAgdHlwZTogJ2NhcnRlc2lhbjJkQXhpcycsXG5cbiAgLyoqXG4gICAqIEB0eXBlIHttb2R1bGU6ZWNoYXJ0cy9jb29yZC9jYXJ0ZXNpYW4vQXhpczJEfVxuICAgKi9cbiAgYXhpczogbnVsbCxcblxuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgQXhpc01vZGVsLnN1cGVyQXBwbHkodGhpcywgJ2luaXQnLCBhcmd1bWVudHMpO1xuICAgIHRoaXMucmVzZXRSYW5nZSgpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAb3ZlcnJpZGVcbiAgICovXG4gIG1lcmdlT3B0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgQXhpc01vZGVsLnN1cGVyQXBwbHkodGhpcywgJ21lcmdlT3B0aW9uJywgYXJndW1lbnRzKTtcbiAgICB0aGlzLnJlc2V0UmFuZ2UoKTtcbiAgfSxcblxuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICByZXN0b3JlRGF0YTogZnVuY3Rpb24gKCkge1xuICAgIEF4aXNNb2RlbC5zdXBlckFwcGx5KHRoaXMsICdyZXN0b3JlRGF0YScsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy5yZXNldFJhbmdlKCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKiBAcmV0dXJuIHttb2R1bGU6ZWNoYXJ0cy9tb2RlbC9Db21wb25lbnR9XG4gICAqL1xuICBnZXRDb29yZFN5c01vZGVsOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWNNb2RlbC5xdWVyeUNvbXBvbmVudHMoe1xuICAgICAgbWFpblR5cGU6ICdncmlkJyxcbiAgICAgIGluZGV4OiB0aGlzLm9wdGlvbi5ncmlkSW5kZXgsXG4gICAgICBpZDogdGhpcy5vcHRpb24uZ3JpZElkXG4gICAgfSlbMF07XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBnZXRBeGlzVHlwZShheGlzRGltLCBvcHRpb24pIHtcbiAgLy8gRGVmYXVsdCBheGlzIHdpdGggZGF0YSBpcyBjYXRlZ29yeSBheGlzXG4gIHJldHVybiBvcHRpb24udHlwZSB8fCAob3B0aW9uLmRhdGEgPyAnY2F0ZWdvcnknIDogJ3ZhbHVlJyk7XG59XG5cbnpyVXRpbC5tZXJnZShBeGlzTW9kZWwucHJvdG90eXBlLCBheGlzTW9kZWxDb21tb25NaXhpbik7XG52YXIgZXh0cmFPcHRpb24gPSB7XG4gIC8vIGdyaWRJbmRleDogMCxcbiAgLy8gZ3JpZElkOiAnJyxcbiAgLy8gT2Zmc2V0IGlzIGZvciBtdWx0aXBsZSBheGlzIG9uIHRoZSBzYW1lIHBvc2l0aW9uXG4gIG9mZnNldDogMFxufTtcbmF4aXNNb2RlbENyZWF0b3IoJ3gnLCBBeGlzTW9kZWwsIGdldEF4aXNUeXBlLCBleHRyYU9wdGlvbik7XG5heGlzTW9kZWxDcmVhdG9yKCd5JywgQXhpc01vZGVsLCBnZXRBeGlzVHlwZSwgZXh0cmFPcHRpb24pO1xudmFyIF9kZWZhdWx0ID0gQXhpc01vZGVsO1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///168\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar retrieve = _util.retrieve;\\nvar defaults = _util.defaults;\\nvar extend = _util.extend;\\nvar each = _util.each;\\n\\nvar formatUtil = __webpack_require__(69);\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar Model = __webpack_require__(70);\\n\\nvar _number = __webpack_require__(65);\\n\\nvar isRadianAroundZero = _number.isRadianAroundZero;\\nvar remRadian = _number.remRadian;\\n\\nvar _symbol = __webpack_require__(113);\\n\\nvar createSymbol = _symbol.createSymbol;\\n\\nvar matrixUtil = __webpack_require__(74);\\n\\nvar _vector = __webpack_require__(62);\\n\\nvar v2ApplyTransform = _vector.applyTransform;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar PI = Math.PI;\\n\\nfunction makeAxisEventDataBase(axisModel) {\\n  var eventData = {\\n    componentType: axisModel.mainType,\\n    componentIndex: axisModel.componentIndex\\n  };\\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\\n  return eventData;\\n}\\n/**\\n * A final axis is translated and rotated from a \\\"standard axis\\\".\\n * So opt.position and opt.rotation is required.\\n *\\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\\n * for example: (0, 0) ------------\\x3e (0, 50)\\n *\\n * nameDirection or tickDirection or labelDirection is 1 means tick\\n * or label is below the standard axis, whereas is -1 means above\\n * the standard axis. labelOffset means offset between label and axis,\\n * which is useful when 'onZero', where axisLabel is in the grid and\\n * label in outside grid.\\n *\\n * Tips: like always,\\n * positive rotation represents anticlockwise, and negative rotation\\n * represents clockwise.\\n * The direction of position coordinate is the same as the direction\\n * of screen coordinate.\\n *\\n * Do not need to consider axis 'inverse', which is auto processed by\\n * axis extent.\\n *\\n * @param {module:zrender/container/Group} group\\n * @param {Object} axisModel\\n * @param {Object} opt Standard axis parameters.\\n * @param {Array.<number>} opt.position [x, y]\\n * @param {number} opt.rotation by radian\\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\\n * @param {number} [opt.tickDirection=1] 1 or -1\\n * @param {number} [opt.labelDirection=1] 1 or -1\\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\\n * @param {string} [opt.axisLabelShow] default get from axisModel.\\n * @param {string} [opt.axisName] default get from axisModel.\\n * @param {number} [opt.axisNameAvailableWidth]\\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\\n * @param {number} [opt.nameTruncateMaxWidth]\\n */\\n\\n\\nvar AxisBuilder = function (axisModel, opt) {\\n  /**\\n   * @readOnly\\n   */\\n  this.opt = opt;\\n  /**\\n   * @readOnly\\n   */\\n\\n  this.axisModel = axisModel; // Default value\\n\\n  defaults(opt, {\\n    labelOffset: 0,\\n    nameDirection: 1,\\n    tickDirection: 1,\\n    labelDirection: 1,\\n    silent: true\\n  });\\n  /**\\n   * @readOnly\\n   */\\n\\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\\n\\n  var dumbGroup = new graphic.Group({\\n    position: opt.position.slice(),\\n    rotation: opt.rotation\\n  }); // this.group.add(dumbGroup);\\n  // this._dumbGroup = dumbGroup;\\n\\n  dumbGroup.updateTransform();\\n  this._transform = dumbGroup.transform;\\n  this._dumbGroup = dumbGroup;\\n};\\n\\nAxisBuilder.prototype = {\\n  constructor: AxisBuilder,\\n  hasBuilder: function (name) {\\n    return !!builders[name];\\n  },\\n  add: function (name) {\\n    builders[name].call(this);\\n  },\\n  getGroup: function () {\\n    return this.group;\\n  }\\n};\\nvar builders = {\\n  /**\\n   * @private\\n   */\\n  axisLine: function () {\\n    var opt = this.opt;\\n    var axisModel = this.axisModel;\\n\\n    if (!axisModel.get('axisLine.show')) {\\n      return;\\n    }\\n\\n    var extent = this.axisModel.axis.getExtent();\\n    var matrix = this._transform;\\n    var pt1 = [extent[0], 0];\\n    var pt2 = [extent[1], 0];\\n\\n    if (matrix) {\\n      v2ApplyTransform(pt1, pt1, matrix);\\n      v2ApplyTransform(pt2, pt2, matrix);\\n    }\\n\\n    var lineStyle = extend({\\n      lineCap: 'round'\\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\\n      // Id for animation\\n      anid: 'line',\\n      shape: {\\n        x1: pt1[0],\\n        y1: pt1[1],\\n        x2: pt2[0],\\n        y2: pt2[1]\\n      },\\n      style: lineStyle,\\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\\n      silent: true,\\n      z2: 1\\n    })));\\n    var arrows = axisModel.get('axisLine.symbol');\\n    var arrowSize = axisModel.get('axisLine.symbolSize');\\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\\n\\n    if (typeof arrowOffset === 'number') {\\n      arrowOffset = [arrowOffset, arrowOffset];\\n    }\\n\\n    if (arrows != null) {\\n      if (typeof arrows === 'string') {\\n        // Use the same arrow for start and end point\\n        arrows = [arrows, arrows];\\n      }\\n\\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\\n        // Use the same size for width and height\\n        arrowSize = [arrowSize, arrowSize];\\n      }\\n\\n      var symbolWidth = arrowSize[0];\\n      var symbolHeight = arrowSize[1];\\n      each([{\\n        rotate: opt.rotation + Math.PI / 2,\\n        offset: arrowOffset[0],\\n        r: 0\\n      }, {\\n        rotate: opt.rotation - Math.PI / 2,\\n        offset: arrowOffset[1],\\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\\n      }], function (point, index) {\\n        if (arrows[index] !== 'none' && arrows[index] != null) {\\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\\n\\n          var r = point.r + point.offset;\\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\\n          symbol.attr({\\n            rotation: point.rotate,\\n            position: pos,\\n            silent: true\\n          });\\n          this.group.add(symbol);\\n        }\\n      }, this);\\n    }\\n  },\\n\\n  /**\\n   * @private\\n   */\\n  axisTickLabel: function () {\\n    var axisModel = this.axisModel;\\n    var opt = this.opt;\\n    var tickEls = buildAxisTick(this, axisModel, opt);\\n    var labelEls = buildAxisLabel(this, axisModel, opt);\\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\\n  },\\n\\n  /**\\n   * @private\\n   */\\n  axisName: function () {\\n    var opt = this.opt;\\n    var axisModel = this.axisModel;\\n    var name = retrieve(opt.axisName, axisModel.get('name'));\\n\\n    if (!name) {\\n      return;\\n    }\\n\\n    var nameLocation = axisModel.get('nameLocation');\\n    var nameDirection = opt.nameDirection;\\n    var textStyleModel = axisModel.getModel('nameTextStyle');\\n    var gap = axisModel.get('nameGap') || 0;\\n    var extent = this.axisModel.axis.getExtent();\\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\\n    // Reuse labelOffset.\\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\\n    var labelLayout;\\n    var nameRotation = axisModel.get('nameRotate');\\n\\n    if (nameRotation != null) {\\n      nameRotation = nameRotation * PI / 180; // To radian.\\n    }\\n\\n    var axisNameAvailableWidth;\\n\\n    if (isNameLocationCenter(nameLocation)) {\\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\\n      nameDirection);\\n    } else {\\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\\n\\n      if (axisNameAvailableWidth != null) {\\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\\n      }\\n    }\\n\\n    var textFont = textStyleModel.getFont();\\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\\n    var ellipsis = truncateOpt.ellipsis;\\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\\n    // truncate rich text? (consider performance)\\n\\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\\n      minChar: 2,\\n      placeholder: truncateOpt.placeholder\\n    }) : name;\\n    var tooltipOpt = axisModel.get('tooltip', true);\\n    var mainType = axisModel.mainType;\\n    var formatterParams = {\\n      componentType: mainType,\\n      name: name,\\n      $vars: ['name']\\n    };\\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\\n    var textEl = new graphic.Text({\\n      // Id for animation\\n      anid: 'name',\\n      __fullText: name,\\n      __truncatedText: truncatedText,\\n      position: pos,\\n      rotation: labelLayout.rotation,\\n      silent: isSilent(axisModel),\\n      z2: 1,\\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\\n        content: name,\\n        formatter: function () {\\n          return name;\\n        },\\n        formatterParams: formatterParams\\n      }, tooltipOpt) : null\\n    });\\n    graphic.setTextStyle(textEl.style, textStyleModel, {\\n      text: truncatedText,\\n      textFont: textFont,\\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\\n      textAlign: labelLayout.textAlign,\\n      textVerticalAlign: labelLayout.textVerticalAlign\\n    });\\n\\n    if (axisModel.get('triggerEvent')) {\\n      textEl.eventData = makeAxisEventDataBase(axisModel);\\n      textEl.eventData.targetType = 'axisName';\\n      textEl.eventData.name = name;\\n    } // FIXME\\n\\n\\n    this._dumbGroup.add(textEl);\\n\\n    textEl.updateTransform();\\n    this.group.add(textEl);\\n    textEl.decomposeTransform();\\n  }\\n};\\n/**\\n * @public\\n * @static\\n * @param {Object} opt\\n * @param {number} axisRotation in radian\\n * @param {number} textRotation in radian\\n * @param {number} direction\\n * @return {Object} {\\n *  rotation, // according to axis\\n *  textAlign,\\n *  textVerticalAlign\\n * }\\n */\\n\\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\\n  var rotationDiff = remRadian(textRotation - axisRotation);\\n  var textAlign;\\n  var textVerticalAlign;\\n\\n  if (isRadianAroundZero(rotationDiff)) {\\n    // Label is parallel with axis line.\\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\\n    textAlign = 'center';\\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\\n    // Label is inverse parallel with axis line.\\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\\n    textAlign = 'center';\\n  } else {\\n    textVerticalAlign = 'middle';\\n\\n    if (rotationDiff > 0 && rotationDiff < PI) {\\n      textAlign = direction > 0 ? 'right' : 'left';\\n    } else {\\n      textAlign = direction > 0 ? 'left' : 'right';\\n    }\\n  }\\n\\n  return {\\n    rotation: rotationDiff,\\n    textAlign: textAlign,\\n    textVerticalAlign: textVerticalAlign\\n  };\\n};\\n\\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\\n  var rotationDiff = remRadian(textRotate - opt.rotation);\\n  var textAlign;\\n  var textVerticalAlign;\\n  var inverse = extent[0] > extent[1];\\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\\n\\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\\n    textAlign = 'center';\\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\\n    textAlign = 'center';\\n  } else {\\n    textVerticalAlign = 'middle';\\n\\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\\n      textAlign = onLeft ? 'left' : 'right';\\n    } else {\\n      textAlign = onLeft ? 'right' : 'left';\\n    }\\n  }\\n\\n  return {\\n    rotation: rotationDiff,\\n    textAlign: textAlign,\\n    textVerticalAlign: textVerticalAlign\\n  };\\n}\\n\\nfunction isSilent(axisModel) {\\n  var tooltipOpt = axisModel.get('tooltip');\\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\\n}\\n\\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\\n  // If min or max are user set, we need to check\\n  // If the tick on min(max) are overlap on their neighbour tick\\n  // If they are overlapped, we need to hide the min(max) tick label\\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\\n  // Have not consider onBand yet, where tick els is more than label els.\\n\\n  labelEls = labelEls || [];\\n  tickEls = tickEls || [];\\n  var firstLabel = labelEls[0];\\n  var nextLabel = labelEls[1];\\n  var lastLabel = labelEls[labelEls.length - 1];\\n  var prevLabel = labelEls[labelEls.length - 2];\\n  var firstTick = tickEls[0];\\n  var nextTick = tickEls[1];\\n  var lastTick = tickEls[tickEls.length - 1];\\n  var prevTick = tickEls[tickEls.length - 2];\\n\\n  if (showMinLabel === false) {\\n    ignoreEl(firstLabel);\\n    ignoreEl(firstTick);\\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\\n    if (showMinLabel) {\\n      ignoreEl(nextLabel);\\n      ignoreEl(nextTick);\\n    } else {\\n      ignoreEl(firstLabel);\\n      ignoreEl(firstTick);\\n    }\\n  }\\n\\n  if (showMaxLabel === false) {\\n    ignoreEl(lastLabel);\\n    ignoreEl(lastTick);\\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\\n    if (showMaxLabel) {\\n      ignoreEl(prevLabel);\\n      ignoreEl(prevTick);\\n    } else {\\n      ignoreEl(lastLabel);\\n      ignoreEl(lastTick);\\n    }\\n  }\\n}\\n\\nfunction ignoreEl(el) {\\n  el && (el.ignore = true);\\n}\\n\\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\\n  // current and next has the same rotation.\\n  var firstRect = current && current.getBoundingRect().clone();\\n  var nextRect = next && next.getBoundingRect().clone();\\n\\n  if (!firstRect || !nextRect) {\\n    return;\\n  } // When checking intersect of two rotated labels, we use mRotationBack\\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\\n\\n\\n  var mRotationBack = matrixUtil.identity([]);\\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\\n  return firstRect.intersect(nextRect);\\n}\\n\\nfunction isNameLocationCenter(nameLocation) {\\n  return nameLocation === 'middle' || nameLocation === 'center';\\n}\\n\\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\\n  var axis = axisModel.axis;\\n\\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\\n    return;\\n  }\\n\\n  var tickModel = axisModel.getModel('axisTick');\\n  var lineStyleModel = tickModel.getModel('lineStyle');\\n  var tickLen = tickModel.get('length');\\n  var ticksCoords = axis.getTicksCoords();\\n  var pt1 = [];\\n  var pt2 = [];\\n  var matrix = axisBuilder._transform;\\n  var tickEls = [];\\n\\n  for (var i = 0; i < ticksCoords.length; i++) {\\n    var tickCoord = ticksCoords[i].coord;\\n    pt1[0] = tickCoord;\\n    pt1[1] = 0;\\n    pt2[0] = tickCoord;\\n    pt2[1] = opt.tickDirection * tickLen;\\n\\n    if (matrix) {\\n      v2ApplyTransform(pt1, pt1, matrix);\\n      v2ApplyTransform(pt2, pt2, matrix);\\n    } // Tick line, Not use group transform to have better line draw\\n\\n\\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\\n      // Id for animation\\n      anid: 'tick_' + ticksCoords[i].tickValue,\\n      shape: {\\n        x1: pt1[0],\\n        y1: pt1[1],\\n        x2: pt2[0],\\n        y2: pt2[1]\\n      },\\n      style: defaults(lineStyleModel.getLineStyle(), {\\n        stroke: axisModel.get('axisLine.lineStyle.color')\\n      }),\\n      z2: 2,\\n      silent: true\\n    }));\\n    axisBuilder.group.add(tickEl);\\n    tickEls.push(tickEl);\\n  }\\n\\n  return tickEls;\\n}\\n\\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\\n  var axis = axisModel.axis;\\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\\n\\n  if (!show || axis.scale.isBlank()) {\\n    return;\\n  }\\n\\n  var labelModel = axisModel.getModel('axisLabel');\\n  var labelMargin = labelModel.get('margin');\\n  var labels = axis.getViewLabels(); // Special label rotate.\\n\\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\\n  var rawCategoryData = axisModel.getCategories(true);\\n  var labelEls = [];\\n  var silent = isSilent(axisModel);\\n  var triggerEvent = axisModel.get('triggerEvent');\\n  each(labels, function (labelItem, index) {\\n    var tickValue = labelItem.tickValue;\\n    var formattedLabel = labelItem.formattedLabel;\\n    var rawLabel = labelItem.rawLabel;\\n    var itemLabelModel = labelModel;\\n\\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\\n    }\\n\\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\\n    var tickCoord = axis.dataToCoord(tickValue);\\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\\n    var textEl = new graphic.Text({\\n      // Id for animation\\n      anid: 'label_' + tickValue,\\n      position: pos,\\n      rotation: labelLayout.rotation,\\n      silent: silent,\\n      z2: 10\\n    });\\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\\n      text: formattedLabel,\\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\\n      // index of axis.data. So tick should not be exposed to user\\n      // in category axis.\\n      // (2) Compatible with previous version, which always use formatted label as\\n      // input. But in interval scale the formatted label is like '223,445', which\\n      // maked user repalce ','. So we modify it to return original val but remain\\n      // it as 'string' to avoid error in replacing.\\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\\n    }); // Pack data for mouse event\\n\\n    if (triggerEvent) {\\n      textEl.eventData = makeAxisEventDataBase(axisModel);\\n      textEl.eventData.targetType = 'axisLabel';\\n      textEl.eventData.value = rawLabel;\\n    } // FIXME\\n\\n\\n    axisBuilder._dumbGroup.add(textEl);\\n\\n    textEl.updateTransform();\\n    labelEls.push(textEl);\\n    axisBuilder.group.add(textEl);\\n    textEl.decomposeTransform();\\n  });\\n  return labelEls;\\n}\\n\\nvar _default = AxisBuilder;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///169\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar echarts = __webpack_require__(68);\\n\\nvar axisPointerModelHelper = __webpack_require__(93);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Base class of AxisView.\\n */\\nvar AxisView = echarts.extendComponentView({\\n  type: 'axis',\\n\\n  /**\\n   * @private\\n   */\\n  _axisPointer: null,\\n\\n  /**\\n   * @protected\\n   * @type {string}\\n   */\\n  axisPointerClass: null,\\n\\n  /**\\n   * @override\\n   */\\n  render: function (axisModel, ecModel, api, payload) {\\n    // FIXME\\n    // This process should proformed after coordinate systems updated\\n    // (axis scale updated), and should be performed each time update.\\n    // So put it here temporarily, although it is not appropriate to\\n    // put a model-writing procedure in `view`.\\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\\n    AxisView.superApply(this, 'render', arguments);\\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\\n  },\\n\\n  /**\\n   * Action handler.\\n   * @public\\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\\n   * @param {module:echarts/model/Global} ecModel\\n   * @param {module:echarts/ExtensionAPI} api\\n   * @param {Object} payload\\n   */\\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  remove: function (ecModel, api) {\\n    var axisPointer = this._axisPointer;\\n    axisPointer && axisPointer.remove(api);\\n    AxisView.superApply(this, 'remove', arguments);\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  dispose: function (ecModel, api) {\\n    disposeAxisPointer(this, api);\\n    AxisView.superApply(this, 'dispose', arguments);\\n  }\\n});\\n\\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\\n\\n  if (!Clazz) {\\n    return;\\n  }\\n\\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\\n}\\n\\nfunction disposeAxisPointer(axisView, ecModel, api) {\\n  var axisPointer = axisView._axisPointer;\\n  axisPointer && axisPointer.dispose(ecModel, api);\\n  axisView._axisPointer = null;\\n}\\n\\nvar axisPointerClazz = [];\\n\\nAxisView.registerAxisPointerClass = function (type, clazz) {\\n  axisPointerClazz[type] = clazz;\\n};\\n\\nAxisView.getAxisPointerClass = function (type) {\\n  return type && axisPointerClazz[type];\\n};\\n\\nvar _default = AxisView;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2F4aXMvQXhpc1ZpZXcuanM/NjY3OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxtQkFBTyxDQUFDLEVBQWM7O0FBRXBDOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxFQUFlOztBQUVyQyw2QkFBNkIsbUJBQU8sQ0FBQyxFQUE0Qjs7QUFFakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlDQUF5QztBQUN0RCxhQUFhLDRCQUE0QjtBQUN6QyxhQUFhLDRCQUE0QjtBQUN6QyxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxNzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIF9jb25maWcgPSByZXF1aXJlKFwiLi4vLi4vY29uZmlnXCIpO1xuXG52YXIgX19ERVZfXyA9IF9jb25maWcuX19ERVZfXztcblxudmFyIGVjaGFydHMgPSByZXF1aXJlKFwiLi4vLi4vZWNoYXJ0c1wiKTtcblxudmFyIGF4aXNQb2ludGVyTW9kZWxIZWxwZXIgPSByZXF1aXJlKFwiLi4vYXhpc1BvaW50ZXIvbW9kZWxIZWxwZXJcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyoqXG4gKiBCYXNlIGNsYXNzIG9mIEF4aXNWaWV3LlxuICovXG52YXIgQXhpc1ZpZXcgPSBlY2hhcnRzLmV4dGVuZENvbXBvbmVudFZpZXcoe1xuICB0eXBlOiAnYXhpcycsXG5cbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfYXhpc1BvaW50ZXI6IG51bGwsXG5cbiAgLyoqXG4gICAqIEBwcm90ZWN0ZWRcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIGF4aXNQb2ludGVyQ2xhc3M6IG51bGwsXG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgcmVuZGVyOiBmdW5jdGlvbiAoYXhpc01vZGVsLCBlY01vZGVsLCBhcGksIHBheWxvYWQpIHtcbiAgICAvLyBGSVhNRVxuICAgIC8vIFRoaXMgcHJvY2VzcyBzaG91bGQgcHJvZm9ybWVkIGFmdGVyIGNvb3JkaW5hdGUgc3lzdGVtcyB1cGRhdGVkXG4gICAgLy8gKGF4aXMgc2NhbGUgdXBkYXRlZCksIGFuZCBzaG91bGQgYmUgcGVyZm9ybWVkIGVhY2ggdGltZSB1cGRhdGUuXG4gICAgLy8gU28gcHV0IGl0IGhlcmUgdGVtcG9yYXJpbHksIGFsdGhvdWdoIGl0IGlzIG5vdCBhcHByb3ByaWF0ZSB0b1xuICAgIC8vIHB1dCBhIG1vZGVsLXdyaXRpbmcgcHJvY2VkdXJlIGluIGB2aWV3YC5cbiAgICB0aGlzLmF4aXNQb2ludGVyQ2xhc3MgJiYgYXhpc1BvaW50ZXJNb2RlbEhlbHBlci5maXhWYWx1ZShheGlzTW9kZWwpO1xuICAgIEF4aXNWaWV3LnN1cGVyQXBwbHkodGhpcywgJ3JlbmRlcicsIGFyZ3VtZW50cyk7XG4gICAgdXBkYXRlQXhpc1BvaW50ZXIodGhpcywgYXhpc01vZGVsLCBlY01vZGVsLCBhcGksIHBheWxvYWQsIHRydWUpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBBY3Rpb24gaGFuZGxlci5cbiAgICogQHB1YmxpY1xuICAgKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2Nvb3JkL2NhcnRlc2lhbi9BeGlzTW9kZWx9IGF4aXNNb2RlbFxuICAgKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL21vZGVsL0dsb2JhbH0gZWNNb2RlbFxuICAgKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL0V4dGVuc2lvbkFQSX0gYXBpXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwYXlsb2FkXG4gICAqL1xuICB1cGRhdGVBeGlzUG9pbnRlcjogZnVuY3Rpb24gKGF4aXNNb2RlbCwgZWNNb2RlbCwgYXBpLCBwYXlsb2FkLCBmb3JjZSkge1xuICAgIHVwZGF0ZUF4aXNQb2ludGVyKHRoaXMsIGF4aXNNb2RlbCwgZWNNb2RlbCwgYXBpLCBwYXlsb2FkLCBmYWxzZSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgcmVtb3ZlOiBmdW5jdGlvbiAoZWNNb2RlbCwgYXBpKSB7XG4gICAgdmFyIGF4aXNQb2ludGVyID0gdGhpcy5fYXhpc1BvaW50ZXI7XG4gICAgYXhpc1BvaW50ZXIgJiYgYXhpc1BvaW50ZXIucmVtb3ZlKGFwaSk7XG4gICAgQXhpc1ZpZXcuc3VwZXJBcHBseSh0aGlzLCAncmVtb3ZlJywgYXJndW1lbnRzKTtcbiAgfSxcblxuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICBkaXNwb3NlOiBmdW5jdGlvbiAoZWNNb2RlbCwgYXBpKSB7XG4gICAgZGlzcG9zZUF4aXNQb2ludGVyKHRoaXMsIGFwaSk7XG4gICAgQXhpc1ZpZXcuc3VwZXJBcHBseSh0aGlzLCAnZGlzcG9zZScsIGFyZ3VtZW50cyk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiB1cGRhdGVBeGlzUG9pbnRlcihheGlzVmlldywgYXhpc01vZGVsLCBlY01vZGVsLCBhcGksIHBheWxvYWQsIGZvcmNlUmVuZGVyKSB7XG4gIHZhciBDbGF6eiA9IEF4aXNWaWV3LmdldEF4aXNQb2ludGVyQ2xhc3MoYXhpc1ZpZXcuYXhpc1BvaW50ZXJDbGFzcyk7XG5cbiAgaWYgKCFDbGF6eikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBheGlzUG9pbnRlck1vZGVsID0gYXhpc1BvaW50ZXJNb2RlbEhlbHBlci5nZXRBeGlzUG9pbnRlck1vZGVsKGF4aXNNb2RlbCk7XG4gIGF4aXNQb2ludGVyTW9kZWwgPyAoYXhpc1ZpZXcuX2F4aXNQb2ludGVyIHx8IChheGlzVmlldy5fYXhpc1BvaW50ZXIgPSBuZXcgQ2xhenooKSkpLnJlbmRlcihheGlzTW9kZWwsIGF4aXNQb2ludGVyTW9kZWwsIGFwaSwgZm9yY2VSZW5kZXIpIDogZGlzcG9zZUF4aXNQb2ludGVyKGF4aXNWaWV3LCBhcGkpO1xufVxuXG5mdW5jdGlvbiBkaXNwb3NlQXhpc1BvaW50ZXIoYXhpc1ZpZXcsIGVjTW9kZWwsIGFwaSkge1xuICB2YXIgYXhpc1BvaW50ZXIgPSBheGlzVmlldy5fYXhpc1BvaW50ZXI7XG4gIGF4aXNQb2ludGVyICYmIGF4aXNQb2ludGVyLmRpc3Bvc2UoZWNNb2RlbCwgYXBpKTtcbiAgYXhpc1ZpZXcuX2F4aXNQb2ludGVyID0gbnVsbDtcbn1cblxudmFyIGF4aXNQb2ludGVyQ2xhenogPSBbXTtcblxuQXhpc1ZpZXcucmVnaXN0ZXJBeGlzUG9pbnRlckNsYXNzID0gZnVuY3Rpb24gKHR5cGUsIGNsYXp6KSB7XG4gIGF4aXNQb2ludGVyQ2xhenpbdHlwZV0gPSBjbGF6ejtcbn07XG5cbkF4aXNWaWV3LmdldEF4aXNQb2ludGVyQ2xhc3MgPSBmdW5jdGlvbiAodHlwZSkge1xuICByZXR1cm4gdHlwZSAmJiBheGlzUG9pbnRlckNsYXp6W3R5cGVdO1xufTtcblxudmFyIF9kZWZhdWx0ID0gQXhpc1ZpZXc7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///170\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Can only be called after coordinate system creation stage.\\n * (Can be called before coordinate system update stage).\\n *\\n * @param {Object} opt {labelInside}\\n * @return {Object} {\\n *  position, rotation, labelDirection, labelOffset,\\n *  tickDirection, labelRotate, z2\\n * }\\n */\\nfunction layout(gridModel, axisModel, opt) {\\n  opt = opt || {};\\n  var grid = gridModel.coordinateSystem;\\n  var axis = axisModel.axis;\\n  var layout = {};\\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\\n  var rawAxisPosition = axis.position;\\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\\n  var axisDim = axis.dim;\\n  var rect = grid.getRect();\\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\\n  var idx = {\\n    left: 0,\\n    right: 1,\\n    top: 0,\\n    bottom: 1,\\n    onZero: 2\\n  };\\n  var axisOffset = axisModel.get('offset') || 0;\\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\\n\\n  if (otherAxisOnZeroOf) {\\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\\n  } // Axis position\\n\\n\\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\\n\\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\\n\\n  var dirMap = {\\n    top: -1,\\n    bottom: 1,\\n    left: -1,\\n    right: 1\\n  };\\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\\n\\n  if (axisModel.get('axisTick.inside')) {\\n    layout.tickDirection = -layout.tickDirection;\\n  }\\n\\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\\n    layout.labelDirection = -layout.labelDirection;\\n  } // Special label rotation\\n\\n\\n  var labelRotate = axisModel.get('axisLabel.rotate');\\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\\n\\n  layout.z2 = 1;\\n  return layout;\\n}\\n\\nexports.layout = layout;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvY2FydGVzaWFuL2NhcnRlc2lhbkF4aXNIZWxwZXIuanM/MDE1NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLEVBQXVCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTyxNQUFNO0FBQ3hCLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0gsaUpBQWlKOztBQUVqSiw0REFBNEQ7O0FBRTVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBLDJFQUEyRTs7QUFFM0U7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjE3MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG4vKipcbiAqIENhbiBvbmx5IGJlIGNhbGxlZCBhZnRlciBjb29yZGluYXRlIHN5c3RlbSBjcmVhdGlvbiBzdGFnZS5cbiAqIChDYW4gYmUgY2FsbGVkIGJlZm9yZSBjb29yZGluYXRlIHN5c3RlbSB1cGRhdGUgc3RhZ2UpLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHQge2xhYmVsSW5zaWRlfVxuICogQHJldHVybiB7T2JqZWN0fSB7XG4gKiAgcG9zaXRpb24sIHJvdGF0aW9uLCBsYWJlbERpcmVjdGlvbiwgbGFiZWxPZmZzZXQsXG4gKiAgdGlja0RpcmVjdGlvbiwgbGFiZWxSb3RhdGUsIHoyXG4gKiB9XG4gKi9cbmZ1bmN0aW9uIGxheW91dChncmlkTW9kZWwsIGF4aXNNb2RlbCwgb3B0KSB7XG4gIG9wdCA9IG9wdCB8fCB7fTtcbiAgdmFyIGdyaWQgPSBncmlkTW9kZWwuY29vcmRpbmF0ZVN5c3RlbTtcbiAgdmFyIGF4aXMgPSBheGlzTW9kZWwuYXhpcztcbiAgdmFyIGxheW91dCA9IHt9O1xuICB2YXIgb3RoZXJBeGlzT25aZXJvT2YgPSBheGlzLmdldEF4ZXNPblplcm9PZigpWzBdO1xuICB2YXIgcmF3QXhpc1Bvc2l0aW9uID0gYXhpcy5wb3NpdGlvbjtcbiAgdmFyIGF4aXNQb3NpdGlvbiA9IG90aGVyQXhpc09uWmVyb09mID8gJ29uWmVybycgOiByYXdBeGlzUG9zaXRpb247XG4gIHZhciBheGlzRGltID0gYXhpcy5kaW07XG4gIHZhciByZWN0ID0gZ3JpZC5nZXRSZWN0KCk7XG4gIHZhciByZWN0Qm91bmQgPSBbcmVjdC54LCByZWN0LnggKyByZWN0LndpZHRoLCByZWN0LnksIHJlY3QueSArIHJlY3QuaGVpZ2h0XTtcbiAgdmFyIGlkeCA9IHtcbiAgICBsZWZ0OiAwLFxuICAgIHJpZ2h0OiAxLFxuICAgIHRvcDogMCxcbiAgICBib3R0b206IDEsXG4gICAgb25aZXJvOiAyXG4gIH07XG4gIHZhciBheGlzT2Zmc2V0ID0gYXhpc01vZGVsLmdldCgnb2Zmc2V0JykgfHwgMDtcbiAgdmFyIHBvc0JvdW5kID0gYXhpc0RpbSA9PT0gJ3gnID8gW3JlY3RCb3VuZFsyXSAtIGF4aXNPZmZzZXQsIHJlY3RCb3VuZFszXSArIGF4aXNPZmZzZXRdIDogW3JlY3RCb3VuZFswXSAtIGF4aXNPZmZzZXQsIHJlY3RCb3VuZFsxXSArIGF4aXNPZmZzZXRdO1xuXG4gIGlmIChvdGhlckF4aXNPblplcm9PZikge1xuICAgIHZhciBvblplcm9Db29yZCA9IG90aGVyQXhpc09uWmVyb09mLnRvR2xvYmFsQ29vcmQob3RoZXJBeGlzT25aZXJvT2YuZGF0YVRvQ29vcmQoMCkpO1xuICAgIHBvc0JvdW5kW2lkeC5vblplcm9dID0gTWF0aC5tYXgoTWF0aC5taW4ob25aZXJvQ29vcmQsIHBvc0JvdW5kWzFdKSwgcG9zQm91bmRbMF0pO1xuICB9IC8vIEF4aXMgcG9zaXRpb25cblxuXG4gIGxheW91dC5wb3NpdGlvbiA9IFtheGlzRGltID09PSAneScgPyBwb3NCb3VuZFtpZHhbYXhpc1Bvc2l0aW9uXV0gOiByZWN0Qm91bmRbMF0sIGF4aXNEaW0gPT09ICd4JyA/IHBvc0JvdW5kW2lkeFtheGlzUG9zaXRpb25dXSA6IHJlY3RCb3VuZFszXV07IC8vIEF4aXMgcm90YXRpb25cblxuICBsYXlvdXQucm90YXRpb24gPSBNYXRoLlBJIC8gMiAqIChheGlzRGltID09PSAneCcgPyAwIDogMSk7IC8vIFRpY2sgYW5kIGxhYmVsIGRpcmVjdGlvbiwgeCB5IGlzIGF4aXNEaW1cblxuICB2YXIgZGlyTWFwID0ge1xuICAgIHRvcDogLTEsXG4gICAgYm90dG9tOiAxLFxuICAgIGxlZnQ6IC0xLFxuICAgIHJpZ2h0OiAxXG4gIH07XG4gIGxheW91dC5sYWJlbERpcmVjdGlvbiA9IGxheW91dC50aWNrRGlyZWN0aW9uID0gbGF5b3V0Lm5hbWVEaXJlY3Rpb24gPSBkaXJNYXBbcmF3QXhpc1Bvc2l0aW9uXTtcbiAgbGF5b3V0LmxhYmVsT2Zmc2V0ID0gb3RoZXJBeGlzT25aZXJvT2YgPyBwb3NCb3VuZFtpZHhbcmF3QXhpc1Bvc2l0aW9uXV0gLSBwb3NCb3VuZFtpZHgub25aZXJvXSA6IDA7XG5cbiAgaWYgKGF4aXNNb2RlbC5nZXQoJ2F4aXNUaWNrLmluc2lkZScpKSB7XG4gICAgbGF5b3V0LnRpY2tEaXJlY3Rpb24gPSAtbGF5b3V0LnRpY2tEaXJlY3Rpb247XG4gIH1cblxuICBpZiAoenJVdGlsLnJldHJpZXZlKG9wdC5sYWJlbEluc2lkZSwgYXhpc01vZGVsLmdldCgnYXhpc0xhYmVsLmluc2lkZScpKSkge1xuICAgIGxheW91dC5sYWJlbERpcmVjdGlvbiA9IC1sYXlvdXQubGFiZWxEaXJlY3Rpb247XG4gIH0gLy8gU3BlY2lhbCBsYWJlbCByb3RhdGlvblxuXG5cbiAgdmFyIGxhYmVsUm90YXRlID0gYXhpc01vZGVsLmdldCgnYXhpc0xhYmVsLnJvdGF0ZScpO1xuICBsYXlvdXQubGFiZWxSb3RhdGUgPSBheGlzUG9zaXRpb24gPT09ICd0b3AnID8gLWxhYmVsUm90YXRlIDogbGFiZWxSb3RhdGU7IC8vIE92ZXIgc3BsaXRMaW5lIGFuZCBzcGxpdEFyZWFcblxuICBsYXlvdXQuejIgPSAxO1xuICByZXR1cm4gbGF5b3V0O1xufVxuXG5leHBvcnRzLmxheW91dCA9IGxheW91dDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///171\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar modelUtil = __webpack_require__(60);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\\n * @param {module:echarts/model/Global} ecModel\\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\\n */\\nfunction _default(finder, ecModel) {\\n  var point = [];\\n  var seriesIndex = finder.seriesIndex;\\n  var seriesModel;\\n\\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\\n    return {\\n      point: []\\n    };\\n  }\\n\\n  var data = seriesModel.getData();\\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\\n\\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\\n    return {\\n      point: []\\n    };\\n  }\\n\\n  var el = data.getItemGraphicEl(dataIndex);\\n  var coordSys = seriesModel.coordinateSystem;\\n\\n  if (seriesModel.getTooltipPosition) {\\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\\n  } else if (coordSys && coordSys.dataToPoint) {\\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\\n      return data.mapDimension(dim);\\n    }), dataIndex, true)) || [];\\n  } else if (el) {\\n    // Use graphic bounding rect\\n    var rect = el.getBoundingRect().clone();\\n    rect.applyTransform(el.transform);\\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\\n  }\\n\\n  return {\\n    point: point,\\n    el: el\\n  };\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2F4aXNQb2ludGVyL2ZpbmRQb2ludEZyb21TZXJpZXMuanM/MTMzZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLEVBQXVCOztBQUU1QyxnQkFBZ0IsbUJBQU8sQ0FBQyxFQUFrQjs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLE9BQU8sa0JBQWtCO0FBQ3BDLFdBQVcsNEJBQTRCO0FBQ3ZDLFlBQVksT0FBTyxFQUFFLHVCQUF1QjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTcyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgbW9kZWxVdGlsID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvbW9kZWxcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyoqXG4gKiBAcGFyYW0ge09iamVjdH0gZmluZGVyIGNvbnRhaW5zIHtzZXJpZXNJbmRleCwgZGF0YUluZGV4LCBkYXRhSW5kZXhJbnNpZGV9XG4gKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL21vZGVsL0dsb2JhbH0gZWNNb2RlbFxuICogQHJldHVybiB7T2JqZWN0fSB7cG9pbnQ6IFt4LCB5XSwgZWw6IC4uLn0gcG9pbnQgV2lsbCBub3QgYmUgbnVsbC5cbiAqL1xuZnVuY3Rpb24gX2RlZmF1bHQoZmluZGVyLCBlY01vZGVsKSB7XG4gIHZhciBwb2ludCA9IFtdO1xuICB2YXIgc2VyaWVzSW5kZXggPSBmaW5kZXIuc2VyaWVzSW5kZXg7XG4gIHZhciBzZXJpZXNNb2RlbDtcblxuICBpZiAoc2VyaWVzSW5kZXggPT0gbnVsbCB8fCAhKHNlcmllc01vZGVsID0gZWNNb2RlbC5nZXRTZXJpZXNCeUluZGV4KHNlcmllc0luZGV4KSkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcG9pbnQ6IFtdXG4gICAgfTtcbiAgfVxuXG4gIHZhciBkYXRhID0gc2VyaWVzTW9kZWwuZ2V0RGF0YSgpO1xuICB2YXIgZGF0YUluZGV4ID0gbW9kZWxVdGlsLnF1ZXJ5RGF0YUluZGV4KGRhdGEsIGZpbmRlcik7XG5cbiAgaWYgKGRhdGFJbmRleCA9PSBudWxsIHx8IGRhdGFJbmRleCA8IDAgfHwgenJVdGlsLmlzQXJyYXkoZGF0YUluZGV4KSkge1xuICAgIHJldHVybiB7XG4gICAgICBwb2ludDogW11cbiAgICB9O1xuICB9XG5cbiAgdmFyIGVsID0gZGF0YS5nZXRJdGVtR3JhcGhpY0VsKGRhdGFJbmRleCk7XG4gIHZhciBjb29yZFN5cyA9IHNlcmllc01vZGVsLmNvb3JkaW5hdGVTeXN0ZW07XG5cbiAgaWYgKHNlcmllc01vZGVsLmdldFRvb2x0aXBQb3NpdGlvbikge1xuICAgIHBvaW50ID0gc2VyaWVzTW9kZWwuZ2V0VG9vbHRpcFBvc2l0aW9uKGRhdGFJbmRleCkgfHwgW107XG4gIH0gZWxzZSBpZiAoY29vcmRTeXMgJiYgY29vcmRTeXMuZGF0YVRvUG9pbnQpIHtcbiAgICBwb2ludCA9IGNvb3JkU3lzLmRhdGFUb1BvaW50KGRhdGEuZ2V0VmFsdWVzKHpyVXRpbC5tYXAoY29vcmRTeXMuZGltZW5zaW9ucywgZnVuY3Rpb24gKGRpbSkge1xuICAgICAgcmV0dXJuIGRhdGEubWFwRGltZW5zaW9uKGRpbSk7XG4gICAgfSksIGRhdGFJbmRleCwgdHJ1ZSkpIHx8IFtdO1xuICB9IGVsc2UgaWYgKGVsKSB7XG4gICAgLy8gVXNlIGdyYXBoaWMgYm91bmRpbmcgcmVjdFxuICAgIHZhciByZWN0ID0gZWwuZ2V0Qm91bmRpbmdSZWN0KCkuY2xvbmUoKTtcbiAgICByZWN0LmFwcGx5VHJhbnNmb3JtKGVsLnRyYW5zZm9ybSk7XG4gICAgcG9pbnQgPSBbcmVjdC54ICsgcmVjdC53aWR0aCAvIDIsIHJlY3QueSArIHJlY3QuaGVpZ2h0IC8gMl07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBvaW50OiBwb2ludCxcbiAgICBlbDogZWxcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///172\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar env = __webpack_require__(66);\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar inner = makeInner();\\nvar each = zrUtil.each;\\n/**\\n * @param {string} key\\n * @param {module:echarts/ExtensionAPI} api\\n * @param {Function} handler\\n *      param: {string} currTrigger\\n *      param: {Array.<number>} point\\n */\\n\\nfunction register(key, api, handler) {\\n  if (env.node) {\\n    return;\\n  }\\n\\n  var zr = api.getZr();\\n  inner(zr).records || (inner(zr).records = {});\\n  initGlobalListeners(zr, api);\\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\\n  record.handler = handler;\\n}\\n\\nfunction initGlobalListeners(zr, api) {\\n  if (inner(zr).initialized) {\\n    return;\\n  }\\n\\n  inner(zr).initialized = true;\\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\\n\\n  useHandler('globalout', onLeave);\\n\\n  function useHandler(eventType, cb) {\\n    zr.on(eventType, function (e) {\\n      var dis = makeDispatchAction(api);\\n      each(inner(zr).records, function (record) {\\n        record && cb(record, e, dis.dispatchAction);\\n      });\\n      dispatchTooltipFinally(dis.pendings, api);\\n    });\\n  }\\n}\\n\\nfunction dispatchTooltipFinally(pendings, api) {\\n  var showLen = pendings.showTip.length;\\n  var hideLen = pendings.hideTip.length;\\n  var actuallyPayload;\\n\\n  if (showLen) {\\n    actuallyPayload = pendings.showTip[showLen - 1];\\n  } else if (hideLen) {\\n    actuallyPayload = pendings.hideTip[hideLen - 1];\\n  }\\n\\n  if (actuallyPayload) {\\n    actuallyPayload.dispatchAction = null;\\n    api.dispatchAction(actuallyPayload);\\n  }\\n}\\n\\nfunction onLeave(record, e, dispatchAction) {\\n  record.handler('leave', null, dispatchAction);\\n}\\n\\nfunction doEnter(currTrigger, record, e, dispatchAction) {\\n  record.handler(currTrigger, e, dispatchAction);\\n}\\n\\nfunction makeDispatchAction(api) {\\n  var pendings = {\\n    showTip: [],\\n    hideTip: []\\n  }; // FIXME\\n  // better approach?\\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\\n  // So we have to add \\\"final stage\\\" to merge those dispatched actions.\\n\\n  var dispatchAction = function (payload) {\\n    var pendingList = pendings[payload.type];\\n\\n    if (pendingList) {\\n      pendingList.push(payload);\\n    } else {\\n      payload.dispatchAction = dispatchAction;\\n      api.dispatchAction(payload);\\n    }\\n  };\\n\\n  return {\\n    dispatchAction: dispatchAction,\\n    pendings: pendings\\n  };\\n}\\n/**\\n * @param {string} key\\n * @param {module:echarts/ExtensionAPI} api\\n */\\n\\n\\nfunction unregister(key, api) {\\n  if (env.node) {\\n    return;\\n  }\\n\\n  var zr = api.getZr();\\n  var record = (inner(zr).records || {})[key];\\n\\n  if (record) {\\n    inner(zr).records[key] = null;\\n  }\\n}\\n\\nexports.register = register;\\nexports.unregister = unregister;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2F4aXNQb2ludGVyL2dsb2JhbExpc3RlbmVyLmpzPzE3ZDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFNUMsVUFBVSxtQkFBTyxDQUFDLEVBQXNCOztBQUV4QyxhQUFhLG1CQUFPLENBQUMsRUFBa0I7O0FBRXZDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsU0FBUztBQUNwQixnQkFBZ0IsT0FBTztBQUN2QixnQkFBZ0IsZUFBZTtBQUMvQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBLHFFQUFxRTtBQUNyRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw4REFBOEQ7O0FBRTlEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyw0QkFBNEI7QUFDdkM7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUNBQXVDOztBQUV2QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE3My5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIGVudiA9IHJlcXVpcmUoXCJ6cmVuZGVyL2xpYi9jb3JlL2VudlwiKTtcblxudmFyIF9tb2RlbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsL21vZGVsXCIpO1xuXG52YXIgbWFrZUlubmVyID0gX21vZGVsLm1ha2VJbm5lcjtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIGlubmVyID0gbWFrZUlubmVyKCk7XG52YXIgZWFjaCA9IHpyVXRpbC5lYWNoO1xuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL0V4dGVuc2lvbkFQSX0gYXBpXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gKiAgICAgIHBhcmFtOiB7c3RyaW5nfSBjdXJyVHJpZ2dlclxuICogICAgICBwYXJhbToge0FycmF5LjxudW1iZXI+fSBwb2ludFxuICovXG5cbmZ1bmN0aW9uIHJlZ2lzdGVyKGtleSwgYXBpLCBoYW5kbGVyKSB7XG4gIGlmIChlbnYubm9kZSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciB6ciA9IGFwaS5nZXRacigpO1xuICBpbm5lcih6cikucmVjb3JkcyB8fCAoaW5uZXIoenIpLnJlY29yZHMgPSB7fSk7XG4gIGluaXRHbG9iYWxMaXN0ZW5lcnMoenIsIGFwaSk7XG4gIHZhciByZWNvcmQgPSBpbm5lcih6cikucmVjb3Jkc1trZXldIHx8IChpbm5lcih6cikucmVjb3Jkc1trZXldID0ge30pO1xuICByZWNvcmQuaGFuZGxlciA9IGhhbmRsZXI7XG59XG5cbmZ1bmN0aW9uIGluaXRHbG9iYWxMaXN0ZW5lcnMoenIsIGFwaSkge1xuICBpZiAoaW5uZXIoenIpLmluaXRpYWxpemVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaW5uZXIoenIpLmluaXRpYWxpemVkID0gdHJ1ZTtcbiAgdXNlSGFuZGxlcignY2xpY2snLCB6clV0aWwuY3VycnkoZG9FbnRlciwgJ2NsaWNrJykpO1xuICB1c2VIYW5kbGVyKCdtb3VzZW1vdmUnLCB6clV0aWwuY3VycnkoZG9FbnRlciwgJ21vdXNlbW92ZScpKTsgLy8gdXNlSGFuZGxlcignbW91c2VvdXQnLCBvbkxlYXZlKTtcblxuICB1c2VIYW5kbGVyKCdnbG9iYWxvdXQnLCBvbkxlYXZlKTtcblxuICBmdW5jdGlvbiB1c2VIYW5kbGVyKGV2ZW50VHlwZSwgY2IpIHtcbiAgICB6ci5vbihldmVudFR5cGUsIGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgZGlzID0gbWFrZURpc3BhdGNoQWN0aW9uKGFwaSk7XG4gICAgICBlYWNoKGlubmVyKHpyKS5yZWNvcmRzLCBmdW5jdGlvbiAocmVjb3JkKSB7XG4gICAgICAgIHJlY29yZCAmJiBjYihyZWNvcmQsIGUsIGRpcy5kaXNwYXRjaEFjdGlvbik7XG4gICAgICB9KTtcbiAgICAgIGRpc3BhdGNoVG9vbHRpcEZpbmFsbHkoZGlzLnBlbmRpbmdzLCBhcGkpO1xuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGRpc3BhdGNoVG9vbHRpcEZpbmFsbHkocGVuZGluZ3MsIGFwaSkge1xuICB2YXIgc2hvd0xlbiA9IHBlbmRpbmdzLnNob3dUaXAubGVuZ3RoO1xuICB2YXIgaGlkZUxlbiA9IHBlbmRpbmdzLmhpZGVUaXAubGVuZ3RoO1xuICB2YXIgYWN0dWFsbHlQYXlsb2FkO1xuXG4gIGlmIChzaG93TGVuKSB7XG4gICAgYWN0dWFsbHlQYXlsb2FkID0gcGVuZGluZ3Muc2hvd1RpcFtzaG93TGVuIC0gMV07XG4gIH0gZWxzZSBpZiAoaGlkZUxlbikge1xuICAgIGFjdHVhbGx5UGF5bG9hZCA9IHBlbmRpbmdzLmhpZGVUaXBbaGlkZUxlbiAtIDFdO1xuICB9XG5cbiAgaWYgKGFjdHVhbGx5UGF5bG9hZCkge1xuICAgIGFjdHVhbGx5UGF5bG9hZC5kaXNwYXRjaEFjdGlvbiA9IG51bGw7XG4gICAgYXBpLmRpc3BhdGNoQWN0aW9uKGFjdHVhbGx5UGF5bG9hZCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gb25MZWF2ZShyZWNvcmQsIGUsIGRpc3BhdGNoQWN0aW9uKSB7XG4gIHJlY29yZC5oYW5kbGVyKCdsZWF2ZScsIG51bGwsIGRpc3BhdGNoQWN0aW9uKTtcbn1cblxuZnVuY3Rpb24gZG9FbnRlcihjdXJyVHJpZ2dlciwgcmVjb3JkLCBlLCBkaXNwYXRjaEFjdGlvbikge1xuICByZWNvcmQuaGFuZGxlcihjdXJyVHJpZ2dlciwgZSwgZGlzcGF0Y2hBY3Rpb24pO1xufVxuXG5mdW5jdGlvbiBtYWtlRGlzcGF0Y2hBY3Rpb24oYXBpKSB7XG4gIHZhciBwZW5kaW5ncyA9IHtcbiAgICBzaG93VGlwOiBbXSxcbiAgICBoaWRlVGlwOiBbXVxuICB9OyAvLyBGSVhNRVxuICAvLyBiZXR0ZXIgYXBwcm9hY2g/XG4gIC8vICdzaG93VGlwJyBhbmQgJ2hpZGVUaXAnIGNhbiBiZSB0cmlnZ2VyZWQgYnkgYXhpc1BvaW50ZXIgYW5kIHRvb2x0aXAsXG4gIC8vIHdoaWNoIG1heSBiZSBjb25mbGljdCwgKGF4aXNQb2ludGVyIGNhbGwgc2hvd1RpcCBidXQgdG9vbHRpcCBjYWxsIGhpZGVUaXApO1xuICAvLyBTbyB3ZSBoYXZlIHRvIGFkZCBcImZpbmFsIHN0YWdlXCIgdG8gbWVyZ2UgdGhvc2UgZGlzcGF0Y2hlZCBhY3Rpb25zLlxuXG4gIHZhciBkaXNwYXRjaEFjdGlvbiA9IGZ1bmN0aW9uIChwYXlsb2FkKSB7XG4gICAgdmFyIHBlbmRpbmdMaXN0ID0gcGVuZGluZ3NbcGF5bG9hZC50eXBlXTtcblxuICAgIGlmIChwZW5kaW5nTGlzdCkge1xuICAgICAgcGVuZGluZ0xpc3QucHVzaChwYXlsb2FkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcGF5bG9hZC5kaXNwYXRjaEFjdGlvbiA9IGRpc3BhdGNoQWN0aW9uO1xuICAgICAgYXBpLmRpc3BhdGNoQWN0aW9uKHBheWxvYWQpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGRpc3BhdGNoQWN0aW9uOiBkaXNwYXRjaEFjdGlvbixcbiAgICBwZW5kaW5nczogcGVuZGluZ3NcbiAgfTtcbn1cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9FeHRlbnNpb25BUEl9IGFwaVxuICovXG5cblxuZnVuY3Rpb24gdW5yZWdpc3RlcihrZXksIGFwaSkge1xuICBpZiAoZW52Lm5vZGUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgenIgPSBhcGkuZ2V0WnIoKTtcbiAgdmFyIHJlY29yZCA9IChpbm5lcih6cikucmVjb3JkcyB8fCB7fSlba2V5XTtcblxuICBpZiAocmVjb3JkKSB7XG4gICAgaW5uZXIoenIpLnJlY29yZHNba2V5XSA9IG51bGw7XG4gIH1cbn1cblxuZXhwb3J0cy5yZWdpc3RlciA9IHJlZ2lzdGVyO1xuZXhwb3J0cy51bnJlZ2lzdGVyID0gdW5yZWdpc3RlcjsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///173\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar textContain = __webpack_require__(76);\\n\\nvar formatUtil = __webpack_require__(69);\\n\\nvar matrix = __webpack_require__(74);\\n\\nvar axisHelper = __webpack_require__(86);\\n\\nvar AxisBuilder = __webpack_require__(169);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @param {module:echarts/model/Model} axisPointerModel\\n */\\nfunction buildElStyle(axisPointerModel) {\\n  var axisPointerType = axisPointerModel.get('type');\\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\\n  var style;\\n\\n  if (axisPointerType === 'line') {\\n    style = styleModel.getLineStyle();\\n    style.fill = null;\\n  } else if (axisPointerType === 'shadow') {\\n    style = styleModel.getAreaStyle();\\n    style.stroke = null;\\n  }\\n\\n  return style;\\n}\\n/**\\n * @param {Function} labelPos {align, verticalAlign, position}\\n */\\n\\n\\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\\n  var value = axisPointerModel.get('value');\\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\\n    precision: axisPointerModel.get('label.precision'),\\n    formatter: axisPointerModel.get('label.formatter')\\n  });\\n  var labelModel = axisPointerModel.getModel('label');\\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\\n  var font = labelModel.getFont();\\n  var textRect = textContain.getBoundingRect(text, font);\\n  var position = labelPos.position;\\n  var width = textRect.width + paddings[1] + paddings[3];\\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\\n\\n  var align = labelPos.align;\\n  align === 'right' && (position[0] -= width);\\n  align === 'center' && (position[0] -= width / 2);\\n  var verticalAlign = labelPos.verticalAlign;\\n  verticalAlign === 'bottom' && (position[1] -= height);\\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\\n\\n  confineInContainer(position, width, height, api);\\n  var bgColor = labelModel.get('backgroundColor');\\n\\n  if (!bgColor || bgColor === 'auto') {\\n    bgColor = axisModel.get('axisLine.lineStyle.color');\\n  }\\n\\n  elOption.label = {\\n    shape: {\\n      x: 0,\\n      y: 0,\\n      width: width,\\n      height: height,\\n      r: labelModel.get('borderRadius')\\n    },\\n    position: position.slice(),\\n    // TODO: rich\\n    style: {\\n      text: text,\\n      textFont: font,\\n      textFill: labelModel.getTextColor(),\\n      textPosition: 'inside',\\n      fill: bgColor,\\n      stroke: labelModel.get('borderColor') || 'transparent',\\n      lineWidth: labelModel.get('borderWidth') || 0,\\n      shadowBlur: labelModel.get('shadowBlur'),\\n      shadowColor: labelModel.get('shadowColor'),\\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\\n      shadowOffsetY: labelModel.get('shadowOffsetY')\\n    },\\n    // Lable should be over axisPointer.\\n    z2: 10\\n  };\\n} // Do not overflow ec container\\n\\n\\nfunction confineInContainer(position, width, height, api) {\\n  var viewWidth = api.getWidth();\\n  var viewHeight = api.getHeight();\\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\\n  position[0] = Math.max(position[0], 0);\\n  position[1] = Math.max(position[1], 0);\\n}\\n/**\\n * @param {number} value\\n * @param {module:echarts/coord/Axis} axis\\n * @param {module:echarts/model/Global} ecModel\\n * @param {Object} opt\\n * @param {Array.<Object>} seriesDataIndices\\n * @param {number|string} opt.precision 'auto' or a number\\n * @param {string|Function} opt.formatter label formatter\\n */\\n\\n\\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\\n  value = axis.scale.parse(value);\\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\\n  // helps to debounce when when moving label.\\n  value, {\\n    precision: opt.precision\\n  });\\n  var formatter = opt.formatter;\\n\\n  if (formatter) {\\n    var params = {\\n      value: axisHelper.getAxisRawValue(axis, value),\\n      seriesData: []\\n    };\\n    zrUtil.each(seriesDataIndices, function (idxItem) {\\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\\n      var dataIndex = idxItem.dataIndexInside;\\n      var dataParams = series && series.getDataParams(dataIndex);\\n      dataParams && params.seriesData.push(dataParams);\\n    });\\n\\n    if (zrUtil.isString(formatter)) {\\n      text = formatter.replace('{value}', text);\\n    } else if (zrUtil.isFunction(formatter)) {\\n      text = formatter(params);\\n    }\\n  }\\n\\n  return text;\\n}\\n/**\\n * @param {module:echarts/coord/Axis} axis\\n * @param {number} value\\n * @param {Object} layoutInfo {\\n *  rotation, position, labelOffset, labelDirection, labelMargin\\n * }\\n */\\n\\n\\nfunction getTransformedPosition(axis, value, layoutInfo) {\\n  var transform = matrix.create();\\n  matrix.rotate(transform, transform, layoutInfo.rotation);\\n  matrix.translate(transform, transform, layoutInfo.position);\\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\\n}\\n\\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\\n    align: textLayout.textAlign,\\n    verticalAlign: textLayout.textVerticalAlign\\n  });\\n}\\n/**\\n * @param {Array.<number>} p1\\n * @param {Array.<number>} p2\\n * @param {number} [xDimIndex=0] or 1\\n */\\n\\n\\nfunction makeLineShape(p1, p2, xDimIndex) {\\n  xDimIndex = xDimIndex || 0;\\n  return {\\n    x1: p1[xDimIndex],\\n    y1: p1[1 - xDimIndex],\\n    x2: p2[xDimIndex],\\n    y2: p2[1 - xDimIndex]\\n  };\\n}\\n/**\\n * @param {Array.<number>} xy\\n * @param {Array.<number>} wh\\n * @param {number} [xDimIndex=0] or 1\\n */\\n\\n\\nfunction makeRectShape(xy, wh, xDimIndex) {\\n  xDimIndex = xDimIndex || 0;\\n  return {\\n    x: xy[xDimIndex],\\n    y: xy[1 - xDimIndex],\\n    width: wh[xDimIndex],\\n    height: wh[1 - xDimIndex]\\n  };\\n}\\n\\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\\n  return {\\n    cx: cx,\\n    cy: cy,\\n    r0: r0,\\n    r: r,\\n    startAngle: startAngle,\\n    endAngle: endAngle,\\n    clockwise: true\\n  };\\n}\\n\\nexports.buildElStyle = buildElStyle;\\nexports.buildLabelElOption = buildLabelElOption;\\nexports.getValueLabel = getValueLabel;\\nexports.getTransformedPosition = getTransformedPosition;\\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\\nexports.makeLineShape = makeLineShape;\\nexports.makeRectShape = makeRectShape;\\nexports.makeSectorShape = makeSectorShape;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///174\\n\")},,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){eval(\"var util = __webpack_require__(59);\\n\\nvar vec2 = __webpack_require__(62);\\n\\nvar Draggable = __webpack_require__(194);\\n\\nvar Eventful = __webpack_require__(80);\\n\\nvar eventTool = __webpack_require__(75);\\n\\nvar SILENT = 'silent';\\n\\nfunction makeEventPacket(eveType, targetInfo, event) {\\n  return {\\n    type: eveType,\\n    event: event,\\n    // target can only be an element that is not silent.\\n    target: targetInfo.target,\\n    // topTarget can be a silent element.\\n    topTarget: targetInfo.topTarget,\\n    cancelBubble: false,\\n    offsetX: event.zrX,\\n    offsetY: event.zrY,\\n    gestureEvent: event.gestureEvent,\\n    pinchX: event.pinchX,\\n    pinchY: event.pinchY,\\n    pinchScale: event.pinchScale,\\n    wheelDelta: event.zrDelta,\\n    zrByTouch: event.zrByTouch,\\n    which: event.which,\\n    stop: stopEvent\\n  };\\n}\\n\\nfunction stopEvent(event) {\\n  eventTool.stop(this.event);\\n}\\n\\nfunction EmptyProxy() {}\\n\\nEmptyProxy.prototype.dispose = function () {};\\n\\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\\n/**\\n * @alias module:zrender/Handler\\n * @constructor\\n * @extends module:zrender/mixin/Eventful\\n * @param {module:zrender/Storage} storage Storage instance.\\n * @param {module:zrender/Painter} painter Painter instance.\\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\\n */\\n\\nvar Handler = function (storage, painter, proxy, painterRoot) {\\n  Eventful.call(this);\\n  this.storage = storage;\\n  this.painter = painter;\\n  this.painterRoot = painterRoot;\\n  proxy = proxy || new EmptyProxy();\\n  /**\\n   * Proxy of event. can be Dom, WebGLSurface, etc.\\n   */\\n\\n  this.proxy = null;\\n  /**\\n   * {target, topTarget, x, y}\\n   * @private\\n   * @type {Object}\\n   */\\n\\n  this._hovered = {};\\n  /**\\n   * @private\\n   * @type {Date}\\n   */\\n\\n  this._lastTouchMoment;\\n  /**\\n   * @private\\n   * @type {number}\\n   */\\n\\n  this._lastX;\\n  /**\\n   * @private\\n   * @type {number}\\n   */\\n\\n  this._lastY;\\n  Draggable.call(this);\\n  this.setHandlerProxy(proxy);\\n};\\n\\nHandler.prototype = {\\n  constructor: Handler,\\n  setHandlerProxy: function (proxy) {\\n    if (this.proxy) {\\n      this.proxy.dispose();\\n    }\\n\\n    if (proxy) {\\n      util.each(handlerNames, function (name) {\\n        proxy.on && proxy.on(name, this[name], this);\\n      }, this); // Attach handler\\n\\n      proxy.handler = this;\\n    }\\n\\n    this.proxy = proxy;\\n  },\\n  mousemove: function (event) {\\n    var x = event.zrX;\\n    var y = event.zrY;\\n    var lastHovered = this._hovered;\\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\\n    // See #6198.\\n\\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\\n      lastHoveredTarget = lastHovered.target;\\n    }\\n\\n    var hovered = this._hovered = this.findHover(x, y);\\n    var hoveredTarget = hovered.target;\\n    var proxy = this.proxy;\\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\\n\\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\\n      this.dispatchToElement(lastHovered, 'mouseout', event);\\n    } // Mouse moving on one element\\n\\n\\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\\n\\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\\n      this.dispatchToElement(hovered, 'mouseover', event);\\n    }\\n  },\\n  mouseout: function (event) {\\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\\n    // dom created by echarts), where 'globalout' event should not\\n    // be triggered when mouse enters these doms. (But 'mouseout'\\n    // should be triggered at the original hovered element as usual).\\n\\n    var element = event.toElement || event.relatedTarget;\\n    var innerDom;\\n\\n    do {\\n      element = element && element.parentNode;\\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\\n\\n    !innerDom && this.trigger('globalout', {\\n      event: event\\n    });\\n  },\\n\\n  /**\\n   * Resize\\n   */\\n  resize: function (event) {\\n    this._hovered = {};\\n  },\\n\\n  /**\\n   * Dispatch event\\n   * @param {string} eventName\\n   * @param {event=} eventArgs\\n   */\\n  dispatch: function (eventName, eventArgs) {\\n    var handler = this[eventName];\\n    handler && handler.call(this, eventArgs);\\n  },\\n\\n  /**\\n   * Dispose\\n   */\\n  dispose: function () {\\n    this.proxy.dispose();\\n    this.storage = this.proxy = this.painter = null;\\n  },\\n\\n  /**\\n   * 设置默认的cursor style\\n   * @param {string} [cursorStyle='default'] 例如 crosshair\\n   */\\n  setCursorStyle: function (cursorStyle) {\\n    var proxy = this.proxy;\\n    proxy.setCursor && proxy.setCursor(cursorStyle);\\n  },\\n\\n  /**\\n   * 事件分发代理\\n   *\\n   * @private\\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\\n   * @param {string} eventName 事件名称\\n   * @param {Object} event 事件对象\\n   */\\n  dispatchToElement: function (targetInfo, eventName, event) {\\n    targetInfo = targetInfo || {};\\n    var el = targetInfo.target;\\n\\n    if (el && el.silent) {\\n      return;\\n    }\\n\\n    var eventHandler = 'on' + eventName;\\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\\n\\n    while (el) {\\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\\n      el.trigger(eventName, eventPacket);\\n      el = el.parent;\\n\\n      if (eventPacket.cancelBubble) {\\n        break;\\n      }\\n    }\\n\\n    if (!eventPacket.cancelBubble) {\\n      // 冒泡到顶级 zrender 对象\\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\\n\\n      this.painter && this.painter.eachOtherLayer(function (layer) {\\n        if (typeof layer[eventHandler] == 'function') {\\n          layer[eventHandler].call(layer, eventPacket);\\n        }\\n\\n        if (layer.trigger) {\\n          layer.trigger(eventName, eventPacket);\\n        }\\n      });\\n    }\\n  },\\n\\n  /**\\n   * @private\\n   * @param {number} x\\n   * @param {number} y\\n   * @param {module:zrender/graphic/Displayable} exclude\\n   * @return {model:zrender/Element}\\n   * @method\\n   */\\n  findHover: function (x, y, exclude) {\\n    var list = this.storage.getDisplayList();\\n    var out = {\\n      x: x,\\n      y: y\\n    };\\n\\n    for (var i = list.length - 1; i >= 0; i--) {\\n      var hoverCheckResult;\\n\\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\\n        !out.topTarget && (out.topTarget = list[i]);\\n\\n        if (hoverCheckResult !== SILENT) {\\n          out.target = list[i];\\n          break;\\n        }\\n      }\\n    }\\n\\n    return out;\\n  }\\n}; // Common handlers\\n\\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\\n  Handler.prototype[name] = function (event) {\\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\\n    var hovered = this.findHover(event.zrX, event.zrY);\\n    var hoveredTarget = hovered.target;\\n\\n    if (name === 'mousedown') {\\n      this._downEl = hoveredTarget;\\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\\n\\n      this._upEl = hoveredTarget;\\n    } else if (name === 'mouseup') {\\n      this._upEl = hoveredTarget;\\n    } else if (name === 'click') {\\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\\n      // which should be filtered, otherwise it will bring trouble to\\n      // pan and zoom.\\n      || !this._downPoint // Arbitrary value\\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\\n        return;\\n      }\\n\\n      this._downPoint = null;\\n    }\\n\\n    this.dispatchToElement(hovered, name, event);\\n  };\\n});\\n\\nfunction isHover(displayable, x, y) {\\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\\n    var el = displayable;\\n    var isSilent;\\n\\n    while (el) {\\n      // If clipped by ancestor.\\n      // FIXME: If clipPath has neither stroke nor fill,\\n      // el.clipPath.contain(x, y) will always return false.\\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\\n        return false;\\n      }\\n\\n      if (el.silent) {\\n        isSilent = true;\\n      }\\n\\n      el = el.parent;\\n    }\\n\\n    return isSilent ? SILENT : true;\\n  }\\n\\n  return false;\\n}\\n\\nutil.mixin(Handler, Eventful);\\nutil.mixin(Handler, Draggable);\\nvar _default = Handler;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///193\\n\")},function(module,exports){eval(\"// TODO Draggable for group\\n// FIXME Draggable on element which has parent rotation or scale\\nfunction Draggable() {\\n  this.on('mousedown', this._dragStart, this);\\n  this.on('mousemove', this._drag, this);\\n  this.on('mouseup', this._dragEnd, this);\\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\\n  // this._draggingTarget = null;\\n  // this._x = 0;\\n  // this._y = 0;\\n}\\n\\nDraggable.prototype = {\\n  constructor: Draggable,\\n  _dragStart: function (e) {\\n    var draggingTarget = e.target;\\n\\n    if (draggingTarget && draggingTarget.draggable) {\\n      this._draggingTarget = draggingTarget;\\n      draggingTarget.dragging = true;\\n      this._x = e.offsetX;\\n      this._y = e.offsetY;\\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\\n    }\\n  },\\n  _drag: function (e) {\\n    var draggingTarget = this._draggingTarget;\\n\\n    if (draggingTarget) {\\n      var x = e.offsetX;\\n      var y = e.offsetY;\\n      var dx = x - this._x;\\n      var dy = y - this._y;\\n      this._x = x;\\n      this._y = y;\\n      draggingTarget.drift(dx, dy, e);\\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\\n      var lastDropTarget = this._dropTarget;\\n      this._dropTarget = dropTarget;\\n\\n      if (draggingTarget !== dropTarget) {\\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\\n        }\\n\\n        if (dropTarget && dropTarget !== lastDropTarget) {\\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\\n        }\\n      }\\n    }\\n  },\\n  _dragEnd: function (e) {\\n    var draggingTarget = this._draggingTarget;\\n\\n    if (draggingTarget) {\\n      draggingTarget.dragging = false;\\n    }\\n\\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\\n\\n    if (this._dropTarget) {\\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\\n    }\\n\\n    this._draggingTarget = null;\\n    this._dropTarget = null;\\n  }\\n};\\n\\nfunction param(target, e) {\\n  return {\\n    target: target,\\n    topTarget: e && e.topTarget\\n  };\\n}\\n\\nvar _default = Draggable;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvbWl4aW4vRHJhZ2dhYmxlLmpzP2NiNmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE5NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE8gRHJhZ2dhYmxlIGZvciBncm91cFxuLy8gRklYTUUgRHJhZ2dhYmxlIG9uIGVsZW1lbnQgd2hpY2ggaGFzIHBhcmVudCByb3RhdGlvbiBvciBzY2FsZVxuZnVuY3Rpb24gRHJhZ2dhYmxlKCkge1xuICB0aGlzLm9uKCdtb3VzZWRvd24nLCB0aGlzLl9kcmFnU3RhcnQsIHRoaXMpO1xuICB0aGlzLm9uKCdtb3VzZW1vdmUnLCB0aGlzLl9kcmFnLCB0aGlzKTtcbiAgdGhpcy5vbignbW91c2V1cCcsIHRoaXMuX2RyYWdFbmQsIHRoaXMpO1xuICB0aGlzLm9uKCdnbG9iYWxvdXQnLCB0aGlzLl9kcmFnRW5kLCB0aGlzKTsgLy8gdGhpcy5fZHJvcFRhcmdldCA9IG51bGw7XG4gIC8vIHRoaXMuX2RyYWdnaW5nVGFyZ2V0ID0gbnVsbDtcbiAgLy8gdGhpcy5feCA9IDA7XG4gIC8vIHRoaXMuX3kgPSAwO1xufVxuXG5EcmFnZ2FibGUucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogRHJhZ2dhYmxlLFxuICBfZHJhZ1N0YXJ0OiBmdW5jdGlvbiAoZSkge1xuICAgIHZhciBkcmFnZ2luZ1RhcmdldCA9IGUudGFyZ2V0O1xuXG4gICAgaWYgKGRyYWdnaW5nVGFyZ2V0ICYmIGRyYWdnaW5nVGFyZ2V0LmRyYWdnYWJsZSkge1xuICAgICAgdGhpcy5fZHJhZ2dpbmdUYXJnZXQgPSBkcmFnZ2luZ1RhcmdldDtcbiAgICAgIGRyYWdnaW5nVGFyZ2V0LmRyYWdnaW5nID0gdHJ1ZTtcbiAgICAgIHRoaXMuX3ggPSBlLm9mZnNldFg7XG4gICAgICB0aGlzLl95ID0gZS5vZmZzZXRZO1xuICAgICAgdGhpcy5kaXNwYXRjaFRvRWxlbWVudChwYXJhbShkcmFnZ2luZ1RhcmdldCwgZSksICdkcmFnc3RhcnQnLCBlLmV2ZW50KTtcbiAgICB9XG4gIH0sXG4gIF9kcmFnOiBmdW5jdGlvbiAoZSkge1xuICAgIHZhciBkcmFnZ2luZ1RhcmdldCA9IHRoaXMuX2RyYWdnaW5nVGFyZ2V0O1xuXG4gICAgaWYgKGRyYWdnaW5nVGFyZ2V0KSB7XG4gICAgICB2YXIgeCA9IGUub2Zmc2V0WDtcbiAgICAgIHZhciB5ID0gZS5vZmZzZXRZO1xuICAgICAgdmFyIGR4ID0geCAtIHRoaXMuX3g7XG4gICAgICB2YXIgZHkgPSB5IC0gdGhpcy5feTtcbiAgICAgIHRoaXMuX3ggPSB4O1xuICAgICAgdGhpcy5feSA9IHk7XG4gICAgICBkcmFnZ2luZ1RhcmdldC5kcmlmdChkeCwgZHksIGUpO1xuICAgICAgdGhpcy5kaXNwYXRjaFRvRWxlbWVudChwYXJhbShkcmFnZ2luZ1RhcmdldCwgZSksICdkcmFnJywgZS5ldmVudCk7XG4gICAgICB2YXIgZHJvcFRhcmdldCA9IHRoaXMuZmluZEhvdmVyKHgsIHksIGRyYWdnaW5nVGFyZ2V0KS50YXJnZXQ7XG4gICAgICB2YXIgbGFzdERyb3BUYXJnZXQgPSB0aGlzLl9kcm9wVGFyZ2V0O1xuICAgICAgdGhpcy5fZHJvcFRhcmdldCA9IGRyb3BUYXJnZXQ7XG5cbiAgICAgIGlmIChkcmFnZ2luZ1RhcmdldCAhPT0gZHJvcFRhcmdldCkge1xuICAgICAgICBpZiAobGFzdERyb3BUYXJnZXQgJiYgZHJvcFRhcmdldCAhPT0gbGFzdERyb3BUYXJnZXQpIHtcbiAgICAgICAgICB0aGlzLmRpc3BhdGNoVG9FbGVtZW50KHBhcmFtKGxhc3REcm9wVGFyZ2V0LCBlKSwgJ2RyYWdsZWF2ZScsIGUuZXZlbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRyb3BUYXJnZXQgJiYgZHJvcFRhcmdldCAhPT0gbGFzdERyb3BUYXJnZXQpIHtcbiAgICAgICAgICB0aGlzLmRpc3BhdGNoVG9FbGVtZW50KHBhcmFtKGRyb3BUYXJnZXQsIGUpLCAnZHJhZ2VudGVyJywgZS5ldmVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIF9kcmFnRW5kOiBmdW5jdGlvbiAoZSkge1xuICAgIHZhciBkcmFnZ2luZ1RhcmdldCA9IHRoaXMuX2RyYWdnaW5nVGFyZ2V0O1xuXG4gICAgaWYgKGRyYWdnaW5nVGFyZ2V0KSB7XG4gICAgICBkcmFnZ2luZ1RhcmdldC5kcmFnZ2luZyA9IGZhbHNlO1xuICAgIH1cblxuICAgIHRoaXMuZGlzcGF0Y2hUb0VsZW1lbnQocGFyYW0oZHJhZ2dpbmdUYXJnZXQsIGUpLCAnZHJhZ2VuZCcsIGUuZXZlbnQpO1xuXG4gICAgaWYgKHRoaXMuX2Ryb3BUYXJnZXQpIHtcbiAgICAgIHRoaXMuZGlzcGF0Y2hUb0VsZW1lbnQocGFyYW0odGhpcy5fZHJvcFRhcmdldCwgZSksICdkcm9wJywgZS5ldmVudCk7XG4gICAgfVxuXG4gICAgdGhpcy5fZHJhZ2dpbmdUYXJnZXQgPSBudWxsO1xuICAgIHRoaXMuX2Ryb3BUYXJnZXQgPSBudWxsO1xuICB9XG59O1xuXG5mdW5jdGlvbiBwYXJhbSh0YXJnZXQsIGUpIHtcbiAgcmV0dXJuIHtcbiAgICB0YXJnZXQ6IHRhcmdldCxcbiAgICB0b3BUYXJnZXQ6IGUgJiYgZS50b3BUYXJnZXRcbiAgfTtcbn1cblxudmFyIF9kZWZhdWx0ID0gRHJhZ2dhYmxlO1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///194\\n\")},function(module,exports,__webpack_require__){eval(\"var util = __webpack_require__(59);\\n\\nvar env = __webpack_require__(66);\\n\\nvar Group = __webpack_require__(81);\\n\\nvar timsort = __webpack_require__(100);\\n\\n// Use timsort because in most case elements are partially sorted\\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\\nfunction shapeCompareFunc(a, b) {\\n  if (a.zlevel === b.zlevel) {\\n    if (a.z === b.z) {\\n      // if (a.z2 === b.z2) {\\n      //     // FIXME Slow has renderidx compare\\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\\n      //     return a.__renderidx - b.__renderidx;\\n      // }\\n      return a.z2 - b.z2;\\n    }\\n\\n    return a.z - b.z;\\n  }\\n\\n  return a.zlevel - b.zlevel;\\n}\\n/**\\n * 内容仓库 (M)\\n * @alias module:zrender/Storage\\n * @constructor\\n */\\n\\n\\nvar Storage = function () {\\n  // jshint ignore:line\\n  this._roots = [];\\n  this._displayList = [];\\n  this._displayListLen = 0;\\n};\\n\\nStorage.prototype = {\\n  constructor: Storage,\\n\\n  /**\\n   * @param  {Function} cb\\n   *\\n   */\\n  traverse: function (cb, context) {\\n    for (var i = 0; i < this._roots.length; i++) {\\n      this._roots[i].traverse(cb, context);\\n    }\\n  },\\n\\n  /**\\n   * 返回所有图形的绘制队列\\n   * @param {boolean} [update=false] 是否在返回前更新该数组\\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\\n   *\\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\\n   * @return {Array.<module:zrender/graphic/Displayable>}\\n   */\\n  getDisplayList: function (update, includeIgnore) {\\n    includeIgnore = includeIgnore || false;\\n\\n    if (update) {\\n      this.updateDisplayList(includeIgnore);\\n    }\\n\\n    return this._displayList;\\n  },\\n\\n  /**\\n   * 更新图形的绘制队列。\\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\\n   */\\n  updateDisplayList: function (includeIgnore) {\\n    this._displayListLen = 0;\\n    var roots = this._roots;\\n    var displayList = this._displayList;\\n\\n    for (var i = 0, len = roots.length; i < len; i++) {\\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\\n    }\\n\\n    displayList.length = this._displayListLen;\\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\\n  },\\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\\n    if (el.ignore && !includeIgnore) {\\n      return;\\n    }\\n\\n    el.beforeUpdate();\\n\\n    if (el.__dirty) {\\n      el.update();\\n    }\\n\\n    el.afterUpdate();\\n    var userSetClipPath = el.clipPath;\\n\\n    if (userSetClipPath) {\\n      // FIXME 效率影响\\n      if (clipPaths) {\\n        clipPaths = clipPaths.slice();\\n      } else {\\n        clipPaths = [];\\n      }\\n\\n      var currentClipPath = userSetClipPath;\\n      var parentClipPath = el; // Recursively add clip path\\n\\n      while (currentClipPath) {\\n        // clipPath 的变换是基于使用这个 clipPath 的元素\\n        currentClipPath.parent = parentClipPath;\\n        currentClipPath.updateTransform();\\n        clipPaths.push(currentClipPath);\\n        parentClipPath = currentClipPath;\\n        currentClipPath = currentClipPath.clipPath;\\n      }\\n    }\\n\\n    if (el.isGroup) {\\n      var children = el._children;\\n\\n      for (var i = 0; i < children.length; i++) {\\n        var child = children[i]; // Force to mark as dirty if group is dirty\\n        // FIXME __dirtyPath ?\\n\\n        if (el.__dirty) {\\n          child.__dirty = true;\\n        }\\n\\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\\n      } // Mark group clean here\\n\\n\\n      el.__dirty = false;\\n    } else {\\n      el.__clipPaths = clipPaths;\\n      this._displayList[this._displayListLen++] = el;\\n    }\\n  },\\n\\n  /**\\n   * 添加图形(Shape)或者组(Group)到根节点\\n   * @param {module:zrender/Element} el\\n   */\\n  addRoot: function (el) {\\n    if (el.__storage === this) {\\n      return;\\n    }\\n\\n    if (el instanceof Group) {\\n      el.addChildrenToStorage(this);\\n    }\\n\\n    this.addToStorage(el);\\n\\n    this._roots.push(el);\\n  },\\n\\n  /**\\n   * 删除指定的图形(Shape)或者组(Group)\\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\\n   */\\n  delRoot: function (el) {\\n    if (el == null) {\\n      // 不指定el清空\\n      for (var i = 0; i < this._roots.length; i++) {\\n        var root = this._roots[i];\\n\\n        if (root instanceof Group) {\\n          root.delChildrenFromStorage(this);\\n        }\\n      }\\n\\n      this._roots = [];\\n      this._displayList = [];\\n      this._displayListLen = 0;\\n      return;\\n    }\\n\\n    if (el instanceof Array) {\\n      for (var i = 0, l = el.length; i < l; i++) {\\n        this.delRoot(el[i]);\\n      }\\n\\n      return;\\n    }\\n\\n    var idx = util.indexOf(this._roots, el);\\n\\n    if (idx >= 0) {\\n      this.delFromStorage(el);\\n\\n      this._roots.splice(idx, 1);\\n\\n      if (el instanceof Group) {\\n        el.delChildrenFromStorage(this);\\n      }\\n    }\\n  },\\n  addToStorage: function (el) {\\n    if (el) {\\n      el.__storage = this;\\n      el.dirty(false);\\n    }\\n\\n    return this;\\n  },\\n  delFromStorage: function (el) {\\n    if (el) {\\n      el.__storage = null;\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * 清空并且释放Storage\\n   */\\n  dispose: function () {\\n    this._renderList = this._roots = null;\\n  },\\n  displayableSortFunc: shapeCompareFunc\\n};\\nvar _default = Storage;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///195\\n\")},function(module,exports,__webpack_require__){eval(\"var Animator = __webpack_require__(131);\\n\\nvar log = __webpack_require__(133);\\n\\nvar _util = __webpack_require__(59);\\n\\nvar isString = _util.isString;\\nvar isFunction = _util.isFunction;\\nvar isObject = _util.isObject;\\nvar isArrayLike = _util.isArrayLike;\\nvar indexOf = _util.indexOf;\\n\\n/**\\n * @alias modue:zrender/mixin/Animatable\\n * @constructor\\n */\\nvar Animatable = function () {\\n  /**\\n   * @type {Array.<module:zrender/animation/Animator>}\\n   * @readOnly\\n   */\\n  this.animators = [];\\n};\\n\\nAnimatable.prototype = {\\n  constructor: Animatable,\\n\\n  /**\\n   * 动画\\n   *\\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\\n   * @param {boolean} [loop] Whether to loop animation.\\n   * @return {module:zrender/animation/Animator}\\n   * @example:\\n   *     el.animate('style', false)\\n   *         .when(1000, {x: 10} )\\n   *         .done(function(){ // Animation done })\\n   *         .start()\\n   */\\n  animate: function (path, loop) {\\n    var target;\\n    var animatingShape = false;\\n    var el = this;\\n    var zr = this.__zr;\\n\\n    if (path) {\\n      var pathSplitted = path.split('.');\\n      var prop = el; // If animating shape\\n\\n      animatingShape = pathSplitted[0] === 'shape';\\n\\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\\n        if (!prop) {\\n          continue;\\n        }\\n\\n        prop = prop[pathSplitted[i]];\\n      }\\n\\n      if (prop) {\\n        target = prop;\\n      }\\n    } else {\\n      target = el;\\n    }\\n\\n    if (!target) {\\n      log('Property \\\"' + path + '\\\" is not existed in element ' + el.id);\\n      return;\\n    }\\n\\n    var animators = el.animators;\\n    var animator = new Animator(target, loop);\\n    animator.during(function (target) {\\n      el.dirty(animatingShape);\\n    }).done(function () {\\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\\n      animators.splice(indexOf(animators, animator), 1);\\n    });\\n    animators.push(animator); // If animate after added to the zrender\\n\\n    if (zr) {\\n      zr.animation.addAnimator(animator);\\n    }\\n\\n    return animator;\\n  },\\n\\n  /**\\n   * 停止动画\\n   * @param {boolean} forwardToLast If move to last frame before stop\\n   */\\n  stopAnimation: function (forwardToLast) {\\n    var animators = this.animators;\\n    var len = animators.length;\\n\\n    for (var i = 0; i < len; i++) {\\n      animators[i].stop(forwardToLast);\\n    }\\n\\n    animators.length = 0;\\n    return this;\\n  },\\n\\n  /**\\n   * Caution: this method will stop previous animation.\\n   * So do not use this method to one element twice before\\n   * animation starts, unless you know what you are doing.\\n   * @param {Object} target\\n   * @param {number} [time=500] Time in ms\\n   * @param {string} [easing='linear']\\n   * @param {number} [delay=0]\\n   * @param {Function} [callback]\\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\\n   *        immediently when target values are the same as current values.\\n   *\\n   * @example\\n   *  // Animate position\\n   *  el.animateTo({\\n   *      position: [10, 10]\\n   *  }, function () { // done })\\n   *\\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\\n   *  el.animateTo({\\n   *      shape: {\\n   *          width: 500\\n   *      },\\n   *      style: {\\n   *          fill: 'red'\\n   *      }\\n   *      position: [10, 10]\\n   *  }, 100, 100, 'cubicOut', function () { // done })\\n   */\\n  // TODO Return animation key\\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\\n    animateTo(this, target, time, delay, easing, callback, forceAnimate);\\n  },\\n\\n  /**\\n   * Animate from the target state to current state.\\n   * The params and the return value are the same as `this.animateTo`.\\n   */\\n  animateFrom: function (target, time, delay, easing, callback, forceAnimate) {\\n    animateTo(this, target, time, delay, easing, callback, forceAnimate, true);\\n  }\\n};\\n\\nfunction animateTo(animatable, target, time, delay, easing, callback, forceAnimate, reverse) {\\n  // animateTo(target, time, easing, callback);\\n  if (isString(delay)) {\\n    callback = easing;\\n    easing = delay;\\n    delay = 0;\\n  } // animateTo(target, time, delay, callback);\\n  else if (isFunction(easing)) {\\n      callback = easing;\\n      easing = 'linear';\\n      delay = 0;\\n    } // animateTo(target, time, callback);\\n    else if (isFunction(delay)) {\\n        callback = delay;\\n        delay = 0;\\n      } // animateTo(target, callback)\\n      else if (isFunction(time)) {\\n          callback = time;\\n          time = 500;\\n        } // animateTo(target)\\n        else if (!time) {\\n            time = 500;\\n          } // Stop all previous animations\\n\\n\\n  animatable.stopAnimation();\\n  animateToShallow(animatable, '', animatable, target, time, delay, reverse); // Animators may be removed immediately after start\\n  // if there is nothing to animate\\n\\n  var animators = animatable.animators.slice();\\n  var count = animators.length;\\n\\n  function done() {\\n    count--;\\n\\n    if (!count) {\\n      callback && callback();\\n    }\\n  } // No animators. This should be checked before animators[i].start(),\\n  // because 'done' may be executed immediately if no need to animate.\\n\\n\\n  if (!count) {\\n    callback && callback();\\n  } // Start after all animators created\\n  // Incase any animator is done immediately when all animation properties are not changed\\n\\n\\n  for (var i = 0; i < animators.length; i++) {\\n    animators[i].done(done).start(easing, forceAnimate);\\n  }\\n}\\n/**\\n * @param {string} path=''\\n * @param {Object} source=animatable\\n * @param {Object} target\\n * @param {number} [time=500]\\n * @param {number} [delay=0]\\n * @param {boolean} [reverse] If `true`, animate\\n *        from the `target` to current state.\\n *\\n * @example\\n *  // Animate position\\n *  el._animateToShallow({\\n *      position: [10, 10]\\n *  })\\n *\\n *  // Animate shape, style and position in 100ms, delayed 100ms\\n *  el._animateToShallow({\\n *      shape: {\\n *          width: 500\\n *      },\\n *      style: {\\n *          fill: 'red'\\n *      }\\n *      position: [10, 10]\\n *  }, 100, 100)\\n */\\n\\n\\nfunction animateToShallow(animatable, path, source, target, time, delay, reverse) {\\n  var objShallow = {};\\n  var propertyCount = 0;\\n\\n  for (var name in target) {\\n    if (!target.hasOwnProperty(name)) {\\n      continue;\\n    }\\n\\n    if (source[name] != null) {\\n      if (isObject(target[name]) && !isArrayLike(target[name])) {\\n        animateToShallow(animatable, path ? path + '.' + name : name, source[name], target[name], time, delay, reverse);\\n      } else {\\n        if (reverse) {\\n          objShallow[name] = source[name];\\n          setAttrByPath(animatable, path, name, target[name]);\\n        } else {\\n          objShallow[name] = target[name];\\n        }\\n\\n        propertyCount++;\\n      }\\n    } else if (target[name] != null && !reverse) {\\n      setAttrByPath(animatable, path, name, target[name]);\\n    }\\n  }\\n\\n  if (propertyCount > 0) {\\n    animatable.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\\n  }\\n}\\n\\nfunction setAttrByPath(el, path, name, value) {\\n  // Attr directly if not has property\\n  // FIXME, if some property not needed for element ?\\n  if (!path) {\\n    el.attr(name, value);\\n  } else {\\n    // Only support set shape or style\\n    var props = {};\\n    props[path] = {};\\n    props[path][name] = value;\\n    el.attr(props);\\n  }\\n}\\n\\nvar _default = Animatable;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///196\\n\")},function(module,exports,__webpack_require__){eval(\"var easingFuncs = __webpack_require__(198);\\n\\n/**\\n * 动画主控制器\\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\\n * @config life(1000) 动画时长\\n * @config delay(0) 动画延迟时间\\n * @config loop(true)\\n * @config gap(0) 循环的间隔时间\\n * @config onframe\\n * @config easing(optional)\\n * @config ondestroy(optional)\\n * @config onrestart(optional)\\n *\\n * TODO pause\\n */\\nfunction Clip(options) {\\n  this._target = options.target; // 生命周期\\n\\n  this._life = options.life || 1000; // 延时\\n\\n  this._delay = options.delay || 0; // 开始时间\\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\\n\\n  this._initialized = false; // 是否循环\\n\\n  this.loop = options.loop == null ? false : options.loop;\\n  this.gap = options.gap || 0;\\n  this.easing = options.easing || 'Linear';\\n  this.onframe = options.onframe;\\n  this.ondestroy = options.ondestroy;\\n  this.onrestart = options.onrestart;\\n  this._pausedTime = 0;\\n  this._paused = false;\\n}\\n\\nClip.prototype = {\\n  constructor: Clip,\\n  step: function (globalTime, deltaTime) {\\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\\n    // PENDING\\n    if (!this._initialized) {\\n      this._startTime = globalTime + this._delay;\\n      this._initialized = true;\\n    }\\n\\n    if (this._paused) {\\n      this._pausedTime += deltaTime;\\n      return;\\n    }\\n\\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\\n\\n    if (percent < 0) {\\n      return;\\n    }\\n\\n    percent = Math.min(percent, 1);\\n    var easing = this.easing;\\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\\n    this.fire('frame', schedule); // 结束\\n\\n    if (percent == 1) {\\n      if (this.loop) {\\n        this.restart(globalTime); // 重新开始周期\\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\\n\\n        return 'restart';\\n      } // 动画完成将这个控制器标识为待删除\\n      // 在Animation.update中进行批量删除\\n\\n\\n      this._needsRemove = true;\\n      return 'destroy';\\n    }\\n\\n    return null;\\n  },\\n  restart: function (globalTime) {\\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\\n    this._startTime = globalTime - remainder + this.gap;\\n    this._pausedTime = 0;\\n    this._needsRemove = false;\\n  },\\n  fire: function (eventType, arg) {\\n    eventType = 'on' + eventType;\\n\\n    if (this[eventType]) {\\n      this[eventType](this._target, arg);\\n    }\\n  },\\n  pause: function () {\\n    this._paused = true;\\n  },\\n  resume: function () {\\n    this._paused = false;\\n  }\\n};\\nvar _default = Clip;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvYW5pbWF0aW9uL0NsaXAuanM/NDQzNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyxHQUFVOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7O0FBRWhDLG9DQUFvQzs7QUFFcEMsbUNBQW1DO0FBQ25DLDBEQUEwRDs7QUFFMUQsNEJBQTRCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlGQUFpRjs7QUFFakY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDOztBQUVqQztBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDOztBQUVBO0FBQ0EsT0FBTztBQUNQOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxOTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZWFzaW5nRnVuY3MgPSByZXF1aXJlKFwiLi9lYXNpbmdcIik7XG5cbi8qKlxuICog5Yqo55S75Li75o6n5Yi25ZmoXG4gKiBAY29uZmlnIHRhcmdldCDliqjnlLvlr7nosaHvvIzlj6/ku6XmmK/mlbDnu4TvvIzlpoLmnpzmmK/mlbDnu4TnmoTor53kvJrmibnph4/liIblj5FvbmZyYW1l562J5LqL5Lu2XG4gKiBAY29uZmlnIGxpZmUoMTAwMCkg5Yqo55S75pe26ZW/XG4gKiBAY29uZmlnIGRlbGF5KDApIOWKqOeUu+W7tui/n+aXtumXtFxuICogQGNvbmZpZyBsb29wKHRydWUpXG4gKiBAY29uZmlnIGdhcCgwKSDlvqrnjq/nmoTpl7TpmpTml7bpl7RcbiAqIEBjb25maWcgb25mcmFtZVxuICogQGNvbmZpZyBlYXNpbmcob3B0aW9uYWwpXG4gKiBAY29uZmlnIG9uZGVzdHJveShvcHRpb25hbClcbiAqIEBjb25maWcgb25yZXN0YXJ0KG9wdGlvbmFsKVxuICpcbiAqIFRPRE8gcGF1c2VcbiAqL1xuZnVuY3Rpb24gQ2xpcChvcHRpb25zKSB7XG4gIHRoaXMuX3RhcmdldCA9IG9wdGlvbnMudGFyZ2V0OyAvLyDnlJ/lkb3lkajmnJ9cblxuICB0aGlzLl9saWZlID0gb3B0aW9ucy5saWZlIHx8IDEwMDA7IC8vIOW7tuaXtlxuXG4gIHRoaXMuX2RlbGF5ID0gb3B0aW9ucy5kZWxheSB8fCAwOyAvLyDlvIDlp4vml7bpl7RcbiAgLy8gdGhpcy5fc3RhcnRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgKyB0aGlzLl9kZWxheTsvLyDljZXkvY3mr6vnp5JcblxuICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlOyAvLyDmmK/lkKblvqrnjq9cblxuICB0aGlzLmxvb3AgPSBvcHRpb25zLmxvb3AgPT0gbnVsbCA/IGZhbHNlIDogb3B0aW9ucy5sb29wO1xuICB0aGlzLmdhcCA9IG9wdGlvbnMuZ2FwIHx8IDA7XG4gIHRoaXMuZWFzaW5nID0gb3B0aW9ucy5lYXNpbmcgfHwgJ0xpbmVhcic7XG4gIHRoaXMub25mcmFtZSA9IG9wdGlvbnMub25mcmFtZTtcbiAgdGhpcy5vbmRlc3Ryb3kgPSBvcHRpb25zLm9uZGVzdHJveTtcbiAgdGhpcy5vbnJlc3RhcnQgPSBvcHRpb25zLm9ucmVzdGFydDtcbiAgdGhpcy5fcGF1c2VkVGltZSA9IDA7XG4gIHRoaXMuX3BhdXNlZCA9IGZhbHNlO1xufVxuXG5DbGlwLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IENsaXAsXG4gIHN0ZXA6IGZ1bmN0aW9uIChnbG9iYWxUaW1lLCBkZWx0YVRpbWUpIHtcbiAgICAvLyBTZXQgc3RhcnRUaW1lIG9uIGZpcnN0IHN0ZXAsIG9yIF9zdGFydFRpbWUgbWF5IGhhcyBtaWxsZXNlY29uZHMgZGlmZmVyZW50IGJldHdlZW4gY2xpcHNcbiAgICAvLyBQRU5ESU5HXG4gICAgaWYgKCF0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgdGhpcy5fc3RhcnRUaW1lID0gZ2xvYmFsVGltZSArIHRoaXMuX2RlbGF5O1xuICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9wYXVzZWQpIHtcbiAgICAgIHRoaXMuX3BhdXNlZFRpbWUgKz0gZGVsdGFUaW1lO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBwZXJjZW50ID0gKGdsb2JhbFRpbWUgLSB0aGlzLl9zdGFydFRpbWUgLSB0aGlzLl9wYXVzZWRUaW1lKSAvIHRoaXMuX2xpZmU7IC8vIOi/mOayoeW8gOWni1xuXG4gICAgaWYgKHBlcmNlbnQgPCAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcGVyY2VudCA9IE1hdGgubWluKHBlcmNlbnQsIDEpO1xuICAgIHZhciBlYXNpbmcgPSB0aGlzLmVhc2luZztcbiAgICB2YXIgZWFzaW5nRnVuYyA9IHR5cGVvZiBlYXNpbmcgPT0gJ3N0cmluZycgPyBlYXNpbmdGdW5jc1tlYXNpbmddIDogZWFzaW5nO1xuICAgIHZhciBzY2hlZHVsZSA9IHR5cGVvZiBlYXNpbmdGdW5jID09PSAnZnVuY3Rpb24nID8gZWFzaW5nRnVuYyhwZXJjZW50KSA6IHBlcmNlbnQ7XG4gICAgdGhpcy5maXJlKCdmcmFtZScsIHNjaGVkdWxlKTsgLy8g57uT5p2fXG5cbiAgICBpZiAocGVyY2VudCA9PSAxKSB7XG4gICAgICBpZiAodGhpcy5sb29wKSB7XG4gICAgICAgIHRoaXMucmVzdGFydChnbG9iYWxUaW1lKTsgLy8g6YeN5paw5byA5aeL5ZGo5pyfXG4gICAgICAgIC8vIOaKm+WHuuiAjOS4jeaYr+ebtOaOpeiwg+eUqOS6i+S7tuebtOWIsCBzdGFnZS51cGRhdGUg5ZCO5YaN57uf5LiA6LCD55So6L+Z5Lqb5LqL5Lu2XG5cbiAgICAgICAgcmV0dXJuICdyZXN0YXJ0JztcbiAgICAgIH0gLy8g5Yqo55S75a6M5oiQ5bCG6L+Z5Liq5o6n5Yi25Zmo5qCH6K+G5Li65b6F5Yig6ZmkXG4gICAgICAvLyDlnKhBbmltYXRpb24udXBkYXRl5Lit6L+b6KGM5om56YeP5Yig6ZmkXG5cblxuICAgICAgdGhpcy5fbmVlZHNSZW1vdmUgPSB0cnVlO1xuICAgICAgcmV0dXJuICdkZXN0cm95JztcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcbiAgcmVzdGFydDogZnVuY3Rpb24gKGdsb2JhbFRpbWUpIHtcbiAgICB2YXIgcmVtYWluZGVyID0gKGdsb2JhbFRpbWUgLSB0aGlzLl9zdGFydFRpbWUgLSB0aGlzLl9wYXVzZWRUaW1lKSAlIHRoaXMuX2xpZmU7XG4gICAgdGhpcy5fc3RhcnRUaW1lID0gZ2xvYmFsVGltZSAtIHJlbWFpbmRlciArIHRoaXMuZ2FwO1xuICAgIHRoaXMuX3BhdXNlZFRpbWUgPSAwO1xuICAgIHRoaXMuX25lZWRzUmVtb3ZlID0gZmFsc2U7XG4gIH0sXG4gIGZpcmU6IGZ1bmN0aW9uIChldmVudFR5cGUsIGFyZykge1xuICAgIGV2ZW50VHlwZSA9ICdvbicgKyBldmVudFR5cGU7XG5cbiAgICBpZiAodGhpc1tldmVudFR5cGVdKSB7XG4gICAgICB0aGlzW2V2ZW50VHlwZV0odGhpcy5fdGFyZ2V0LCBhcmcpO1xuICAgIH1cbiAgfSxcbiAgcGF1c2U6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl9wYXVzZWQgPSB0cnVlO1xuICB9LFxuICByZXN1bWU6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl9wYXVzZWQgPSBmYWxzZTtcbiAgfVxufTtcbnZhciBfZGVmYXVsdCA9IENsaXA7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///197\\n\")},function(module,exports){eval(\"/**\\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\\n * @exports zrender/animation/easing\\n */\\nvar easing = {\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  linear: function (k) {\\n    return k;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quadraticIn: function (k) {\\n    return k * k;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quadraticOut: function (k) {\\n    return k * (2 - k);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quadraticInOut: function (k) {\\n    if ((k *= 2) < 1) {\\n      return 0.5 * k * k;\\n    }\\n\\n    return -0.5 * (--k * (k - 2) - 1);\\n  },\\n  // 三次方的缓动（t^3）\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  cubicIn: function (k) {\\n    return k * k * k;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  cubicOut: function (k) {\\n    return --k * k * k + 1;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  cubicInOut: function (k) {\\n    if ((k *= 2) < 1) {\\n      return 0.5 * k * k * k;\\n    }\\n\\n    return 0.5 * ((k -= 2) * k * k + 2);\\n  },\\n  // 四次方的缓动（t^4）\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quarticIn: function (k) {\\n    return k * k * k * k;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quarticOut: function (k) {\\n    return 1 - --k * k * k * k;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quarticInOut: function (k) {\\n    if ((k *= 2) < 1) {\\n      return 0.5 * k * k * k * k;\\n    }\\n\\n    return -0.5 * ((k -= 2) * k * k * k - 2);\\n  },\\n  // 五次方的缓动（t^5）\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quinticIn: function (k) {\\n    return k * k * k * k * k;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quinticOut: function (k) {\\n    return --k * k * k * k * k + 1;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  quinticInOut: function (k) {\\n    if ((k *= 2) < 1) {\\n      return 0.5 * k * k * k * k * k;\\n    }\\n\\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\\n  },\\n  // 正弦曲线的缓动（sin(t)）\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  sinusoidalIn: function (k) {\\n    return 1 - Math.cos(k * Math.PI / 2);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  sinusoidalOut: function (k) {\\n    return Math.sin(k * Math.PI / 2);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  sinusoidalInOut: function (k) {\\n    return 0.5 * (1 - Math.cos(Math.PI * k));\\n  },\\n  // 指数曲线的缓动（2^t）\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  exponentialIn: function (k) {\\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  exponentialOut: function (k) {\\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  exponentialInOut: function (k) {\\n    if (k === 0) {\\n      return 0;\\n    }\\n\\n    if (k === 1) {\\n      return 1;\\n    }\\n\\n    if ((k *= 2) < 1) {\\n      return 0.5 * Math.pow(1024, k - 1);\\n    }\\n\\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\\n  },\\n  // 圆形曲线的缓动（sqrt(1-t^2)）\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  circularIn: function (k) {\\n    return 1 - Math.sqrt(1 - k * k);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  circularOut: function (k) {\\n    return Math.sqrt(1 - --k * k);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  circularInOut: function (k) {\\n    if ((k *= 2) < 1) {\\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\\n    }\\n\\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\\n  },\\n  // 创建类似于弹簧在停止前来回振荡的动画\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  elasticIn: function (k) {\\n    var s;\\n    var a = 0.1;\\n    var p = 0.4;\\n\\n    if (k === 0) {\\n      return 0;\\n    }\\n\\n    if (k === 1) {\\n      return 1;\\n    }\\n\\n    if (!a || a < 1) {\\n      a = 1;\\n      s = p / 4;\\n    } else {\\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\\n    }\\n\\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  elasticOut: function (k) {\\n    var s;\\n    var a = 0.1;\\n    var p = 0.4;\\n\\n    if (k === 0) {\\n      return 0;\\n    }\\n\\n    if (k === 1) {\\n      return 1;\\n    }\\n\\n    if (!a || a < 1) {\\n      a = 1;\\n      s = p / 4;\\n    } else {\\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\\n    }\\n\\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  elasticInOut: function (k) {\\n    var s;\\n    var a = 0.1;\\n    var p = 0.4;\\n\\n    if (k === 0) {\\n      return 0;\\n    }\\n\\n    if (k === 1) {\\n      return 1;\\n    }\\n\\n    if (!a || a < 1) {\\n      a = 1;\\n      s = p / 4;\\n    } else {\\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\\n    }\\n\\n    if ((k *= 2) < 1) {\\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\\n    }\\n\\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\\n  },\\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  backIn: function (k) {\\n    var s = 1.70158;\\n    return k * k * ((s + 1) * k - s);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  backOut: function (k) {\\n    var s = 1.70158;\\n    return --k * k * ((s + 1) * k + s) + 1;\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  backInOut: function (k) {\\n    var s = 1.70158 * 1.525;\\n\\n    if ((k *= 2) < 1) {\\n      return 0.5 * (k * k * ((s + 1) * k - s));\\n    }\\n\\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\\n  },\\n  // 创建弹跳效果\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  bounceIn: function (k) {\\n    return 1 - easing.bounceOut(1 - k);\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  bounceOut: function (k) {\\n    if (k < 1 / 2.75) {\\n      return 7.5625 * k * k;\\n    } else if (k < 2 / 2.75) {\\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\\n    } else if (k < 2.5 / 2.75) {\\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\\n    } else {\\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\\n    }\\n  },\\n\\n  /**\\n  * @param {number} k\\n  * @return {number}\\n  */\\n  bounceInOut: function (k) {\\n    if (k < 0.5) {\\n      return easing.bounceIn(k * 2) * 0.5;\\n    }\\n\\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\\n  }\\n};\\nvar _default = easing;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///198\\n\")},function(module,exports,__webpack_require__){eval(\"var _config = __webpack_require__(87);\\n\\nvar devicePixelRatio = _config.devicePixelRatio;\\n\\nvar util = __webpack_require__(59);\\n\\nvar log = __webpack_require__(133);\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\nvar timsort = __webpack_require__(100);\\n\\nvar Layer = __webpack_require__(200);\\n\\nvar requestAnimationFrame = __webpack_require__(136);\\n\\nvar Image = __webpack_require__(102);\\n\\nvar env = __webpack_require__(66);\\n\\nvar HOVER_LAYER_ZLEVEL = 1e5;\\nvar CANVAS_ZLEVEL = 314159;\\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\\nvar INCREMENTAL_INC = 0.001;\\n\\nfunction parseInt10(val) {\\n  return parseInt(val, 10);\\n}\\n\\nfunction isLayerValid(layer) {\\n  if (!layer) {\\n    return false;\\n  }\\n\\n  if (layer.__builtin__) {\\n    return true;\\n  }\\n\\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\\n    return false;\\n  }\\n\\n  return true;\\n}\\n\\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\\nvar viewRect = new BoundingRect(0, 0, 0, 0);\\n\\nfunction isDisplayableCulled(el, width, height) {\\n  tmpRect.copy(el.getBoundingRect());\\n\\n  if (el.transform) {\\n    tmpRect.applyTransform(el.transform);\\n  }\\n\\n  viewRect.width = width;\\n  viewRect.height = height;\\n  return !tmpRect.intersect(viewRect);\\n}\\n\\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\\n  if (clipPaths == prevClipPaths) {\\n    // Can both be null or undefined\\n    return false;\\n  }\\n\\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\\n    return true;\\n  }\\n\\n  for (var i = 0; i < clipPaths.length; i++) {\\n    if (clipPaths[i] !== prevClipPaths[i]) {\\n      return true;\\n    }\\n  }\\n}\\n\\nfunction doClip(clipPaths, ctx) {\\n  for (var i = 0; i < clipPaths.length; i++) {\\n    var clipPath = clipPaths[i];\\n    clipPath.setTransform(ctx);\\n    ctx.beginPath();\\n    clipPath.buildPath(ctx, clipPath.shape);\\n    ctx.clip(); // Transform back\\n\\n    clipPath.restoreTransform(ctx);\\n  }\\n}\\n\\nfunction createRoot(width, height) {\\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\\n\\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\\n  return domRoot;\\n}\\n/**\\n * @alias module:zrender/Painter\\n * @constructor\\n * @param {HTMLElement} root 绘图容器\\n * @param {module:zrender/Storage} storage\\n * @param {Object} opts\\n */\\n\\n\\nvar Painter = function (root, storage, opts) {\\n  this.type = 'canvas'; // In node environment using node-canvas\\n\\n  var singleCanvas = !root.nodeName // In node ?\\n  || root.nodeName.toUpperCase() === 'CANVAS';\\n  this._opts = opts = util.extend({}, opts || {});\\n  /**\\n   * @type {number}\\n   */\\n\\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\\n  /**\\n   * @type {boolean}\\n   * @private\\n   */\\n\\n  this._singleCanvas = singleCanvas;\\n  /**\\n   * 绘图容器\\n   * @type {HTMLElement}\\n   */\\n\\n  this.root = root;\\n  var rootStyle = root.style;\\n\\n  if (rootStyle) {\\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\\n    root.innerHTML = '';\\n  }\\n  /**\\n   * @type {module:zrender/Storage}\\n   */\\n\\n\\n  this.storage = storage;\\n  /**\\n   * @type {Array.<number>}\\n   * @private\\n   */\\n\\n  var zlevelList = this._zlevelList = [];\\n  /**\\n   * @type {Object.<string, module:zrender/Layer>}\\n   * @private\\n   */\\n\\n  var layers = this._layers = {};\\n  /**\\n   * @type {Object.<string, Object>}\\n   * @private\\n   */\\n\\n  this._layerConfig = {};\\n  /**\\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\\n   */\\n\\n  this._needsManuallyCompositing = false;\\n\\n  if (!singleCanvas) {\\n    this._width = this._getSize(0);\\n    this._height = this._getSize(1);\\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\\n    root.appendChild(domRoot);\\n  } else {\\n    var width = root.width;\\n    var height = root.height;\\n\\n    if (opts.width != null) {\\n      width = opts.width;\\n    }\\n\\n    if (opts.height != null) {\\n      height = opts.height;\\n    }\\n\\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\\n\\n    root.width = width * this.dpr;\\n    root.height = height * this.dpr;\\n    this._width = width;\\n    this._height = height; // Create layer if only one given canvas\\n    // Device can be specified to create a high dpi image.\\n\\n    var mainLayer = new Layer(root, this, this.dpr);\\n    mainLayer.__builtin__ = true;\\n    mainLayer.initContext(); // FIXME Use canvas width and height\\n    // mainLayer.resize(width, height);\\n\\n    layers[CANVAS_ZLEVEL] = mainLayer;\\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\\n\\n    zlevelList.push(CANVAS_ZLEVEL);\\n    this._domRoot = root;\\n  }\\n  /**\\n   * @type {module:zrender/Layer}\\n   * @private\\n   */\\n\\n\\n  this._hoverlayer = null;\\n  this._hoverElements = [];\\n};\\n\\nPainter.prototype = {\\n  constructor: Painter,\\n  getType: function () {\\n    return 'canvas';\\n  },\\n\\n  /**\\n   * If painter use a single canvas\\n   * @return {boolean}\\n   */\\n  isSingleCanvas: function () {\\n    return this._singleCanvas;\\n  },\\n\\n  /**\\n   * @return {HTMLDivElement}\\n   */\\n  getViewportRoot: function () {\\n    return this._domRoot;\\n  },\\n  getViewportRootOffset: function () {\\n    var viewportRoot = this.getViewportRoot();\\n\\n    if (viewportRoot) {\\n      return {\\n        offsetLeft: viewportRoot.offsetLeft || 0,\\n        offsetTop: viewportRoot.offsetTop || 0\\n      };\\n    }\\n  },\\n\\n  /**\\n   * 刷新\\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\\n   */\\n  refresh: function (paintAll) {\\n    var list = this.storage.getDisplayList(true);\\n    var zlevelList = this._zlevelList;\\n    this._redrawId = Math.random();\\n\\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\\n\\n\\n    for (var i = 0; i < zlevelList.length; i++) {\\n      var z = zlevelList[i];\\n      var layer = this._layers[z];\\n\\n      if (!layer.__builtin__ && layer.refresh) {\\n        var clearColor = i === 0 ? this._backgroundColor : null;\\n        layer.refresh(clearColor);\\n      }\\n    }\\n\\n    this.refreshHover();\\n    return this;\\n  },\\n  addHover: function (el, hoverStyle) {\\n    if (el.__hoverMir) {\\n      return;\\n    }\\n\\n    var elMirror = new el.constructor({\\n      style: el.style,\\n      shape: el.shape,\\n      z: el.z,\\n      z2: el.z2,\\n      silent: el.silent\\n    });\\n    elMirror.__from = el;\\n    el.__hoverMir = elMirror;\\n    hoverStyle && elMirror.setStyle(hoverStyle);\\n\\n    this._hoverElements.push(elMirror);\\n\\n    return elMirror;\\n  },\\n  removeHover: function (el) {\\n    var elMirror = el.__hoverMir;\\n    var hoverElements = this._hoverElements;\\n    var idx = util.indexOf(hoverElements, elMirror);\\n\\n    if (idx >= 0) {\\n      hoverElements.splice(idx, 1);\\n    }\\n\\n    el.__hoverMir = null;\\n  },\\n  clearHover: function (el) {\\n    var hoverElements = this._hoverElements;\\n\\n    for (var i = 0; i < hoverElements.length; i++) {\\n      var from = hoverElements[i].__from;\\n\\n      if (from) {\\n        from.__hoverMir = null;\\n      }\\n    }\\n\\n    hoverElements.length = 0;\\n  },\\n  refreshHover: function () {\\n    var hoverElements = this._hoverElements;\\n    var len = hoverElements.length;\\n    var hoverLayer = this._hoverlayer;\\n    hoverLayer && hoverLayer.clear();\\n\\n    if (!len) {\\n      return;\\n    }\\n\\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\\n    // FIXME?\\n\\n    if (!hoverLayer) {\\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\\n    }\\n\\n    var scope = {};\\n    hoverLayer.ctx.save();\\n\\n    for (var i = 0; i < len;) {\\n      var el = hoverElements[i];\\n      var originalEl = el.__from; // Original el is removed\\n      // PENDING\\n\\n      if (!(originalEl && originalEl.__zr)) {\\n        hoverElements.splice(i, 1);\\n        originalEl.__hoverMir = null;\\n        len--;\\n        continue;\\n      }\\n\\n      i++; // Use transform\\n      // FIXME style and shape ?\\n\\n      if (!originalEl.invisible) {\\n        el.transform = originalEl.transform;\\n        el.invTransform = originalEl.invTransform;\\n        el.__clipPaths = originalEl.__clipPaths; // el.\\n\\n        this._doPaintEl(el, hoverLayer, true, scope);\\n      }\\n    }\\n\\n    hoverLayer.ctx.restore();\\n  },\\n  getHoverLayer: function () {\\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\\n  },\\n  _paintList: function (list, paintAll, redrawId) {\\n    if (this._redrawId !== redrawId) {\\n      return;\\n    }\\n\\n    paintAll = paintAll || false;\\n\\n    this._updateLayerStatus(list);\\n\\n    var finished = this._doPaintList(list, paintAll);\\n\\n    if (this._needsManuallyCompositing) {\\n      this._compositeManually();\\n    }\\n\\n    if (!finished) {\\n      var self = this;\\n      requestAnimationFrame(function () {\\n        self._paintList(list, paintAll, redrawId);\\n      });\\n    }\\n  },\\n  _compositeManually: function () {\\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\\n    var width = this._domRoot.width;\\n    var height = this._domRoot.height;\\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\\n\\n    this.eachBuiltinLayer(function (layer) {\\n      if (layer.virtual) {\\n        ctx.drawImage(layer.dom, 0, 0, width, height);\\n      }\\n    });\\n  },\\n  _doPaintList: function (list, paintAll) {\\n    var layerList = [];\\n\\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\\n      var zlevel = this._zlevelList[zi];\\n      var layer = this._layers[zlevel];\\n\\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\\n        layerList.push(layer);\\n      }\\n    }\\n\\n    var finished = true;\\n\\n    for (var k = 0; k < layerList.length; k++) {\\n      var layer = layerList[k];\\n      var ctx = layer.ctx;\\n      var scope = {};\\n      ctx.save();\\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\\n      var useTimer = !paintAll && layer.incremental && Date.now;\\n      var startTime = useTimer && Date.now();\\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\\n\\n      if (layer.__startIndex === layer.__endIndex) {\\n        layer.clear(false, clearColor);\\n      } else if (start === layer.__startIndex) {\\n        var firstEl = list[start];\\n\\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\\n          layer.clear(false, clearColor);\\n        }\\n      }\\n\\n      if (start === -1) {\\n        console.error('For some unknown reason. drawIndex is -1');\\n        start = layer.__startIndex;\\n      }\\n\\n      for (var i = start; i < layer.__endIndex; i++) {\\n        var el = list[i];\\n\\n        this._doPaintEl(el, layer, paintAll, scope);\\n\\n        el.__dirty = el.__dirtyText = false;\\n\\n        if (useTimer) {\\n          // Date.now can be executed in 13,025,305 ops/second.\\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\\n          // The rest elements will be drawn in the next frame.\\n\\n          if (dTime > 15) {\\n            break;\\n          }\\n        }\\n      }\\n\\n      layer.__drawIndex = i;\\n\\n      if (layer.__drawIndex < layer.__endIndex) {\\n        finished = false;\\n      }\\n\\n      if (scope.prevElClipPaths) {\\n        // Needs restore the state. If last drawn element is in the clipping area.\\n        ctx.restore();\\n      }\\n\\n      ctx.restore();\\n    }\\n\\n    if (env.wxa) {\\n      // Flush for weixin application\\n      util.each(this._layers, function (layer) {\\n        if (layer && layer.ctx && layer.ctx.draw) {\\n          layer.ctx.draw();\\n        }\\n      });\\n    }\\n\\n    return finished;\\n  },\\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\\n    var ctx = currentLayer.ctx;\\n    var m = el.transform;\\n\\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\\n    !el.invisible // Ignore transparent element\\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\\n    // Draw a scale 0 element can cause all following draw wrong\\n    // And setTransform with scale 0 will cause set back transform failed.\\n    && !(m && !m[0] && !m[3]) // Ignore culled element\\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\\n\\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\\n        // If has previous clipping state, restore from it\\n        if (scope.prevElClipPaths) {\\n          currentLayer.ctx.restore();\\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\\n\\n          scope.prevEl = null;\\n        } // New clipping state\\n\\n\\n        if (clipPaths) {\\n          ctx.save();\\n          doClip(clipPaths, ctx);\\n          scope.prevElClipPaths = clipPaths;\\n        }\\n      }\\n\\n      el.beforeBrush && el.beforeBrush(ctx);\\n      el.brush(ctx, scope.prevEl || null);\\n      scope.prevEl = el;\\n      el.afterBrush && el.afterBrush(ctx);\\n    }\\n  },\\n\\n  /**\\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\\n   * @param {number} zlevel\\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\\n   * @return {module:zrender/Layer}\\n   */\\n  getLayer: function (zlevel, virtual) {\\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\\n      zlevel = CANVAS_ZLEVEL;\\n    }\\n\\n    var layer = this._layers[zlevel];\\n\\n    if (!layer) {\\n      // Create a new layer\\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\\n      layer.zlevel = zlevel;\\n      layer.__builtin__ = true;\\n\\n      if (this._layerConfig[zlevel]) {\\n        util.merge(layer, this._layerConfig[zlevel], true);\\n      }\\n\\n      if (virtual) {\\n        layer.virtual = virtual;\\n      }\\n\\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\\n      // Or excanvas will get 0px clientWidth and clientHeight\\n\\n      layer.initContext();\\n    }\\n\\n    return layer;\\n  },\\n  insertLayer: function (zlevel, layer) {\\n    var layersMap = this._layers;\\n    var zlevelList = this._zlevelList;\\n    var len = zlevelList.length;\\n    var prevLayer = null;\\n    var i = -1;\\n    var domRoot = this._domRoot;\\n\\n    if (layersMap[zlevel]) {\\n      log('ZLevel ' + zlevel + ' has been used already');\\n      return;\\n    } // Check if is a valid layer\\n\\n\\n    if (!isLayerValid(layer)) {\\n      log('Layer of zlevel ' + zlevel + ' is not valid');\\n      return;\\n    }\\n\\n    if (len > 0 && zlevel > zlevelList[0]) {\\n      for (i = 0; i < len - 1; i++) {\\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\\n          break;\\n        }\\n      }\\n\\n      prevLayer = layersMap[zlevelList[i]];\\n    }\\n\\n    zlevelList.splice(i + 1, 0, zlevel);\\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\\n    // (It can be a WebGL layer and assigned to a ZImage element)\\n    // But it still under management of zrender.\\n\\n    if (!layer.virtual) {\\n      if (prevLayer) {\\n        var prevDom = prevLayer.dom;\\n\\n        if (prevDom.nextSibling) {\\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\\n        } else {\\n          domRoot.appendChild(layer.dom);\\n        }\\n      } else {\\n        if (domRoot.firstChild) {\\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\\n        } else {\\n          domRoot.appendChild(layer.dom);\\n        }\\n      }\\n    }\\n  },\\n  // Iterate each layer\\n  eachLayer: function (cb, context) {\\n    var zlevelList = this._zlevelList;\\n    var z;\\n    var i;\\n\\n    for (i = 0; i < zlevelList.length; i++) {\\n      z = zlevelList[i];\\n      cb.call(context, this._layers[z], z);\\n    }\\n  },\\n  // Iterate each buildin layer\\n  eachBuiltinLayer: function (cb, context) {\\n    var zlevelList = this._zlevelList;\\n    var layer;\\n    var z;\\n    var i;\\n\\n    for (i = 0; i < zlevelList.length; i++) {\\n      z = zlevelList[i];\\n      layer = this._layers[z];\\n\\n      if (layer.__builtin__) {\\n        cb.call(context, layer, z);\\n      }\\n    }\\n  },\\n  // Iterate each other layer except buildin layer\\n  eachOtherLayer: function (cb, context) {\\n    var zlevelList = this._zlevelList;\\n    var layer;\\n    var z;\\n    var i;\\n\\n    for (i = 0; i < zlevelList.length; i++) {\\n      z = zlevelList[i];\\n      layer = this._layers[z];\\n\\n      if (!layer.__builtin__) {\\n        cb.call(context, layer, z);\\n      }\\n    }\\n  },\\n\\n  /**\\n   * 获取所有已创建的层\\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\\n   */\\n  getLayers: function () {\\n    return this._layers;\\n  },\\n  _updateLayerStatus: function (list) {\\n    this.eachBuiltinLayer(function (layer, z) {\\n      layer.__dirty = layer.__used = false;\\n    });\\n\\n    function updatePrevLayer(idx) {\\n      if (prevLayer) {\\n        if (prevLayer.__endIndex !== idx) {\\n          prevLayer.__dirty = true;\\n        }\\n\\n        prevLayer.__endIndex = idx;\\n      }\\n    }\\n\\n    if (this._singleCanvas) {\\n      for (var i = 1; i < list.length; i++) {\\n        var el = list[i];\\n\\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\\n          this._needsManuallyCompositing = true;\\n          break;\\n        }\\n      }\\n    }\\n\\n    var prevLayer = null;\\n    var incrementalLayerCount = 0;\\n\\n    for (var i = 0; i < list.length; i++) {\\n      var el = list[i];\\n      var zlevel = el.zlevel;\\n      var layer; // PENDING If change one incremental element style ?\\n      // TODO Where there are non-incremental elements between incremental elements.\\n\\n      if (el.incremental) {\\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\\n        layer.incremental = true;\\n        incrementalLayerCount = 1;\\n      } else {\\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\\n      }\\n\\n      if (!layer.__builtin__) {\\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\\n      }\\n\\n      if (layer !== prevLayer) {\\n        layer.__used = true;\\n\\n        if (layer.__startIndex !== i) {\\n          layer.__dirty = true;\\n        }\\n\\n        layer.__startIndex = i;\\n\\n        if (!layer.incremental) {\\n          layer.__drawIndex = i;\\n        } else {\\n          // Mark layer draw index needs to update.\\n          layer.__drawIndex = -1;\\n        }\\n\\n        updatePrevLayer(i);\\n        prevLayer = layer;\\n      }\\n\\n      if (el.__dirty) {\\n        layer.__dirty = true;\\n\\n        if (layer.incremental && layer.__drawIndex < 0) {\\n          // Start draw from the first dirty element.\\n          layer.__drawIndex = i;\\n        }\\n      }\\n    }\\n\\n    updatePrevLayer(i);\\n    this.eachBuiltinLayer(function (layer, z) {\\n      // Used in last frame but not in this frame. Needs clear\\n      if (!layer.__used && layer.getElementCount() > 0) {\\n        layer.__dirty = true;\\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\\n      } // For incremental layer. In case start index changed and no elements are dirty.\\n\\n\\n      if (layer.__dirty && layer.__drawIndex < 0) {\\n        layer.__drawIndex = layer.__startIndex;\\n      }\\n    });\\n  },\\n\\n  /**\\n   * 清除hover层外所有内容\\n   */\\n  clear: function () {\\n    this.eachBuiltinLayer(this._clearLayer);\\n    return this;\\n  },\\n  _clearLayer: function (layer) {\\n    layer.clear();\\n  },\\n  setBackgroundColor: function (backgroundColor) {\\n    this._backgroundColor = backgroundColor;\\n  },\\n\\n  /**\\n   * 修改指定zlevel的绘制参数\\n   *\\n   * @param {string} zlevel\\n   * @param {Object} config 配置对象\\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\\n   * @param {number} [config.lastFrameAlpha=0.7]\\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\\n   */\\n  configLayer: function (zlevel, config) {\\n    if (config) {\\n      var layerConfig = this._layerConfig;\\n\\n      if (!layerConfig[zlevel]) {\\n        layerConfig[zlevel] = config;\\n      } else {\\n        util.merge(layerConfig[zlevel], config, true);\\n      }\\n\\n      for (var i = 0; i < this._zlevelList.length; i++) {\\n        var _zlevel = this._zlevelList[i];\\n\\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\\n          var layer = this._layers[_zlevel];\\n          util.merge(layer, layerConfig[zlevel], true);\\n        }\\n      }\\n    }\\n  },\\n\\n  /**\\n   * 删除指定层\\n   * @param {number} zlevel 层所在的zlevel\\n   */\\n  delLayer: function (zlevel) {\\n    var layers = this._layers;\\n    var zlevelList = this._zlevelList;\\n    var layer = layers[zlevel];\\n\\n    if (!layer) {\\n      return;\\n    }\\n\\n    layer.dom.parentNode.removeChild(layer.dom);\\n    delete layers[zlevel];\\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\\n  },\\n\\n  /**\\n   * 区域大小变化后重绘\\n   */\\n  resize: function (width, height) {\\n    if (!this._domRoot.style) {\\n      // Maybe in node or worker\\n      if (width == null || height == null) {\\n        return;\\n      }\\n\\n      this._width = width;\\n      this._height = height;\\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\\n    } else {\\n      var domRoot = this._domRoot; // FIXME Why ?\\n\\n      domRoot.style.display = 'none'; // Save input w/h\\n\\n      var opts = this._opts;\\n      width != null && (opts.width = width);\\n      height != null && (opts.height = height);\\n      width = this._getSize(0);\\n      height = this._getSize(1);\\n      domRoot.style.display = ''; // 优化没有实际改变的resize\\n\\n      if (this._width != width || height != this._height) {\\n        domRoot.style.width = width + 'px';\\n        domRoot.style.height = height + 'px';\\n\\n        for (var id in this._layers) {\\n          if (this._layers.hasOwnProperty(id)) {\\n            this._layers[id].resize(width, height);\\n          }\\n        }\\n\\n        util.each(this._progressiveLayers, function (layer) {\\n          layer.resize(width, height);\\n        });\\n        this.refresh(true);\\n      }\\n\\n      this._width = width;\\n      this._height = height;\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * 清除单独的一个层\\n   * @param {number} zlevel\\n   */\\n  clearLayer: function (zlevel) {\\n    var layer = this._layers[zlevel];\\n\\n    if (layer) {\\n      layer.clear();\\n    }\\n  },\\n\\n  /**\\n   * 释放\\n   */\\n  dispose: function () {\\n    this.root.innerHTML = '';\\n    this.root = this.storage = this._domRoot = this._layers = null;\\n  },\\n\\n  /**\\n   * Get canvas which has all thing rendered\\n   * @param {Object} opts\\n   * @param {string} [opts.backgroundColor]\\n   * @param {number} [opts.pixelRatio]\\n   */\\n  getRenderedCanvas: function (opts) {\\n    opts = opts || {};\\n\\n    if (this._singleCanvas && !this._compositeManually) {\\n      return this._layers[CANVAS_ZLEVEL].dom;\\n    }\\n\\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\\n    imageLayer.initContext();\\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\\n\\n    if (opts.pixelRatio <= this.dpr) {\\n      this.refresh();\\n      var width = imageLayer.dom.width;\\n      var height = imageLayer.dom.height;\\n      var ctx = imageLayer.ctx;\\n      this.eachLayer(function (layer) {\\n        if (layer.__builtin__) {\\n          ctx.drawImage(layer.dom, 0, 0, width, height);\\n        } else if (layer.renderToCanvas) {\\n          imageLayer.ctx.save();\\n          layer.renderToCanvas(imageLayer.ctx);\\n          imageLayer.ctx.restore();\\n        }\\n      });\\n    } else {\\n      // PENDING, echarts-gl and incremental rendering.\\n      var scope = {};\\n      var displayList = this.storage.getDisplayList(true);\\n\\n      for (var i = 0; i < displayList.length; i++) {\\n        var el = displayList[i];\\n\\n        this._doPaintEl(el, imageLayer, true, scope);\\n      }\\n    }\\n\\n    return imageLayer.dom;\\n  },\\n\\n  /**\\n   * 获取绘图区域宽度\\n   */\\n  getWidth: function () {\\n    return this._width;\\n  },\\n\\n  /**\\n   * 获取绘图区域高度\\n   */\\n  getHeight: function () {\\n    return this._height;\\n  },\\n  _getSize: function (whIdx) {\\n    var opts = this._opts;\\n    var wh = ['width', 'height'][whIdx];\\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\\n\\n    if (opts[wh] != null && opts[wh] !== 'auto') {\\n      return parseFloat(opts[wh]);\\n    }\\n\\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\\n\\n    var stl = document.defaultView.getComputedStyle(root);\\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\\n  },\\n  pathToImage: function (path, dpr) {\\n    dpr = dpr || this.dpr;\\n    var canvas = document.createElement('canvas');\\n    var ctx = canvas.getContext('2d');\\n    var rect = path.getBoundingRect();\\n    var style = path.style;\\n    var shadowBlurSize = style.shadowBlur * dpr;\\n    var shadowOffsetX = style.shadowOffsetX * dpr;\\n    var shadowOffsetY = style.shadowOffsetY * dpr;\\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\\n    var width = rect.width + leftMargin + rightMargin;\\n    var height = rect.height + topMargin + bottomMargin;\\n    canvas.width = width * dpr;\\n    canvas.height = height * dpr;\\n    ctx.scale(dpr, dpr);\\n    ctx.clearRect(0, 0, width, height);\\n    ctx.dpr = dpr;\\n    var pathTransform = {\\n      position: path.position,\\n      rotation: path.rotation,\\n      scale: path.scale\\n    };\\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\\n    path.rotation = 0;\\n    path.scale = [1, 1];\\n    path.updateTransform();\\n\\n    if (path) {\\n      path.brush(ctx);\\n    }\\n\\n    var ImageShape = Image;\\n    var imgShape = new ImageShape({\\n      style: {\\n        x: 0,\\n        y: 0,\\n        image: canvas\\n      }\\n    });\\n\\n    if (pathTransform.position != null) {\\n      imgShape.position = path.position = pathTransform.position;\\n    }\\n\\n    if (pathTransform.rotation != null) {\\n      imgShape.rotation = path.rotation = pathTransform.rotation;\\n    }\\n\\n    if (pathTransform.scale != null) {\\n      imgShape.scale = path.scale = pathTransform.scale;\\n    }\\n\\n    return imgShape;\\n  }\\n};\\nvar _default = Painter;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///199\\n\")},function(module,exports,__webpack_require__){eval(\"var util = __webpack_require__(59);\\n\\nvar _config = __webpack_require__(87);\\n\\nvar devicePixelRatio = _config.devicePixelRatio;\\n\\nvar Style = __webpack_require__(101);\\n\\nvar Pattern = __webpack_require__(135);\\n\\n/**\\n * @module zrender/Layer\\n * @author pissang(https://www.github.com/pissang)\\n */\\nfunction returnFalse() {\\n  return false;\\n}\\n/**\\n * 创建dom\\n *\\n * @inner\\n * @param {string} id dom id 待用\\n * @param {Painter} painter painter instance\\n * @param {number} number\\n */\\n\\n\\nfunction createDom(id, painter, dpr) {\\n  var newDom = util.createCanvas();\\n  var width = painter.getWidth();\\n  var height = painter.getHeight();\\n  var newDomStyle = newDom.style;\\n\\n  if (newDomStyle) {\\n    // In node or some other non-browser environment\\n    newDomStyle.position = 'absolute';\\n    newDomStyle.left = 0;\\n    newDomStyle.top = 0;\\n    newDomStyle.width = width + 'px';\\n    newDomStyle.height = height + 'px';\\n    newDom.setAttribute('data-zr-dom-id', id);\\n  }\\n\\n  newDom.width = width * dpr;\\n  newDom.height = height * dpr;\\n  return newDom;\\n}\\n/**\\n * @alias module:zrender/Layer\\n * @constructor\\n * @extends module:zrender/mixin/Transformable\\n * @param {string} id\\n * @param {module:zrender/Painter} painter\\n * @param {number} [dpr]\\n */\\n\\n\\nvar Layer = function (id, painter, dpr) {\\n  var dom;\\n  dpr = dpr || devicePixelRatio;\\n\\n  if (typeof id === 'string') {\\n    dom = createDom(id, painter, dpr);\\n  } // Not using isDom because in node it will return false\\n  else if (util.isObject(id)) {\\n      dom = id;\\n      id = dom.id;\\n    }\\n\\n  this.id = id;\\n  this.dom = dom;\\n  var domStyle = dom.style;\\n\\n  if (domStyle) {\\n    // Not in node\\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\\n\\n    domStyle['-webkit-user-select'] = 'none';\\n    domStyle['user-select'] = 'none';\\n    domStyle['-webkit-touch-callout'] = 'none';\\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\\n    domStyle['padding'] = 0;\\n    domStyle['margin'] = 0;\\n    domStyle['border-width'] = 0;\\n  }\\n\\n  this.domBack = null;\\n  this.ctxBack = null;\\n  this.painter = painter;\\n  this.config = null; // Configs\\n\\n  /**\\n   * 每次清空画布的颜色\\n   * @type {string}\\n   * @default 0\\n   */\\n\\n  this.clearColor = 0;\\n  /**\\n   * 是否开启动态模糊\\n   * @type {boolean}\\n   * @default false\\n   */\\n\\n  this.motionBlur = false;\\n  /**\\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\\n   * @type {number}\\n   * @default 0.7\\n   */\\n\\n  this.lastFrameAlpha = 0.7;\\n  /**\\n   * Layer dpr\\n   * @type {number}\\n   */\\n\\n  this.dpr = dpr;\\n};\\n\\nLayer.prototype = {\\n  constructor: Layer,\\n  __dirty: true,\\n  __used: false,\\n  __drawIndex: 0,\\n  __startIndex: 0,\\n  __endIndex: 0,\\n  incremental: false,\\n  getElementCount: function () {\\n    return this.__endIndex - this.__startIndex;\\n  },\\n  initContext: function () {\\n    this.ctx = this.dom.getContext('2d');\\n    this.ctx.dpr = this.dpr;\\n  },\\n  createBackBuffer: function () {\\n    var dpr = this.dpr;\\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\\n    this.ctxBack = this.domBack.getContext('2d');\\n\\n    if (dpr != 1) {\\n      this.ctxBack.scale(dpr, dpr);\\n    }\\n  },\\n\\n  /**\\n   * @param  {number} width\\n   * @param  {number} height\\n   */\\n  resize: function (width, height) {\\n    var dpr = this.dpr;\\n    var dom = this.dom;\\n    var domStyle = dom.style;\\n    var domBack = this.domBack;\\n\\n    if (domStyle) {\\n      domStyle.width = width + 'px';\\n      domStyle.height = height + 'px';\\n    }\\n\\n    dom.width = width * dpr;\\n    dom.height = height * dpr;\\n\\n    if (domBack) {\\n      domBack.width = width * dpr;\\n      domBack.height = height * dpr;\\n\\n      if (dpr != 1) {\\n        this.ctxBack.scale(dpr, dpr);\\n      }\\n    }\\n  },\\n\\n  /**\\n   * 清空该层画布\\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\\n   * @param {Color} [clearColor]\\n   */\\n  clear: function (clearAll, clearColor) {\\n    var dom = this.dom;\\n    var ctx = this.ctx;\\n    var width = dom.width;\\n    var height = dom.height;\\n    var clearColor = clearColor || this.clearColor;\\n    var haveMotionBLur = this.motionBlur && !clearAll;\\n    var lastFrameAlpha = this.lastFrameAlpha;\\n    var dpr = this.dpr;\\n\\n    if (haveMotionBLur) {\\n      if (!this.domBack) {\\n        this.createBackBuffer();\\n      }\\n\\n      this.ctxBack.globalCompositeOperation = 'copy';\\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\\n    }\\n\\n    ctx.clearRect(0, 0, width, height);\\n\\n    if (clearColor && clearColor !== 'transparent') {\\n      var clearColorGradientOrPattern; // Gradient\\n\\n      if (clearColor.colorStops) {\\n        // Cache canvas gradient\\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\\n          x: 0,\\n          y: 0,\\n          width: width,\\n          height: height\\n        });\\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\\n      } // Pattern\\n      else if (clearColor.image) {\\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\\n        }\\n\\n      ctx.save();\\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\\n      ctx.fillRect(0, 0, width, height);\\n      ctx.restore();\\n    }\\n\\n    if (haveMotionBLur) {\\n      var domBack = this.domBack;\\n      ctx.save();\\n      ctx.globalAlpha = lastFrameAlpha;\\n      ctx.drawImage(domBack, 0, 0, width, height);\\n      ctx.restore();\\n    }\\n  }\\n};\\nvar _default = Layer;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///200\\n\")},function(module,exports,__webpack_require__){eval(\"var textHelper = __webpack_require__(137);\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\n/**\\n * Mixin for drawing text in a element bounding rect\\n * @module zrender/mixin/RectText\\n */\\nvar tmpRect = new BoundingRect();\\n\\nvar RectText = function () {};\\n\\nRectText.prototype = {\\n  constructor: RectText,\\n\\n  /**\\n   * Draw text in a rect with specified position.\\n   * @param  {CanvasRenderingContext2D} ctx\\n   * @param  {Object} rect Displayable rect\\n   */\\n  drawRectText: function (ctx, rect) {\\n    var style = this.style;\\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\\n\\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\\n    var text = style.text; // Convert to string\\n\\n    text != null && (text += '');\\n\\n    if (!textHelper.needDrawText(text, style)) {\\n      return;\\n    } // FIXME\\n    // Do not provide prevEl to `textHelper.renderText` for ctx prop cache,\\n    // but use `ctx.save()` and `ctx.restore()`. Because the cache for rect\\n    // text propably break the cache for its host elements.\\n\\n\\n    ctx.save(); // Transform rect to view space\\n\\n    var transform = this.transform;\\n\\n    if (!style.transformText) {\\n      if (transform) {\\n        tmpRect.copy(rect);\\n        tmpRect.applyTransform(transform);\\n        rect = tmpRect;\\n      }\\n    } else {\\n      this.setTransform(ctx);\\n    } // transformText and textRotation can not be used at the same time.\\n\\n\\n    textHelper.renderText(this, ctx, text, style, rect);\\n    ctx.restore();\\n  }\\n};\\nvar _default = RectText;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9taXhpbi9SZWN0VGV4dC5qcz85ZTJlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLEdBQWdCOztBQUV6QyxtQkFBbUIsbUJBQU8sQ0FBQyxFQUF5Qjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLHlCQUF5QjtBQUN2QyxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDOztBQUVsQztBQUNBLDBCQUEwQjs7QUFFMUI7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7OztBQUdBLGVBQWU7O0FBRWY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIwMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB0ZXh0SGVscGVyID0gcmVxdWlyZShcIi4uL2hlbHBlci90ZXh0XCIpO1xuXG52YXIgQm91bmRpbmdSZWN0ID0gcmVxdWlyZShcIi4uLy4uL2NvcmUvQm91bmRpbmdSZWN0XCIpO1xuXG4vKipcbiAqIE1peGluIGZvciBkcmF3aW5nIHRleHQgaW4gYSBlbGVtZW50IGJvdW5kaW5nIHJlY3RcbiAqIEBtb2R1bGUgenJlbmRlci9taXhpbi9SZWN0VGV4dFxuICovXG52YXIgdG1wUmVjdCA9IG5ldyBCb3VuZGluZ1JlY3QoKTtcblxudmFyIFJlY3RUZXh0ID0gZnVuY3Rpb24gKCkge307XG5cblJlY3RUZXh0LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFJlY3RUZXh0LFxuXG4gIC8qKlxuICAgKiBEcmF3IHRleHQgaW4gYSByZWN0IHdpdGggc3BlY2lmaWVkIHBvc2l0aW9uLlxuICAgKiBAcGFyYW0gIHtDYW52YXNSZW5kZXJpbmdDb250ZXh0MkR9IGN0eFxuICAgKiBAcGFyYW0gIHtPYmplY3R9IHJlY3QgRGlzcGxheWFibGUgcmVjdFxuICAgKi9cbiAgZHJhd1JlY3RUZXh0OiBmdW5jdGlvbiAoY3R4LCByZWN0KSB7XG4gICAgdmFyIHN0eWxlID0gdGhpcy5zdHlsZTtcbiAgICByZWN0ID0gc3R5bGUudGV4dFJlY3QgfHwgcmVjdDsgLy8gT3B0aW1pemUsIGF2b2lkIG5vcm1hbGl6ZSBldmVyeSB0aW1lLlxuXG4gICAgdGhpcy5fX2RpcnR5ICYmIHRleHRIZWxwZXIubm9ybWFsaXplVGV4dFN0eWxlKHN0eWxlLCB0cnVlKTtcbiAgICB2YXIgdGV4dCA9IHN0eWxlLnRleHQ7IC8vIENvbnZlcnQgdG8gc3RyaW5nXG5cbiAgICB0ZXh0ICE9IG51bGwgJiYgKHRleHQgKz0gJycpO1xuXG4gICAgaWYgKCF0ZXh0SGVscGVyLm5lZWREcmF3VGV4dCh0ZXh0LCBzdHlsZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIEZJWE1FXG4gICAgLy8gRG8gbm90IHByb3ZpZGUgcHJldkVsIHRvIGB0ZXh0SGVscGVyLnJlbmRlclRleHRgIGZvciBjdHggcHJvcCBjYWNoZSxcbiAgICAvLyBidXQgdXNlIGBjdHguc2F2ZSgpYCBhbmQgYGN0eC5yZXN0b3JlKClgLiBCZWNhdXNlIHRoZSBjYWNoZSBmb3IgcmVjdFxuICAgIC8vIHRleHQgcHJvcGFibHkgYnJlYWsgdGhlIGNhY2hlIGZvciBpdHMgaG9zdCBlbGVtZW50cy5cblxuXG4gICAgY3R4LnNhdmUoKTsgLy8gVHJhbnNmb3JtIHJlY3QgdG8gdmlldyBzcGFjZVxuXG4gICAgdmFyIHRyYW5zZm9ybSA9IHRoaXMudHJhbnNmb3JtO1xuXG4gICAgaWYgKCFzdHlsZS50cmFuc2Zvcm1UZXh0KSB7XG4gICAgICBpZiAodHJhbnNmb3JtKSB7XG4gICAgICAgIHRtcFJlY3QuY29weShyZWN0KTtcbiAgICAgICAgdG1wUmVjdC5hcHBseVRyYW5zZm9ybSh0cmFuc2Zvcm0pO1xuICAgICAgICByZWN0ID0gdG1wUmVjdDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRUcmFuc2Zvcm0oY3R4KTtcbiAgICB9IC8vIHRyYW5zZm9ybVRleHQgYW5kIHRleHRSb3RhdGlvbiBjYW4gbm90IGJlIHVzZWQgYXQgdGhlIHNhbWUgdGltZS5cblxuXG4gICAgdGV4dEhlbHBlci5yZW5kZXJUZXh0KHRoaXMsIGN0eCwgdGV4dCwgc3R5bGUsIHJlY3QpO1xuICAgIGN0eC5yZXN0b3JlKCk7XG4gIH1cbn07XG52YXIgX2RlZmF1bHQgPSBSZWN0VGV4dDtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///201\\n\")},function(module,exports,__webpack_require__){eval(\"var util = __webpack_require__(59);\\n\\nvar _event = __webpack_require__(75);\\n\\nvar Dispatcher = _event.Dispatcher;\\n\\nvar requestAnimationFrame = __webpack_require__(136);\\n\\nvar Animator = __webpack_require__(131);\\n\\n/**\\n * 动画主类, 调度和管理所有动画控制器\\n *\\n * @module zrender/animation/Animation\\n * @author pissang(https://github.com/pissang)\\n */\\n// TODO Additive animation\\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\\n// https://developer.apple.com/videos/wwdc2014/#236\\n\\n/**\\n * @typedef {Object} IZRenderStage\\n * @property {Function} update\\n */\\n\\n/**\\n * @alias module:zrender/animation/Animation\\n * @constructor\\n * @param {Object} [options]\\n * @param {Function} [options.onframe]\\n * @param {IZRenderStage} [options.stage]\\n * @example\\n *     var animation = new Animation();\\n *     var obj = {\\n *         x: 100,\\n *         y: 100\\n *     };\\n *     animation.animate(node.position)\\n *         .when(1000, {\\n *             x: 500,\\n *             y: 500\\n *         })\\n *         .when(2000, {\\n *             x: 100,\\n *             y: 100\\n *         })\\n *         .start('spline');\\n */\\nvar Animation = function (options) {\\n  options = options || {};\\n  this.stage = options.stage || {};\\n\\n  this.onframe = options.onframe || function () {}; // private properties\\n\\n\\n  this._clips = [];\\n  this._running = false;\\n  this._time;\\n  this._pausedTime;\\n  this._pauseStart;\\n  this._paused = false;\\n  Dispatcher.call(this);\\n};\\n\\nAnimation.prototype = {\\n  constructor: Animation,\\n\\n  /**\\n   * 添加 clip\\n   * @param {module:zrender/animation/Clip} clip\\n   */\\n  addClip: function (clip) {\\n    this._clips.push(clip);\\n  },\\n\\n  /**\\n   * 添加 animator\\n   * @param {module:zrender/animation/Animator} animator\\n   */\\n  addAnimator: function (animator) {\\n    animator.animation = this;\\n    var clips = animator.getClips();\\n\\n    for (var i = 0; i < clips.length; i++) {\\n      this.addClip(clips[i]);\\n    }\\n  },\\n\\n  /**\\n   * 删除动画片段\\n   * @param {module:zrender/animation/Clip} clip\\n   */\\n  removeClip: function (clip) {\\n    var idx = util.indexOf(this._clips, clip);\\n\\n    if (idx >= 0) {\\n      this._clips.splice(idx, 1);\\n    }\\n  },\\n\\n  /**\\n   * 删除动画片段\\n   * @param {module:zrender/animation/Animator} animator\\n   */\\n  removeAnimator: function (animator) {\\n    var clips = animator.getClips();\\n\\n    for (var i = 0; i < clips.length; i++) {\\n      this.removeClip(clips[i]);\\n    }\\n\\n    animator.animation = null;\\n  },\\n  _update: function () {\\n    var time = new Date().getTime() - this._pausedTime;\\n\\n    var delta = time - this._time;\\n    var clips = this._clips;\\n    var len = clips.length;\\n    var deferredEvents = [];\\n    var deferredClips = [];\\n\\n    for (var i = 0; i < len; i++) {\\n      var clip = clips[i];\\n      var e = clip.step(time, delta); // Throw out the events need to be called after\\n      // stage.update, like destroy\\n\\n      if (e) {\\n        deferredEvents.push(e);\\n        deferredClips.push(clip);\\n      }\\n    } // Remove the finished clip\\n\\n\\n    for (var i = 0; i < len;) {\\n      if (clips[i]._needsRemove) {\\n        clips[i] = clips[len - 1];\\n        clips.pop();\\n        len--;\\n      } else {\\n        i++;\\n      }\\n    }\\n\\n    len = deferredEvents.length;\\n\\n    for (var i = 0; i < len; i++) {\\n      deferredClips[i].fire(deferredEvents[i]);\\n    }\\n\\n    this._time = time;\\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\\n    // depends on the sequence (e.g., echarts-stream and finish\\n    // event judge)\\n\\n    this.trigger('frame', delta);\\n\\n    if (this.stage.update) {\\n      this.stage.update();\\n    }\\n  },\\n  _startLoop: function () {\\n    var self = this;\\n    this._running = true;\\n\\n    function step() {\\n      if (self._running) {\\n        requestAnimationFrame(step);\\n        !self._paused && self._update();\\n      }\\n    }\\n\\n    requestAnimationFrame(step);\\n  },\\n\\n  /**\\n   * Start animation.\\n   */\\n  start: function () {\\n    this._time = new Date().getTime();\\n    this._pausedTime = 0;\\n\\n    this._startLoop();\\n  },\\n\\n  /**\\n   * Stop animation.\\n   */\\n  stop: function () {\\n    this._running = false;\\n  },\\n\\n  /**\\n   * Pause animation.\\n   */\\n  pause: function () {\\n    if (!this._paused) {\\n      this._pauseStart = new Date().getTime();\\n      this._paused = true;\\n    }\\n  },\\n\\n  /**\\n   * Resume animation.\\n   */\\n  resume: function () {\\n    if (this._paused) {\\n      this._pausedTime += new Date().getTime() - this._pauseStart;\\n      this._paused = false;\\n    }\\n  },\\n\\n  /**\\n   * Clear animation.\\n   */\\n  clear: function () {\\n    this._clips = [];\\n  },\\n\\n  /**\\n   * Whether animation finished.\\n   */\\n  isFinished: function () {\\n    return !this._clips.length;\\n  },\\n\\n  /**\\n   * Creat animator for a target, whose props can be animated.\\n   *\\n   * @param  {Object} target\\n   * @param  {Object} options\\n   * @param  {boolean} [options.loop=false] Whether loop animation.\\n   * @param  {Function} [options.getter=null] Get value from target.\\n   * @param  {Function} [options.setter=null] Set value to target.\\n   * @return {module:zrender/animation/Animation~Animator}\\n   */\\n  // TODO Gap\\n  animate: function (target, options) {\\n    options = options || {};\\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\\n    this.addAnimator(animator);\\n    return animator;\\n  }\\n};\\nutil.mixin(Animation, Dispatcher);\\nvar _default = Animation;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///202\\n\")},function(module,exports,__webpack_require__){eval(\"var _event = __webpack_require__(75);\\n\\nvar addEventListener = _event.addEventListener;\\nvar removeEventListener = _event.removeEventListener;\\nvar normalizeEvent = _event.normalizeEvent;\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Eventful = __webpack_require__(80);\\n\\nvar env = __webpack_require__(66);\\n\\nvar GestureMgr = __webpack_require__(204);\\n\\nvar TOUCH_CLICK_DELAY = 300;\\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\\nvar pointerEventNames = {\\n  pointerdown: 1,\\n  pointerup: 1,\\n  pointermove: 1,\\n  pointerout: 1\\n};\\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\\n  var nm = name.replace('mouse', 'pointer');\\n  return pointerEventNames[nm] ? nm : name;\\n});\\n\\nfunction eventNameFix(name) {\\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\\n}\\n\\nfunction processGesture(proxy, event, stage) {\\n  var gestureMgr = proxy._gestureMgr;\\n  stage === 'start' && gestureMgr.clear();\\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\\n\\n  if (gestureInfo) {\\n    var type = gestureInfo.type;\\n    event.gestureEvent = type;\\n    proxy.handler.dispatchToElement({\\n      target: gestureInfo.target\\n    }, type, gestureInfo.event);\\n  }\\n} // function onMSGestureChange(proxy, event) {\\n//     if (event.translationX || event.translationY) {\\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\\n//     }\\n//     if (event.scale !== 1) {\\n//         event.pinchX = event.offsetX;\\n//         event.pinchY = event.offsetY;\\n//         event.pinchScale = event.scale;\\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\\n//     }\\n// }\\n\\n/**\\n * Prevent mouse event from being dispatched after Touch Events action\\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\\n * Result: Blocking Mouse Events for 700ms.\\n */\\n\\n\\nfunction setTouchTimer(instance) {\\n  instance._touching = true;\\n  clearTimeout(instance._touchTimer);\\n  instance._touchTimer = setTimeout(function () {\\n    instance._touching = false;\\n  }, 700);\\n}\\n\\nvar domHandlers = {\\n  /**\\n   * Mouse move handler\\n   * @inner\\n   * @param {Event} event\\n   */\\n  mousemove: function (event) {\\n    event = normalizeEvent(this.dom, event);\\n    this.trigger('mousemove', event);\\n  },\\n\\n  /**\\n   * Mouse out handler\\n   * @inner\\n   * @param {Event} event\\n   */\\n  mouseout: function (event) {\\n    event = normalizeEvent(this.dom, event);\\n    var element = event.toElement || event.relatedTarget;\\n\\n    if (element != this.dom) {\\n      while (element && element.nodeType != 9) {\\n        // 忽略包含在root中的dom引起的mouseOut\\n        if (element === this.dom) {\\n          return;\\n        }\\n\\n        element = element.parentNode;\\n      }\\n    }\\n\\n    this.trigger('mouseout', event);\\n  },\\n\\n  /**\\n   * Touch开始响应函数\\n   * @inner\\n   * @param {Event} event\\n   */\\n  touchstart: function (event) {\\n    // Default mouse behaviour should not be disabled here.\\n    // For example, page may needs to be slided.\\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\\n    // mouse event in upper applicatoin.\\n\\n    event.zrByTouch = true;\\n    this._lastTouchMoment = new Date();\\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\\n    // be triggered, and must before `mousedown` triggered.\\n\\n    domHandlers.mousemove.call(this, event);\\n    domHandlers.mousedown.call(this, event);\\n    setTouchTimer(this);\\n  },\\n\\n  /**\\n   * Touch移动响应函数\\n   * @inner\\n   * @param {Event} event\\n   */\\n  touchmove: function (event) {\\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\\n    // mouse event in upper applicatoin.\\n\\n    event.zrByTouch = true;\\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\\n    // there is gestrue event, because mouse move and pinch may\\n    // be used at the same time.\\n\\n    domHandlers.mousemove.call(this, event);\\n    setTouchTimer(this);\\n  },\\n\\n  /**\\n   * Touch结束响应函数\\n   * @inner\\n   * @param {Event} event\\n   */\\n  touchend: function (event) {\\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\\n    // mouse event in upper applicatoin.\\n\\n    event.zrByTouch = true;\\n    processGesture(this, event, 'end');\\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\\n    // we can conveniently implement \\\"hover style\\\" in both PC and touch device just\\n    // by listening to `mouseover` to add \\\"hover style\\\" and listening to `mouseout`\\n    // to remove \\\"hover style\\\" on an element, without any additional code for\\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \\\"hover\\n    // style\\\" will remain for user view)\\n    // click event should always be triggered no matter whether\\n    // there is gestrue event. System click can not be prevented.\\n\\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\\n      domHandlers.click.call(this, event);\\n    }\\n\\n    setTouchTimer(this);\\n  },\\n  pointerdown: function (event) {\\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\\n    //     this._msGesture.addPointer(event.pointerId);\\n    // }\\n  },\\n  pointermove: function (event) {\\n    // FIXME\\n    // pointermove is so sensitive that it always triggered when\\n    // tap(click) on touch screen, which affect some judgement in\\n    // upper application. So, we dont support mousemove on MS touch\\n    // device yet.\\n    if (!isPointerFromTouch(event)) {\\n      domHandlers.mousemove.call(this, event);\\n    }\\n  },\\n  pointerup: function (event) {\\n    domHandlers.mouseup.call(this, event);\\n  },\\n  pointerout: function (event) {\\n    // pointerout will be triggered when tap on touch screen\\n    // (IE11+/Edge on MS Surface) after click event triggered,\\n    // which is inconsistent with the mousout behavior we defined\\n    // in touchend. So we unify them.\\n    // (check domHandlers.touchend for detailed explanation)\\n    if (!isPointerFromTouch(event)) {\\n      domHandlers.mouseout.call(this, event);\\n    }\\n  }\\n};\\n\\nfunction isPointerFromTouch(event) {\\n  var pointerType = event.pointerType;\\n  return pointerType === 'pen' || pointerType === 'touch';\\n} // function useMSGuesture(handlerProxy, event) {\\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\\n// }\\n// Common handlers\\n\\n\\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\\n  domHandlers[name] = function (event) {\\n    event = normalizeEvent(this.dom, event);\\n    this.trigger(name, event);\\n  };\\n});\\n/**\\n * 为控制类实例初始化dom 事件处理函数\\n *\\n * @inner\\n * @param {module:zrender/Handler} instance 控制类实例\\n */\\n\\nfunction initDomHandler(instance) {\\n  zrUtil.each(touchHandlerNames, function (name) {\\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\\n  });\\n  zrUtil.each(pointerHandlerNames, function (name) {\\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\\n  });\\n  zrUtil.each(mouseHandlerNames, function (name) {\\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\\n  });\\n\\n  function makeMouseHandler(fn, instance) {\\n    return function () {\\n      if (instance._touching) {\\n        return;\\n      }\\n\\n      return fn.apply(instance, arguments);\\n    };\\n  }\\n}\\n\\nfunction HandlerDomProxy(dom) {\\n  Eventful.call(this);\\n  this.dom = dom;\\n  /**\\n   * @private\\n   * @type {boolean}\\n   */\\n\\n  this._touching = false;\\n  /**\\n   * @private\\n   * @type {number}\\n   */\\n\\n  this._touchTimer;\\n  /**\\n   * @private\\n   * @type {module:zrender/core/GestureMgr}\\n   */\\n\\n  this._gestureMgr = new GestureMgr();\\n  this._handlers = {};\\n  initDomHandler(this);\\n\\n  if (env.pointerEventsSupported) {\\n    // Only IE11+/Edge\\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\\n    // at the same time.\\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\\n    // screen, which do not occurs in pointer event.\\n    // So we use pointer event to both detect touch gesture and mouse behavior.\\n    mountHandlers(pointerHandlerNames, this); // FIXME\\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\\n    // which does not prevent defuault behavior occasionally (which may cause view port\\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\\n    // touch screen. And we only support click behavior on MS touch screen now.\\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\\n    // We dont support touch on IE on win7.\\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\\n    // if (typeof MSGesture === 'function') {\\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\\n    // }\\n  } else {\\n    if (env.touchEventsSupported) {\\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\\n    // mouse event can not be handle in those devices.\\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\\n    // mouseevent after touch event triggered, see `setTouchTimer`.\\n\\n\\n    mountHandlers(mouseHandlerNames, this);\\n  }\\n\\n  function mountHandlers(handlerNames, instance) {\\n    zrUtil.each(handlerNames, function (name) {\\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\\n    }, instance);\\n  }\\n}\\n\\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\\n\\nhandlerDomProxyProto.dispose = function () {\\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\\n\\n  for (var i = 0; i < handlerNames.length; i++) {\\n    var name = handlerNames[i];\\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\\n  }\\n};\\n\\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\\n};\\n\\nzrUtil.mixin(HandlerDomProxy, Eventful);\\nvar _default = HandlerDomProxy;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///203\\n\")},function(module,exports,__webpack_require__){eval(\"var eventUtil = __webpack_require__(75);\\n\\n/**\\n * Only implements needed gestures for mobile.\\n */\\nvar GestureMgr = function () {\\n  /**\\n   * @private\\n   * @type {Array.<Object>}\\n   */\\n  this._track = [];\\n};\\n\\nGestureMgr.prototype = {\\n  constructor: GestureMgr,\\n  recognize: function (event, target, root) {\\n    this._doTrack(event, target, root);\\n\\n    return this._recognize(event);\\n  },\\n  clear: function () {\\n    this._track.length = 0;\\n    return this;\\n  },\\n  _doTrack: function (event, target, root) {\\n    var touches = event.touches;\\n\\n    if (!touches) {\\n      return;\\n    }\\n\\n    var trackItem = {\\n      points: [],\\n      touches: [],\\n      target: target,\\n      event: event\\n    };\\n\\n    for (var i = 0, len = touches.length; i < len; i++) {\\n      var touch = touches[i];\\n      var pos = eventUtil.clientToLocal(root, touch, {});\\n      trackItem.points.push([pos.zrX, pos.zrY]);\\n      trackItem.touches.push(touch);\\n    }\\n\\n    this._track.push(trackItem);\\n  },\\n  _recognize: function (event) {\\n    for (var eventName in recognizers) {\\n      if (recognizers.hasOwnProperty(eventName)) {\\n        var gestureInfo = recognizers[eventName](this._track, event);\\n\\n        if (gestureInfo) {\\n          return gestureInfo;\\n        }\\n      }\\n    }\\n  }\\n};\\n\\nfunction dist(pointPair) {\\n  var dx = pointPair[1][0] - pointPair[0][0];\\n  var dy = pointPair[1][1] - pointPair[0][1];\\n  return Math.sqrt(dx * dx + dy * dy);\\n}\\n\\nfunction center(pointPair) {\\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\\n}\\n\\nvar recognizers = {\\n  pinch: function (track, event) {\\n    var trackLen = track.length;\\n\\n    if (!trackLen) {\\n      return;\\n    }\\n\\n    var pinchEnd = (track[trackLen - 1] || {}).points;\\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\\n\\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\\n      !isFinite(pinchScale) && (pinchScale = 1);\\n      event.pinchScale = pinchScale;\\n      var pinchCenter = center(pinchEnd);\\n      event.pinchX = pinchCenter[0];\\n      event.pinchY = pinchCenter[1];\\n      return {\\n        type: 'pinch',\\n        target: track[0].target,\\n        event: event\\n      };\\n    }\\n  } // Only pinch currently.\\n\\n};\\nvar _default = GestureMgr;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29yZS9HZXN0dXJlTWdyLmpzPzBiNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsRUFBUzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlDQUF5QyxTQUFTO0FBQ2xEO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDZDQUE2QztBQUM3Qyw2Q0FBNkM7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EiLCJmaWxlIjoiMjA0LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV2ZW50VXRpbCA9IHJlcXVpcmUoXCIuL2V2ZW50XCIpO1xuXG4vKipcbiAqIE9ubHkgaW1wbGVtZW50cyBuZWVkZWQgZ2VzdHVyZXMgZm9yIG1vYmlsZS5cbiAqL1xudmFyIEdlc3R1cmVNZ3IgPSBmdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAdHlwZSB7QXJyYXkuPE9iamVjdD59XG4gICAqL1xuICB0aGlzLl90cmFjayA9IFtdO1xufTtcblxuR2VzdHVyZU1nci5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBHZXN0dXJlTWdyLFxuICByZWNvZ25pemU6IGZ1bmN0aW9uIChldmVudCwgdGFyZ2V0LCByb290KSB7XG4gICAgdGhpcy5fZG9UcmFjayhldmVudCwgdGFyZ2V0LCByb290KTtcblxuICAgIHJldHVybiB0aGlzLl9yZWNvZ25pemUoZXZlbnQpO1xuICB9LFxuICBjbGVhcjogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuX3RyYWNrLmxlbmd0aCA9IDA7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIF9kb1RyYWNrOiBmdW5jdGlvbiAoZXZlbnQsIHRhcmdldCwgcm9vdCkge1xuICAgIHZhciB0b3VjaGVzID0gZXZlbnQudG91Y2hlcztcblxuICAgIGlmICghdG91Y2hlcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB0cmFja0l0ZW0gPSB7XG4gICAgICBwb2ludHM6IFtdLFxuICAgICAgdG91Y2hlczogW10sXG4gICAgICB0YXJnZXQ6IHRhcmdldCxcbiAgICAgIGV2ZW50OiBldmVudFxuICAgIH07XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdG91Y2hlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgdmFyIHRvdWNoID0gdG91Y2hlc1tpXTtcbiAgICAgIHZhciBwb3MgPSBldmVudFV0aWwuY2xpZW50VG9Mb2NhbChyb290LCB0b3VjaCwge30pO1xuICAgICAgdHJhY2tJdGVtLnBvaW50cy5wdXNoKFtwb3MuenJYLCBwb3MuenJZXSk7XG4gICAgICB0cmFja0l0ZW0udG91Y2hlcy5wdXNoKHRvdWNoKTtcbiAgICB9XG5cbiAgICB0aGlzLl90cmFjay5wdXNoKHRyYWNrSXRlbSk7XG4gIH0sXG4gIF9yZWNvZ25pemU6IGZ1bmN0aW9uIChldmVudCkge1xuICAgIGZvciAodmFyIGV2ZW50TmFtZSBpbiByZWNvZ25pemVycykge1xuICAgICAgaWYgKHJlY29nbml6ZXJzLmhhc093blByb3BlcnR5KGV2ZW50TmFtZSkpIHtcbiAgICAgICAgdmFyIGdlc3R1cmVJbmZvID0gcmVjb2duaXplcnNbZXZlbnROYW1lXSh0aGlzLl90cmFjaywgZXZlbnQpO1xuXG4gICAgICAgIGlmIChnZXN0dXJlSW5mbykge1xuICAgICAgICAgIHJldHVybiBnZXN0dXJlSW5mbztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gZGlzdChwb2ludFBhaXIpIHtcbiAgdmFyIGR4ID0gcG9pbnRQYWlyWzFdWzBdIC0gcG9pbnRQYWlyWzBdWzBdO1xuICB2YXIgZHkgPSBwb2ludFBhaXJbMV1bMV0gLSBwb2ludFBhaXJbMF1bMV07XG4gIHJldHVybiBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xufVxuXG5mdW5jdGlvbiBjZW50ZXIocG9pbnRQYWlyKSB7XG4gIHJldHVybiBbKHBvaW50UGFpclswXVswXSArIHBvaW50UGFpclsxXVswXSkgLyAyLCAocG9pbnRQYWlyWzBdWzFdICsgcG9pbnRQYWlyWzFdWzFdKSAvIDJdO1xufVxuXG52YXIgcmVjb2duaXplcnMgPSB7XG4gIHBpbmNoOiBmdW5jdGlvbiAodHJhY2ssIGV2ZW50KSB7XG4gICAgdmFyIHRyYWNrTGVuID0gdHJhY2subGVuZ3RoO1xuXG4gICAgaWYgKCF0cmFja0xlbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBwaW5jaEVuZCA9ICh0cmFja1t0cmFja0xlbiAtIDFdIHx8IHt9KS5wb2ludHM7XG4gICAgdmFyIHBpbmNoUHJlID0gKHRyYWNrW3RyYWNrTGVuIC0gMl0gfHwge30pLnBvaW50cyB8fCBwaW5jaEVuZDtcblxuICAgIGlmIChwaW5jaFByZSAmJiBwaW5jaFByZS5sZW5ndGggPiAxICYmIHBpbmNoRW5kICYmIHBpbmNoRW5kLmxlbmd0aCA+IDEpIHtcbiAgICAgIHZhciBwaW5jaFNjYWxlID0gZGlzdChwaW5jaEVuZCkgLyBkaXN0KHBpbmNoUHJlKTtcbiAgICAgICFpc0Zpbml0ZShwaW5jaFNjYWxlKSAmJiAocGluY2hTY2FsZSA9IDEpO1xuICAgICAgZXZlbnQucGluY2hTY2FsZSA9IHBpbmNoU2NhbGU7XG4gICAgICB2YXIgcGluY2hDZW50ZXIgPSBjZW50ZXIocGluY2hFbmQpO1xuICAgICAgZXZlbnQucGluY2hYID0gcGluY2hDZW50ZXJbMF07XG4gICAgICBldmVudC5waW5jaFkgPSBwaW5jaENlbnRlclsxXTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdwaW5jaCcsXG4gICAgICAgIHRhcmdldDogdHJhY2tbMF0udGFyZ2V0LFxuICAgICAgICBldmVudDogZXZlbnRcbiAgICAgIH07XG4gICAgfVxuICB9IC8vIE9ubHkgcGluY2ggY3VycmVudGx5LlxuXG59O1xudmFyIF9kZWZhdWx0ID0gR2VzdHVyZU1ncjtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///204\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar makeStyleMapper = __webpack_require__(104);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\\nvar _default = {\\n  getLineStyle: function (excludes) {\\n    var style = getLineStyle(this, excludes);\\n    var lineDash = this.getLineDash(style.lineWidth);\\n    lineDash && (style.lineDash = lineDash);\\n    return style;\\n  },\\n  getLineDash: function (lineWidth) {\\n    if (lineWidth == null) {\\n      lineWidth = 1;\\n    }\\n\\n    var lineType = this.get('type');\\n    var dotSize = Math.max(lineWidth, 2);\\n    var dashSize = lineWidth * 4;\\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvbWl4aW4vbGluZVN0eWxlLmpzPzM5MDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixtQkFBTyxDQUFDLEdBQW1COztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIwNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgbWFrZVN0eWxlTWFwcGVyID0gcmVxdWlyZShcIi4vbWFrZVN0eWxlTWFwcGVyXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG52YXIgZ2V0TGluZVN0eWxlID0gbWFrZVN0eWxlTWFwcGVyKFtbJ2xpbmVXaWR0aCcsICd3aWR0aCddLCBbJ3N0cm9rZScsICdjb2xvciddLCBbJ29wYWNpdHknXSwgWydzaGFkb3dCbHVyJ10sIFsnc2hhZG93T2Zmc2V0WCddLCBbJ3NoYWRvd09mZnNldFknXSwgWydzaGFkb3dDb2xvciddXSk7XG52YXIgX2RlZmF1bHQgPSB7XG4gIGdldExpbmVTdHlsZTogZnVuY3Rpb24gKGV4Y2x1ZGVzKSB7XG4gICAgdmFyIHN0eWxlID0gZ2V0TGluZVN0eWxlKHRoaXMsIGV4Y2x1ZGVzKTtcbiAgICB2YXIgbGluZURhc2ggPSB0aGlzLmdldExpbmVEYXNoKHN0eWxlLmxpbmVXaWR0aCk7XG4gICAgbGluZURhc2ggJiYgKHN0eWxlLmxpbmVEYXNoID0gbGluZURhc2gpO1xuICAgIHJldHVybiBzdHlsZTtcbiAgfSxcbiAgZ2V0TGluZURhc2g6IGZ1bmN0aW9uIChsaW5lV2lkdGgpIHtcbiAgICBpZiAobGluZVdpZHRoID09IG51bGwpIHtcbiAgICAgIGxpbmVXaWR0aCA9IDE7XG4gICAgfVxuXG4gICAgdmFyIGxpbmVUeXBlID0gdGhpcy5nZXQoJ3R5cGUnKTtcbiAgICB2YXIgZG90U2l6ZSA9IE1hdGgubWF4KGxpbmVXaWR0aCwgMik7XG4gICAgdmFyIGRhc2hTaXplID0gbGluZVdpZHRoICogNDtcbiAgICByZXR1cm4gbGluZVR5cGUgPT09ICdzb2xpZCcgfHwgbGluZVR5cGUgPT0gbnVsbCA/IG51bGwgOiBsaW5lVHlwZSA9PT0gJ2Rhc2hlZCcgPyBbZGFzaFNpemUsIGRhc2hTaXplXSA6IFtkb3RTaXplLCBkb3RTaXplXTtcbiAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///205\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar makeStyleMapper = __webpack_require__(104);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\\nvar _default = {\\n  getAreaStyle: function (excludes, includes) {\\n    return getAreaStyle(this, excludes, includes);\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvbWl4aW4vYXJlYVN0eWxlLmpzPzliZGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixtQkFBTyxDQUFDLEdBQW1COztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIwNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgbWFrZVN0eWxlTWFwcGVyID0gcmVxdWlyZShcIi4vbWFrZVN0eWxlTWFwcGVyXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG52YXIgZ2V0QXJlYVN0eWxlID0gbWFrZVN0eWxlTWFwcGVyKFtbJ2ZpbGwnLCAnY29sb3InXSwgWydzaGFkb3dCbHVyJ10sIFsnc2hhZG93T2Zmc2V0WCddLCBbJ3NoYWRvd09mZnNldFknXSwgWydvcGFjaXR5J10sIFsnc2hhZG93Q29sb3InXV0pO1xudmFyIF9kZWZhdWx0ID0ge1xuICBnZXRBcmVhU3R5bGU6IGZ1bmN0aW9uIChleGNsdWRlcywgaW5jbHVkZXMpIHtcbiAgICByZXR1cm4gZ2V0QXJlYVN0eWxlKHRoaXMsIGV4Y2x1ZGVzLCBpbmNsdWRlcyk7XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///206\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar textContain = __webpack_require__(76);\\n\\nvar graphicUtil = __webpack_require__(63);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar PATH_COLOR = ['textStyle', 'color'];\\nvar _default = {\\n  /**\\n   * Get color property or get color from option.textStyle.color\\n   * @param {boolean} [isEmphasis]\\n   * @return {string}\\n   */\\n  getTextColor: function (isEmphasis) {\\n    var ecModel = this.ecModel;\\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\\n  },\\n\\n  /**\\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\\n   * @return {string}\\n   */\\n  getFont: function () {\\n    return graphicUtil.getFont({\\n      fontStyle: this.getShallow('fontStyle'),\\n      fontWeight: this.getShallow('fontWeight'),\\n      fontSize: this.getShallow('fontSize'),\\n      fontFamily: this.getShallow('fontFamily')\\n    }, this.ecModel);\\n  },\\n  getTextRect: function (text) {\\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvbWl4aW4vdGV4dFN0eWxlLmpzP2ZlMjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixtQkFBTyxDQUFDLEVBQTBCOztBQUVwRCxrQkFBa0IsbUJBQU8sQ0FBQyxFQUFvQjs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjA3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB0ZXh0Q29udGFpbiA9IHJlcXVpcmUoXCJ6cmVuZGVyL2xpYi9jb250YWluL3RleHRcIik7XG5cbnZhciBncmFwaGljVXRpbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsL2dyYXBoaWNcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBQQVRIX0NPTE9SID0gWyd0ZXh0U3R5bGUnLCAnY29sb3InXTtcbnZhciBfZGVmYXVsdCA9IHtcbiAgLyoqXG4gICAqIEdldCBjb2xvciBwcm9wZXJ0eSBvciBnZXQgY29sb3IgZnJvbSBvcHRpb24udGV4dFN0eWxlLmNvbG9yXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRW1waGFzaXNdXG4gICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICovXG4gIGdldFRleHRDb2xvcjogZnVuY3Rpb24gKGlzRW1waGFzaXMpIHtcbiAgICB2YXIgZWNNb2RlbCA9IHRoaXMuZWNNb2RlbDtcbiAgICByZXR1cm4gdGhpcy5nZXRTaGFsbG93KCdjb2xvcicpIHx8ICghaXNFbXBoYXNpcyAmJiBlY01vZGVsID8gZWNNb2RlbC5nZXQoUEFUSF9DT0xPUikgOiBudWxsKTtcbiAgfSxcblxuICAvKipcbiAgICogQ3JlYXRlIGZvbnQgc3RyaW5nIGZyb20gZm9udFN0eWxlLCBmb250V2VpZ2h0LCBmb250U2l6ZSwgZm9udEZhbWlseVxuICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAqL1xuICBnZXRGb250OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGdyYXBoaWNVdGlsLmdldEZvbnQoe1xuICAgICAgZm9udFN0eWxlOiB0aGlzLmdldFNoYWxsb3coJ2ZvbnRTdHlsZScpLFxuICAgICAgZm9udFdlaWdodDogdGhpcy5nZXRTaGFsbG93KCdmb250V2VpZ2h0JyksXG4gICAgICBmb250U2l6ZTogdGhpcy5nZXRTaGFsbG93KCdmb250U2l6ZScpLFxuICAgICAgZm9udEZhbWlseTogdGhpcy5nZXRTaGFsbG93KCdmb250RmFtaWx5JylcbiAgICB9LCB0aGlzLmVjTW9kZWwpO1xuICB9LFxuICBnZXRUZXh0UmVjdDogZnVuY3Rpb24gKHRleHQpIHtcbiAgICByZXR1cm4gdGV4dENvbnRhaW4uZ2V0Qm91bmRpbmdSZWN0KHRleHQsIHRoaXMuZ2V0Rm9udCgpLCB0aGlzLmdldFNoYWxsb3coJ2FsaWduJyksIHRoaXMuZ2V0U2hhbGxvdygndmVydGljYWxBbGlnbicpIHx8IHRoaXMuZ2V0U2hhbGxvdygnYmFzZWxpbmUnKSwgdGhpcy5nZXRTaGFsbG93KCdwYWRkaW5nJyksIHRoaXMuZ2V0U2hhbGxvdygncmljaCcpLCB0aGlzLmdldFNoYWxsb3coJ3RydW5jYXRlVGV4dCcpKTtcbiAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///207\\n\")},function(module,exports,__webpack_require__){eval(\"var PathProxy = __webpack_require__(89);\\n\\nvar line = __webpack_require__(209);\\n\\nvar cubic = __webpack_require__(210);\\n\\nvar quadratic = __webpack_require__(211);\\n\\nvar arc = __webpack_require__(212);\\n\\nvar _util = __webpack_require__(142);\\n\\nvar normalizeRadian = _util.normalizeRadian;\\n\\nvar curve = __webpack_require__(77);\\n\\nvar windingLine = __webpack_require__(143);\\n\\nvar CMD = PathProxy.CMD;\\nvar PI2 = Math.PI * 2;\\nvar EPSILON = 1e-4;\\n\\nfunction isAroundEqual(a, b) {\\n  return Math.abs(a - b) < EPSILON;\\n} // 临时数组\\n\\n\\nvar roots = [-1, -1, -1];\\nvar extrema = [-1, -1];\\n\\nfunction swapExtrema() {\\n  var tmp = extrema[0];\\n  extrema[0] = extrema[1];\\n  extrema[1] = tmp;\\n}\\n\\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\\n  // Quick reject\\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\\n    return 0;\\n  }\\n\\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\\n\\n  if (nRoots === 0) {\\n    return 0;\\n  } else {\\n    var w = 0;\\n    var nExtrema = -1;\\n    var y0_, y1_;\\n\\n    for (var i = 0; i < nRoots; i++) {\\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\\n\\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\\n\\n      if (x_ < x) {\\n        // Quick reject\\n        continue;\\n      }\\n\\n      if (nExtrema < 0) {\\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\\n\\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\\n          swapExtrema();\\n        }\\n\\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\\n\\n        if (nExtrema > 1) {\\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\\n        }\\n      }\\n\\n      if (nExtrema == 2) {\\n        // 分成三段单调函数\\n        if (t < extrema[0]) {\\n          w += y0_ < y0 ? unit : -unit;\\n        } else if (t < extrema[1]) {\\n          w += y1_ < y0_ ? unit : -unit;\\n        } else {\\n          w += y3 < y1_ ? unit : -unit;\\n        }\\n      } else {\\n        // 分成两段单调函数\\n        if (t < extrema[0]) {\\n          w += y0_ < y0 ? unit : -unit;\\n        } else {\\n          w += y3 < y0_ ? unit : -unit;\\n        }\\n      }\\n    }\\n\\n    return w;\\n  }\\n}\\n\\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\\n  // Quick reject\\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\\n    return 0;\\n  }\\n\\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\\n\\n  if (nRoots === 0) {\\n    return 0;\\n  } else {\\n    var t = curve.quadraticExtremum(y0, y1, y2);\\n\\n    if (t >= 0 && t <= 1) {\\n      var w = 0;\\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\\n\\n      for (var i = 0; i < nRoots; i++) {\\n        // Remove one endpoint.\\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\\n\\n        if (x_ < x) {\\n          // Quick reject\\n          continue;\\n        }\\n\\n        if (roots[i] < t) {\\n          w += y_ < y0 ? unit : -unit;\\n        } else {\\n          w += y2 < y_ ? unit : -unit;\\n        }\\n      }\\n\\n      return w;\\n    } else {\\n      // Remove one endpoint.\\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\\n\\n      if (x_ < x) {\\n        // Quick reject\\n        return 0;\\n      }\\n\\n      return y2 < y0 ? unit : -unit;\\n    }\\n  }\\n} // TODO\\n// Arc 旋转\\n\\n\\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\\n  y -= cy;\\n\\n  if (y > r || y < -r) {\\n    return 0;\\n  }\\n\\n  var tmp = Math.sqrt(r * r - y * y);\\n  roots[0] = -tmp;\\n  roots[1] = tmp;\\n  var diff = Math.abs(startAngle - endAngle);\\n\\n  if (diff < 1e-4) {\\n    return 0;\\n  }\\n\\n  if (diff % PI2 < 1e-4) {\\n    // Is a circle\\n    startAngle = 0;\\n    endAngle = PI2;\\n    var dir = anticlockwise ? 1 : -1;\\n\\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\\n      return dir;\\n    } else {\\n      return 0;\\n    }\\n  }\\n\\n  if (anticlockwise) {\\n    var tmp = startAngle;\\n    startAngle = normalizeRadian(endAngle);\\n    endAngle = normalizeRadian(tmp);\\n  } else {\\n    startAngle = normalizeRadian(startAngle);\\n    endAngle = normalizeRadian(endAngle);\\n  }\\n\\n  if (startAngle > endAngle) {\\n    endAngle += PI2;\\n  }\\n\\n  var w = 0;\\n\\n  for (var i = 0; i < 2; i++) {\\n    var x_ = roots[i];\\n\\n    if (x_ + cx > x) {\\n      var angle = Math.atan2(y, x_);\\n      var dir = anticlockwise ? 1 : -1;\\n\\n      if (angle < 0) {\\n        angle = PI2 + angle;\\n      }\\n\\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\\n          dir = -dir;\\n        }\\n\\n        w += dir;\\n      }\\n    }\\n  }\\n\\n  return w;\\n}\\n\\nfunction containPath(data, lineWidth, isStroke, x, y) {\\n  var w = 0;\\n  var xi = 0;\\n  var yi = 0;\\n  var x0 = 0;\\n  var y0 = 0;\\n\\n  for (var i = 0; i < data.length;) {\\n    var cmd = data[i++]; // Begin a new subpath\\n\\n    if (cmd === CMD.M && i > 1) {\\n      // Close previous subpath\\n      if (!isStroke) {\\n        w += windingLine(xi, yi, x0, y0, x, y);\\n      } // 如果被任何一个 subpath 包含\\n      // if (w !== 0) {\\n      //     return true;\\n      // }\\n\\n    }\\n\\n    if (i == 1) {\\n      // 如果第一个命令是 L, C, Q\\n      // 则 previous point 同绘制命令的第一个 point\\n      //\\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\\n      xi = data[i];\\n      yi = data[i + 1];\\n      x0 = xi;\\n      y0 = yi;\\n    }\\n\\n    switch (cmd) {\\n      case CMD.M:\\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\\n        // 在 closePath 的时候使用\\n        x0 = data[i++];\\n        y0 = data[i++];\\n        xi = x0;\\n        yi = y0;\\n        break;\\n\\n      case CMD.L:\\n        if (isStroke) {\\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\\n            return true;\\n          }\\n        } else {\\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\\n        }\\n\\n        xi = data[i++];\\n        yi = data[i++];\\n        break;\\n\\n      case CMD.C:\\n        if (isStroke) {\\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\\n            return true;\\n          }\\n        } else {\\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\\n        }\\n\\n        xi = data[i++];\\n        yi = data[i++];\\n        break;\\n\\n      case CMD.Q:\\n        if (isStroke) {\\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\\n            return true;\\n          }\\n        } else {\\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\\n        }\\n\\n        xi = data[i++];\\n        yi = data[i++];\\n        break;\\n\\n      case CMD.A:\\n        // TODO Arc 判断的开销比较大\\n        var cx = data[i++];\\n        var cy = data[i++];\\n        var rx = data[i++];\\n        var ry = data[i++];\\n        var theta = data[i++];\\n        var dTheta = data[i++]; // TODO Arc 旋转\\n\\n        var psi = data[i++];\\n        var anticlockwise = 1 - data[i++];\\n        var x1 = Math.cos(theta) * rx + cx;\\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\\n\\n        if (i > 1) {\\n          w += windingLine(xi, yi, x1, y1, x, y);\\n        } else {\\n          // 第一个命令起点还未定义\\n          x0 = x1;\\n          y0 = y1;\\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\\n\\n\\n        var _x = (x - cx) * ry / rx + cx;\\n\\n        if (isStroke) {\\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\\n            return true;\\n          }\\n        } else {\\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\\n        }\\n\\n        xi = Math.cos(theta + dTheta) * rx + cx;\\n        yi = Math.sin(theta + dTheta) * ry + cy;\\n        break;\\n\\n      case CMD.R:\\n        x0 = xi = data[i++];\\n        y0 = yi = data[i++];\\n        var width = data[i++];\\n        var height = data[i++];\\n        var x1 = x0 + width;\\n        var y1 = y0 + height;\\n\\n        if (isStroke) {\\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\\n            return true;\\n          }\\n        } else {\\n          // FIXME Clockwise ?\\n          w += windingLine(x1, y0, x1, y1, x, y);\\n          w += windingLine(x0, y1, x0, y0, x, y);\\n        }\\n\\n        break;\\n\\n      case CMD.Z:\\n        if (isStroke) {\\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\\n            return true;\\n          }\\n        } else {\\n          // Close a subpath\\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\\n          // FIXME subpaths may overlap\\n          // if (w !== 0) {\\n          //     return true;\\n          // }\\n        }\\n\\n        xi = x0;\\n        yi = y0;\\n        break;\\n    }\\n  }\\n\\n  if (!isStroke && !isAroundEqual(yi, y0)) {\\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\\n  }\\n\\n  return w !== 0;\\n}\\n\\nfunction contain(pathData, x, y) {\\n  return containPath(pathData, 0, false, x, y);\\n}\\n\\nfunction containStroke(pathData, lineWidth, x, y) {\\n  return containPath(pathData, lineWidth, true, x, y);\\n}\\n\\nexports.contain = contain;\\nexports.containStroke = containStroke;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///208\\n\")},function(module,exports){eval(\"/**\\n * 线段包含判断\\n * @param  {number}  x0\\n * @param  {number}  y0\\n * @param  {number}  x1\\n * @param  {number}  y1\\n * @param  {number}  lineWidth\\n * @param  {number}  x\\n * @param  {number}  y\\n * @return {boolean}\\n */\\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\\n  if (lineWidth === 0) {\\n    return false;\\n  }\\n\\n  var _l = lineWidth;\\n  var _a = 0;\\n  var _b = x0; // Quick reject\\n\\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\\n    return false;\\n  }\\n\\n  if (x0 !== x1) {\\n    _a = (y0 - y1) / (x0 - x1);\\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\\n  } else {\\n    return Math.abs(x - x0) <= _l / 2;\\n  }\\n\\n  var tmp = _a * x - y + _b;\\n\\n  var _s = tmp * tmp / (_a * _a + 1);\\n\\n  return _s <= _l / 2 * _l / 2;\\n}\\n\\nexports.containStroke = containStroke;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29udGFpbi9saW5lLmpzPzk2ODAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYzs7QUFFZDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIyMDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIOe6v+auteWMheWQq+WIpOaWrVxuICogQHBhcmFtICB7bnVtYmVyfSAgeDBcbiAqIEBwYXJhbSAge251bWJlcn0gIHkwXG4gKiBAcGFyYW0gIHtudW1iZXJ9ICB4MVxuICogQHBhcmFtICB7bnVtYmVyfSAgeTFcbiAqIEBwYXJhbSAge251bWJlcn0gIGxpbmVXaWR0aFxuICogQHBhcmFtICB7bnVtYmVyfSAgeFxuICogQHBhcmFtICB7bnVtYmVyfSAgeVxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gY29udGFpblN0cm9rZSh4MCwgeTAsIHgxLCB5MSwgbGluZVdpZHRoLCB4LCB5KSB7XG4gIGlmIChsaW5lV2lkdGggPT09IDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgX2wgPSBsaW5lV2lkdGg7XG4gIHZhciBfYSA9IDA7XG4gIHZhciBfYiA9IHgwOyAvLyBRdWljayByZWplY3RcblxuICBpZiAoeSA+IHkwICsgX2wgJiYgeSA+IHkxICsgX2wgfHwgeSA8IHkwIC0gX2wgJiYgeSA8IHkxIC0gX2wgfHwgeCA+IHgwICsgX2wgJiYgeCA+IHgxICsgX2wgfHwgeCA8IHgwIC0gX2wgJiYgeCA8IHgxIC0gX2wpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoeDAgIT09IHgxKSB7XG4gICAgX2EgPSAoeTAgLSB5MSkgLyAoeDAgLSB4MSk7XG4gICAgX2IgPSAoeDAgKiB5MSAtIHgxICogeTApIC8gKHgwIC0geDEpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBNYXRoLmFicyh4IC0geDApIDw9IF9sIC8gMjtcbiAgfVxuXG4gIHZhciB0bXAgPSBfYSAqIHggLSB5ICsgX2I7XG5cbiAgdmFyIF9zID0gdG1wICogdG1wIC8gKF9hICogX2EgKyAxKTtcblxuICByZXR1cm4gX3MgPD0gX2wgLyAyICogX2wgLyAyO1xufVxuXG5leHBvcnRzLmNvbnRhaW5TdHJva2UgPSBjb250YWluU3Ryb2tlOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///209\\n\")},function(module,exports,__webpack_require__){eval(\"var curve = __webpack_require__(77);\\n\\n/**\\n * 三次贝塞尔曲线描边包含判断\\n * @param  {number}  x0\\n * @param  {number}  y0\\n * @param  {number}  x1\\n * @param  {number}  y1\\n * @param  {number}  x2\\n * @param  {number}  y2\\n * @param  {number}  x3\\n * @param  {number}  y3\\n * @param  {number}  lineWidth\\n * @param  {number}  x\\n * @param  {number}  y\\n * @return {boolean}\\n */\\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\\n  if (lineWidth === 0) {\\n    return false;\\n  }\\n\\n  var _l = lineWidth; // Quick reject\\n\\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\\n    return false;\\n  }\\n\\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\\n  return d <= _l / 2;\\n}\\n\\nexports.containStroke = containStroke;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29udGFpbi9jdWJpYy5qcz9lN2QyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksbUJBQU8sQ0FBQyxFQUFlOztBQUVuQztBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGN1cnZlID0gcmVxdWlyZShcIi4uL2NvcmUvY3VydmVcIik7XG5cbi8qKlxuICog5LiJ5qyh6LSd5aGe5bCU5puy57q/5o+P6L655YyF5ZCr5Yik5patXG4gKiBAcGFyYW0gIHtudW1iZXJ9ICB4MFxuICogQHBhcmFtICB7bnVtYmVyfSAgeTBcbiAqIEBwYXJhbSAge251bWJlcn0gIHgxXG4gKiBAcGFyYW0gIHtudW1iZXJ9ICB5MVxuICogQHBhcmFtICB7bnVtYmVyfSAgeDJcbiAqIEBwYXJhbSAge251bWJlcn0gIHkyXG4gKiBAcGFyYW0gIHtudW1iZXJ9ICB4M1xuICogQHBhcmFtICB7bnVtYmVyfSAgeTNcbiAqIEBwYXJhbSAge251bWJlcn0gIGxpbmVXaWR0aFxuICogQHBhcmFtICB7bnVtYmVyfSAgeFxuICogQHBhcmFtICB7bnVtYmVyfSAgeVxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gY29udGFpblN0cm9rZSh4MCwgeTAsIHgxLCB5MSwgeDIsIHkyLCB4MywgeTMsIGxpbmVXaWR0aCwgeCwgeSkge1xuICBpZiAobGluZVdpZHRoID09PSAwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIF9sID0gbGluZVdpZHRoOyAvLyBRdWljayByZWplY3RcblxuICBpZiAoeSA+IHkwICsgX2wgJiYgeSA+IHkxICsgX2wgJiYgeSA+IHkyICsgX2wgJiYgeSA+IHkzICsgX2wgfHwgeSA8IHkwIC0gX2wgJiYgeSA8IHkxIC0gX2wgJiYgeSA8IHkyIC0gX2wgJiYgeSA8IHkzIC0gX2wgfHwgeCA+IHgwICsgX2wgJiYgeCA+IHgxICsgX2wgJiYgeCA+IHgyICsgX2wgJiYgeCA+IHgzICsgX2wgfHwgeCA8IHgwIC0gX2wgJiYgeCA8IHgxIC0gX2wgJiYgeCA8IHgyIC0gX2wgJiYgeCA8IHgzIC0gX2wpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgZCA9IGN1cnZlLmN1YmljUHJvamVjdFBvaW50KHgwLCB5MCwgeDEsIHkxLCB4MiwgeTIsIHgzLCB5MywgeCwgeSwgbnVsbCk7XG4gIHJldHVybiBkIDw9IF9sIC8gMjtcbn1cblxuZXhwb3J0cy5jb250YWluU3Ryb2tlID0gY29udGFpblN0cm9rZTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///210\\n\")},function(module,exports,__webpack_require__){eval(\"var _curve = __webpack_require__(77);\\n\\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\\n\\n/**\\n * 二次贝塞尔曲线描边包含判断\\n * @param  {number}  x0\\n * @param  {number}  y0\\n * @param  {number}  x1\\n * @param  {number}  y1\\n * @param  {number}  x2\\n * @param  {number}  y2\\n * @param  {number}  lineWidth\\n * @param  {number}  x\\n * @param  {number}  y\\n * @return {boolean}\\n */\\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\\n  if (lineWidth === 0) {\\n    return false;\\n  }\\n\\n  var _l = lineWidth; // Quick reject\\n\\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\\n    return false;\\n  }\\n\\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\\n  return d <= _l / 2;\\n}\\n\\nexports.containStroke = containStroke;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29udGFpbi9xdWFkcmF0aWMuanM/NjhhYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMsRUFBZTs7QUFFcEM7O0FBRUE7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFCQUFxQjs7QUFFckI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2N1cnZlID0gcmVxdWlyZShcIi4uL2NvcmUvY3VydmVcIik7XG5cbnZhciBxdWFkcmF0aWNQcm9qZWN0UG9pbnQgPSBfY3VydmUucXVhZHJhdGljUHJvamVjdFBvaW50O1xuXG4vKipcbiAqIOS6jOasoei0neWhnuWwlOabsue6v+aPj+i+ueWMheWQq+WIpOaWrVxuICogQHBhcmFtICB7bnVtYmVyfSAgeDBcbiAqIEBwYXJhbSAge251bWJlcn0gIHkwXG4gKiBAcGFyYW0gIHtudW1iZXJ9ICB4MVxuICogQHBhcmFtICB7bnVtYmVyfSAgeTFcbiAqIEBwYXJhbSAge251bWJlcn0gIHgyXG4gKiBAcGFyYW0gIHtudW1iZXJ9ICB5MlxuICogQHBhcmFtICB7bnVtYmVyfSAgbGluZVdpZHRoXG4gKiBAcGFyYW0gIHtudW1iZXJ9ICB4XG4gKiBAcGFyYW0gIHtudW1iZXJ9ICB5XG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBjb250YWluU3Ryb2tlKHgwLCB5MCwgeDEsIHkxLCB4MiwgeTIsIGxpbmVXaWR0aCwgeCwgeSkge1xuICBpZiAobGluZVdpZHRoID09PSAwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIF9sID0gbGluZVdpZHRoOyAvLyBRdWljayByZWplY3RcblxuICBpZiAoeSA+IHkwICsgX2wgJiYgeSA+IHkxICsgX2wgJiYgeSA+IHkyICsgX2wgfHwgeSA8IHkwIC0gX2wgJiYgeSA8IHkxIC0gX2wgJiYgeSA8IHkyIC0gX2wgfHwgeCA+IHgwICsgX2wgJiYgeCA+IHgxICsgX2wgJiYgeCA+IHgyICsgX2wgfHwgeCA8IHgwIC0gX2wgJiYgeCA8IHgxIC0gX2wgJiYgeCA8IHgyIC0gX2wpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgZCA9IHF1YWRyYXRpY1Byb2plY3RQb2ludCh4MCwgeTAsIHgxLCB5MSwgeDIsIHkyLCB4LCB5LCBudWxsKTtcbiAgcmV0dXJuIGQgPD0gX2wgLyAyO1xufVxuXG5leHBvcnRzLmNvbnRhaW5TdHJva2UgPSBjb250YWluU3Ryb2tlOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///211\\n\")},function(module,exports,__webpack_require__){eval(\"var _util = __webpack_require__(142);\\n\\nvar normalizeRadian = _util.normalizeRadian;\\nvar PI2 = Math.PI * 2;\\n/**\\n * 圆弧描边包含判断\\n * @param  {number}  cx\\n * @param  {number}  cy\\n * @param  {number}  r\\n * @param  {number}  startAngle\\n * @param  {number}  endAngle\\n * @param  {boolean}  anticlockwise\\n * @param  {number} lineWidth\\n * @param  {number}  x\\n * @param  {number}  y\\n * @return {Boolean}\\n */\\n\\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\\n  if (lineWidth === 0) {\\n    return false;\\n  }\\n\\n  var _l = lineWidth;\\n  x -= cx;\\n  y -= cy;\\n  var d = Math.sqrt(x * x + y * y);\\n\\n  if (d - _l > r || d + _l < r) {\\n    return false;\\n  }\\n\\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\\n    // Is a circle\\n    return true;\\n  }\\n\\n  if (anticlockwise) {\\n    var tmp = startAngle;\\n    startAngle = normalizeRadian(endAngle);\\n    endAngle = normalizeRadian(tmp);\\n  } else {\\n    startAngle = normalizeRadian(startAngle);\\n    endAngle = normalizeRadian(endAngle);\\n  }\\n\\n  if (startAngle > endAngle) {\\n    endAngle += PI2;\\n  }\\n\\n  var angle = Math.atan2(y, x);\\n\\n  if (angle < 0) {\\n    angle += PI2;\\n  }\\n\\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\\n}\\n\\nexports.containStroke = containStroke;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29udGFpbi9hcmMuanM/OWY1MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLG1CQUFPLENBQUMsR0FBUTs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksUUFBUTtBQUNwQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjEyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF91dGlsID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcblxudmFyIG5vcm1hbGl6ZVJhZGlhbiA9IF91dGlsLm5vcm1hbGl6ZVJhZGlhbjtcbnZhciBQSTIgPSBNYXRoLlBJICogMjtcbi8qKlxuICog5ZyG5byn5o+P6L655YyF5ZCr5Yik5patXG4gKiBAcGFyYW0gIHtudW1iZXJ9ICBjeFxuICogQHBhcmFtICB7bnVtYmVyfSAgY3lcbiAqIEBwYXJhbSAge251bWJlcn0gIHJcbiAqIEBwYXJhbSAge251bWJlcn0gIHN0YXJ0QW5nbGVcbiAqIEBwYXJhbSAge251bWJlcn0gIGVuZEFuZ2xlXG4gKiBAcGFyYW0gIHtib29sZWFufSAgYW50aWNsb2Nrd2lzZVxuICogQHBhcmFtICB7bnVtYmVyfSBsaW5lV2lkdGhcbiAqIEBwYXJhbSAge251bWJlcn0gIHhcbiAqIEBwYXJhbSAge251bWJlcn0gIHlcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKi9cblxuZnVuY3Rpb24gY29udGFpblN0cm9rZShjeCwgY3ksIHIsIHN0YXJ0QW5nbGUsIGVuZEFuZ2xlLCBhbnRpY2xvY2t3aXNlLCBsaW5lV2lkdGgsIHgsIHkpIHtcbiAgaWYgKGxpbmVXaWR0aCA9PT0gMCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBfbCA9IGxpbmVXaWR0aDtcbiAgeCAtPSBjeDtcbiAgeSAtPSBjeTtcbiAgdmFyIGQgPSBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSk7XG5cbiAgaWYgKGQgLSBfbCA+IHIgfHwgZCArIF9sIDwgcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChNYXRoLmFicyhzdGFydEFuZ2xlIC0gZW5kQW5nbGUpICUgUEkyIDwgMWUtNCkge1xuICAgIC8vIElzIGEgY2lyY2xlXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoYW50aWNsb2Nrd2lzZSkge1xuICAgIHZhciB0bXAgPSBzdGFydEFuZ2xlO1xuICAgIHN0YXJ0QW5nbGUgPSBub3JtYWxpemVSYWRpYW4oZW5kQW5nbGUpO1xuICAgIGVuZEFuZ2xlID0gbm9ybWFsaXplUmFkaWFuKHRtcCk7XG4gIH0gZWxzZSB7XG4gICAgc3RhcnRBbmdsZSA9IG5vcm1hbGl6ZVJhZGlhbihzdGFydEFuZ2xlKTtcbiAgICBlbmRBbmdsZSA9IG5vcm1hbGl6ZVJhZGlhbihlbmRBbmdsZSk7XG4gIH1cblxuICBpZiAoc3RhcnRBbmdsZSA+IGVuZEFuZ2xlKSB7XG4gICAgZW5kQW5nbGUgKz0gUEkyO1xuICB9XG5cbiAgdmFyIGFuZ2xlID0gTWF0aC5hdGFuMih5LCB4KTtcblxuICBpZiAoYW5nbGUgPCAwKSB7XG4gICAgYW5nbGUgKz0gUEkyO1xuICB9XG5cbiAgcmV0dXJuIGFuZ2xlID49IHN0YXJ0QW5nbGUgJiYgYW5nbGUgPD0gZW5kQW5nbGUgfHwgYW5nbGUgKyBQSTIgPj0gc3RhcnRBbmdsZSAmJiBhbmdsZSArIFBJMiA8PSBlbmRBbmdsZTtcbn1cblxuZXhwb3J0cy5jb250YWluU3Ryb2tlID0gY29udGFpblN0cm9rZTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///212\\n\")},function(module,exports,__webpack_require__){eval(\"var PathProxy = __webpack_require__(89);\\n\\nvar _vector = __webpack_require__(62);\\n\\nvar v2ApplyTransform = _vector.applyTransform;\\nvar CMD = PathProxy.CMD;\\nvar points = [[], [], []];\\nvar mathSqrt = Math.sqrt;\\nvar mathAtan2 = Math.atan2;\\n\\nfunction _default(path, m) {\\n  var data = path.data;\\n  var cmd;\\n  var nPoint;\\n  var i;\\n  var j;\\n  var k;\\n  var p;\\n  var M = CMD.M;\\n  var C = CMD.C;\\n  var L = CMD.L;\\n  var R = CMD.R;\\n  var A = CMD.A;\\n  var Q = CMD.Q;\\n\\n  for (i = 0, j = 0; i < data.length;) {\\n    cmd = data[i++];\\n    j = i;\\n    nPoint = 0;\\n\\n    switch (cmd) {\\n      case M:\\n        nPoint = 1;\\n        break;\\n\\n      case L:\\n        nPoint = 1;\\n        break;\\n\\n      case C:\\n        nPoint = 3;\\n        break;\\n\\n      case Q:\\n        nPoint = 2;\\n        break;\\n\\n      case A:\\n        var x = m[4];\\n        var y = m[5];\\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\\n\\n        data[i] *= sx;\\n        data[i++] += x; // cy\\n\\n        data[i] *= sy;\\n        data[i++] += y; // Scale rx and ry\\n        // FIXME Assume psi is 0 here\\n\\n        data[i++] *= sx;\\n        data[i++] *= sy; // Start angle\\n\\n        data[i++] += angle; // end angle\\n\\n        data[i++] += angle; // FIXME psi\\n\\n        i += 2;\\n        j = i;\\n        break;\\n\\n      case R:\\n        // x0, y0\\n        p[0] = data[i++];\\n        p[1] = data[i++];\\n        v2ApplyTransform(p, p, m);\\n        data[j++] = p[0];\\n        data[j++] = p[1]; // x1, y1\\n\\n        p[0] += data[i++];\\n        p[1] += data[i++];\\n        v2ApplyTransform(p, p, m);\\n        data[j++] = p[0];\\n        data[j++] = p[1];\\n    }\\n\\n    for (k = 0; k < nPoint; k++) {\\n      var p = points[k];\\n      p[0] = data[i++];\\n      p[1] = data[i++];\\n      v2ApplyTransform(p, p, m); // Write back\\n\\n      data[j++] = p[0];\\n      data[j++] = p[1];\\n    }\\n  }\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvdG9vbC90cmFuc2Zvcm1QYXRoLmpzP2VlODQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsRUFBbUI7O0FBRTNDLGNBQWMsbUJBQU8sQ0FBQyxFQUFnQjs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7O0FBRXJEO0FBQ0EsdUJBQXVCOztBQUV2QjtBQUNBLHVCQUF1QjtBQUN2Qjs7QUFFQTtBQUNBLHdCQUF3Qjs7QUFFeEIsMkJBQTJCOztBQUUzQiwyQkFBMkI7O0FBRTNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7O0FBRXpCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLFlBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQYXRoUHJveHkgPSByZXF1aXJlKFwiLi4vY29yZS9QYXRoUHJveHlcIik7XG5cbnZhciBfdmVjdG9yID0gcmVxdWlyZShcIi4uL2NvcmUvdmVjdG9yXCIpO1xuXG52YXIgdjJBcHBseVRyYW5zZm9ybSA9IF92ZWN0b3IuYXBwbHlUcmFuc2Zvcm07XG52YXIgQ01EID0gUGF0aFByb3h5LkNNRDtcbnZhciBwb2ludHMgPSBbW10sIFtdLCBbXV07XG52YXIgbWF0aFNxcnQgPSBNYXRoLnNxcnQ7XG52YXIgbWF0aEF0YW4yID0gTWF0aC5hdGFuMjtcblxuZnVuY3Rpb24gX2RlZmF1bHQocGF0aCwgbSkge1xuICB2YXIgZGF0YSA9IHBhdGguZGF0YTtcbiAgdmFyIGNtZDtcbiAgdmFyIG5Qb2ludDtcbiAgdmFyIGk7XG4gIHZhciBqO1xuICB2YXIgaztcbiAgdmFyIHA7XG4gIHZhciBNID0gQ01ELk07XG4gIHZhciBDID0gQ01ELkM7XG4gIHZhciBMID0gQ01ELkw7XG4gIHZhciBSID0gQ01ELlI7XG4gIHZhciBBID0gQ01ELkE7XG4gIHZhciBRID0gQ01ELlE7XG5cbiAgZm9yIChpID0gMCwgaiA9IDA7IGkgPCBkYXRhLmxlbmd0aDspIHtcbiAgICBjbWQgPSBkYXRhW2krK107XG4gICAgaiA9IGk7XG4gICAgblBvaW50ID0gMDtcblxuICAgIHN3aXRjaCAoY21kKSB7XG4gICAgICBjYXNlIE06XG4gICAgICAgIG5Qb2ludCA9IDE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEw6XG4gICAgICAgIG5Qb2ludCA9IDE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEM6XG4gICAgICAgIG5Qb2ludCA9IDM7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFE6XG4gICAgICAgIG5Qb2ludCA9IDI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEE6XG4gICAgICAgIHZhciB4ID0gbVs0XTtcbiAgICAgICAgdmFyIHkgPSBtWzVdO1xuICAgICAgICB2YXIgc3ggPSBtYXRoU3FydChtWzBdICogbVswXSArIG1bMV0gKiBtWzFdKTtcbiAgICAgICAgdmFyIHN5ID0gbWF0aFNxcnQobVsyXSAqIG1bMl0gKyBtWzNdICogbVszXSk7XG4gICAgICAgIHZhciBhbmdsZSA9IG1hdGhBdGFuMigtbVsxXSAvIHN5LCBtWzBdIC8gc3gpOyAvLyBjeFxuXG4gICAgICAgIGRhdGFbaV0gKj0gc3g7XG4gICAgICAgIGRhdGFbaSsrXSArPSB4OyAvLyBjeVxuXG4gICAgICAgIGRhdGFbaV0gKj0gc3k7XG4gICAgICAgIGRhdGFbaSsrXSArPSB5OyAvLyBTY2FsZSByeCBhbmQgcnlcbiAgICAgICAgLy8gRklYTUUgQXNzdW1lIHBzaSBpcyAwIGhlcmVcblxuICAgICAgICBkYXRhW2krK10gKj0gc3g7XG4gICAgICAgIGRhdGFbaSsrXSAqPSBzeTsgLy8gU3RhcnQgYW5nbGVcblxuICAgICAgICBkYXRhW2krK10gKz0gYW5nbGU7IC8vIGVuZCBhbmdsZVxuXG4gICAgICAgIGRhdGFbaSsrXSArPSBhbmdsZTsgLy8gRklYTUUgcHNpXG5cbiAgICAgICAgaSArPSAyO1xuICAgICAgICBqID0gaTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgUjpcbiAgICAgICAgLy8geDAsIHkwXG4gICAgICAgIHBbMF0gPSBkYXRhW2krK107XG4gICAgICAgIHBbMV0gPSBkYXRhW2krK107XG4gICAgICAgIHYyQXBwbHlUcmFuc2Zvcm0ocCwgcCwgbSk7XG4gICAgICAgIGRhdGFbaisrXSA9IHBbMF07XG4gICAgICAgIGRhdGFbaisrXSA9IHBbMV07IC8vIHgxLCB5MVxuXG4gICAgICAgIHBbMF0gKz0gZGF0YVtpKytdO1xuICAgICAgICBwWzFdICs9IGRhdGFbaSsrXTtcbiAgICAgICAgdjJBcHBseVRyYW5zZm9ybShwLCBwLCBtKTtcbiAgICAgICAgZGF0YVtqKytdID0gcFswXTtcbiAgICAgICAgZGF0YVtqKytdID0gcFsxXTtcbiAgICB9XG5cbiAgICBmb3IgKGsgPSAwOyBrIDwgblBvaW50OyBrKyspIHtcbiAgICAgIHZhciBwID0gcG9pbnRzW2tdO1xuICAgICAgcFswXSA9IGRhdGFbaSsrXTtcbiAgICAgIHBbMV0gPSBkYXRhW2krK107XG4gICAgICB2MkFwcGx5VHJhbnNmb3JtKHAsIHAsIG0pOyAvLyBXcml0ZSBiYWNrXG5cbiAgICAgIGRhdGFbaisrXSA9IHBbMF07XG4gICAgICBkYXRhW2orK10gPSBwWzFdO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///213\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\nvar fixClipWithShadow = __webpack_require__(145);\\n\\n/**\\n * 扇形\\n * @module zrender/graphic/shape/Sector\\n */\\nvar _default = Path.extend({\\n  type: 'sector',\\n  shape: {\\n    cx: 0,\\n    cy: 0,\\n    r0: 0,\\n    r: 0,\\n    startAngle: 0,\\n    endAngle: Math.PI * 2,\\n    clockwise: true\\n  },\\n  brush: fixClipWithShadow(Path.prototype.brush),\\n  buildPath: function (ctx, shape) {\\n    var x = shape.cx;\\n    var y = shape.cy;\\n    var r0 = Math.max(shape.r0 || 0, 0);\\n    var r = Math.max(shape.r, 0);\\n    var startAngle = shape.startAngle;\\n    var endAngle = shape.endAngle;\\n    var clockwise = shape.clockwise;\\n    var unitX = Math.cos(startAngle);\\n    var unitY = Math.sin(startAngle);\\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\\n    ctx.lineTo(unitX * r + x, unitY * r + y);\\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\\n\\n    if (r0 !== 0) {\\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\\n    }\\n\\n    ctx.closePath();\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9TZWN0b3IuanM/NGFhMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsRUFBUzs7QUFFNUIsd0JBQXdCLG1CQUFPLENBQUMsR0FBNkI7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiIyMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUGF0aCA9IHJlcXVpcmUoXCIuLi9QYXRoXCIpO1xuXG52YXIgZml4Q2xpcFdpdGhTaGFkb3cgPSByZXF1aXJlKFwiLi4vaGVscGVyL2ZpeENsaXBXaXRoU2hhZG93XCIpO1xuXG4vKipcbiAqIOaJh+W9olxuICogQG1vZHVsZSB6cmVuZGVyL2dyYXBoaWMvc2hhcGUvU2VjdG9yXG4gKi9cbnZhciBfZGVmYXVsdCA9IFBhdGguZXh0ZW5kKHtcbiAgdHlwZTogJ3NlY3RvcicsXG4gIHNoYXBlOiB7XG4gICAgY3g6IDAsXG4gICAgY3k6IDAsXG4gICAgcjA6IDAsXG4gICAgcjogMCxcbiAgICBzdGFydEFuZ2xlOiAwLFxuICAgIGVuZEFuZ2xlOiBNYXRoLlBJICogMixcbiAgICBjbG9ja3dpc2U6IHRydWVcbiAgfSxcbiAgYnJ1c2g6IGZpeENsaXBXaXRoU2hhZG93KFBhdGgucHJvdG90eXBlLmJydXNoKSxcbiAgYnVpbGRQYXRoOiBmdW5jdGlvbiAoY3R4LCBzaGFwZSkge1xuICAgIHZhciB4ID0gc2hhcGUuY3g7XG4gICAgdmFyIHkgPSBzaGFwZS5jeTtcbiAgICB2YXIgcjAgPSBNYXRoLm1heChzaGFwZS5yMCB8fCAwLCAwKTtcbiAgICB2YXIgciA9IE1hdGgubWF4KHNoYXBlLnIsIDApO1xuICAgIHZhciBzdGFydEFuZ2xlID0gc2hhcGUuc3RhcnRBbmdsZTtcbiAgICB2YXIgZW5kQW5nbGUgPSBzaGFwZS5lbmRBbmdsZTtcbiAgICB2YXIgY2xvY2t3aXNlID0gc2hhcGUuY2xvY2t3aXNlO1xuICAgIHZhciB1bml0WCA9IE1hdGguY29zKHN0YXJ0QW5nbGUpO1xuICAgIHZhciB1bml0WSA9IE1hdGguc2luKHN0YXJ0QW5nbGUpO1xuICAgIGN0eC5tb3ZlVG8odW5pdFggKiByMCArIHgsIHVuaXRZICogcjAgKyB5KTtcbiAgICBjdHgubGluZVRvKHVuaXRYICogciArIHgsIHVuaXRZICogciArIHkpO1xuICAgIGN0eC5hcmMoeCwgeSwgciwgc3RhcnRBbmdsZSwgZW5kQW5nbGUsICFjbG9ja3dpc2UpO1xuICAgIGN0eC5saW5lVG8oTWF0aC5jb3MoZW5kQW5nbGUpICogcjAgKyB4LCBNYXRoLnNpbihlbmRBbmdsZSkgKiByMCArIHkpO1xuXG4gICAgaWYgKHIwICE9PSAwKSB7XG4gICAgICBjdHguYXJjKHgsIHksIHIwLCBlbmRBbmdsZSwgc3RhcnRBbmdsZSwgY2xvY2t3aXNlKTtcbiAgICB9XG5cbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///214\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\n/**\\n * 圆环\\n * @module zrender/graphic/shape/Ring\\n */\\nvar _default = Path.extend({\\n  type: 'ring',\\n  shape: {\\n    cx: 0,\\n    cy: 0,\\n    r: 0,\\n    r0: 0\\n  },\\n  buildPath: function (ctx, shape) {\\n    var x = shape.cx;\\n    var y = shape.cy;\\n    var PI2 = Math.PI * 2;\\n    ctx.moveTo(x + shape.r, y);\\n    ctx.arc(x, y, shape.r, 0, PI2, false);\\n    ctx.moveTo(x + shape.r0, y);\\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9SaW5nLmpzPzQ1NzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLEVBQVM7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiIyMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUGF0aCA9IHJlcXVpcmUoXCIuLi9QYXRoXCIpO1xuXG4vKipcbiAqIOWchueOr1xuICogQG1vZHVsZSB6cmVuZGVyL2dyYXBoaWMvc2hhcGUvUmluZ1xuICovXG52YXIgX2RlZmF1bHQgPSBQYXRoLmV4dGVuZCh7XG4gIHR5cGU6ICdyaW5nJyxcbiAgc2hhcGU6IHtcbiAgICBjeDogMCxcbiAgICBjeTogMCxcbiAgICByOiAwLFxuICAgIHIwOiAwXG4gIH0sXG4gIGJ1aWxkUGF0aDogZnVuY3Rpb24gKGN0eCwgc2hhcGUpIHtcbiAgICB2YXIgeCA9IHNoYXBlLmN4O1xuICAgIHZhciB5ID0gc2hhcGUuY3k7XG4gICAgdmFyIFBJMiA9IE1hdGguUEkgKiAyO1xuICAgIGN0eC5tb3ZlVG8oeCArIHNoYXBlLnIsIHkpO1xuICAgIGN0eC5hcmMoeCwgeSwgc2hhcGUuciwgMCwgUEkyLCBmYWxzZSk7XG4gICAgY3R4Lm1vdmVUbyh4ICsgc2hhcGUucjAsIHkpO1xuICAgIGN0eC5hcmMoeCwgeSwgc2hhcGUucjAsIDAsIFBJMiwgdHJ1ZSk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///215\\n\")},function(module,exports,__webpack_require__){eval(\"var _vector = __webpack_require__(62);\\n\\nvar v2Distance = _vector.distance;\\n\\n/**\\n * Catmull-Rom spline 插值折线\\n * @module zrender/shape/util/smoothSpline\\n * @author pissang (https://www.github.com/pissang)\\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n *         errorrik (errorrik@gmail.com)\\n */\\n\\n/**\\n * @inner\\n */\\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\\n  var v0 = (p2 - p0) * 0.5;\\n  var v1 = (p3 - p1) * 0.5;\\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\\n}\\n/**\\n * @alias module:zrender/shape/util/smoothSpline\\n * @param {Array} points 线段顶点数组\\n * @param {boolean} isLoop\\n * @return {Array}\\n */\\n\\n\\nfunction _default(points, isLoop) {\\n  var len = points.length;\\n  var ret = [];\\n  var distance = 0;\\n\\n  for (var i = 1; i < len; i++) {\\n    distance += v2Distance(points[i - 1], points[i]);\\n  }\\n\\n  var segs = distance / 2;\\n  segs = segs < len ? len : segs;\\n\\n  for (var i = 0; i < segs; i++) {\\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\\n    var idx = Math.floor(pos);\\n    var w = pos - idx;\\n    var p0;\\n    var p1 = points[idx % len];\\n    var p2;\\n    var p3;\\n\\n    if (!isLoop) {\\n      p0 = points[idx === 0 ? idx : idx - 1];\\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\\n    } else {\\n      p0 = points[(idx - 1 + len) % len];\\n      p2 = points[(idx + 1) % len];\\n      p3 = points[(idx + 2) % len];\\n    }\\n\\n    var w2 = w * w;\\n    var w3 = w * w2;\\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\\n  }\\n\\n  return ret;\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9oZWxwZXIvc21vb3RoU3BsaW5lLmpzPzYyMGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLEVBQW1COztBQUV6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCLFVBQVU7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIyMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX3ZlY3RvciA9IHJlcXVpcmUoXCIuLi8uLi9jb3JlL3ZlY3RvclwiKTtcblxudmFyIHYyRGlzdGFuY2UgPSBfdmVjdG9yLmRpc3RhbmNlO1xuXG4vKipcbiAqIENhdG11bGwtUm9tIHNwbGluZSDmj5LlgLzmipjnur9cbiAqIEBtb2R1bGUgenJlbmRlci9zaGFwZS91dGlsL3Ntb290aFNwbGluZVxuICogQGF1dGhvciBwaXNzYW5nIChodHRwczovL3d3dy5naXRodWIuY29tL3Bpc3NhbmcpXG4gKiAgICAgICAgIEtlbmVyIChAS2VuZXIt5p6X5bOwLCBrZW5lci5saW5mZW5nQGdtYWlsLmNvbSlcbiAqICAgICAgICAgZXJyb3JyaWsgKGVycm9ycmlrQGdtYWlsLmNvbSlcbiAqL1xuXG4vKipcbiAqIEBpbm5lclxuICovXG5mdW5jdGlvbiBpbnRlcnBvbGF0ZShwMCwgcDEsIHAyLCBwMywgdCwgdDIsIHQzKSB7XG4gIHZhciB2MCA9IChwMiAtIHAwKSAqIDAuNTtcbiAgdmFyIHYxID0gKHAzIC0gcDEpICogMC41O1xuICByZXR1cm4gKDIgKiAocDEgLSBwMikgKyB2MCArIHYxKSAqIHQzICsgKC0zICogKHAxIC0gcDIpIC0gMiAqIHYwIC0gdjEpICogdDIgKyB2MCAqIHQgKyBwMTtcbn1cbi8qKlxuICogQGFsaWFzIG1vZHVsZTp6cmVuZGVyL3NoYXBlL3V0aWwvc21vb3RoU3BsaW5lXG4gKiBAcGFyYW0ge0FycmF5fSBwb2ludHMg57q/5q616aG254K55pWw57uEXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzTG9vcFxuICogQHJldHVybiB7QXJyYXl9XG4gKi9cblxuXG5mdW5jdGlvbiBfZGVmYXVsdChwb2ludHMsIGlzTG9vcCkge1xuICB2YXIgbGVuID0gcG9pbnRzLmxlbmd0aDtcbiAgdmFyIHJldCA9IFtdO1xuICB2YXIgZGlzdGFuY2UgPSAwO1xuXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgbGVuOyBpKyspIHtcbiAgICBkaXN0YW5jZSArPSB2MkRpc3RhbmNlKHBvaW50c1tpIC0gMV0sIHBvaW50c1tpXSk7XG4gIH1cblxuICB2YXIgc2VncyA9IGRpc3RhbmNlIC8gMjtcbiAgc2VncyA9IHNlZ3MgPCBsZW4gPyBsZW4gOiBzZWdzO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc2VnczsgaSsrKSB7XG4gICAgdmFyIHBvcyA9IGkgLyAoc2VncyAtIDEpICogKGlzTG9vcCA/IGxlbiA6IGxlbiAtIDEpO1xuICAgIHZhciBpZHggPSBNYXRoLmZsb29yKHBvcyk7XG4gICAgdmFyIHcgPSBwb3MgLSBpZHg7XG4gICAgdmFyIHAwO1xuICAgIHZhciBwMSA9IHBvaW50c1tpZHggJSBsZW5dO1xuICAgIHZhciBwMjtcbiAgICB2YXIgcDM7XG5cbiAgICBpZiAoIWlzTG9vcCkge1xuICAgICAgcDAgPSBwb2ludHNbaWR4ID09PSAwID8gaWR4IDogaWR4IC0gMV07XG4gICAgICBwMiA9IHBvaW50c1tpZHggPiBsZW4gLSAyID8gbGVuIC0gMSA6IGlkeCArIDFdO1xuICAgICAgcDMgPSBwb2ludHNbaWR4ID4gbGVuIC0gMyA/IGxlbiAtIDEgOiBpZHggKyAyXTtcbiAgICB9IGVsc2Uge1xuICAgICAgcDAgPSBwb2ludHNbKGlkeCAtIDEgKyBsZW4pICUgbGVuXTtcbiAgICAgIHAyID0gcG9pbnRzWyhpZHggKyAxKSAlIGxlbl07XG4gICAgICBwMyA9IHBvaW50c1soaWR4ICsgMikgJSBsZW5dO1xuICAgIH1cblxuICAgIHZhciB3MiA9IHcgKiB3O1xuICAgIHZhciB3MyA9IHcgKiB3MjtcbiAgICByZXQucHVzaChbaW50ZXJwb2xhdGUocDBbMF0sIHAxWzBdLCBwMlswXSwgcDNbMF0sIHcsIHcyLCB3MyksIGludGVycG9sYXRlKHAwWzFdLCBwMVsxXSwgcDJbMV0sIHAzWzFdLCB3LCB3MiwgdzMpXSk7XG4gIH1cblxuICByZXR1cm4gcmV0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///216\\n\")},function(module,exports,__webpack_require__){eval(\"var _vector = __webpack_require__(62);\\n\\nvar v2Min = _vector.min;\\nvar v2Max = _vector.max;\\nvar v2Scale = _vector.scale;\\nvar v2Distance = _vector.distance;\\nvar v2Add = _vector.add;\\nvar v2Clone = _vector.clone;\\nvar v2Sub = _vector.sub;\\n\\n/**\\n * 贝塞尔平滑曲线\\n * @module zrender/shape/util/smoothBezier\\n * @author pissang (https://www.github.com/pissang)\\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n *         errorrik (errorrik@gmail.com)\\n */\\n\\n/**\\n * 贝塞尔平滑曲线\\n * @alias module:zrender/shape/util/smoothBezier\\n * @param {Array} points 线段顶点数组\\n * @param {number} smooth 平滑等级, 0-1\\n * @param {boolean} isLoop\\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\\n *                           整个折线的包围盒做一个并集用来约束控制点。\\n * @param {Array} 计算出来的控制点数组\\n */\\nfunction _default(points, smooth, isLoop, constraint) {\\n  var cps = [];\\n  var v = [];\\n  var v1 = [];\\n  var v2 = [];\\n  var prevPoint;\\n  var nextPoint;\\n  var min, max;\\n\\n  if (constraint) {\\n    min = [Infinity, Infinity];\\n    max = [-Infinity, -Infinity];\\n\\n    for (var i = 0, len = points.length; i < len; i++) {\\n      v2Min(min, min, points[i]);\\n      v2Max(max, max, points[i]);\\n    } // 与指定的包围盒做并集\\n\\n\\n    v2Min(min, min, constraint[0]);\\n    v2Max(max, max, constraint[1]);\\n  }\\n\\n  for (var i = 0, len = points.length; i < len; i++) {\\n    var point = points[i];\\n\\n    if (isLoop) {\\n      prevPoint = points[i ? i - 1 : len - 1];\\n      nextPoint = points[(i + 1) % len];\\n    } else {\\n      if (i === 0 || i === len - 1) {\\n        cps.push(v2Clone(points[i]));\\n        continue;\\n      } else {\\n        prevPoint = points[i - 1];\\n        nextPoint = points[i + 1];\\n      }\\n    }\\n\\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\\n\\n    v2Scale(v, v, smooth);\\n    var d0 = v2Distance(point, prevPoint);\\n    var d1 = v2Distance(point, nextPoint);\\n    var sum = d0 + d1;\\n\\n    if (sum !== 0) {\\n      d0 /= sum;\\n      d1 /= sum;\\n    }\\n\\n    v2Scale(v1, v, -d0);\\n    v2Scale(v2, v, d1);\\n    var cp0 = v2Add([], point, v1);\\n    var cp1 = v2Add([], point, v2);\\n\\n    if (constraint) {\\n      v2Max(cp0, cp0, min);\\n      v2Min(cp0, cp0, max);\\n      v2Max(cp1, cp1, min);\\n      v2Min(cp1, cp1, max);\\n    }\\n\\n    cps.push(cp0);\\n    cps.push(cp1);\\n  }\\n\\n  if (isLoop) {\\n    cps.push(cps.shift());\\n  }\\n\\n  return cps;\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9oZWxwZXIvc21vb3RoQmV6aWVyLmpzPzljMmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLEVBQW1COztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQixXQUFXLE1BQU07QUFDakI7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHdDQUF3QyxTQUFTO0FBQ2pEO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDtBQUNBO0FBQ0E7O0FBRUEsc0NBQXNDLFNBQVM7QUFDL0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUM7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF92ZWN0b3IgPSByZXF1aXJlKFwiLi4vLi4vY29yZS92ZWN0b3JcIik7XG5cbnZhciB2Mk1pbiA9IF92ZWN0b3IubWluO1xudmFyIHYyTWF4ID0gX3ZlY3Rvci5tYXg7XG52YXIgdjJTY2FsZSA9IF92ZWN0b3Iuc2NhbGU7XG52YXIgdjJEaXN0YW5jZSA9IF92ZWN0b3IuZGlzdGFuY2U7XG52YXIgdjJBZGQgPSBfdmVjdG9yLmFkZDtcbnZhciB2MkNsb25lID0gX3ZlY3Rvci5jbG9uZTtcbnZhciB2MlN1YiA9IF92ZWN0b3Iuc3ViO1xuXG4vKipcbiAqIOi0neWhnuWwlOW5s+a7keabsue6v1xuICogQG1vZHVsZSB6cmVuZGVyL3NoYXBlL3V0aWwvc21vb3RoQmV6aWVyXG4gKiBAYXV0aG9yIHBpc3NhbmcgKGh0dHBzOi8vd3d3LmdpdGh1Yi5jb20vcGlzc2FuZylcbiAqICAgICAgICAgS2VuZXIgKEBLZW5lci3mnpfls7AsIGtlbmVyLmxpbmZlbmdAZ21haWwuY29tKVxuICogICAgICAgICBlcnJvcnJpayAoZXJyb3JyaWtAZ21haWwuY29tKVxuICovXG5cbi8qKlxuICog6LSd5aGe5bCU5bmz5ruR5puy57q/XG4gKiBAYWxpYXMgbW9kdWxlOnpyZW5kZXIvc2hhcGUvdXRpbC9zbW9vdGhCZXppZXJcbiAqIEBwYXJhbSB7QXJyYXl9IHBvaW50cyDnur/mrrXpobbngrnmlbDnu4RcbiAqIEBwYXJhbSB7bnVtYmVyfSBzbW9vdGgg5bmz5ruR562J57qnLCAwLTFcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNMb29wXG4gKiBAcGFyYW0ge0FycmF5fSBjb25zdHJhaW50IOWwhuiuoeeul+WHuuadpeeahOaOp+WItueCuee6puadn+WcqOS4gOS4quWMheWbtOebkuWGhVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICDmr5TlpoIgW1swLCAwXSwgWzEwMCwgMTAwXV0sIOi/meS4quWMheWbtOebkuS8muS4jlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICDmlbTkuKrmipjnur/nmoTljIXlm7Tnm5LlgZrkuIDkuKrlubbpm4bnlKjmnaXnuqbmnZ/mjqfliLbngrnjgIJcbiAqIEBwYXJhbSB7QXJyYXl9IOiuoeeul+WHuuadpeeahOaOp+WItueCueaVsOe7hFxuICovXG5mdW5jdGlvbiBfZGVmYXVsdChwb2ludHMsIHNtb290aCwgaXNMb29wLCBjb25zdHJhaW50KSB7XG4gIHZhciBjcHMgPSBbXTtcbiAgdmFyIHYgPSBbXTtcbiAgdmFyIHYxID0gW107XG4gIHZhciB2MiA9IFtdO1xuICB2YXIgcHJldlBvaW50O1xuICB2YXIgbmV4dFBvaW50O1xuICB2YXIgbWluLCBtYXg7XG5cbiAgaWYgKGNvbnN0cmFpbnQpIHtcbiAgICBtaW4gPSBbSW5maW5pdHksIEluZmluaXR5XTtcbiAgICBtYXggPSBbLUluZmluaXR5LCAtSW5maW5pdHldO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHBvaW50cy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgdjJNaW4obWluLCBtaW4sIHBvaW50c1tpXSk7XG4gICAgICB2Mk1heChtYXgsIG1heCwgcG9pbnRzW2ldKTtcbiAgICB9IC8vIOS4juaMh+WumueahOWMheWbtOebkuWBmuW5tumbhlxuXG5cbiAgICB2Mk1pbihtaW4sIG1pbiwgY29uc3RyYWludFswXSk7XG4gICAgdjJNYXgobWF4LCBtYXgsIGNvbnN0cmFpbnRbMV0pO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHBvaW50cy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIHZhciBwb2ludCA9IHBvaW50c1tpXTtcblxuICAgIGlmIChpc0xvb3ApIHtcbiAgICAgIHByZXZQb2ludCA9IHBvaW50c1tpID8gaSAtIDEgOiBsZW4gLSAxXTtcbiAgICAgIG5leHRQb2ludCA9IHBvaW50c1soaSArIDEpICUgbGVuXTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGkgPT09IDAgfHwgaSA9PT0gbGVuIC0gMSkge1xuICAgICAgICBjcHMucHVzaCh2MkNsb25lKHBvaW50c1tpXSkpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByZXZQb2ludCA9IHBvaW50c1tpIC0gMV07XG4gICAgICAgIG5leHRQb2ludCA9IHBvaW50c1tpICsgMV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgdjJTdWIodiwgbmV4dFBvaW50LCBwcmV2UG9pbnQpOyAvLyB1c2UgZGVncmVlIHRvIHNjYWxlIHRoZSBoYW5kbGUgbGVuZ3RoXG5cbiAgICB2MlNjYWxlKHYsIHYsIHNtb290aCk7XG4gICAgdmFyIGQwID0gdjJEaXN0YW5jZShwb2ludCwgcHJldlBvaW50KTtcbiAgICB2YXIgZDEgPSB2MkRpc3RhbmNlKHBvaW50LCBuZXh0UG9pbnQpO1xuICAgIHZhciBzdW0gPSBkMCArIGQxO1xuXG4gICAgaWYgKHN1bSAhPT0gMCkge1xuICAgICAgZDAgLz0gc3VtO1xuICAgICAgZDEgLz0gc3VtO1xuICAgIH1cblxuICAgIHYyU2NhbGUodjEsIHYsIC1kMCk7XG4gICAgdjJTY2FsZSh2MiwgdiwgZDEpO1xuICAgIHZhciBjcDAgPSB2MkFkZChbXSwgcG9pbnQsIHYxKTtcbiAgICB2YXIgY3AxID0gdjJBZGQoW10sIHBvaW50LCB2Mik7XG5cbiAgICBpZiAoY29uc3RyYWludCkge1xuICAgICAgdjJNYXgoY3AwLCBjcDAsIG1pbik7XG4gICAgICB2Mk1pbihjcDAsIGNwMCwgbWF4KTtcbiAgICAgIHYyTWF4KGNwMSwgY3AxLCBtaW4pO1xuICAgICAgdjJNaW4oY3AxLCBjcDEsIG1heCk7XG4gICAgfVxuXG4gICAgY3BzLnB1c2goY3AwKTtcbiAgICBjcHMucHVzaChjcDEpO1xuICB9XG5cbiAgaWYgKGlzTG9vcCkge1xuICAgIGNwcy5wdXNoKGNwcy5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBjcHM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///217\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\nvar vec2 = __webpack_require__(62);\\n\\nvar _curve = __webpack_require__(77);\\n\\nvar quadraticSubdivide = _curve.quadraticSubdivide;\\nvar cubicSubdivide = _curve.cubicSubdivide;\\nvar quadraticAt = _curve.quadraticAt;\\nvar cubicAt = _curve.cubicAt;\\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\\n\\n/**\\n * 贝塞尔曲线\\n * @module zrender/shape/BezierCurve\\n */\\nvar out = [];\\n\\nfunction someVectorAt(shape, t, isTangent) {\\n  var cpx2 = shape.cpx2;\\n  var cpy2 = shape.cpy2;\\n\\n  if (cpx2 === null || cpy2 === null) {\\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\\n  } else {\\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\\n  }\\n}\\n\\nvar _default = Path.extend({\\n  type: 'bezier-curve',\\n  shape: {\\n    x1: 0,\\n    y1: 0,\\n    x2: 0,\\n    y2: 0,\\n    cpx1: 0,\\n    cpy1: 0,\\n    // cpx2: 0,\\n    // cpy2: 0\\n    // Curve show percent, for animating\\n    percent: 1\\n  },\\n  style: {\\n    stroke: '#000',\\n    fill: null\\n  },\\n  buildPath: function (ctx, shape) {\\n    var x1 = shape.x1;\\n    var y1 = shape.y1;\\n    var x2 = shape.x2;\\n    var y2 = shape.y2;\\n    var cpx1 = shape.cpx1;\\n    var cpy1 = shape.cpy1;\\n    var cpx2 = shape.cpx2;\\n    var cpy2 = shape.cpy2;\\n    var percent = shape.percent;\\n\\n    if (percent === 0) {\\n      return;\\n    }\\n\\n    ctx.moveTo(x1, y1);\\n\\n    if (cpx2 == null || cpy2 == null) {\\n      if (percent < 1) {\\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\\n        cpx1 = out[1];\\n        x2 = out[2];\\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\\n        cpy1 = out[1];\\n        y2 = out[2];\\n      }\\n\\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\\n    } else {\\n      if (percent < 1) {\\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\\n        cpx1 = out[1];\\n        cpx2 = out[2];\\n        x2 = out[3];\\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\\n        cpy1 = out[1];\\n        cpy2 = out[2];\\n        y2 = out[3];\\n      }\\n\\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\\n    }\\n  },\\n\\n  /**\\n   * Get point at percent\\n   * @param  {number} t\\n   * @return {Array.<number>}\\n   */\\n  pointAt: function (t) {\\n    return someVectorAt(this.shape, t, false);\\n  },\\n\\n  /**\\n   * Get tangent at percent\\n   * @param  {number} t\\n   * @return {Array.<number>}\\n   */\\n  tangentAt: function (t) {\\n    var p = someVectorAt(this.shape, t, true);\\n    return vec2.normalize(p, p);\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9CZXppZXJDdXJ2ZS5qcz9hYzBmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsbUJBQU8sQ0FBQyxFQUFTOztBQUU1QixXQUFXLG1CQUFPLENBQUMsRUFBbUI7O0FBRXRDLGFBQWEsbUJBQU8sQ0FBQyxFQUFrQjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckIsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLGNBQWMsT0FBTztBQUNyQixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiMjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFBhdGggPSByZXF1aXJlKFwiLi4vUGF0aFwiKTtcblxudmFyIHZlYzIgPSByZXF1aXJlKFwiLi4vLi4vY29yZS92ZWN0b3JcIik7XG5cbnZhciBfY3VydmUgPSByZXF1aXJlKFwiLi4vLi4vY29yZS9jdXJ2ZVwiKTtcblxudmFyIHF1YWRyYXRpY1N1YmRpdmlkZSA9IF9jdXJ2ZS5xdWFkcmF0aWNTdWJkaXZpZGU7XG52YXIgY3ViaWNTdWJkaXZpZGUgPSBfY3VydmUuY3ViaWNTdWJkaXZpZGU7XG52YXIgcXVhZHJhdGljQXQgPSBfY3VydmUucXVhZHJhdGljQXQ7XG52YXIgY3ViaWNBdCA9IF9jdXJ2ZS5jdWJpY0F0O1xudmFyIHF1YWRyYXRpY0Rlcml2YXRpdmVBdCA9IF9jdXJ2ZS5xdWFkcmF0aWNEZXJpdmF0aXZlQXQ7XG52YXIgY3ViaWNEZXJpdmF0aXZlQXQgPSBfY3VydmUuY3ViaWNEZXJpdmF0aXZlQXQ7XG5cbi8qKlxuICog6LSd5aGe5bCU5puy57q/XG4gKiBAbW9kdWxlIHpyZW5kZXIvc2hhcGUvQmV6aWVyQ3VydmVcbiAqL1xudmFyIG91dCA9IFtdO1xuXG5mdW5jdGlvbiBzb21lVmVjdG9yQXQoc2hhcGUsIHQsIGlzVGFuZ2VudCkge1xuICB2YXIgY3B4MiA9IHNoYXBlLmNweDI7XG4gIHZhciBjcHkyID0gc2hhcGUuY3B5MjtcblxuICBpZiAoY3B4MiA9PT0gbnVsbCB8fCBjcHkyID09PSBudWxsKSB7XG4gICAgcmV0dXJuIFsoaXNUYW5nZW50ID8gY3ViaWNEZXJpdmF0aXZlQXQgOiBjdWJpY0F0KShzaGFwZS54MSwgc2hhcGUuY3B4MSwgc2hhcGUuY3B4Miwgc2hhcGUueDIsIHQpLCAoaXNUYW5nZW50ID8gY3ViaWNEZXJpdmF0aXZlQXQgOiBjdWJpY0F0KShzaGFwZS55MSwgc2hhcGUuY3B5MSwgc2hhcGUuY3B5Miwgc2hhcGUueTIsIHQpXTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gWyhpc1RhbmdlbnQgPyBxdWFkcmF0aWNEZXJpdmF0aXZlQXQgOiBxdWFkcmF0aWNBdCkoc2hhcGUueDEsIHNoYXBlLmNweDEsIHNoYXBlLngyLCB0KSwgKGlzVGFuZ2VudCA/IHF1YWRyYXRpY0Rlcml2YXRpdmVBdCA6IHF1YWRyYXRpY0F0KShzaGFwZS55MSwgc2hhcGUuY3B5MSwgc2hhcGUueTIsIHQpXTtcbiAgfVxufVxuXG52YXIgX2RlZmF1bHQgPSBQYXRoLmV4dGVuZCh7XG4gIHR5cGU6ICdiZXppZXItY3VydmUnLFxuICBzaGFwZToge1xuICAgIHgxOiAwLFxuICAgIHkxOiAwLFxuICAgIHgyOiAwLFxuICAgIHkyOiAwLFxuICAgIGNweDE6IDAsXG4gICAgY3B5MTogMCxcbiAgICAvLyBjcHgyOiAwLFxuICAgIC8vIGNweTI6IDBcbiAgICAvLyBDdXJ2ZSBzaG93IHBlcmNlbnQsIGZvciBhbmltYXRpbmdcbiAgICBwZXJjZW50OiAxXG4gIH0sXG4gIHN0eWxlOiB7XG4gICAgc3Ryb2tlOiAnIzAwMCcsXG4gICAgZmlsbDogbnVsbFxuICB9LFxuICBidWlsZFBhdGg6IGZ1bmN0aW9uIChjdHgsIHNoYXBlKSB7XG4gICAgdmFyIHgxID0gc2hhcGUueDE7XG4gICAgdmFyIHkxID0gc2hhcGUueTE7XG4gICAgdmFyIHgyID0gc2hhcGUueDI7XG4gICAgdmFyIHkyID0gc2hhcGUueTI7XG4gICAgdmFyIGNweDEgPSBzaGFwZS5jcHgxO1xuICAgIHZhciBjcHkxID0gc2hhcGUuY3B5MTtcbiAgICB2YXIgY3B4MiA9IHNoYXBlLmNweDI7XG4gICAgdmFyIGNweTIgPSBzaGFwZS5jcHkyO1xuICAgIHZhciBwZXJjZW50ID0gc2hhcGUucGVyY2VudDtcblxuICAgIGlmIChwZXJjZW50ID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY3R4Lm1vdmVUbyh4MSwgeTEpO1xuXG4gICAgaWYgKGNweDIgPT0gbnVsbCB8fCBjcHkyID09IG51bGwpIHtcbiAgICAgIGlmIChwZXJjZW50IDwgMSkge1xuICAgICAgICBxdWFkcmF0aWNTdWJkaXZpZGUoeDEsIGNweDEsIHgyLCBwZXJjZW50LCBvdXQpO1xuICAgICAgICBjcHgxID0gb3V0WzFdO1xuICAgICAgICB4MiA9IG91dFsyXTtcbiAgICAgICAgcXVhZHJhdGljU3ViZGl2aWRlKHkxLCBjcHkxLCB5MiwgcGVyY2VudCwgb3V0KTtcbiAgICAgICAgY3B5MSA9IG91dFsxXTtcbiAgICAgICAgeTIgPSBvdXRbMl07XG4gICAgICB9XG5cbiAgICAgIGN0eC5xdWFkcmF0aWNDdXJ2ZVRvKGNweDEsIGNweTEsIHgyLCB5Mik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwZXJjZW50IDwgMSkge1xuICAgICAgICBjdWJpY1N1YmRpdmlkZSh4MSwgY3B4MSwgY3B4MiwgeDIsIHBlcmNlbnQsIG91dCk7XG4gICAgICAgIGNweDEgPSBvdXRbMV07XG4gICAgICAgIGNweDIgPSBvdXRbMl07XG4gICAgICAgIHgyID0gb3V0WzNdO1xuICAgICAgICBjdWJpY1N1YmRpdmlkZSh5MSwgY3B5MSwgY3B5MiwgeTIsIHBlcmNlbnQsIG91dCk7XG4gICAgICAgIGNweTEgPSBvdXRbMV07XG4gICAgICAgIGNweTIgPSBvdXRbMl07XG4gICAgICAgIHkyID0gb3V0WzNdO1xuICAgICAgfVxuXG4gICAgICBjdHguYmV6aWVyQ3VydmVUbyhjcHgxLCBjcHkxLCBjcHgyLCBjcHkyLCB4MiwgeTIpO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogR2V0IHBvaW50IGF0IHBlcmNlbnRcbiAgICogQHBhcmFtICB7bnVtYmVyfSB0XG4gICAqIEByZXR1cm4ge0FycmF5LjxudW1iZXI+fVxuICAgKi9cbiAgcG9pbnRBdDogZnVuY3Rpb24gKHQpIHtcbiAgICByZXR1cm4gc29tZVZlY3RvckF0KHRoaXMuc2hhcGUsIHQsIGZhbHNlKTtcbiAgfSxcblxuICAvKipcbiAgICogR2V0IHRhbmdlbnQgYXQgcGVyY2VudFxuICAgKiBAcGFyYW0gIHtudW1iZXJ9IHRcbiAgICogQHJldHVybiB7QXJyYXkuPG51bWJlcj59XG4gICAqL1xuICB0YW5nZW50QXQ6IGZ1bmN0aW9uICh0KSB7XG4gICAgdmFyIHAgPSBzb21lVmVjdG9yQXQodGhpcy5zaGFwZSwgdCwgdHJ1ZSk7XG4gICAgcmV0dXJuIHZlYzIubm9ybWFsaXplKHAsIHApO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///218\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\n/**\\n * 圆弧\\n * @module zrender/graphic/shape/Arc\\n */\\nvar _default = Path.extend({\\n  type: 'arc',\\n  shape: {\\n    cx: 0,\\n    cy: 0,\\n    r: 0,\\n    startAngle: 0,\\n    endAngle: Math.PI * 2,\\n    clockwise: true\\n  },\\n  style: {\\n    stroke: '#000',\\n    fill: null\\n  },\\n  buildPath: function (ctx, shape) {\\n    var x = shape.cx;\\n    var y = shape.cy;\\n    var r = Math.max(shape.r, 0);\\n    var startAngle = shape.startAngle;\\n    var endAngle = shape.endAngle;\\n    var clockwise = shape.clockwise;\\n    var unitX = Math.cos(startAngle);\\n    var unitY = Math.sin(startAngle);\\n    ctx.moveTo(unitX * r + x, unitY * r + y);\\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9BcmMuanM/OGQzMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsRUFBUzs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiMjE5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFBhdGggPSByZXF1aXJlKFwiLi4vUGF0aFwiKTtcblxuLyoqXG4gKiDlnIblvKdcbiAqIEBtb2R1bGUgenJlbmRlci9ncmFwaGljL3NoYXBlL0FyY1xuICovXG52YXIgX2RlZmF1bHQgPSBQYXRoLmV4dGVuZCh7XG4gIHR5cGU6ICdhcmMnLFxuICBzaGFwZToge1xuICAgIGN4OiAwLFxuICAgIGN5OiAwLFxuICAgIHI6IDAsXG4gICAgc3RhcnRBbmdsZTogMCxcbiAgICBlbmRBbmdsZTogTWF0aC5QSSAqIDIsXG4gICAgY2xvY2t3aXNlOiB0cnVlXG4gIH0sXG4gIHN0eWxlOiB7XG4gICAgc3Ryb2tlOiAnIzAwMCcsXG4gICAgZmlsbDogbnVsbFxuICB9LFxuICBidWlsZFBhdGg6IGZ1bmN0aW9uIChjdHgsIHNoYXBlKSB7XG4gICAgdmFyIHggPSBzaGFwZS5jeDtcbiAgICB2YXIgeSA9IHNoYXBlLmN5O1xuICAgIHZhciByID0gTWF0aC5tYXgoc2hhcGUuciwgMCk7XG4gICAgdmFyIHN0YXJ0QW5nbGUgPSBzaGFwZS5zdGFydEFuZ2xlO1xuICAgIHZhciBlbmRBbmdsZSA9IHNoYXBlLmVuZEFuZ2xlO1xuICAgIHZhciBjbG9ja3dpc2UgPSBzaGFwZS5jbG9ja3dpc2U7XG4gICAgdmFyIHVuaXRYID0gTWF0aC5jb3Moc3RhcnRBbmdsZSk7XG4gICAgdmFyIHVuaXRZID0gTWF0aC5zaW4oc3RhcnRBbmdsZSk7XG4gICAgY3R4Lm1vdmVUbyh1bml0WCAqIHIgKyB4LCB1bml0WSAqIHIgKyB5KTtcbiAgICBjdHguYXJjKHgsIHksIHIsIHN0YXJ0QW5nbGUsIGVuZEFuZ2xlLCAhY2xvY2t3aXNlKTtcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///219\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\n// CompoundPath to improve performance\\nvar _default = Path.extend({\\n  type: 'compound',\\n  shape: {\\n    paths: null\\n  },\\n  _updatePathDirty: function () {\\n    var dirtyPath = this.__dirtyPath;\\n    var paths = this.shape.paths;\\n\\n    for (var i = 0; i < paths.length; i++) {\\n      // Mark as dirty if any subpath is dirty\\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\\n    }\\n\\n    this.__dirtyPath = dirtyPath;\\n    this.__dirty = this.__dirty || dirtyPath;\\n  },\\n  beforeBrush: function () {\\n    this._updatePathDirty();\\n\\n    var paths = this.shape.paths || [];\\n    var scale = this.getGlobalScale(); // Update path scale\\n\\n    for (var i = 0; i < paths.length; i++) {\\n      if (!paths[i].path) {\\n        paths[i].createPathProxy();\\n      }\\n\\n      paths[i].path.setScale(scale[0], scale[1]);\\n    }\\n  },\\n  buildPath: function (ctx, shape) {\\n    var paths = shape.paths || [];\\n\\n    for (var i = 0; i < paths.length; i++) {\\n      paths[i].buildPath(ctx, paths[i].shape, true);\\n    }\\n  },\\n  afterBrush: function () {\\n    var paths = this.shape.paths || [];\\n\\n    for (var i = 0; i < paths.length; i++) {\\n      paths[i].__dirtyPath = false;\\n    }\\n  },\\n  getBoundingRect: function () {\\n    this._updatePathDirty();\\n\\n    return Path.prototype.getBoundingRect.call(this);\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9Db21wb3VuZFBhdGguanM/ZDRjNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsRUFBUTs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CLGtCQUFrQjtBQUNyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0Esc0NBQXNDOztBQUV0QyxtQkFBbUIsa0JBQWtCO0FBQ3JDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEsbUJBQW1CLGtCQUFrQjtBQUNyQztBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEsbUJBQW1CLGtCQUFrQjtBQUNyQztBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiMjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFBhdGggPSByZXF1aXJlKFwiLi9QYXRoXCIpO1xuXG4vLyBDb21wb3VuZFBhdGggdG8gaW1wcm92ZSBwZXJmb3JtYW5jZVxudmFyIF9kZWZhdWx0ID0gUGF0aC5leHRlbmQoe1xuICB0eXBlOiAnY29tcG91bmQnLFxuICBzaGFwZToge1xuICAgIHBhdGhzOiBudWxsXG4gIH0sXG4gIF91cGRhdGVQYXRoRGlydHk6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGlydHlQYXRoID0gdGhpcy5fX2RpcnR5UGF0aDtcbiAgICB2YXIgcGF0aHMgPSB0aGlzLnNoYXBlLnBhdGhzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRocy5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gTWFyayBhcyBkaXJ0eSBpZiBhbnkgc3VicGF0aCBpcyBkaXJ0eVxuICAgICAgZGlydHlQYXRoID0gZGlydHlQYXRoIHx8IHBhdGhzW2ldLl9fZGlydHlQYXRoO1xuICAgIH1cblxuICAgIHRoaXMuX19kaXJ0eVBhdGggPSBkaXJ0eVBhdGg7XG4gICAgdGhpcy5fX2RpcnR5ID0gdGhpcy5fX2RpcnR5IHx8IGRpcnR5UGF0aDtcbiAgfSxcbiAgYmVmb3JlQnJ1c2g6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl91cGRhdGVQYXRoRGlydHkoKTtcblxuICAgIHZhciBwYXRocyA9IHRoaXMuc2hhcGUucGF0aHMgfHwgW107XG4gICAgdmFyIHNjYWxlID0gdGhpcy5nZXRHbG9iYWxTY2FsZSgpOyAvLyBVcGRhdGUgcGF0aCBzY2FsZVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRocy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKCFwYXRoc1tpXS5wYXRoKSB7XG4gICAgICAgIHBhdGhzW2ldLmNyZWF0ZVBhdGhQcm94eSgpO1xuICAgICAgfVxuXG4gICAgICBwYXRoc1tpXS5wYXRoLnNldFNjYWxlKHNjYWxlWzBdLCBzY2FsZVsxXSk7XG4gICAgfVxuICB9LFxuICBidWlsZFBhdGg6IGZ1bmN0aW9uIChjdHgsIHNoYXBlKSB7XG4gICAgdmFyIHBhdGhzID0gc2hhcGUucGF0aHMgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGhzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBwYXRoc1tpXS5idWlsZFBhdGgoY3R4LCBwYXRoc1tpXS5zaGFwZSwgdHJ1ZSk7XG4gICAgfVxuICB9LFxuICBhZnRlckJydXNoOiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBhdGhzID0gdGhpcy5zaGFwZS5wYXRocyB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHBhdGhzW2ldLl9fZGlydHlQYXRoID0gZmFsc2U7XG4gICAgfVxuICB9LFxuICBnZXRCb3VuZGluZ1JlY3Q6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl91cGRhdGVQYXRoRGlydHkoKTtcblxuICAgIHJldHVybiBQYXRoLnByb3RvdHlwZS5nZXRCb3VuZGluZ1JlY3QuY2FsbCh0aGlzKTtcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///220\\n\")},function(module,exports,__webpack_require__){eval(\"var zrUtil = __webpack_require__(59);\\n\\nvar Gradient = __webpack_require__(106);\\n\\n/**\\n * x, y, r are all percent from 0 to 1\\n * @param {number} [x=0.5]\\n * @param {number} [y=0.5]\\n * @param {number} [r=0.5]\\n * @param {Array.<Object>} [colorStops]\\n * @param {boolean} [globalCoord=false]\\n */\\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\\n  // Should do nothing more in this constructor. Because gradient can be\\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\\n  // this constructor will not be called.\\n  this.x = x == null ? 0.5 : x;\\n  this.y = y == null ? 0.5 : y;\\n  this.r = r == null ? 0.5 : r; // Can be cloned\\n\\n  this.type = 'radial'; // If use global coord\\n\\n  this.global = globalCoord || false;\\n  Gradient.call(this, colorStops);\\n};\\n\\nRadialGradient.prototype = {\\n  constructor: RadialGradient\\n};\\nzrUtil.inherits(RadialGradient, Gradient);\\nvar _default = RadialGradient;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9SYWRpYWxHcmFkaWVudC5qcz9kZGVkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxFQUFjOztBQUVuQyxlQUFlLG1CQUFPLENBQUMsR0FBWTs7QUFFbkM7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsZUFBZTtBQUMxQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdDQUFnQztBQUN6RDtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7O0FBRS9CLHVCQUF1Qjs7QUFFdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgenJVdGlsID0gcmVxdWlyZShcIi4uL2NvcmUvdXRpbFwiKTtcblxudmFyIEdyYWRpZW50ID0gcmVxdWlyZShcIi4vR3JhZGllbnRcIik7XG5cbi8qKlxuICogeCwgeSwgciBhcmUgYWxsIHBlcmNlbnQgZnJvbSAwIHRvIDFcbiAqIEBwYXJhbSB7bnVtYmVyfSBbeD0wLjVdXG4gKiBAcGFyYW0ge251bWJlcn0gW3k9MC41XVxuICogQHBhcmFtIHtudW1iZXJ9IFtyPTAuNV1cbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IFtjb2xvclN0b3BzXVxuICogQHBhcmFtIHtib29sZWFufSBbZ2xvYmFsQ29vcmQ9ZmFsc2VdXG4gKi9cbnZhciBSYWRpYWxHcmFkaWVudCA9IGZ1bmN0aW9uICh4LCB5LCByLCBjb2xvclN0b3BzLCBnbG9iYWxDb29yZCkge1xuICAvLyBTaG91bGQgZG8gbm90aGluZyBtb3JlIGluIHRoaXMgY29uc3RydWN0b3IuIEJlY2F1c2UgZ3JhZGllbnQgY2FuIGJlXG4gIC8vIGRlY2xhcmQgYnkgYGNvbG9yOiB7dHlwZTogJ3JhZGlhbCcsIGNvbG9yU3RvcHM6IC4uLn1gLCB3aGVyZVxuICAvLyB0aGlzIGNvbnN0cnVjdG9yIHdpbGwgbm90IGJlIGNhbGxlZC5cbiAgdGhpcy54ID0geCA9PSBudWxsID8gMC41IDogeDtcbiAgdGhpcy55ID0geSA9PSBudWxsID8gMC41IDogeTtcbiAgdGhpcy5yID0gciA9PSBudWxsID8gMC41IDogcjsgLy8gQ2FuIGJlIGNsb25lZFxuXG4gIHRoaXMudHlwZSA9ICdyYWRpYWwnOyAvLyBJZiB1c2UgZ2xvYmFsIGNvb3JkXG5cbiAgdGhpcy5nbG9iYWwgPSBnbG9iYWxDb29yZCB8fCBmYWxzZTtcbiAgR3JhZGllbnQuY2FsbCh0aGlzLCBjb2xvclN0b3BzKTtcbn07XG5cblJhZGlhbEdyYWRpZW50LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFJhZGlhbEdyYWRpZW50XG59O1xuenJVdGlsLmluaGVyaXRzKFJhZGlhbEdyYWRpZW50LCBHcmFkaWVudCk7XG52YXIgX2RlZmF1bHQgPSBSYWRpYWxHcmFkaWVudDtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///221\\n\")},function(module,exports,__webpack_require__){eval(\"var _util = __webpack_require__(59);\\n\\nvar inherits = _util.inherits;\\n\\nvar Displayble = __webpack_require__(88);\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\n/**\\n * Displayable for incremental rendering. It will be rendered in a separate layer\\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\\n * addDisplayables will render the added displayables incremetally.\\n *\\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\\n */\\n// TODO Style override ?\\nfunction IncrementalDisplayble(opts) {\\n  Displayble.call(this, opts);\\n  this._displayables = [];\\n  this._temporaryDisplayables = [];\\n  this._cursor = 0;\\n  this.notClear = true;\\n}\\n\\nIncrementalDisplayble.prototype.incremental = true;\\n\\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\\n  this._displayables = [];\\n  this._temporaryDisplayables = [];\\n  this._cursor = 0;\\n  this.dirty();\\n  this.notClear = false;\\n};\\n\\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\\n  if (notPersistent) {\\n    this._temporaryDisplayables.push(displayable);\\n  } else {\\n    this._displayables.push(displayable);\\n  }\\n\\n  this.dirty();\\n};\\n\\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\\n  notPersistent = notPersistent || false;\\n\\n  for (var i = 0; i < displayables.length; i++) {\\n    this.addDisplayable(displayables[i], notPersistent);\\n  }\\n};\\n\\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\\n  for (var i = this._cursor; i < this._displayables.length; i++) {\\n    cb && cb(this._displayables[i]);\\n  }\\n\\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\\n    cb && cb(this._temporaryDisplayables[i]);\\n  }\\n};\\n\\nIncrementalDisplayble.prototype.update = function () {\\n  this.updateTransform();\\n\\n  for (var i = this._cursor; i < this._displayables.length; i++) {\\n    var displayable = this._displayables[i]; // PENDING\\n\\n    displayable.parent = this;\\n    displayable.update();\\n    displayable.parent = null;\\n  }\\n\\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\\n    var displayable = this._temporaryDisplayables[i]; // PENDING\\n\\n    displayable.parent = this;\\n    displayable.update();\\n    displayable.parent = null;\\n  }\\n};\\n\\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\\n  // Render persistant displayables.\\n  for (var i = this._cursor; i < this._displayables.length; i++) {\\n    var displayable = this._displayables[i];\\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\\n    displayable.afterBrush && displayable.afterBrush(ctx);\\n  }\\n\\n  this._cursor = i; // Render temporary displayables.\\n\\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\\n    var displayable = this._temporaryDisplayables[i];\\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\\n    displayable.afterBrush && displayable.afterBrush(ctx);\\n  }\\n\\n  this._temporaryDisplayables = [];\\n  this.notClear = true;\\n};\\n\\nvar m = [];\\n\\nIncrementalDisplayble.prototype.getBoundingRect = function () {\\n  if (!this._rect) {\\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\\n\\n    for (var i = 0; i < this._displayables.length; i++) {\\n      var displayable = this._displayables[i];\\n      var childRect = displayable.getBoundingRect().clone();\\n\\n      if (displayable.needLocalTransform()) {\\n        childRect.applyTransform(displayable.getLocalTransform(m));\\n      }\\n\\n      rect.union(childRect);\\n    }\\n\\n    this._rect = rect;\\n  }\\n\\n  return this._rect;\\n};\\n\\nIncrementalDisplayble.prototype.contain = function (x, y) {\\n  var localPos = this.transformCoordToLocal(x, y);\\n  var rect = this.getBoundingRect();\\n\\n  if (rect.contain(localPos[0], localPos[1])) {\\n    for (var i = 0; i < this._displayables.length; i++) {\\n      var displayable = this._displayables[i];\\n\\n      if (displayable.contain(x, y)) {\\n        return true;\\n      }\\n    }\\n  }\\n\\n  return false;\\n};\\n\\ninherits(IncrementalDisplayble, Displayble);\\nvar _default = IncrementalDisplayble;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9JbmNyZW1lbnRhbERpc3BsYXlhYmxlLmpzPzM5MmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxtQkFBTyxDQUFDLEVBQWM7O0FBRWxDOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLEVBQWU7O0FBRXhDLG1CQUFtQixtQkFBTyxDQUFDLEVBQXNCOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQix5QkFBeUI7QUFDMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEJBQTRCLCtCQUErQjtBQUMzRDtBQUNBOztBQUVBLGlCQUFpQix3Q0FBd0M7QUFDekQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsNEJBQTRCLCtCQUErQjtBQUMzRCw0Q0FBNEM7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQix3Q0FBd0M7QUFDekQscURBQXFEOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEIsK0JBQStCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1COztBQUVuQixpQkFBaUIsd0NBQXdDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsK0JBQStCO0FBQ2xEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQiwrQkFBK0I7QUFDbEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIyMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX3V0aWwgPSByZXF1aXJlKFwiLi4vY29yZS91dGlsXCIpO1xuXG52YXIgaW5oZXJpdHMgPSBfdXRpbC5pbmhlcml0cztcblxudmFyIERpc3BsYXlibGUgPSByZXF1aXJlKFwiLi9EaXNwbGF5YWJsZVwiKTtcblxudmFyIEJvdW5kaW5nUmVjdCA9IHJlcXVpcmUoXCIuLi9jb3JlL0JvdW5kaW5nUmVjdFwiKTtcblxuLyoqXG4gKiBEaXNwbGF5YWJsZSBmb3IgaW5jcmVtZW50YWwgcmVuZGVyaW5nLiBJdCB3aWxsIGJlIHJlbmRlcmVkIGluIGEgc2VwYXJhdGUgbGF5ZXJcbiAqIEluY3JlbWVudGFsRGlzcGxheSBoYXZlIHRvbyBtYWluIG1ldGhvZHMuIGBjbGVhckRpc3BsYXlhYmxlc2AgYW5kIGBhZGREaXNwbGF5YWJsZXNgXG4gKiBhZGREaXNwbGF5YWJsZXMgd2lsbCByZW5kZXIgdGhlIGFkZGVkIGRpc3BsYXlhYmxlcyBpbmNyZW1ldGFsbHkuXG4gKlxuICogSXQgdXNlIGEgbm90IGNsZWFyRmxhZyB0byB0ZWxsIHRoZSBwYWludGVyIGRvbid0IGNsZWFyIHRoZSBsYXllciBpZiBpdCdzIHRoZSBmaXJzdCBlbGVtZW50LlxuICovXG4vLyBUT0RPIFN0eWxlIG92ZXJyaWRlID9cbmZ1bmN0aW9uIEluY3JlbWVudGFsRGlzcGxheWJsZShvcHRzKSB7XG4gIERpc3BsYXlibGUuY2FsbCh0aGlzLCBvcHRzKTtcbiAgdGhpcy5fZGlzcGxheWFibGVzID0gW107XG4gIHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlcyA9IFtdO1xuICB0aGlzLl9jdXJzb3IgPSAwO1xuICB0aGlzLm5vdENsZWFyID0gdHJ1ZTtcbn1cblxuSW5jcmVtZW50YWxEaXNwbGF5YmxlLnByb3RvdHlwZS5pbmNyZW1lbnRhbCA9IHRydWU7XG5cbkluY3JlbWVudGFsRGlzcGxheWJsZS5wcm90b3R5cGUuY2xlYXJEaXNwbGF5YmxlcyA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fZGlzcGxheWFibGVzID0gW107XG4gIHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlcyA9IFtdO1xuICB0aGlzLl9jdXJzb3IgPSAwO1xuICB0aGlzLmRpcnR5KCk7XG4gIHRoaXMubm90Q2xlYXIgPSBmYWxzZTtcbn07XG5cbkluY3JlbWVudGFsRGlzcGxheWJsZS5wcm90b3R5cGUuYWRkRGlzcGxheWFibGUgPSBmdW5jdGlvbiAoZGlzcGxheWFibGUsIG5vdFBlcnNpc3RlbnQpIHtcbiAgaWYgKG5vdFBlcnNpc3RlbnQpIHtcbiAgICB0aGlzLl90ZW1wb3JhcnlEaXNwbGF5YWJsZXMucHVzaChkaXNwbGF5YWJsZSk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fZGlzcGxheWFibGVzLnB1c2goZGlzcGxheWFibGUpO1xuICB9XG5cbiAgdGhpcy5kaXJ0eSgpO1xufTtcblxuSW5jcmVtZW50YWxEaXNwbGF5YmxlLnByb3RvdHlwZS5hZGREaXNwbGF5YWJsZXMgPSBmdW5jdGlvbiAoZGlzcGxheWFibGVzLCBub3RQZXJzaXN0ZW50KSB7XG4gIG5vdFBlcnNpc3RlbnQgPSBub3RQZXJzaXN0ZW50IHx8IGZhbHNlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZGlzcGxheWFibGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdGhpcy5hZGREaXNwbGF5YWJsZShkaXNwbGF5YWJsZXNbaV0sIG5vdFBlcnNpc3RlbnQpO1xuICB9XG59O1xuXG5JbmNyZW1lbnRhbERpc3BsYXlibGUucHJvdG90eXBlLmVhY2hQZW5kaW5nRGlzcGxheWFibGUgPSBmdW5jdGlvbiAoY2IpIHtcbiAgZm9yICh2YXIgaSA9IHRoaXMuX2N1cnNvcjsgaSA8IHRoaXMuX2Rpc3BsYXlhYmxlcy5sZW5ndGg7IGkrKykge1xuICAgIGNiICYmIGNiKHRoaXMuX2Rpc3BsYXlhYmxlc1tpXSk7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlcy5sZW5ndGg7IGkrKykge1xuICAgIGNiICYmIGNiKHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlc1tpXSk7XG4gIH1cbn07XG5cbkluY3JlbWVudGFsRGlzcGxheWJsZS5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLnVwZGF0ZVRyYW5zZm9ybSgpO1xuXG4gIGZvciAodmFyIGkgPSB0aGlzLl9jdXJzb3I7IGkgPCB0aGlzLl9kaXNwbGF5YWJsZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGlzcGxheWFibGUgPSB0aGlzLl9kaXNwbGF5YWJsZXNbaV07IC8vIFBFTkRJTkdcblxuICAgIGRpc3BsYXlhYmxlLnBhcmVudCA9IHRoaXM7XG4gICAgZGlzcGxheWFibGUudXBkYXRlKCk7XG4gICAgZGlzcGxheWFibGUucGFyZW50ID0gbnVsbDtcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fdGVtcG9yYXJ5RGlzcGxheWFibGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRpc3BsYXlhYmxlID0gdGhpcy5fdGVtcG9yYXJ5RGlzcGxheWFibGVzW2ldOyAvLyBQRU5ESU5HXG5cbiAgICBkaXNwbGF5YWJsZS5wYXJlbnQgPSB0aGlzO1xuICAgIGRpc3BsYXlhYmxlLnVwZGF0ZSgpO1xuICAgIGRpc3BsYXlhYmxlLnBhcmVudCA9IG51bGw7XG4gIH1cbn07XG5cbkluY3JlbWVudGFsRGlzcGxheWJsZS5wcm90b3R5cGUuYnJ1c2ggPSBmdW5jdGlvbiAoY3R4LCBwcmV2RWwpIHtcbiAgLy8gUmVuZGVyIHBlcnNpc3RhbnQgZGlzcGxheWFibGVzLlxuICBmb3IgKHZhciBpID0gdGhpcy5fY3Vyc29yOyBpIDwgdGhpcy5fZGlzcGxheWFibGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRpc3BsYXlhYmxlID0gdGhpcy5fZGlzcGxheWFibGVzW2ldO1xuICAgIGRpc3BsYXlhYmxlLmJlZm9yZUJydXNoICYmIGRpc3BsYXlhYmxlLmJlZm9yZUJydXNoKGN0eCk7XG4gICAgZGlzcGxheWFibGUuYnJ1c2goY3R4LCBpID09PSB0aGlzLl9jdXJzb3IgPyBudWxsIDogdGhpcy5fZGlzcGxheWFibGVzW2kgLSAxXSk7XG4gICAgZGlzcGxheWFibGUuYWZ0ZXJCcnVzaCAmJiBkaXNwbGF5YWJsZS5hZnRlckJydXNoKGN0eCk7XG4gIH1cblxuICB0aGlzLl9jdXJzb3IgPSBpOyAvLyBSZW5kZXIgdGVtcG9yYXJ5IGRpc3BsYXlhYmxlcy5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkaXNwbGF5YWJsZSA9IHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlc1tpXTtcbiAgICBkaXNwbGF5YWJsZS5iZWZvcmVCcnVzaCAmJiBkaXNwbGF5YWJsZS5iZWZvcmVCcnVzaChjdHgpO1xuICAgIGRpc3BsYXlhYmxlLmJydXNoKGN0eCwgaSA9PT0gMCA/IG51bGwgOiB0aGlzLl90ZW1wb3JhcnlEaXNwbGF5YWJsZXNbaSAtIDFdKTtcbiAgICBkaXNwbGF5YWJsZS5hZnRlckJydXNoICYmIGRpc3BsYXlhYmxlLmFmdGVyQnJ1c2goY3R4KTtcbiAgfVxuXG4gIHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlcyA9IFtdO1xuICB0aGlzLm5vdENsZWFyID0gdHJ1ZTtcbn07XG5cbnZhciBtID0gW107XG5cbkluY3JlbWVudGFsRGlzcGxheWJsZS5wcm90b3R5cGUuZ2V0Qm91bmRpbmdSZWN0ID0gZnVuY3Rpb24gKCkge1xuICBpZiAoIXRoaXMuX3JlY3QpIHtcbiAgICB2YXIgcmVjdCA9IG5ldyBCb3VuZGluZ1JlY3QoSW5maW5pdHksIEluZmluaXR5LCAtSW5maW5pdHksIC1JbmZpbml0eSk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX2Rpc3BsYXlhYmxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRpc3BsYXlhYmxlID0gdGhpcy5fZGlzcGxheWFibGVzW2ldO1xuICAgICAgdmFyIGNoaWxkUmVjdCA9IGRpc3BsYXlhYmxlLmdldEJvdW5kaW5nUmVjdCgpLmNsb25lKCk7XG5cbiAgICAgIGlmIChkaXNwbGF5YWJsZS5uZWVkTG9jYWxUcmFuc2Zvcm0oKSkge1xuICAgICAgICBjaGlsZFJlY3QuYXBwbHlUcmFuc2Zvcm0oZGlzcGxheWFibGUuZ2V0TG9jYWxUcmFuc2Zvcm0obSkpO1xuICAgICAgfVxuXG4gICAgICByZWN0LnVuaW9uKGNoaWxkUmVjdCk7XG4gICAgfVxuXG4gICAgdGhpcy5fcmVjdCA9IHJlY3Q7XG4gIH1cblxuICByZXR1cm4gdGhpcy5fcmVjdDtcbn07XG5cbkluY3JlbWVudGFsRGlzcGxheWJsZS5wcm90b3R5cGUuY29udGFpbiA9IGZ1bmN0aW9uICh4LCB5KSB7XG4gIHZhciBsb2NhbFBvcyA9IHRoaXMudHJhbnNmb3JtQ29vcmRUb0xvY2FsKHgsIHkpO1xuICB2YXIgcmVjdCA9IHRoaXMuZ2V0Qm91bmRpbmdSZWN0KCk7XG5cbiAgaWYgKHJlY3QuY29udGFpbihsb2NhbFBvc1swXSwgbG9jYWxQb3NbMV0pKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9kaXNwbGF5YWJsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkaXNwbGF5YWJsZSA9IHRoaXMuX2Rpc3BsYXlhYmxlc1tpXTtcblxuICAgICAgaWYgKGRpc3BsYXlhYmxlLmNvbnRhaW4oeCwgeSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuaW5oZXJpdHMoSW5jcmVtZW50YWxEaXNwbGF5YmxlLCBEaXNwbGF5YmxlKTtcbnZhciBfZGVmYXVsdCA9IEluY3JlbWVudGFsRGlzcGxheWJsZTtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///222\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar makeStyleMapper = __webpack_require__(104);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\\nvar _default = {\\n  getItemStyle: function (excludes, includes) {\\n    var style = getItemStyle(this, excludes, includes);\\n    var lineDash = this.getBorderLineDash();\\n    lineDash && (style.lineDash = lineDash);\\n    return style;\\n  },\\n  getBorderLineDash: function () {\\n    var lineType = this.get('borderType');\\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvbWl4aW4vaXRlbVN0eWxlLmpzPzU1MWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixtQkFBTyxDQUFDLEdBQW1COztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIG1ha2VTdHlsZU1hcHBlciA9IHJlcXVpcmUoXCIuL21ha2VTdHlsZU1hcHBlclwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIGdldEl0ZW1TdHlsZSA9IG1ha2VTdHlsZU1hcHBlcihbWydmaWxsJywgJ2NvbG9yJ10sIFsnc3Ryb2tlJywgJ2JvcmRlckNvbG9yJ10sIFsnbGluZVdpZHRoJywgJ2JvcmRlcldpZHRoJ10sIFsnb3BhY2l0eSddLCBbJ3NoYWRvd0JsdXInXSwgWydzaGFkb3dPZmZzZXRYJ10sIFsnc2hhZG93T2Zmc2V0WSddLCBbJ3NoYWRvd0NvbG9yJ10sIFsndGV4dFBvc2l0aW9uJ10sIFsndGV4dEFsaWduJ11dKTtcbnZhciBfZGVmYXVsdCA9IHtcbiAgZ2V0SXRlbVN0eWxlOiBmdW5jdGlvbiAoZXhjbHVkZXMsIGluY2x1ZGVzKSB7XG4gICAgdmFyIHN0eWxlID0gZ2V0SXRlbVN0eWxlKHRoaXMsIGV4Y2x1ZGVzLCBpbmNsdWRlcyk7XG4gICAgdmFyIGxpbmVEYXNoID0gdGhpcy5nZXRCb3JkZXJMaW5lRGFzaCgpO1xuICAgIGxpbmVEYXNoICYmIChzdHlsZS5saW5lRGFzaCA9IGxpbmVEYXNoKTtcbiAgICByZXR1cm4gc3R5bGU7XG4gIH0sXG4gIGdldEJvcmRlckxpbmVEYXNoOiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGxpbmVUeXBlID0gdGhpcy5nZXQoJ2JvcmRlclR5cGUnKTtcbiAgICByZXR1cm4gbGluZVR5cGUgPT09ICdzb2xpZCcgfHwgbGluZVR5cGUgPT0gbnVsbCA/IG51bGwgOiBsaW5lVHlwZSA9PT0gJ2Rhc2hlZCcgPyBbNSwgNV0gOiBbMSwgMV07XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///223\\n\")},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar _default = {\\n  getBoxLayoutParams: function () {\\n    return {\\n      left: this.get('left'),\\n      top: this.get('top'),\\n      right: this.get('right'),\\n      bottom: this.get('bottom'),\\n      width: this.get('width'),\\n      height: this.get('height')\\n    };\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvbWl4aW4vYm94TGF5b3V0LmpzP2RlMWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBfZGVmYXVsdCA9IHtcbiAgZ2V0Qm94TGF5b3V0UGFyYW1zOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxlZnQ6IHRoaXMuZ2V0KCdsZWZ0JyksXG4gICAgICB0b3A6IHRoaXMuZ2V0KCd0b3AnKSxcbiAgICAgIHJpZ2h0OiB0aGlzLmdldCgncmlnaHQnKSxcbiAgICAgIGJvdHRvbTogdGhpcy5nZXQoJ2JvdHRvbScpLFxuICAgICAgd2lkdGg6IHRoaXMuZ2V0KCd3aWR0aCcpLFxuICAgICAgaGVpZ2h0OiB0aGlzLmdldCgnaGVpZ2h0JylcbiAgICB9O1xuICB9XG59O1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///224\\n\")},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar platform = ''; // Navigator not exists in node\\n\\nif (typeof navigator !== 'undefined') {\\n  platform = navigator.platform || '';\\n}\\n\\nvar _default = {\\n  // backgroundColor: 'rgba(0,0,0,0)',\\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\\n  // Light colors:\\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\\n  // Dark colors:\\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\\n  // If xAxis and yAxis declared, grid is created by default.\\n  // grid: {},\\n  textStyle: {\\n    // color: '#000',\\n    // decoration: 'none',\\n    // PENDING\\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\\n    // fontFamily: 'Arial, Verdana, sans-serif',\\n    fontSize: 12,\\n    fontStyle: 'normal',\\n    fontWeight: 'normal'\\n  },\\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\\n  // Default is source-over\\n  blendMode: null,\\n  animation: 'auto',\\n  animationDuration: 1000,\\n  animationDurationUpdate: 300,\\n  animationEasing: 'exponentialOut',\\n  animationEasingUpdate: 'cubicOut',\\n  animationThreshold: 2000,\\n  // Configuration for progressive/incremental rendering\\n  progressiveThreshold: 3000,\\n  progressive: 400,\\n  // Threshold of if use single hover layer to optimize.\\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\\n  // which is unexpected.\\n  // see example <echarts/test/heatmap-large.html>.\\n  hoverLayerThreshold: 3000,\\n  // See: module:echarts/scale/Time\\n  useUTC: false\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbW9kZWwvZ2xvYmFsRGVmYXVsdC5qcz84OTcxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBwbGF0Zm9ybSA9ICcnOyAvLyBOYXZpZ2F0b3Igbm90IGV4aXN0cyBpbiBub2RlXG5cbmlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJykge1xuICBwbGF0Zm9ybSA9IG5hdmlnYXRvci5wbGF0Zm9ybSB8fCAnJztcbn1cblxudmFyIF9kZWZhdWx0ID0ge1xuICAvLyBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsMCwwLDApJyxcbiAgLy8gaHR0cHM6Ly9kcmliYmJsZS5jb20vc2hvdHMvMTA2NTk2MC1JbmZvZ3JhcGhpYy1QaWUtY2hhcnQtdmlzdWFsaXphdGlvblxuICAvLyBjb2xvcjogWycjNTc5M2YzJywgJyNkMTRhNjEnLCAnI2ZkOWMzNScsICcjNjc1YmJhJywgJyNmZWM0MmMnLCAnI2RkNDQ0NCcsICcjZDRkZjVhJywgJyNjZDQ4NzAnXSxcbiAgLy8gTGlnaHQgY29sb3JzOlxuICAvLyBjb2xvcjogWycjYmNkM2JiJywgJyNlODhmNzAnLCAnI2VkYzFhNScsICcjOWRjNWM4JywgJyNlMWU4YzgnLCAnIzdiN2M2OCcsICcjZTViNWI1JywgJyNmMGI0ODknLCAnIzkyOGVhOCcsICcjYmRhMjlhJ10sXG4gIC8vIGNvbG9yOiBbJyNjYzU2NjQnLCAnIzliZDZlYycsICcjZWE5NDZlJywgJyM4YWNhYWEnLCAnI2YxZWM2NCcsICcjZWU4Njg2JywgJyNhNDhkYzEnLCAnIzVkYTZiYycsICcjYjlkY2FlJ10sXG4gIC8vIERhcmsgY29sb3JzOlxuICBjb2xvcjogWycjYzIzNTMxJywgJyMyZjQ1NTQnLCAnIzYxYTBhOCcsICcjZDQ4MjY1JywgJyM5MWM3YWUnLCAnIzc0OWY4MycsICcjY2E4NjIyJywgJyNiZGEyOWEnLCAnIzZlNzA3NCcsICcjNTQ2NTcwJywgJyNjNGNjZDMnXSxcbiAgZ3JhZGllbnRDb2xvcjogWycjZjZlZmE2JywgJyNkODgyNzMnLCAnI2JmNDQ0YyddLFxuICAvLyBJZiB4QXhpcyBhbmQgeUF4aXMgZGVjbGFyZWQsIGdyaWQgaXMgY3JlYXRlZCBieSBkZWZhdWx0LlxuICAvLyBncmlkOiB7fSxcbiAgdGV4dFN0eWxlOiB7XG4gICAgLy8gY29sb3I6ICcjMDAwJyxcbiAgICAvLyBkZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgLy8gUEVORElOR1xuICAgIGZvbnRGYW1pbHk6IHBsYXRmb3JtLm1hdGNoKC9eV2luLykgPyAnTWljcm9zb2Z0IFlhSGVpJyA6ICdzYW5zLXNlcmlmJyxcbiAgICAvLyBmb250RmFtaWx5OiAnQXJpYWwsIFZlcmRhbmEsIHNhbnMtc2VyaWYnLFxuICAgIGZvbnRTaXplOiAxMixcbiAgICBmb250U3R5bGU6ICdub3JtYWwnLFxuICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnXG4gIH0sXG4gIC8vIGh0dHA6Ly9ibG9ncy5hZG9iZS5jb20vd2VicGxhdGZvcm0vMjAxNC8wMi8yNC91c2luZy1ibGVuZC1tb2Rlcy1pbi1odG1sLWNhbnZhcy9cbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NhbnZhc1JlbmRlcmluZ0NvbnRleHQyRC9nbG9iYWxDb21wb3NpdGVPcGVyYXRpb25cbiAgLy8gRGVmYXVsdCBpcyBzb3VyY2Utb3ZlclxuICBibGVuZE1vZGU6IG51bGwsXG4gIGFuaW1hdGlvbjogJ2F1dG8nLFxuICBhbmltYXRpb25EdXJhdGlvbjogMTAwMCxcbiAgYW5pbWF0aW9uRHVyYXRpb25VcGRhdGU6IDMwMCxcbiAgYW5pbWF0aW9uRWFzaW5nOiAnZXhwb25lbnRpYWxPdXQnLFxuICBhbmltYXRpb25FYXNpbmdVcGRhdGU6ICdjdWJpY091dCcsXG4gIGFuaW1hdGlvblRocmVzaG9sZDogMjAwMCxcbiAgLy8gQ29uZmlndXJhdGlvbiBmb3IgcHJvZ3Jlc3NpdmUvaW5jcmVtZW50YWwgcmVuZGVyaW5nXG4gIHByb2dyZXNzaXZlVGhyZXNob2xkOiAzMDAwLFxuICBwcm9ncmVzc2l2ZTogNDAwLFxuICAvLyBUaHJlc2hvbGQgb2YgaWYgdXNlIHNpbmdsZSBob3ZlciBsYXllciB0byBvcHRpbWl6ZS5cbiAgLy8gSXQgaXMgcmVjb21tZW5kZWQgdGhhdCBgaG92ZXJMYXllclRocmVzaG9sZGAgaXMgZXF1aXZhbGVudCB0byBvciBsZXNzIHRoYW5cbiAgLy8gYHByb2dyZXNzaXZlVGhyZXNob2xkYCwgb3RoZXJ3aXNlIGhvdmVyIHdpbGwgY2F1c2UgcmVzdGFydCBvZiBwcm9ncmVzc2l2ZSxcbiAgLy8gd2hpY2ggaXMgdW5leHBlY3RlZC5cbiAgLy8gc2VlIGV4YW1wbGUgPGVjaGFydHMvdGVzdC9oZWF0bWFwLWxhcmdlLmh0bWw+LlxuICBob3ZlckxheWVyVGhyZXNob2xkOiAzMDAwLFxuICAvLyBTZWU6IG1vZHVsZTplY2hhcnRzL3NjYWxlL1RpbWVcbiAgdXNlVVRDOiBmYWxzZVxufTtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///225\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar modelUtil = __webpack_require__(60);\\n\\nvar ComponentModel = __webpack_require__(72);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * ECharts option manager\\n *\\n * @module {echarts/model/OptionManager}\\n */\\nvar each = zrUtil.each;\\nvar clone = zrUtil.clone;\\nvar map = zrUtil.map;\\nvar merge = zrUtil.merge;\\nvar QUERY_REG = /^(min|max)?(.+)$/;\\n/**\\n * TERM EXPLANATIONS:\\n *\\n * [option]:\\n *\\n *     An object that contains definitions of components. For example:\\n *     var option = {\\n *         title: {...},\\n *         legend: {...},\\n *         visualMap: {...},\\n *         series: [\\n *             {data: [...]},\\n *             {data: [...]},\\n *             ...\\n *         ]\\n *     };\\n *\\n * [rawOption]:\\n *\\n *     An object input to echarts.setOption. 'rawOption' may be an\\n *     'option', or may be an object contains multi-options. For example:\\n *     var option = {\\n *         baseOption: {\\n *             title: {...},\\n *             legend: {...},\\n *             series: [\\n *                 {data: [...]},\\n *                 {data: [...]},\\n *                 ...\\n *             ]\\n *         },\\n *         timeline: {...},\\n *         options: [\\n *             {title: {...}, series: {data: [...]}},\\n *             {title: {...}, series: {data: [...]}},\\n *             ...\\n *         ],\\n *         media: [\\n *             {\\n *                 query: {maxWidth: 320},\\n *                 option: {series: {x: 20}, visualMap: {show: false}}\\n *             },\\n *             {\\n *                 query: {minWidth: 320, maxWidth: 720},\\n *                 option: {series: {x: 500}, visualMap: {show: true}}\\n *             },\\n *             {\\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\\n *             }\\n *         ]\\n *     };\\n *\\n * @alias module:echarts/model/OptionManager\\n * @param {module:echarts/ExtensionAPI} api\\n */\\n\\nfunction OptionManager(api) {\\n  /**\\n   * @private\\n   * @type {module:echarts/ExtensionAPI}\\n   */\\n  this._api = api;\\n  /**\\n   * @private\\n   * @type {Array.<number>}\\n   */\\n\\n  this._timelineOptions = [];\\n  /**\\n   * @private\\n   * @type {Array.<Object>}\\n   */\\n\\n  this._mediaList = [];\\n  /**\\n   * @private\\n   * @type {Object}\\n   */\\n\\n  this._mediaDefault;\\n  /**\\n   * -1, means default.\\n   * empty means no media.\\n   * @private\\n   * @type {Array.<number>}\\n   */\\n\\n  this._currentMediaIndices = [];\\n  /**\\n   * @private\\n   * @type {Object}\\n   */\\n\\n  this._optionBackup;\\n  /**\\n   * @private\\n   * @type {Object}\\n   */\\n\\n  this._newBaseOption;\\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\\n// rawOption cloned and backuped when timeline changed, which does no\\n// good to performance. What's more, that both timeline and setOption\\n// method supply 'notMerge' brings complex and some problems.\\n// Consider this case:\\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\\n\\n\\nOptionManager.prototype = {\\n  constructor: OptionManager,\\n\\n  /**\\n   * @public\\n   * @param {Object} rawOption Raw option.\\n   * @param {module:echarts/model/Global} ecModel\\n   * @param {Array.<Function>} optionPreprocessorFuncs\\n   * @return {Object} Init option\\n   */\\n  setOption: function (rawOption, optionPreprocessorFuncs) {\\n    if (rawOption) {\\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\\n      });\\n    } // Caution: some series modify option data, if do not clone,\\n    // it should ensure that the repeat modify correctly\\n    // (create a new object when modify itself).\\n\\n\\n    rawOption = clone(rawOption, true); // FIXME\\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\\n\\n    var oldOptionBackup = this._optionBackup;\\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\\n\\n    if (oldOptionBackup) {\\n      // Only baseOption can be merged.\\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\\n      // that is, if you `setOption` twice and both has timeline options, the latter\\n      // timeline opitons will not be merged to the formers, but just substitude them.\\n\\n      if (newParsedOption.timelineOptions.length) {\\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\\n      }\\n\\n      if (newParsedOption.mediaList.length) {\\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\\n      }\\n\\n      if (newParsedOption.mediaDefault) {\\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\\n      }\\n    } else {\\n      this._optionBackup = newParsedOption;\\n    }\\n  },\\n\\n  /**\\n   * @param {boolean} isRecreate\\n   * @return {Object}\\n   */\\n  mountOption: function (isRecreate) {\\n    var optionBackup = this._optionBackup; // TODO\\n    // 如果没有reset功能则不clone。\\n\\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\\n    this._mediaList = map(optionBackup.mediaList, clone);\\n    this._mediaDefault = clone(optionBackup.mediaDefault);\\n    this._currentMediaIndices = [];\\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\\n    // called, and is merged into every new option by inner method `mergeOption`\\n    // each time `setOption` called, can be only used in `isRecreate`, because\\n    // its reliability is under suspicion. In other cases option merge is\\n    // performed by `model.mergeOption`.\\n    ? optionBackup.baseOption : this._newBaseOption);\\n  },\\n\\n  /**\\n   * @param {module:echarts/model/Global} ecModel\\n   * @return {Object}\\n   */\\n  getTimelineOption: function (ecModel) {\\n    var option;\\n    var timelineOptions = this._timelineOptions;\\n\\n    if (timelineOptions.length) {\\n      // getTimelineOption can only be called after ecModel inited,\\n      // so we can get currentIndex from timelineModel.\\n      var timelineModel = ecModel.getComponent('timeline');\\n\\n      if (timelineModel) {\\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\\n      }\\n    }\\n\\n    return option;\\n  },\\n\\n  /**\\n   * @param {module:echarts/model/Global} ecModel\\n   * @return {Array.<Object>}\\n   */\\n  getMediaOption: function (ecModel) {\\n    var ecWidth = this._api.getWidth();\\n\\n    var ecHeight = this._api.getHeight();\\n\\n    var mediaList = this._mediaList;\\n    var mediaDefault = this._mediaDefault;\\n    var indices = [];\\n    var result = []; // No media defined.\\n\\n    if (!mediaList.length && !mediaDefault) {\\n      return result;\\n    } // Multi media may be applied, the latter defined media has higher priority.\\n\\n\\n    for (var i = 0, len = mediaList.length; i < len; i++) {\\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\\n        indices.push(i);\\n      }\\n    } // FIXME\\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\\n\\n\\n    if (!indices.length && mediaDefault) {\\n      indices = [-1];\\n    }\\n\\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\\n      result = map(indices, function (index) {\\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\\n      });\\n    } // Otherwise return nothing.\\n\\n\\n    this._currentMediaIndices = indices;\\n    return result;\\n  }\\n};\\n\\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\\n  var timelineOptions = [];\\n  var mediaList = [];\\n  var mediaDefault;\\n  var baseOption; // Compatible with ec2.\\n\\n  var timelineOpt = rawOption.timeline;\\n\\n  if (rawOption.baseOption) {\\n    baseOption = rawOption.baseOption;\\n  } // For timeline\\n\\n\\n  if (timelineOpt || rawOption.options) {\\n    baseOption = baseOption || {};\\n    timelineOptions = (rawOption.options || []).slice();\\n  } // For media query\\n\\n\\n  if (rawOption.media) {\\n    baseOption = baseOption || {};\\n    var media = rawOption.media;\\n    each(media, function (singleMedia) {\\n      if (singleMedia && singleMedia.option) {\\n        if (singleMedia.query) {\\n          mediaList.push(singleMedia);\\n        } else if (!mediaDefault) {\\n          // Use the first media default.\\n          mediaDefault = singleMedia;\\n        }\\n      }\\n    });\\n  } // For normal option\\n\\n\\n  if (!baseOption) {\\n    baseOption = rawOption;\\n  } // Set timelineOpt to baseOption in ec3,\\n  // which is convenient for merge option.\\n\\n\\n  if (!baseOption.timeline) {\\n    baseOption.timeline = timelineOpt;\\n  } // Preprocess.\\n\\n\\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\\n    return media.option;\\n  })), function (option) {\\n    each(optionPreprocessorFuncs, function (preProcess) {\\n      preProcess(option, isNew);\\n    });\\n  });\\n  return {\\n    baseOption: baseOption,\\n    timelineOptions: timelineOptions,\\n    mediaDefault: mediaDefault,\\n    mediaList: mediaList\\n  };\\n}\\n/**\\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\\n * Support: width, height, aspectRatio\\n * Can use max or min as prefix.\\n */\\n\\n\\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\\n  var realMap = {\\n    width: ecWidth,\\n    height: ecHeight,\\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\\n\\n  };\\n  var applicatable = true;\\n  zrUtil.each(query, function (value, attr) {\\n    var matched = attr.match(QUERY_REG);\\n\\n    if (!matched || !matched[1] || !matched[2]) {\\n      return;\\n    }\\n\\n    var operator = matched[1];\\n    var realAttr = matched[2].toLowerCase();\\n\\n    if (!compare(realMap[realAttr], value, operator)) {\\n      applicatable = false;\\n    }\\n  });\\n  return applicatable;\\n}\\n\\nfunction compare(real, expect, operator) {\\n  if (operator === 'min') {\\n    return real >= expect;\\n  } else if (operator === 'max') {\\n    return real <= expect;\\n  } else {\\n    // Equals\\n    return real === expect;\\n  }\\n}\\n\\nfunction indicesEquals(indices1, indices2) {\\n  // indices is always order by asc and has only finite number.\\n  return indices1.join(',') === indices2.join(',');\\n}\\n/**\\n * Consider case:\\n * `chart.setOption(opt1);`\\n * Then user do some interaction like dataZoom, dataView changing.\\n * `chart.setOption(opt2);`\\n * Then user press 'reset button' in toolbox.\\n *\\n * After doing that all of the interaction effects should be reset, the\\n * chart should be the same as the result of invoke\\n * `chart.setOption(opt1); chart.setOption(opt2);`.\\n *\\n * Although it is not able ensure that\\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\\n * `chart.setOption(merge(opt1, opt2));` exactly,\\n * this might be the only simple way to implement that feature.\\n *\\n * MEMO: We've considered some other approaches:\\n * 1. Each model handle its self restoration but not uniform treatment.\\n *     (Too complex in logic and error-prone)\\n * 2. Use a shadow ecModel. (Performace expensive)\\n */\\n\\n\\nfunction mergeOption(oldOption, newOption) {\\n  newOption = newOption || {};\\n  each(newOption, function (newCptOpt, mainType) {\\n    if (newCptOpt == null) {\\n      return;\\n    }\\n\\n    var oldCptOpt = oldOption[mainType];\\n\\n    if (!ComponentModel.hasClass(mainType)) {\\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\\n    } else {\\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\\n      oldOption[mainType] = map(mapResult, function (item) {\\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\\n      });\\n    }\\n  });\\n}\\n\\nvar _default = OptionManager;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///226\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar each = _util.each;\\nvar isArray = _util.isArray;\\nvar isObject = _util.isObject;\\n\\nvar compatStyle = __webpack_require__(228);\\n\\nvar _model = __webpack_require__(60);\\n\\nvar normalizeToArray = _model.normalizeToArray;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// Compatitable with 2.0\\nfunction get(opt, path) {\\n  path = path.split(',');\\n  var obj = opt;\\n\\n  for (var i = 0; i < path.length; i++) {\\n    obj = obj && obj[path[i]];\\n\\n    if (obj == null) {\\n      break;\\n    }\\n  }\\n\\n  return obj;\\n}\\n\\nfunction set(opt, path, val, overwrite) {\\n  path = path.split(',');\\n  var obj = opt;\\n  var key;\\n\\n  for (var i = 0; i < path.length - 1; i++) {\\n    key = path[i];\\n\\n    if (obj[key] == null) {\\n      obj[key] = {};\\n    }\\n\\n    obj = obj[key];\\n  }\\n\\n  if (overwrite || obj[path[i]] == null) {\\n    obj[path[i]] = val;\\n  }\\n}\\n\\nfunction compatLayoutProperties(option) {\\n  each(LAYOUT_PROPERTIES, function (prop) {\\n    if (prop[0] in option && !(prop[1] in option)) {\\n      option[prop[1]] = option[prop[0]];\\n    }\\n  });\\n}\\n\\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\\n\\nfunction _default(option, isTheme) {\\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\\n\\n  option.series = normalizeToArray(option.series);\\n  each(option.series, function (seriesOpt) {\\n    if (!isObject(seriesOpt)) {\\n      return;\\n    }\\n\\n    var seriesType = seriesOpt.type;\\n\\n    if (seriesType === 'pie' || seriesType === 'gauge') {\\n      if (seriesOpt.clockWise != null) {\\n        seriesOpt.clockwise = seriesOpt.clockWise;\\n      }\\n    }\\n\\n    if (seriesType === 'gauge') {\\n      var pointerColor = get(seriesOpt, 'pointer.color');\\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\\n    }\\n\\n    compatLayoutProperties(seriesOpt);\\n  }); // dataRange has changed to visualMap\\n\\n  if (option.dataRange) {\\n    option.visualMap = option.dataRange;\\n  }\\n\\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\\n    var options = option[componentName];\\n\\n    if (options) {\\n      if (!isArray(options)) {\\n        options = [options];\\n      }\\n\\n      each(options, function (option) {\\n        compatLayoutProperties(option);\\n      });\\n    }\\n  });\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvcHJlcHJvY2Vzc29yL2JhY2t3YXJkQ29tcGF0LmpzP2ZiMDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFlBQVksbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFM0M7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixtQkFBTyxDQUFDLEdBQXNCOztBQUVoRCxhQUFhLG1CQUFPLENBQUMsRUFBZTs7QUFFcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsaUJBQWlCO0FBQ2xDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLHFCQUFxQjtBQUN0Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSwrQkFBK0I7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUcsRUFBRTs7QUFFTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwiZmlsZSI6IjIyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgX3V0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgZWFjaCA9IF91dGlsLmVhY2g7XG52YXIgaXNBcnJheSA9IF91dGlsLmlzQXJyYXk7XG52YXIgaXNPYmplY3QgPSBfdXRpbC5pc09iamVjdDtcblxudmFyIGNvbXBhdFN0eWxlID0gcmVxdWlyZShcIi4vaGVscGVyL2NvbXBhdFN0eWxlXCIpO1xuXG52YXIgX21vZGVsID0gcmVxdWlyZShcIi4uL3V0aWwvbW9kZWxcIik7XG5cbnZhciBub3JtYWxpemVUb0FycmF5ID0gX21vZGVsLm5vcm1hbGl6ZVRvQXJyYXk7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbi8vIENvbXBhdGl0YWJsZSB3aXRoIDIuMFxuZnVuY3Rpb24gZ2V0KG9wdCwgcGF0aCkge1xuICBwYXRoID0gcGF0aC5zcGxpdCgnLCcpO1xuICB2YXIgb2JqID0gb3B0O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIG9iaiA9IG9iaiAmJiBvYmpbcGF0aFtpXV07XG5cbiAgICBpZiAob2JqID09IG51bGwpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIHNldChvcHQsIHBhdGgsIHZhbCwgb3ZlcndyaXRlKSB7XG4gIHBhdGggPSBwYXRoLnNwbGl0KCcsJyk7XG4gIHZhciBvYmogPSBvcHQ7XG4gIHZhciBrZXk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aCAtIDE7IGkrKykge1xuICAgIGtleSA9IHBhdGhbaV07XG5cbiAgICBpZiAob2JqW2tleV0gPT0gbnVsbCkge1xuICAgICAgb2JqW2tleV0gPSB7fTtcbiAgICB9XG5cbiAgICBvYmogPSBvYmpba2V5XTtcbiAgfVxuXG4gIGlmIChvdmVyd3JpdGUgfHwgb2JqW3BhdGhbaV1dID09IG51bGwpIHtcbiAgICBvYmpbcGF0aFtpXV0gPSB2YWw7XG4gIH1cbn1cblxuZnVuY3Rpb24gY29tcGF0TGF5b3V0UHJvcGVydGllcyhvcHRpb24pIHtcbiAgZWFjaChMQVlPVVRfUFJPUEVSVElFUywgZnVuY3Rpb24gKHByb3ApIHtcbiAgICBpZiAocHJvcFswXSBpbiBvcHRpb24gJiYgIShwcm9wWzFdIGluIG9wdGlvbikpIHtcbiAgICAgIG9wdGlvbltwcm9wWzFdXSA9IG9wdGlvbltwcm9wWzBdXTtcbiAgICB9XG4gIH0pO1xufVxuXG52YXIgTEFZT1VUX1BST1BFUlRJRVMgPSBbWyd4JywgJ2xlZnQnXSwgWyd5JywgJ3RvcCddLCBbJ3gyJywgJ3JpZ2h0J10sIFsneTInLCAnYm90dG9tJ11dO1xudmFyIENPTVBBVElUQUJMRV9DT01QT05FTlRTID0gWydncmlkJywgJ2dlbycsICdwYXJhbGxlbCcsICdsZWdlbmQnLCAndG9vbGJveCcsICd0aXRsZScsICd2aXN1YWxNYXAnLCAnZGF0YVpvb20nLCAndGltZWxpbmUnXTtcblxuZnVuY3Rpb24gX2RlZmF1bHQob3B0aW9uLCBpc1RoZW1lKSB7XG4gIGNvbXBhdFN0eWxlKG9wdGlvbiwgaXNUaGVtZSk7IC8vIE1ha2Ugc3VyZSBzZXJpZXMgYXJyYXkgZm9yIG1vZGVsIGluaXRpYWxpemF0aW9uLlxuXG4gIG9wdGlvbi5zZXJpZXMgPSBub3JtYWxpemVUb0FycmF5KG9wdGlvbi5zZXJpZXMpO1xuICBlYWNoKG9wdGlvbi5zZXJpZXMsIGZ1bmN0aW9uIChzZXJpZXNPcHQpIHtcbiAgICBpZiAoIWlzT2JqZWN0KHNlcmllc09wdCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgc2VyaWVzVHlwZSA9IHNlcmllc09wdC50eXBlO1xuXG4gICAgaWYgKHNlcmllc1R5cGUgPT09ICdwaWUnIHx8IHNlcmllc1R5cGUgPT09ICdnYXVnZScpIHtcbiAgICAgIGlmIChzZXJpZXNPcHQuY2xvY2tXaXNlICE9IG51bGwpIHtcbiAgICAgICAgc2VyaWVzT3B0LmNsb2Nrd2lzZSA9IHNlcmllc09wdC5jbG9ja1dpc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHNlcmllc1R5cGUgPT09ICdnYXVnZScpIHtcbiAgICAgIHZhciBwb2ludGVyQ29sb3IgPSBnZXQoc2VyaWVzT3B0LCAncG9pbnRlci5jb2xvcicpO1xuICAgICAgcG9pbnRlckNvbG9yICE9IG51bGwgJiYgc2V0KHNlcmllc09wdCwgJ2l0ZW1TdHlsZS5ub3JtYWwuY29sb3InLCBwb2ludGVyQ29sb3IpO1xuICAgIH1cblxuICAgIGNvbXBhdExheW91dFByb3BlcnRpZXMoc2VyaWVzT3B0KTtcbiAgfSk7IC8vIGRhdGFSYW5nZSBoYXMgY2hhbmdlZCB0byB2aXN1YWxNYXBcblxuICBpZiAob3B0aW9uLmRhdGFSYW5nZSkge1xuICAgIG9wdGlvbi52aXN1YWxNYXAgPSBvcHRpb24uZGF0YVJhbmdlO1xuICB9XG5cbiAgZWFjaChDT01QQVRJVEFCTEVfQ09NUE9ORU5UUywgZnVuY3Rpb24gKGNvbXBvbmVudE5hbWUpIHtcbiAgICB2YXIgb3B0aW9ucyA9IG9wdGlvbltjb21wb25lbnROYW1lXTtcblxuICAgIGlmIChvcHRpb25zKSB7XG4gICAgICBpZiAoIWlzQXJyYXkob3B0aW9ucykpIHtcbiAgICAgICAgb3B0aW9ucyA9IFtvcHRpb25zXTtcbiAgICAgIH1cblxuICAgICAgZWFjaChvcHRpb25zLCBmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgIGNvbXBhdExheW91dFByb3BlcnRpZXMob3B0aW9uKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///227\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar modelUtil = __webpack_require__(60);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar each = zrUtil.each;\\nvar isObject = zrUtil.isObject;\\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\\n\\nfunction compatEC2ItemStyle(opt) {\\n  var itemStyleOpt = opt && opt.itemStyle;\\n\\n  if (!itemStyleOpt) {\\n    return;\\n  }\\n\\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\\n    var styleName = POSSIBLE_STYLES[i];\\n    var normalItemStyleOpt = itemStyleOpt.normal;\\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\\n\\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\\n      opt[styleName] = opt[styleName] || {};\\n\\n      if (!opt[styleName].normal) {\\n        opt[styleName].normal = normalItemStyleOpt[styleName];\\n      } else {\\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\\n      }\\n\\n      normalItemStyleOpt[styleName] = null;\\n    }\\n\\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\\n      opt[styleName] = opt[styleName] || {};\\n\\n      if (!opt[styleName].emphasis) {\\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\\n      } else {\\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\\n      }\\n\\n      emphasisItemStyleOpt[styleName] = null;\\n    }\\n  }\\n}\\n\\nfunction convertNormalEmphasis(opt, optType, useExtend) {\\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\\n    var normalOpt = opt[optType].normal;\\n    var emphasisOpt = opt[optType].emphasis;\\n\\n    if (normalOpt) {\\n      // Timeline controlStyle has other properties besides normal and emphasis\\n      if (useExtend) {\\n        opt[optType].normal = opt[optType].emphasis = null;\\n        zrUtil.defaults(opt[optType], normalOpt);\\n      } else {\\n        opt[optType] = normalOpt;\\n      }\\n    }\\n\\n    if (emphasisOpt) {\\n      opt.emphasis = opt.emphasis || {};\\n      opt.emphasis[optType] = emphasisOpt;\\n    }\\n  }\\n}\\n\\nfunction removeEC3NormalStatus(opt) {\\n  convertNormalEmphasis(opt, 'itemStyle');\\n  convertNormalEmphasis(opt, 'lineStyle');\\n  convertNormalEmphasis(opt, 'areaStyle');\\n  convertNormalEmphasis(opt, 'label');\\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\\n\\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\\n\\n  convertNormalEmphasis(opt, 'edgeLabel');\\n}\\n\\nfunction compatTextStyle(opt, propName) {\\n  // Check whether is not object (string\\\\null\\\\undefined ...)\\n  var labelOptSingle = isObject(opt) && opt[propName];\\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\\n\\n  if (textStyle) {\\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\\n\\n      if (textStyle.hasOwnProperty(propName)) {\\n        labelOptSingle[propName] = textStyle[propName];\\n      }\\n    }\\n  }\\n}\\n\\nfunction compatEC3CommonStyles(opt) {\\n  if (opt) {\\n    removeEC3NormalStatus(opt);\\n    compatTextStyle(opt, 'label');\\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\\n  }\\n}\\n\\nfunction processSeries(seriesOpt) {\\n  if (!isObject(seriesOpt)) {\\n    return;\\n  }\\n\\n  compatEC2ItemStyle(seriesOpt);\\n  removeEC3NormalStatus(seriesOpt);\\n  compatTextStyle(seriesOpt, 'label'); // treemap\\n\\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\\n\\n  compatTextStyle(seriesOpt, 'edgeLabel');\\n\\n  if (seriesOpt.emphasis) {\\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\\n\\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\\n\\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\\n  }\\n\\n  var markPoint = seriesOpt.markPoint;\\n\\n  if (markPoint) {\\n    compatEC2ItemStyle(markPoint);\\n    compatEC3CommonStyles(markPoint);\\n  }\\n\\n  var markLine = seriesOpt.markLine;\\n\\n  if (markLine) {\\n    compatEC2ItemStyle(markLine);\\n    compatEC3CommonStyles(markLine);\\n  }\\n\\n  var markArea = seriesOpt.markArea;\\n\\n  if (markArea) {\\n    compatEC3CommonStyles(markArea);\\n  }\\n\\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\\n  // then the backward compat based on option type will not be performed.\\n\\n  if (seriesOpt.type === 'graph') {\\n    data = data || seriesOpt.nodes;\\n    var edgeData = seriesOpt.links || seriesOpt.edges;\\n\\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\\n      for (var i = 0; i < edgeData.length; i++) {\\n        compatEC3CommonStyles(edgeData[i]);\\n      }\\n    }\\n\\n    zrUtil.each(seriesOpt.categories, function (opt) {\\n      removeEC3NormalStatus(opt);\\n    });\\n  }\\n\\n  if (data && !zrUtil.isTypedArray(data)) {\\n    for (var i = 0; i < data.length; i++) {\\n      compatEC3CommonStyles(data[i]);\\n    }\\n  } // mark point data\\n\\n\\n  var markPoint = seriesOpt.markPoint;\\n\\n  if (markPoint && markPoint.data) {\\n    var mpData = markPoint.data;\\n\\n    for (var i = 0; i < mpData.length; i++) {\\n      compatEC3CommonStyles(mpData[i]);\\n    }\\n  } // mark line data\\n\\n\\n  var markLine = seriesOpt.markLine;\\n\\n  if (markLine && markLine.data) {\\n    var mlData = markLine.data;\\n\\n    for (var i = 0; i < mlData.length; i++) {\\n      if (zrUtil.isArray(mlData[i])) {\\n        compatEC3CommonStyles(mlData[i][0]);\\n        compatEC3CommonStyles(mlData[i][1]);\\n      } else {\\n        compatEC3CommonStyles(mlData[i]);\\n      }\\n    }\\n  } // Series\\n\\n\\n  if (seriesOpt.type === 'gauge') {\\n    compatTextStyle(seriesOpt, 'axisLabel');\\n    compatTextStyle(seriesOpt, 'title');\\n    compatTextStyle(seriesOpt, 'detail');\\n  } else if (seriesOpt.type === 'treemap') {\\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\\n    zrUtil.each(seriesOpt.levels, function (opt) {\\n      removeEC3NormalStatus(opt);\\n    });\\n  } else if (seriesOpt.type === 'tree') {\\n    removeEC3NormalStatus(seriesOpt.leaves);\\n  } // sunburst starts from ec4, so it does not need to compat levels.\\n\\n}\\n\\nfunction toArr(o) {\\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\\n}\\n\\nfunction toObj(o) {\\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\\n}\\n\\nfunction _default(option, isTheme) {\\n  each(toArr(option.series), function (seriesOpt) {\\n    isObject(seriesOpt) && processSeries(seriesOpt);\\n  });\\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\\n  each(axes, function (axisName) {\\n    each(toArr(option[axisName]), function (axisOpt) {\\n      if (axisOpt) {\\n        compatTextStyle(axisOpt, 'axisLabel');\\n        compatTextStyle(axisOpt.axisPointer, 'label');\\n      }\\n    });\\n  });\\n  each(toArr(option.parallel), function (parallelOpt) {\\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\\n  });\\n  each(toArr(option.calendar), function (calendarOpt) {\\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\\n    compatTextStyle(calendarOpt, 'dayLabel');\\n    compatTextStyle(calendarOpt, 'monthLabel');\\n    compatTextStyle(calendarOpt, 'yearLabel');\\n  }); // radar.name.textStyle\\n\\n  each(toArr(option.radar), function (radarOpt) {\\n    compatTextStyle(radarOpt, 'name');\\n  });\\n  each(toArr(option.geo), function (geoOpt) {\\n    if (isObject(geoOpt)) {\\n      compatEC3CommonStyles(geoOpt);\\n      each(toArr(geoOpt.regions), function (regionObj) {\\n        compatEC3CommonStyles(regionObj);\\n      });\\n    }\\n  });\\n  each(toArr(option.timeline), function (timelineOpt) {\\n    compatEC3CommonStyles(timelineOpt);\\n    convertNormalEmphasis(timelineOpt, 'label');\\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\\n    var data = timelineOpt.data;\\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\\n      if (zrUtil.isObject(item)) {\\n        convertNormalEmphasis(item, 'label');\\n        convertNormalEmphasis(item, 'itemStyle');\\n      }\\n    });\\n  });\\n  each(toArr(option.toolbox), function (toolboxOpt) {\\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\\n    each(toolboxOpt.feature, function (featureOpt) {\\n      convertNormalEmphasis(featureOpt, 'iconStyle');\\n    });\\n  });\\n  compatTextStyle(toObj(option.axisPointer), 'label');\\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///228\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar createHashMap = _util.createHashMap;\\nvar each = _util.each;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// (1) [Caution]: the logic is correct based on the premises:\\n//     data processing stage is blocked in stream.\\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\\n// (2) Only register once when import repeatly.\\n//     Should be executed before after series filtered and before stack calculation.\\nfunction _default(ecModel) {\\n  var stackInfoMap = createHashMap();\\n  ecModel.eachSeries(function (seriesModel) {\\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\\n\\n    if (stack) {\\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\\n      var data = seriesModel.getData();\\n      var stackInfo = {\\n        // Used for calculate axis extent automatically.\\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\\n        data: data,\\n        seriesModel: seriesModel\\n      }; // If stacked on axis that do not support data stack.\\n\\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\\n        return;\\n      }\\n\\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\\n      stackInfoList.push(stackInfo);\\n    }\\n  });\\n  stackInfoMap.each(calculateStack);\\n}\\n\\nfunction calculateStack(stackInfoList) {\\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\\n    var resultVal = [];\\n    var resultNaN = [NaN, NaN];\\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\\n    var targetData = targetStackInfo.data;\\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\\n    // depending on legend selection.\\n\\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\\n      // should also be NaN, to draw a appropriate belt area.\\n\\n      if (isNaN(sum)) {\\n        return resultNaN;\\n      }\\n\\n      var byValue;\\n      var stackedDataRawIndex;\\n\\n      if (isStackedByIndex) {\\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\\n      } else {\\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\\n      } // If stackOver is NaN, chart view will render point on value start.\\n\\n\\n      var stackedOver = NaN;\\n\\n      for (var j = idxInStack - 1; j >= 0; j--) {\\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\\n\\n        if (!isStackedByIndex) {\\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\\n        }\\n\\n        if (stackedDataRawIndex >= 0) {\\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\\n\\n          if (sum >= 0 && val > 0 || // Positive stack\\n          sum <= 0 && val < 0 // Negative stack\\n          ) {\\n              sum += val;\\n              stackedOver = val;\\n              break;\\n            }\\n        }\\n      }\\n\\n      resultVal[0] = sum;\\n      resultVal[1] = stackedOver;\\n      return resultVal;\\n    });\\n    targetData.hostModel.setData(newData); // Update for consequent calculation\\n\\n    targetStackInfo.data = newData;\\n  });\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvcHJvY2Vzc29yL2RhdGFTdGFjay5qcz9kMTVkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLG1CQUFPLENBQUMsRUFBdUI7O0FBRTNDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFROztBQUVSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7O0FBRUE7QUFDQSw0RUFBNEU7QUFDNUU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87OztBQUdQOztBQUVBLGtDQUFrQyxRQUFRO0FBQzFDLHlDQUF5Qzs7QUFFekM7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0dBQXNHOztBQUV0RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDBDQUEwQzs7QUFFMUM7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJmaWxlIjoiMjI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciBfdXRpbCA9IHJlcXVpcmUoXCJ6cmVuZGVyL2xpYi9jb3JlL3V0aWxcIik7XG5cbnZhciBjcmVhdGVIYXNoTWFwID0gX3V0aWwuY3JlYXRlSGFzaE1hcDtcbnZhciBlYWNoID0gX3V0aWwuZWFjaDtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuLy8gKDEpIFtDYXV0aW9uXTogdGhlIGxvZ2ljIGlzIGNvcnJlY3QgYmFzZWQgb24gdGhlIHByZW1pc2VzOlxuLy8gICAgIGRhdGEgcHJvY2Vzc2luZyBzdGFnZSBpcyBibG9ja2VkIGluIHN0cmVhbS5cbi8vICAgICBTZWUgPG1vZHVsZTplY2hhcnRzL3N0cmVhbS9TY2hlZHVsZXIjcGVyZm9ybURhdGFQcm9jZXNzb3JUYXNrcz5cbi8vICgyKSBPbmx5IHJlZ2lzdGVyIG9uY2Ugd2hlbiBpbXBvcnQgcmVwZWF0bHkuXG4vLyAgICAgU2hvdWxkIGJlIGV4ZWN1dGVkIGJlZm9yZSBhZnRlciBzZXJpZXMgZmlsdGVyZWQgYW5kIGJlZm9yZSBzdGFjayBjYWxjdWxhdGlvbi5cbmZ1bmN0aW9uIF9kZWZhdWx0KGVjTW9kZWwpIHtcbiAgdmFyIHN0YWNrSW5mb01hcCA9IGNyZWF0ZUhhc2hNYXAoKTtcbiAgZWNNb2RlbC5lYWNoU2VyaWVzKGZ1bmN0aW9uIChzZXJpZXNNb2RlbCkge1xuICAgIHZhciBzdGFjayA9IHNlcmllc01vZGVsLmdldCgnc3RhY2snKTsgLy8gQ29tcGF0aWJhbDogd2hlbiBgc3RhY2tgIGlzIHNldCBhcyAnJywgZG8gbm90IHN0YWNrLlxuXG4gICAgaWYgKHN0YWNrKSB7XG4gICAgICB2YXIgc3RhY2tJbmZvTGlzdCA9IHN0YWNrSW5mb01hcC5nZXQoc3RhY2spIHx8IHN0YWNrSW5mb01hcC5zZXQoc3RhY2ssIFtdKTtcbiAgICAgIHZhciBkYXRhID0gc2VyaWVzTW9kZWwuZ2V0RGF0YSgpO1xuICAgICAgdmFyIHN0YWNrSW5mbyA9IHtcbiAgICAgICAgLy8gVXNlZCBmb3IgY2FsY3VsYXRlIGF4aXMgZXh0ZW50IGF1dG9tYXRpY2FsbHkuXG4gICAgICAgIHN0YWNrUmVzdWx0RGltZW5zaW9uOiBkYXRhLmdldENhbGN1bGF0aW9uSW5mbygnc3RhY2tSZXN1bHREaW1lbnNpb24nKSxcbiAgICAgICAgc3RhY2tlZE92ZXJEaW1lbnNpb246IGRhdGEuZ2V0Q2FsY3VsYXRpb25JbmZvKCdzdGFja2VkT3ZlckRpbWVuc2lvbicpLFxuICAgICAgICBzdGFja2VkRGltZW5zaW9uOiBkYXRhLmdldENhbGN1bGF0aW9uSW5mbygnc3RhY2tlZERpbWVuc2lvbicpLFxuICAgICAgICBzdGFja2VkQnlEaW1lbnNpb246IGRhdGEuZ2V0Q2FsY3VsYXRpb25JbmZvKCdzdGFja2VkQnlEaW1lbnNpb24nKSxcbiAgICAgICAgaXNTdGFja2VkQnlJbmRleDogZGF0YS5nZXRDYWxjdWxhdGlvbkluZm8oJ2lzU3RhY2tlZEJ5SW5kZXgnKSxcbiAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgc2VyaWVzTW9kZWw6IHNlcmllc01vZGVsXG4gICAgICB9OyAvLyBJZiBzdGFja2VkIG9uIGF4aXMgdGhhdCBkbyBub3Qgc3VwcG9ydCBkYXRhIHN0YWNrLlxuXG4gICAgICBpZiAoIXN0YWNrSW5mby5zdGFja2VkRGltZW5zaW9uIHx8ICEoc3RhY2tJbmZvLmlzU3RhY2tlZEJ5SW5kZXggfHwgc3RhY2tJbmZvLnN0YWNrZWRCeURpbWVuc2lvbikpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBzdGFja0luZm9MaXN0Lmxlbmd0aCAmJiBkYXRhLnNldENhbGN1bGF0aW9uSW5mbygnc3RhY2tlZE9uU2VyaWVzJywgc3RhY2tJbmZvTGlzdFtzdGFja0luZm9MaXN0Lmxlbmd0aCAtIDFdLnNlcmllc01vZGVsKTtcbiAgICAgIHN0YWNrSW5mb0xpc3QucHVzaChzdGFja0luZm8pO1xuICAgIH1cbiAgfSk7XG4gIHN0YWNrSW5mb01hcC5lYWNoKGNhbGN1bGF0ZVN0YWNrKTtcbn1cblxuZnVuY3Rpb24gY2FsY3VsYXRlU3RhY2soc3RhY2tJbmZvTGlzdCkge1xuICBlYWNoKHN0YWNrSW5mb0xpc3QsIGZ1bmN0aW9uICh0YXJnZXRTdGFja0luZm8sIGlkeEluU3RhY2spIHtcbiAgICB2YXIgcmVzdWx0VmFsID0gW107XG4gICAgdmFyIHJlc3VsdE5hTiA9IFtOYU4sIE5hTl07XG4gICAgdmFyIGRpbXMgPSBbdGFyZ2V0U3RhY2tJbmZvLnN0YWNrUmVzdWx0RGltZW5zaW9uLCB0YXJnZXRTdGFja0luZm8uc3RhY2tlZE92ZXJEaW1lbnNpb25dO1xuICAgIHZhciB0YXJnZXREYXRhID0gdGFyZ2V0U3RhY2tJbmZvLmRhdGE7XG4gICAgdmFyIGlzU3RhY2tlZEJ5SW5kZXggPSB0YXJnZXRTdGFja0luZm8uaXNTdGFja2VkQnlJbmRleDsgLy8gU2hvdWxkIG5vdCB3cml0ZSBvbiByYXcgZGF0YSwgYmVjYXVzZSBzdGFjayBzZXJpZXMgbW9kZWwgbGlzdCBjaGFuZ2VzXG4gICAgLy8gZGVwZW5kaW5nIG9uIGxlZ2VuZCBzZWxlY3Rpb24uXG5cbiAgICB2YXIgbmV3RGF0YSA9IHRhcmdldERhdGEubWFwKGRpbXMsIGZ1bmN0aW9uICh2MCwgdjEsIGRhdGFJbmRleCkge1xuICAgICAgdmFyIHN1bSA9IHRhcmdldERhdGEuZ2V0KHRhcmdldFN0YWNrSW5mby5zdGFja2VkRGltZW5zaW9uLCBkYXRhSW5kZXgpOyAvLyBDb25zaWRlciBgY29ubmVjdE51bGxzYCBvZiBsaW5lIGFyZWEsIGlmIHZhbHVlIGlzIE5hTiwgc3RhY2tlZE92ZXJcbiAgICAgIC8vIHNob3VsZCBhbHNvIGJlIE5hTiwgdG8gZHJhdyBhIGFwcHJvcHJpYXRlIGJlbHQgYXJlYS5cblxuICAgICAgaWYgKGlzTmFOKHN1bSkpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdE5hTjtcbiAgICAgIH1cblxuICAgICAgdmFyIGJ5VmFsdWU7XG4gICAgICB2YXIgc3RhY2tlZERhdGFSYXdJbmRleDtcblxuICAgICAgaWYgKGlzU3RhY2tlZEJ5SW5kZXgpIHtcbiAgICAgICAgc3RhY2tlZERhdGFSYXdJbmRleCA9IHRhcmdldERhdGEuZ2V0UmF3SW5kZXgoZGF0YUluZGV4KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJ5VmFsdWUgPSB0YXJnZXREYXRhLmdldCh0YXJnZXRTdGFja0luZm8uc3RhY2tlZEJ5RGltZW5zaW9uLCBkYXRhSW5kZXgpO1xuICAgICAgfSAvLyBJZiBzdGFja092ZXIgaXMgTmFOLCBjaGFydCB2aWV3IHdpbGwgcmVuZGVyIHBvaW50IG9uIHZhbHVlIHN0YXJ0LlxuXG5cbiAgICAgIHZhciBzdGFja2VkT3ZlciA9IE5hTjtcblxuICAgICAgZm9yICh2YXIgaiA9IGlkeEluU3RhY2sgLSAxOyBqID49IDA7IGotLSkge1xuICAgICAgICB2YXIgc3RhY2tJbmZvID0gc3RhY2tJbmZvTGlzdFtqXTsgLy8gSGFzIGJlZW4gb3B0aW1pemVkIGJ5IGludmVydGVkIGluZGljZXMgb24gYHN0YWNrZWRCeURpbWVuc2lvbmAuXG5cbiAgICAgICAgaWYgKCFpc1N0YWNrZWRCeUluZGV4KSB7XG4gICAgICAgICAgc3RhY2tlZERhdGFSYXdJbmRleCA9IHN0YWNrSW5mby5kYXRhLnJhd0luZGV4T2Yoc3RhY2tJbmZvLnN0YWNrZWRCeURpbWVuc2lvbiwgYnlWYWx1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3RhY2tlZERhdGFSYXdJbmRleCA+PSAwKSB7XG4gICAgICAgICAgdmFyIHZhbCA9IHN0YWNrSW5mby5kYXRhLmdldEJ5UmF3SW5kZXgoc3RhY2tJbmZvLnN0YWNrUmVzdWx0RGltZW5zaW9uLCBzdGFja2VkRGF0YVJhd0luZGV4KTsgLy8gQ29uc2lkZXJpbmcgcG9zaXRpdmUgc3RhY2ssIG5lZ2F0aXZlIHN0YWNrIGFuZCBlbXB0eSBkYXRhXG5cbiAgICAgICAgICBpZiAoc3VtID49IDAgJiYgdmFsID4gMCB8fCAvLyBQb3NpdGl2ZSBzdGFja1xuICAgICAgICAgIHN1bSA8PSAwICYmIHZhbCA8IDAgLy8gTmVnYXRpdmUgc3RhY2tcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgc3VtICs9IHZhbDtcbiAgICAgICAgICAgICAgc3RhY2tlZE92ZXIgPSB2YWw7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJlc3VsdFZhbFswXSA9IHN1bTtcbiAgICAgIHJlc3VsdFZhbFsxXSA9IHN0YWNrZWRPdmVyO1xuICAgICAgcmV0dXJuIHJlc3VsdFZhbDtcbiAgICB9KTtcbiAgICB0YXJnZXREYXRhLmhvc3RNb2RlbC5zZXREYXRhKG5ld0RhdGEpOyAvLyBVcGRhdGUgZm9yIGNvbnNlcXVlbnQgY2FsY3VsYXRpb25cblxuICAgIHRhcmdldFN0YWNrSW5mby5kYXRhID0gbmV3RGF0YTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///229\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _dataProvider = __webpack_require__(85);\\n\\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\\n\\nvar _format = __webpack_require__(69);\\n\\nvar getTooltipMarker = _format.getTooltipMarker;\\nvar formatTpl = _format.formatTpl;\\n\\nvar _model = __webpack_require__(60);\\n\\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar DIMENSION_LABEL_REG = /\\\\{@(.+?)\\\\}/g; // PENDING A little ugly\\n\\nvar _default = {\\n  /**\\n   * Get params for formatter\\n   * @param {number} dataIndex\\n   * @param {string} [dataType]\\n   * @return {Object}\\n   */\\n  getDataParams: function (dataIndex, dataType) {\\n    var data = this.getData(dataType);\\n    var rawValue = this.getRawValue(dataIndex, dataType);\\n    var rawDataIndex = data.getRawIndex(dataIndex);\\n    var name = data.getName(dataIndex);\\n    var itemOpt = data.getRawDataItem(dataIndex);\\n    var color = data.getItemVisual(dataIndex, 'color');\\n    var tooltipModel = this.ecModel.getComponent('tooltip');\\n    var renderModeOption = tooltipModel && tooltipModel.get('renderMode');\\n    var renderMode = getTooltipRenderMode(renderModeOption);\\n    var mainType = this.mainType;\\n    var isSeries = mainType === 'series';\\n    return {\\n      componentType: mainType,\\n      componentSubType: this.subType,\\n      componentIndex: this.componentIndex,\\n      seriesType: isSeries ? this.subType : null,\\n      seriesIndex: this.seriesIndex,\\n      seriesId: isSeries ? this.id : null,\\n      seriesName: isSeries ? this.name : null,\\n      name: name,\\n      dataIndex: rawDataIndex,\\n      data: itemOpt,\\n      dataType: dataType,\\n      value: rawValue,\\n      color: color,\\n      marker: getTooltipMarker({\\n        color: color,\\n        renderMode: renderMode\\n      }),\\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\\n      $vars: ['seriesName', 'name', 'value']\\n    };\\n  },\\n\\n  /**\\n   * Format label\\n   * @param {number} dataIndex\\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\\n   * @param {string} [dataType]\\n   * @param {number} [dimIndex]\\n   * @param {string} [labelProp='label']\\n   * @return {string} If not formatter, return null/undefined\\n   */\\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\\n    status = status || 'normal';\\n    var data = this.getData(dataType);\\n    var itemModel = data.getItemModel(dataIndex);\\n    var params = this.getDataParams(dataIndex, dataType);\\n\\n    if (dimIndex != null && params.value instanceof Array) {\\n      params.value = params.value[dimIndex];\\n    }\\n\\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\\n\\n    if (typeof formatter === 'function') {\\n      params.status = status;\\n      return formatter(params);\\n    } else if (typeof formatter === 'string') {\\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\\n      // Do not support '}' in dim name util have to.\\n\\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\\n        var len = dim.length;\\n\\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\\n        }\\n\\n        return retrieveRawValue(data, dataIndex, dim);\\n      });\\n    }\\n  },\\n\\n  /**\\n   * Get raw value in option\\n   * @param {number} idx\\n   * @param {string} [dataType]\\n   * @return {Array|number|string}\\n   */\\n  getRawValue: function (idx, dataType) {\\n    return retrieveRawValue(this.getData(dataType), idx);\\n  },\\n\\n  /**\\n   * Should be implemented.\\n   * @param {number} dataIndex\\n   * @param {boolean} [multipleSeries=false]\\n   * @param {number} [dataType]\\n   * @return {string} tooltip string\\n   */\\n  formatTooltip: function () {// Empty function\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///230\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar Gradient = __webpack_require__(106);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar _default = {\\n  createOnAllSeries: true,\\n  performRawSeries: true,\\n  reset: function (seriesModel, ecModel) {\\n    var data = seriesModel.getData();\\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\\n    || seriesModel.getColorFromPalette( // TODO series count changed.\\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\\n    // FIXME Set color function or use the platte color\\n\\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\\n\\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\\n        data.each(function (idx) {\\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\\n        });\\n      } // itemStyle in each data item\\n\\n\\n      var dataEach = function (data, idx) {\\n        var itemModel = data.getItemModel(idx);\\n        var color = itemModel.get(colorAccessPath, true);\\n\\n        if (color != null) {\\n          data.setItemVisual(idx, 'color', color);\\n        }\\n      };\\n\\n      return {\\n        dataEach: data.hasItemOption ? dataEach : null\\n      };\\n    }\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvdmlzdWFsL3Nlcmllc0NvbG9yLmpzP2ZkNjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWUsbUJBQU8sQ0FBQyxHQUE4Qjs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEO0FBQ3REOztBQUVBLG1DQUFtQzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTzs7O0FBR1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgR3JhZGllbnQgPSByZXF1aXJlKFwienJlbmRlci9saWIvZ3JhcGhpYy9HcmFkaWVudFwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIF9kZWZhdWx0ID0ge1xuICBjcmVhdGVPbkFsbFNlcmllczogdHJ1ZSxcbiAgcGVyZm9ybVJhd1NlcmllczogdHJ1ZSxcbiAgcmVzZXQ6IGZ1bmN0aW9uIChzZXJpZXNNb2RlbCwgZWNNb2RlbCkge1xuICAgIHZhciBkYXRhID0gc2VyaWVzTW9kZWwuZ2V0RGF0YSgpO1xuICAgIHZhciBjb2xvckFjY2Vzc1BhdGggPSAoc2VyaWVzTW9kZWwudmlzdWFsQ29sb3JBY2Nlc3NQYXRoIHx8ICdpdGVtU3R5bGUuY29sb3InKS5zcGxpdCgnLicpO1xuICAgIHZhciBjb2xvciA9IHNlcmllc01vZGVsLmdldChjb2xvckFjY2Vzc1BhdGgpIC8vIFNldCBpbiBpdGVtU3R5bGVcbiAgICB8fCBzZXJpZXNNb2RlbC5nZXRDb2xvckZyb21QYWxldHRlKCAvLyBUT0RPIHNlcmllcyBjb3VudCBjaGFuZ2VkLlxuICAgIHNlcmllc01vZGVsLm5hbWUsIG51bGwsIGVjTW9kZWwuZ2V0U2VyaWVzQ291bnQoKSk7IC8vIERlZmF1bHQgY29sb3JcbiAgICAvLyBGSVhNRSBTZXQgY29sb3IgZnVuY3Rpb24gb3IgdXNlIHRoZSBwbGF0dGUgY29sb3JcblxuICAgIGRhdGEuc2V0VmlzdWFsKCdjb2xvcicsIGNvbG9yKTsgLy8gT25seSB2aXNpYmxlIHNlcmllcyBoYXMgZWFjaCBkYXRhIGJlIHZpc3VhbCBlbmNvZGVkXG5cbiAgICBpZiAoIWVjTW9kZWwuaXNTZXJpZXNGaWx0ZXJlZChzZXJpZXNNb2RlbCkpIHtcbiAgICAgIGlmICh0eXBlb2YgY29sb3IgPT09ICdmdW5jdGlvbicgJiYgIShjb2xvciBpbnN0YW5jZW9mIEdyYWRpZW50KSkge1xuICAgICAgICBkYXRhLmVhY2goZnVuY3Rpb24gKGlkeCkge1xuICAgICAgICAgIGRhdGEuc2V0SXRlbVZpc3VhbChpZHgsICdjb2xvcicsIGNvbG9yKHNlcmllc01vZGVsLmdldERhdGFQYXJhbXMoaWR4KSkpO1xuICAgICAgICB9KTtcbiAgICAgIH0gLy8gaXRlbVN0eWxlIGluIGVhY2ggZGF0YSBpdGVtXG5cblxuICAgICAgdmFyIGRhdGFFYWNoID0gZnVuY3Rpb24gKGRhdGEsIGlkeCkge1xuICAgICAgICB2YXIgaXRlbU1vZGVsID0gZGF0YS5nZXRJdGVtTW9kZWwoaWR4KTtcbiAgICAgICAgdmFyIGNvbG9yID0gaXRlbU1vZGVsLmdldChjb2xvckFjY2Vzc1BhdGgsIHRydWUpO1xuXG4gICAgICAgIGlmIChjb2xvciAhPSBudWxsKSB7XG4gICAgICAgICAgZGF0YS5zZXRJdGVtVmlzdWFsKGlkeCwgJ2NvbG9yJywgY29sb3IpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBkYXRhRWFjaDogZGF0YS5oYXNJdGVtT3B0aW9uID8gZGF0YUVhY2ggOiBudWxsXG4gICAgICB9O1xuICAgIH1cbiAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///231\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar lang = __webpack_require__(233);\\n\\nvar _dataProvider = __webpack_require__(85);\\n\\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nfunction _default(dom, ecModel) {\\n  var ariaModel = ecModel.getModel('aria');\\n\\n  if (!ariaModel.get('show')) {\\n    return;\\n  } else if (ariaModel.get('description')) {\\n    dom.setAttribute('aria-label', ariaModel.get('description'));\\n    return;\\n  }\\n\\n  var seriesCnt = 0;\\n  ecModel.eachSeries(function (seriesModel, idx) {\\n    ++seriesCnt;\\n  }, this);\\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\\n  var ariaLabel;\\n\\n  if (seriesCnt < 1) {\\n    // No series, no aria label\\n    return;\\n  } else {\\n    var title = getTitle();\\n\\n    if (title) {\\n      ariaLabel = replace(getConfig('general.withTitle'), {\\n        title: title\\n      });\\n    } else {\\n      ariaLabel = getConfig('general.withoutTitle');\\n    }\\n\\n    var seriesLabels = [];\\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\\n    ariaLabel += replace(getConfig(prefix), {\\n      seriesCount: seriesCnt\\n    });\\n    ecModel.eachSeries(function (seriesModel, idx) {\\n      if (idx < displaySeriesCnt) {\\n        var seriesLabel;\\n        var seriesName = seriesModel.get('name');\\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\\n        seriesLabel = replace(seriesLabel, {\\n          seriesId: seriesModel.seriesIndex,\\n          seriesName: seriesModel.get('name'),\\n          seriesType: getSeriesTypeName(seriesModel.subType)\\n        });\\n        var data = seriesModel.getData();\\n        window.data = data;\\n\\n        if (data.count() > maxDataCnt) {\\n          // Show part of data\\n          seriesLabel += replace(getConfig('data.partialData'), {\\n            displayCnt: maxDataCnt\\n          });\\n        } else {\\n          seriesLabel += getConfig('data.allData');\\n        }\\n\\n        var dataLabels = [];\\n\\n        for (var i = 0; i < data.count(); i++) {\\n          if (i < maxDataCnt) {\\n            var name = data.getName(i);\\n            var value = retrieveRawValue(data, i);\\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\\n              name: name,\\n              value: value\\n            }));\\n          }\\n        }\\n\\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\\n        seriesLabels.push(seriesLabel);\\n      }\\n    });\\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\\n    dom.setAttribute('aria-label', ariaLabel);\\n  }\\n\\n  function replace(str, keyValues) {\\n    if (typeof str !== 'string') {\\n      return str;\\n    }\\n\\n    var result = str;\\n    zrUtil.each(keyValues, function (value, key) {\\n      result = result.replace(new RegExp('\\\\\\\\{\\\\\\\\s*' + key + '\\\\\\\\s*\\\\\\\\}', 'g'), value);\\n    });\\n    return result;\\n  }\\n\\n  function getConfig(path) {\\n    var userConfig = ariaModel.get(path);\\n\\n    if (userConfig == null) {\\n      var pathArr = path.split('.');\\n      var result = lang.aria;\\n\\n      for (var i = 0; i < pathArr.length; ++i) {\\n        result = result[pathArr[i]];\\n      }\\n\\n      return result;\\n    } else {\\n      return userConfig;\\n    }\\n  }\\n\\n  function getTitle() {\\n    var title = ecModel.getModel('title').option;\\n\\n    if (title && title.length) {\\n      title = title[0];\\n    }\\n\\n    return title && title.text;\\n  }\\n\\n  function getSeriesTypeName(type) {\\n    return lang.series.typeNames[type] || '自定义图';\\n  }\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///232\\n\")},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar _default = {\\n  toolbox: {\\n    brush: {\\n      title: {\\n        rect: '矩形选择',\\n        polygon: '圈选',\\n        lineX: '横向选择',\\n        lineY: '纵向选择',\\n        keep: '保持选择',\\n        clear: '清除选择'\\n      }\\n    },\\n    dataView: {\\n      title: '数据视图',\\n      lang: ['数据视图', '关闭', '刷新']\\n    },\\n    dataZoom: {\\n      title: {\\n        zoom: '区域缩放',\\n        back: '区域缩放还原'\\n      }\\n    },\\n    magicType: {\\n      title: {\\n        line: '切换为折线图',\\n        bar: '切换为柱状图',\\n        stack: '切换为堆叠',\\n        tiled: '切换为平铺'\\n      }\\n    },\\n    restore: {\\n      title: '还原'\\n    },\\n    saveAsImage: {\\n      title: '保存为图片',\\n      lang: ['右键另存为图片']\\n    }\\n  },\\n  series: {\\n    typeNames: {\\n      pie: '饼图',\\n      bar: '柱状图',\\n      line: '折线图',\\n      scatter: '散点图',\\n      effectScatter: '涟漪散点图',\\n      radar: '雷达图',\\n      tree: '树图',\\n      treemap: '矩形树图',\\n      boxplot: '箱型图',\\n      candlestick: 'K线图',\\n      k: 'K线图',\\n      heatmap: '热力图',\\n      map: '地图',\\n      parallel: '平行坐标图',\\n      lines: '线图',\\n      graph: '关系图',\\n      sankey: '桑基图',\\n      funnel: '漏斗图',\\n      gauge: '仪表盘图',\\n      pictorialBar: '象形柱图',\\n      themeRiver: '主题河流图',\\n      sunburst: '旭日图'\\n    }\\n  },\\n  aria: {\\n    general: {\\n      withTitle: '这是一个关于“{title}”的图表。',\\n      withoutTitle: '这是一个图表，'\\n    },\\n    series: {\\n      single: {\\n        prefix: '',\\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\\n        withoutName: '图表类型是{seriesType}。'\\n      },\\n      multiple: {\\n        prefix: '它由{seriesCount}个图表系列组成。',\\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\\n        separator: {\\n          middle: '；',\\n          end: '。'\\n        }\\n      }\\n    },\\n    data: {\\n      allData: '其数据是——',\\n      partialData: '其中，前{displayCnt}项是——',\\n      withName: '{name}的数据是{value}',\\n      withoutName: '{value}',\\n      separator: {\\n        middle: '，',\\n        end: ''\\n      }\\n    }\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbGFuZy5qcz8yOWE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsMEJBQTBCLE1BQU07QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFdBQVcsSUFBSSxXQUFXO0FBQ25ELDRCQUE0QixXQUFXO0FBQ3ZDLE9BQU87QUFDUDtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDLHFCQUFxQixTQUFTLFNBQVMsV0FBVyxFQUFFLFdBQVc7QUFDL0Qsd0JBQXdCLFNBQVMsT0FBTyxXQUFXO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHlCQUF5QixXQUFXO0FBQ3BDLGtCQUFrQixLQUFLLEtBQUssTUFBTTtBQUNsQyxxQkFBcUIsTUFBTTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG52YXIgX2RlZmF1bHQgPSB7XG4gIHRvb2xib3g6IHtcbiAgICBicnVzaDoge1xuICAgICAgdGl0bGU6IHtcbiAgICAgICAgcmVjdDogJ+efqeW9oumAieaLqScsXG4gICAgICAgIHBvbHlnb246ICflnIjpgIknLFxuICAgICAgICBsaW5lWDogJ+aoquWQkemAieaLqScsXG4gICAgICAgIGxpbmVZOiAn57q15ZCR6YCJ5oupJyxcbiAgICAgICAga2VlcDogJ+S/neaMgemAieaLqScsXG4gICAgICAgIGNsZWFyOiAn5riF6Zmk6YCJ5oupJ1xuICAgICAgfVxuICAgIH0sXG4gICAgZGF0YVZpZXc6IHtcbiAgICAgIHRpdGxlOiAn5pWw5o2u6KeG5Zu+JyxcbiAgICAgIGxhbmc6IFsn5pWw5o2u6KeG5Zu+JywgJ+WFs+mXrScsICfliLfmlrAnXVxuICAgIH0sXG4gICAgZGF0YVpvb206IHtcbiAgICAgIHRpdGxlOiB7XG4gICAgICAgIHpvb206ICfljLrln5/nvKnmlL4nLFxuICAgICAgICBiYWNrOiAn5Yy65Z+f57yp5pS+6L+Y5Y6fJ1xuICAgICAgfVxuICAgIH0sXG4gICAgbWFnaWNUeXBlOiB7XG4gICAgICB0aXRsZToge1xuICAgICAgICBsaW5lOiAn5YiH5o2i5Li65oqY57q/5Zu+JyxcbiAgICAgICAgYmFyOiAn5YiH5o2i5Li65p+x54q25Zu+JyxcbiAgICAgICAgc3RhY2s6ICfliIfmjaLkuLrloIblj6AnLFxuICAgICAgICB0aWxlZDogJ+WIh+aNouS4uuW5s+mTuidcbiAgICAgIH1cbiAgICB9LFxuICAgIHJlc3RvcmU6IHtcbiAgICAgIHRpdGxlOiAn6L+Y5Y6fJ1xuICAgIH0sXG4gICAgc2F2ZUFzSW1hZ2U6IHtcbiAgICAgIHRpdGxlOiAn5L+d5a2Y5Li65Zu+54mHJyxcbiAgICAgIGxhbmc6IFsn5Y+z6ZSu5Y+m5a2Y5Li65Zu+54mHJ11cbiAgICB9XG4gIH0sXG4gIHNlcmllczoge1xuICAgIHR5cGVOYW1lczoge1xuICAgICAgcGllOiAn6aW85Zu+JyxcbiAgICAgIGJhcjogJ+afseeKtuWbvicsXG4gICAgICBsaW5lOiAn5oqY57q/5Zu+JyxcbiAgICAgIHNjYXR0ZXI6ICfmlaPngrnlm74nLFxuICAgICAgZWZmZWN0U2NhdHRlcjogJ+a2n+a8quaVo+eCueWbvicsXG4gICAgICByYWRhcjogJ+mbt+i+vuWbvicsXG4gICAgICB0cmVlOiAn5qCR5Zu+JyxcbiAgICAgIHRyZWVtYXA6ICfnn6nlvaLmoJHlm74nLFxuICAgICAgYm94cGxvdDogJ+euseWei+WbvicsXG4gICAgICBjYW5kbGVzdGljazogJ0vnur/lm74nLFxuICAgICAgazogJ0vnur/lm74nLFxuICAgICAgaGVhdG1hcDogJ+eDreWKm+WbvicsXG4gICAgICBtYXA6ICflnLDlm74nLFxuICAgICAgcGFyYWxsZWw6ICflubPooYzlnZDmoIflm74nLFxuICAgICAgbGluZXM6ICfnur/lm74nLFxuICAgICAgZ3JhcGg6ICflhbPns7vlm74nLFxuICAgICAgc2Fua2V5OiAn5qGR5Z+65Zu+JyxcbiAgICAgIGZ1bm5lbDogJ+a8j+aWl+WbvicsXG4gICAgICBnYXVnZTogJ+S7quihqOebmOWbvicsXG4gICAgICBwaWN0b3JpYWxCYXI6ICfosaHlvaLmn7Hlm74nLFxuICAgICAgdGhlbWVSaXZlcjogJ+S4u+mimOays+a1geWbvicsXG4gICAgICBzdW5idXJzdDogJ+aXreaXpeWbvidcbiAgICB9XG4gIH0sXG4gIGFyaWE6IHtcbiAgICBnZW5lcmFsOiB7XG4gICAgICB3aXRoVGl0bGU6ICfov5nmmK/kuIDkuKrlhbPkuo7igJx7dGl0bGV94oCd55qE5Zu+6KGo44CCJyxcbiAgICAgIHdpdGhvdXRUaXRsZTogJ+i/meaYr+S4gOS4quWbvuihqO+8jCdcbiAgICB9LFxuICAgIHNlcmllczoge1xuICAgICAgc2luZ2xlOiB7XG4gICAgICAgIHByZWZpeDogJycsXG4gICAgICAgIHdpdGhOYW1lOiAn5Zu+6KGo57G75Z6L5pive3Nlcmllc1R5cGV977yM6KGo56S6e3Nlcmllc05hbWV944CCJyxcbiAgICAgICAgd2l0aG91dE5hbWU6ICflm77ooajnsbvlnovmmK97c2VyaWVzVHlwZX3jgIInXG4gICAgICB9LFxuICAgICAgbXVsdGlwbGU6IHtcbiAgICAgICAgcHJlZml4OiAn5a6D55Sxe3Nlcmllc0NvdW50feS4quWbvuihqOezu+WIl+e7hOaIkOOAgicsXG4gICAgICAgIHdpdGhOYW1lOiAn56yse3Nlcmllc0lkfeS4quezu+WIl+aYr+S4gOS4quihqOekuntzZXJpZXNOYW1lfeeahHtzZXJpZXNUeXBlfe+8jCcsXG4gICAgICAgIHdpdGhvdXROYW1lOiAn56yse3Nlcmllc0lkfeS4quezu+WIl+aYr+S4gOS4qntzZXJpZXNUeXBlfe+8jCcsXG4gICAgICAgIHNlcGFyYXRvcjoge1xuICAgICAgICAgIG1pZGRsZTogJ++8mycsXG4gICAgICAgICAgZW5kOiAn44CCJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBkYXRhOiB7XG4gICAgICBhbGxEYXRhOiAn5YW25pWw5o2u5piv4oCU4oCUJyxcbiAgICAgIHBhcnRpYWxEYXRhOiAn5YW25Lit77yM5YmNe2Rpc3BsYXlDbnR96aG55piv4oCU4oCUJyxcbiAgICAgIHdpdGhOYW1lOiAne25hbWV955qE5pWw5o2u5pive3ZhbHVlfScsXG4gICAgICB3aXRob3V0TmFtZTogJ3t2YWx1ZX0nLFxuICAgICAgc2VwYXJhdG9yOiB7XG4gICAgICAgIG1pZGRsZTogJ++8jCcsXG4gICAgICAgIGVuZDogJydcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///233\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar graphic = __webpack_require__(63);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar PI = Math.PI;\\n/**\\n * @param {module:echarts/ExtensionAPI} api\\n * @param {Object} [opts]\\n * @param {string} [opts.text]\\n * @param {string} [opts.color]\\n * @param {string} [opts.textColor]\\n * @return {module:zrender/Element}\\n */\\n\\nfunction _default(api, opts) {\\n  opts = opts || {};\\n  zrUtil.defaults(opts, {\\n    text: 'loading',\\n    color: '#c23531',\\n    textColor: '#000',\\n    maskColor: 'rgba(255, 255, 255, 0.8)',\\n    zlevel: 0\\n  });\\n  var mask = new graphic.Rect({\\n    style: {\\n      fill: opts.maskColor\\n    },\\n    zlevel: opts.zlevel,\\n    z: 10000\\n  });\\n  var arc = new graphic.Arc({\\n    shape: {\\n      startAngle: -PI / 2,\\n      endAngle: -PI / 2 + 0.1,\\n      r: 10\\n    },\\n    style: {\\n      stroke: opts.color,\\n      lineCap: 'round',\\n      lineWidth: 5\\n    },\\n    zlevel: opts.zlevel,\\n    z: 10001\\n  });\\n  var labelRect = new graphic.Rect({\\n    style: {\\n      fill: 'none',\\n      text: opts.text,\\n      textPosition: 'right',\\n      textDistance: 10,\\n      textFill: opts.textColor\\n    },\\n    zlevel: opts.zlevel,\\n    z: 10001\\n  });\\n  arc.animateShape(true).when(1000, {\\n    endAngle: PI * 3 / 2\\n  }).start('circularInOut');\\n  arc.animateShape(true).when(1000, {\\n    startAngle: PI * 3 / 2\\n  }).delay(300).start('circularInOut');\\n  var group = new graphic.Group();\\n  group.add(arc);\\n  group.add(labelRect);\\n  group.add(mask); // Inject resize\\n\\n  group.resize = function () {\\n    var cx = api.getWidth() / 2;\\n    var cy = api.getHeight() / 2;\\n    arc.setShape({\\n      cx: cx,\\n      cy: cy\\n    });\\n    var r = arc.shape.r;\\n    labelRect.setShape({\\n      x: cx - r,\\n      y: cy - r,\\n      width: r * 2,\\n      height: r * 2\\n    });\\n    mask.setShape({\\n      x: 0,\\n      y: 0,\\n      width: api.getWidth(),\\n      height: api.getHeight()\\n    });\\n  };\\n\\n  group.resize();\\n  return group;\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbG9hZGluZy9kZWZhdWx0LmpzPzk5OGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFNUMsY0FBYyxtQkFBTyxDQUFDLEVBQWlCOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QyxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIHpyVXRpbCA9IHJlcXVpcmUoXCJ6cmVuZGVyL2xpYi9jb3JlL3V0aWxcIik7XG5cbnZhciBncmFwaGljID0gcmVxdWlyZShcIi4uL3V0aWwvZ3JhcGhpY1wiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIFBJID0gTWF0aC5QSTtcbi8qKlxuICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9FeHRlbnNpb25BUEl9IGFwaVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRzXVxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRzLnRleHRdXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdHMuY29sb3JdXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdHMudGV4dENvbG9yXVxuICogQHJldHVybiB7bW9kdWxlOnpyZW5kZXIvRWxlbWVudH1cbiAqL1xuXG5mdW5jdGlvbiBfZGVmYXVsdChhcGksIG9wdHMpIHtcbiAgb3B0cyA9IG9wdHMgfHwge307XG4gIHpyVXRpbC5kZWZhdWx0cyhvcHRzLCB7XG4gICAgdGV4dDogJ2xvYWRpbmcnLFxuICAgIGNvbG9yOiAnI2MyMzUzMScsXG4gICAgdGV4dENvbG9yOiAnIzAwMCcsXG4gICAgbWFza0NvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpJyxcbiAgICB6bGV2ZWw6IDBcbiAgfSk7XG4gIHZhciBtYXNrID0gbmV3IGdyYXBoaWMuUmVjdCh7XG4gICAgc3R5bGU6IHtcbiAgICAgIGZpbGw6IG9wdHMubWFza0NvbG9yXG4gICAgfSxcbiAgICB6bGV2ZWw6IG9wdHMuemxldmVsLFxuICAgIHo6IDEwMDAwXG4gIH0pO1xuICB2YXIgYXJjID0gbmV3IGdyYXBoaWMuQXJjKHtcbiAgICBzaGFwZToge1xuICAgICAgc3RhcnRBbmdsZTogLVBJIC8gMixcbiAgICAgIGVuZEFuZ2xlOiAtUEkgLyAyICsgMC4xLFxuICAgICAgcjogMTBcbiAgICB9LFxuICAgIHN0eWxlOiB7XG4gICAgICBzdHJva2U6IG9wdHMuY29sb3IsXG4gICAgICBsaW5lQ2FwOiAncm91bmQnLFxuICAgICAgbGluZVdpZHRoOiA1XG4gICAgfSxcbiAgICB6bGV2ZWw6IG9wdHMuemxldmVsLFxuICAgIHo6IDEwMDAxXG4gIH0pO1xuICB2YXIgbGFiZWxSZWN0ID0gbmV3IGdyYXBoaWMuUmVjdCh7XG4gICAgc3R5bGU6IHtcbiAgICAgIGZpbGw6ICdub25lJyxcbiAgICAgIHRleHQ6IG9wdHMudGV4dCxcbiAgICAgIHRleHRQb3NpdGlvbjogJ3JpZ2h0JyxcbiAgICAgIHRleHREaXN0YW5jZTogMTAsXG4gICAgICB0ZXh0RmlsbDogb3B0cy50ZXh0Q29sb3JcbiAgICB9LFxuICAgIHpsZXZlbDogb3B0cy56bGV2ZWwsXG4gICAgejogMTAwMDFcbiAgfSk7XG4gIGFyYy5hbmltYXRlU2hhcGUodHJ1ZSkud2hlbigxMDAwLCB7XG4gICAgZW5kQW5nbGU6IFBJICogMyAvIDJcbiAgfSkuc3RhcnQoJ2NpcmN1bGFySW5PdXQnKTtcbiAgYXJjLmFuaW1hdGVTaGFwZSh0cnVlKS53aGVuKDEwMDAsIHtcbiAgICBzdGFydEFuZ2xlOiBQSSAqIDMgLyAyXG4gIH0pLmRlbGF5KDMwMCkuc3RhcnQoJ2NpcmN1bGFySW5PdXQnKTtcbiAgdmFyIGdyb3VwID0gbmV3IGdyYXBoaWMuR3JvdXAoKTtcbiAgZ3JvdXAuYWRkKGFyYyk7XG4gIGdyb3VwLmFkZChsYWJlbFJlY3QpO1xuICBncm91cC5hZGQobWFzayk7IC8vIEluamVjdCByZXNpemVcblxuICBncm91cC5yZXNpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGN4ID0gYXBpLmdldFdpZHRoKCkgLyAyO1xuICAgIHZhciBjeSA9IGFwaS5nZXRIZWlnaHQoKSAvIDI7XG4gICAgYXJjLnNldFNoYXBlKHtcbiAgICAgIGN4OiBjeCxcbiAgICAgIGN5OiBjeVxuICAgIH0pO1xuICAgIHZhciByID0gYXJjLnNoYXBlLnI7XG4gICAgbGFiZWxSZWN0LnNldFNoYXBlKHtcbiAgICAgIHg6IGN4IC0gcixcbiAgICAgIHk6IGN5IC0gcixcbiAgICAgIHdpZHRoOiByICogMixcbiAgICAgIGhlaWdodDogciAqIDJcbiAgICB9KTtcbiAgICBtYXNrLnNldFNoYXBlKHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgICAgd2lkdGg6IGFwaS5nZXRXaWR0aCgpLFxuICAgICAgaGVpZ2h0OiBhcGkuZ2V0SGVpZ2h0KClcbiAgICB9KTtcbiAgfTtcblxuICBncm91cC5yZXNpemUoKTtcbiAgcmV0dXJuIGdyb3VwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///234\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar each = _util.each;\\nvar map = _util.map;\\nvar isFunction = _util.isFunction;\\nvar createHashMap = _util.createHashMap;\\nvar noop = _util.noop;\\n\\nvar _task = __webpack_require__(108);\\n\\nvar createTask = _task.createTask;\\n\\nvar _component = __webpack_require__(90);\\n\\nvar getUID = _component.getUID;\\n\\nvar GlobalModel = __webpack_require__(139);\\n\\nvar ExtensionAPI = __webpack_require__(154);\\n\\nvar _model = __webpack_require__(60);\\n\\nvar normalizeToArray = _model.normalizeToArray;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @module echarts/stream/Scheduler\\n */\\n\\n/**\\n * @constructor\\n */\\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\\n  this.ecInstance = ecInstance;\\n  this.api = api;\\n  this.unfinished; // Fix current processors in case that in some rear cases that\\n  // processors might be registered after echarts instance created.\\n  // Register processors incrementally for a echarts instance is\\n  // not supported by this stream architecture.\\n\\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\\n  /**\\n   * @private\\n   * @type {\\n   *     [handlerUID: string]: {\\n   *         seriesTaskMap?: {\\n   *             [seriesUID: string]: Task\\n   *         },\\n   *         overallTask?: Task\\n   *     }\\n   * }\\n   */\\n\\n  this._stageTaskMap = createHashMap();\\n}\\n\\nvar proto = Scheduler.prototype;\\n/**\\n * @param {module:echarts/model/Global} ecModel\\n * @param {Object} payload\\n */\\n\\nproto.restoreData = function (ecModel, payload) {\\n  // TODO: Only restroe needed series and components, but not all components.\\n  // Currently `restoreData` of all of the series and component will be called.\\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\\n  // and some components like coordinate system, axes, dataZoom, visualMap only\\n  // need their target series refresh.\\n  // (1) If we are implementing this feature some day, we should consider these cases:\\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\\n  // on the settings of `dataZoom`), it should be re-performed if the component\\n  // is modified by `setOption`.\\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\\n  // it should be re-performed when the result array of `getTargetSeries` changed.\\n  // We use `dependencies` to cover these issues.\\n  // (3) How to update target series when coordinate system related components modified.\\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\\n  // and this case all of the tasks will be set as dirty.\\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\\n  // depends on all of the series.\\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\\n  // probably cause state chaos (consider `dataZoomProcessor`).\\n\\n  this._stageTaskMap.each(function (taskRecord) {\\n    var overallTask = taskRecord.overallTask;\\n    overallTask && overallTask.dirty();\\n  });\\n}; // If seriesModel provided, incremental threshold is check by series data.\\n\\n\\nproto.getPerformArgs = function (task, isBlock) {\\n  // For overall task\\n  if (!task.__pipeline) {\\n    return;\\n  }\\n\\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\\n\\n  var pCtx = pipeline.context;\\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\\n  var step = incremental ? pipeline.step : null;\\n  var modDataCount = pCtx && pCtx.modDataCount;\\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\\n  return {\\n    step: step,\\n    modBy: modBy,\\n    modDataCount: modDataCount\\n  };\\n};\\n\\nproto.getPipeline = function (pipelineId) {\\n  return this._pipelineMap.get(pipelineId);\\n};\\n/**\\n * Current, progressive rendering starts from visual and layout.\\n * Always detect render mode in the same stage, avoiding that incorrect\\n * detection caused by data filtering.\\n * Caution:\\n * `updateStreamModes` use `seriesModel.getData()`.\\n */\\n\\n\\nproto.updateStreamModes = function (seriesModel, view) {\\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\\n\\n  var data = seriesModel.getData();\\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\\n  // animation frame. Note that some types of series do not provide\\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\\n  // use the term `incremental` but not `progressive` to describe the\\n  // case that `chart.appendData`.\\n\\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\\n  // see `test/candlestick-large3.html`\\n\\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\\n  seriesModel.pipelineContext = pipeline.context = {\\n    progressiveRender: progressiveRender,\\n    modDataCount: modDataCount,\\n    large: large\\n  };\\n};\\n\\nproto.restorePipelines = function (ecModel) {\\n  var scheduler = this;\\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\\n  ecModel.eachSeries(function (seriesModel) {\\n    var progressive = seriesModel.getProgressive();\\n    var pipelineId = seriesModel.uid;\\n    pipelineMap.set(pipelineId, {\\n      id: pipelineId,\\n      head: null,\\n      tail: null,\\n      threshold: seriesModel.getProgressiveThreshold(),\\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\\n      blockIndex: -1,\\n      step: Math.round(progressive || 700),\\n      count: 0\\n    });\\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\\n  });\\n};\\n\\nproto.prepareStageTasks = function () {\\n  var stageTaskMap = this._stageTaskMap;\\n  var ecModel = this.ecInstance.getModel();\\n  var api = this.api;\\n  each(this._allHandlers, function (handler) {\\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\\n  }, this);\\n};\\n\\nproto.prepareView = function (view, model, ecModel, api) {\\n  var renderTask = view.renderTask;\\n  var context = renderTask.context;\\n  context.model = model;\\n  context.ecModel = ecModel;\\n  context.api = api;\\n  renderTask.__block = !view.incrementalPrepareRender;\\n  pipe(this, model, renderTask);\\n};\\n\\nproto.performDataProcessorTasks = function (ecModel, payload) {\\n  // If we do not use `block` here, it should be considered when to update modes.\\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\\n    block: true\\n  });\\n}; // opt\\n// opt.visualType: 'visual' or 'layout'\\n// opt.setDirty\\n\\n\\nproto.performVisualTasks = function (ecModel, payload, opt) {\\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\\n};\\n\\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\\n  opt = opt || {};\\n  var unfinished;\\n  each(stageHandlers, function (stageHandler, idx) {\\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\\n      return;\\n    }\\n\\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\\n\\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\\n    var overallTask = stageHandlerRecord.overallTask;\\n\\n    if (overallTask) {\\n      var overallNeedDirty;\\n      var agentStubMap = overallTask.agentStubMap;\\n      agentStubMap.each(function (stub) {\\n        if (needSetDirty(opt, stub)) {\\n          stub.dirty();\\n          overallNeedDirty = true;\\n        }\\n      });\\n      overallNeedDirty && overallTask.dirty();\\n      updatePayload(overallTask, payload);\\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\\n      // then execute the overall task. And stub will call seriesModel.setData,\\n      // which ensures that in the overallTask seriesModel.getData() will not\\n      // return incorrect data.\\n\\n      agentStubMap.each(function (stub) {\\n        stub.perform(performArgs);\\n      });\\n      unfinished |= overallTask.perform(performArgs);\\n    } else if (seriesTaskMap) {\\n      seriesTaskMap.each(function (task, pipelineId) {\\n        if (needSetDirty(opt, task)) {\\n          task.dirty();\\n        }\\n\\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\\n        updatePayload(task, payload);\\n        unfinished |= task.perform(performArgs);\\n      });\\n    }\\n  });\\n\\n  function needSetDirty(opt, task) {\\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\\n  }\\n\\n  scheduler.unfinished |= unfinished;\\n}\\n\\nproto.performSeriesTasks = function (ecModel) {\\n  var unfinished;\\n  ecModel.eachSeries(function (seriesModel) {\\n    // Progress to the end for dataInit and dataRestore.\\n    unfinished |= seriesModel.dataTask.perform();\\n  });\\n  this.unfinished |= unfinished;\\n};\\n\\nproto.plan = function () {\\n  // Travel pipelines, check block.\\n  this._pipelineMap.each(function (pipeline) {\\n    var task = pipeline.tail;\\n\\n    do {\\n      if (task.__block) {\\n        pipeline.blockIndex = task.__idxInPipeline;\\n        break;\\n      }\\n\\n      task = task.getUpstream();\\n    } while (task);\\n  });\\n};\\n\\nvar updatePayload = proto.updatePayload = function (task, payload) {\\n  payload !== 'remain' && (task.context.payload = payload);\\n};\\n\\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\\n  var seriesType = stageHandler.seriesType;\\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\\n  // it works but it may cause other irrelevant charts blocked.\\n\\n  if (stageHandler.createOnAllSeries) {\\n    ecModel.eachRawSeries(create);\\n  } else if (seriesType) {\\n    ecModel.eachRawSeriesByType(seriesType, create);\\n  } else if (getTargetSeries) {\\n    getTargetSeries(ecModel, api).each(create);\\n  }\\n\\n  function create(seriesModel) {\\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\\n    // Reuse original task instance.\\n\\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\\n      plan: seriesTaskPlan,\\n      reset: seriesTaskReset,\\n      count: seriesTaskCount\\n    }));\\n    task.context = {\\n      model: seriesModel,\\n      ecModel: ecModel,\\n      api: api,\\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\\n      plan: stageHandler.plan,\\n      reset: stageHandler.reset,\\n      scheduler: scheduler\\n    };\\n    pipe(scheduler, seriesModel, task);\\n  } // Clear unused series tasks.\\n\\n\\n  var pipelineMap = scheduler._pipelineMap;\\n  seriesTaskMap.each(function (task, pipelineId) {\\n    if (!pipelineMap.get(pipelineId)) {\\n      task.dispose();\\n      seriesTaskMap.removeKey(pipelineId);\\n    }\\n  });\\n}\\n\\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\\n  || createTask({\\n    reset: overallTaskReset\\n  });\\n  overallTask.context = {\\n    ecModel: ecModel,\\n    api: api,\\n    overallReset: stageHandler.overallReset,\\n    scheduler: scheduler\\n  }; // Reuse orignal stubs.\\n\\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\\n  var seriesType = stageHandler.seriesType;\\n  var getTargetSeries = stageHandler.getTargetSeries;\\n  var overallProgress = true;\\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\\n  // we set the pipeline block.\\n\\n  if (seriesType) {\\n    ecModel.eachRawSeriesByType(seriesType, createStub);\\n  } else if (getTargetSeries) {\\n    getTargetSeries(ecModel, api).each(createStub);\\n  } // Otherwise, (usually it is legancy case), the overall task will only be\\n  // executed when upstream dirty. Otherwise the progressive rendering of all\\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\\n  // dirty info from upsteam.\\n  else {\\n      overallProgress = false;\\n      each(ecModel.getSeries(), createStub);\\n    }\\n\\n  function createStub(seriesModel) {\\n    var pipelineId = seriesModel.uid;\\n    var stub = agentStubMap.get(pipelineId);\\n\\n    if (!stub) {\\n      stub = agentStubMap.set(pipelineId, createTask({\\n        reset: stubReset,\\n        onDirty: stubOnDirty\\n      })); // When the result of `getTargetSeries` changed, the overallTask\\n      // should be set as dirty and re-performed.\\n\\n      overallTask.dirty();\\n    }\\n\\n    stub.context = {\\n      model: seriesModel,\\n      overallProgress: overallProgress,\\n      modifyOutputEnd: modifyOutputEnd\\n    };\\n    stub.agent = overallTask;\\n    stub.__block = overallProgress;\\n    pipe(scheduler, seriesModel, stub);\\n  } // Clear unused stubs.\\n\\n\\n  var pipelineMap = scheduler._pipelineMap;\\n  agentStubMap.each(function (stub, pipelineId) {\\n    if (!pipelineMap.get(pipelineId)) {\\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\\n      // should be set as dirty and re-performed.\\n\\n      overallTask.dirty();\\n      agentStubMap.removeKey(pipelineId);\\n    }\\n  });\\n}\\n\\nfunction overallTaskReset(context) {\\n  context.overallReset(context.ecModel, context.api, context.payload);\\n}\\n\\nfunction stubReset(context, upstreamContext) {\\n  return context.overallProgress && stubProgress;\\n}\\n\\nfunction stubProgress() {\\n  this.agent.dirty();\\n  this.getDownstream().dirty();\\n}\\n\\nfunction stubOnDirty() {\\n  this.agent && this.agent.dirty();\\n}\\n\\nfunction seriesTaskPlan(context) {\\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\\n}\\n\\nfunction seriesTaskReset(context) {\\n  if (context.useClearVisual) {\\n    context.data.clearAllVisual();\\n  }\\n\\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\\n    return makeSeriesTaskProgress(idx);\\n  }) : singleSeriesTaskProgress;\\n}\\n\\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\\n\\nfunction makeSeriesTaskProgress(resetDefineIdx) {\\n  return function (params, context) {\\n    var data = context.data;\\n    var resetDefine = context.resetDefines[resetDefineIdx];\\n\\n    if (resetDefine && resetDefine.dataEach) {\\n      for (var i = params.start; i < params.end; i++) {\\n        resetDefine.dataEach(data, i);\\n      }\\n    } else if (resetDefine && resetDefine.progress) {\\n      resetDefine.progress(params, data);\\n    }\\n  };\\n}\\n\\nfunction seriesTaskCount(context) {\\n  return context.data.count();\\n}\\n\\nfunction pipe(scheduler, seriesModel, task) {\\n  var pipelineId = seriesModel.uid;\\n\\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\\n\\n  !pipeline.head && (pipeline.head = task);\\n  pipeline.tail && pipeline.tail.pipe(task);\\n  pipeline.tail = task;\\n  task.__idxInPipeline = pipeline.count++;\\n  task.__pipeline = pipeline;\\n}\\n\\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\\n  if (isFunction(stageHandler)) {\\n    stageHandler = {\\n      overallReset: stageHandler,\\n      seriesType: detectSeriseType(stageHandler)\\n    };\\n  }\\n\\n  stageHandler.uid = getUID('stageHandler');\\n  visualType && (stageHandler.visualType = visualType);\\n  return stageHandler;\\n};\\n/**\\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\\n * To ensure that they can work normally, they should work in block mode, that is,\\n * they should not be started util the previous tasks finished. So they cause the\\n * progressive rendering disabled. We try to detect the series type, to narrow down\\n * the block range to only the series type they concern, but not all series.\\n */\\n\\n\\nfunction detectSeriseType(legacyFunc) {\\n  seriesType = null;\\n\\n  try {\\n    // Assume there is no async when calling `eachSeriesByType`.\\n    legacyFunc(ecModelMock, apiMock);\\n  } catch (e) {}\\n\\n  return seriesType;\\n}\\n\\nvar ecModelMock = {};\\nvar apiMock = {};\\nvar seriesType;\\nmockMethods(ecModelMock, GlobalModel);\\nmockMethods(apiMock, ExtensionAPI);\\n\\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\\n  seriesType = type;\\n};\\n\\necModelMock.eachComponent = function (cond) {\\n  if (cond.mainType === 'series' && cond.subType) {\\n    seriesType = cond.subType;\\n  }\\n};\\n\\nfunction mockMethods(target, Clz) {\\n  /* eslint-disable */\\n  for (var name in Clz.prototype) {\\n    // Do not use hasOwnProperty\\n    target[name] = noop;\\n  }\\n  /* eslint-enable */\\n\\n}\\n\\nvar _default = Scheduler;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///235\\n\")},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\\nvar _default = {\\n  color: colorAll,\\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvdGhlbWUvbGlnaHQuanM/YzUzMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBjb2xvckFsbCA9IFsnIzM3QTJEQScsICcjMzJDNUU5JywgJyM2N0UwRTMnLCAnIzlGRTZCOCcsICcjRkZEQjVDJywgJyNmZjlmN2YnLCAnI2ZiNzI5MycsICcjRTA2MkFFJywgJyNFNjkwRDEnLCAnI2U3YmNmMycsICcjOWQ5NmY1JywgJyM4Mzc4RUEnLCAnIzk2QkZGRiddO1xudmFyIF9kZWZhdWx0ID0ge1xuICBjb2xvcjogY29sb3JBbGwsXG4gIGNvbG9yTGF5ZXI6IFtbJyMzN0EyREEnLCAnI2ZmZDg1YycsICcjZmQ3YjVmJ10sIFsnIzM3QTJEQScsICcjNjdFMEUzJywgJyNGRkRCNUMnLCAnI2ZmOWY3ZicsICcjRTA2MkFFJywgJyM5ZDk2ZjUnXSwgWycjMzdBMkRBJywgJyMzMkM1RTknLCAnIzlGRTZCOCcsICcjRkZEQjVDJywgJyNmZjlmN2YnLCAnI2ZiNzI5MycsICcjZTdiY2YzJywgJyM4Mzc4RUEnLCAnIzk2QkZGRiddLCBjb2xvckFsbF1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///236\\n\")},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar contrastColor = '#eee';\\n\\nvar axisCommon = function () {\\n  return {\\n    axisLine: {\\n      lineStyle: {\\n        color: contrastColor\\n      }\\n    },\\n    axisTick: {\\n      lineStyle: {\\n        color: contrastColor\\n      }\\n    },\\n    axisLabel: {\\n      textStyle: {\\n        color: contrastColor\\n      }\\n    },\\n    splitLine: {\\n      lineStyle: {\\n        type: 'dashed',\\n        color: '#aaa'\\n      }\\n    },\\n    splitArea: {\\n      areaStyle: {\\n        color: contrastColor\\n      }\\n    }\\n  };\\n};\\n\\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\\nvar theme = {\\n  color: colorPalette,\\n  backgroundColor: '#333',\\n  tooltip: {\\n    axisPointer: {\\n      lineStyle: {\\n        color: contrastColor\\n      },\\n      crossStyle: {\\n        color: contrastColor\\n      }\\n    }\\n  },\\n  legend: {\\n    textStyle: {\\n      color: contrastColor\\n    }\\n  },\\n  textStyle: {\\n    color: contrastColor\\n  },\\n  title: {\\n    textStyle: {\\n      color: contrastColor\\n    }\\n  },\\n  toolbox: {\\n    iconStyle: {\\n      normal: {\\n        borderColor: contrastColor\\n      }\\n    }\\n  },\\n  dataZoom: {\\n    textStyle: {\\n      color: contrastColor\\n    }\\n  },\\n  visualMap: {\\n    textStyle: {\\n      color: contrastColor\\n    }\\n  },\\n  timeline: {\\n    lineStyle: {\\n      color: contrastColor\\n    },\\n    itemStyle: {\\n      normal: {\\n        color: colorPalette[1]\\n      }\\n    },\\n    label: {\\n      normal: {\\n        textStyle: {\\n          color: contrastColor\\n        }\\n      }\\n    },\\n    controlStyle: {\\n      normal: {\\n        color: contrastColor,\\n        borderColor: contrastColor\\n      }\\n    }\\n  },\\n  timeAxis: axisCommon(),\\n  logAxis: axisCommon(),\\n  valueAxis: axisCommon(),\\n  categoryAxis: axisCommon(),\\n  line: {\\n    symbol: 'circle'\\n  },\\n  graph: {\\n    color: colorPalette\\n  },\\n  gauge: {\\n    title: {\\n      textStyle: {\\n        color: contrastColor\\n      }\\n    }\\n  },\\n  candlestick: {\\n    itemStyle: {\\n      normal: {\\n        color: '#FD1050',\\n        color0: '#0CF49B',\\n        borderColor: '#FD1050',\\n        borderColor0: '#0CF49B'\\n      }\\n    }\\n  }\\n};\\ntheme.categoryAxis.splitLine.show = false;\\nvar _default = theme;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvdGhlbWUvZGFyay5qcz9mMjE5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjM3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBjb250cmFzdENvbG9yID0gJyNlZWUnO1xuXG52YXIgYXhpc0NvbW1vbiA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHtcbiAgICBheGlzTGluZToge1xuICAgICAgbGluZVN0eWxlOiB7XG4gICAgICAgIGNvbG9yOiBjb250cmFzdENvbG9yXG4gICAgICB9XG4gICAgfSxcbiAgICBheGlzVGljazoge1xuICAgICAgbGluZVN0eWxlOiB7XG4gICAgICAgIGNvbG9yOiBjb250cmFzdENvbG9yXG4gICAgICB9XG4gICAgfSxcbiAgICBheGlzTGFiZWw6IHtcbiAgICAgIHRleHRTdHlsZToge1xuICAgICAgICBjb2xvcjogY29udHJhc3RDb2xvclxuICAgICAgfVxuICAgIH0sXG4gICAgc3BsaXRMaW5lOiB7XG4gICAgICBsaW5lU3R5bGU6IHtcbiAgICAgICAgdHlwZTogJ2Rhc2hlZCcsXG4gICAgICAgIGNvbG9yOiAnI2FhYSdcbiAgICAgIH1cbiAgICB9LFxuICAgIHNwbGl0QXJlYToge1xuICAgICAgYXJlYVN0eWxlOiB7XG4gICAgICAgIGNvbG9yOiBjb250cmFzdENvbG9yXG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcblxudmFyIGNvbG9yUGFsZXR0ZSA9IFsnI2RkNmI2NicsICcjNzU5YWEwJywgJyNlNjlkODcnLCAnIzhkYzFhOScsICcjZWE3ZTUzJywgJyNlZWRkNzgnLCAnIzczYTM3MycsICcjNzNiOWJjJywgJyM3Mjg5YWInLCAnIzkxY2E4YycsICcjZjQ5ZjQyJ107XG52YXIgdGhlbWUgPSB7XG4gIGNvbG9yOiBjb2xvclBhbGV0dGUsXG4gIGJhY2tncm91bmRDb2xvcjogJyMzMzMnLFxuICB0b29sdGlwOiB7XG4gICAgYXhpc1BvaW50ZXI6IHtcbiAgICAgIGxpbmVTdHlsZToge1xuICAgICAgICBjb2xvcjogY29udHJhc3RDb2xvclxuICAgICAgfSxcbiAgICAgIGNyb3NzU3R5bGU6IHtcbiAgICAgICAgY29sb3I6IGNvbnRyYXN0Q29sb3JcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIGxlZ2VuZDoge1xuICAgIHRleHRTdHlsZToge1xuICAgICAgY29sb3I6IGNvbnRyYXN0Q29sb3JcbiAgICB9XG4gIH0sXG4gIHRleHRTdHlsZToge1xuICAgIGNvbG9yOiBjb250cmFzdENvbG9yXG4gIH0sXG4gIHRpdGxlOiB7XG4gICAgdGV4dFN0eWxlOiB7XG4gICAgICBjb2xvcjogY29udHJhc3RDb2xvclxuICAgIH1cbiAgfSxcbiAgdG9vbGJveDoge1xuICAgIGljb25TdHlsZToge1xuICAgICAgbm9ybWFsOiB7XG4gICAgICAgIGJvcmRlckNvbG9yOiBjb250cmFzdENvbG9yXG4gICAgICB9XG4gICAgfVxuICB9LFxuICBkYXRhWm9vbToge1xuICAgIHRleHRTdHlsZToge1xuICAgICAgY29sb3I6IGNvbnRyYXN0Q29sb3JcbiAgICB9XG4gIH0sXG4gIHZpc3VhbE1hcDoge1xuICAgIHRleHRTdHlsZToge1xuICAgICAgY29sb3I6IGNvbnRyYXN0Q29sb3JcbiAgICB9XG4gIH0sXG4gIHRpbWVsaW5lOiB7XG4gICAgbGluZVN0eWxlOiB7XG4gICAgICBjb2xvcjogY29udHJhc3RDb2xvclxuICAgIH0sXG4gICAgaXRlbVN0eWxlOiB7XG4gICAgICBub3JtYWw6IHtcbiAgICAgICAgY29sb3I6IGNvbG9yUGFsZXR0ZVsxXVxuICAgICAgfVxuICAgIH0sXG4gICAgbGFiZWw6IHtcbiAgICAgIG5vcm1hbDoge1xuICAgICAgICB0ZXh0U3R5bGU6IHtcbiAgICAgICAgICBjb2xvcjogY29udHJhc3RDb2xvclxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBjb250cm9sU3R5bGU6IHtcbiAgICAgIG5vcm1hbDoge1xuICAgICAgICBjb2xvcjogY29udHJhc3RDb2xvcixcbiAgICAgICAgYm9yZGVyQ29sb3I6IGNvbnRyYXN0Q29sb3JcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHRpbWVBeGlzOiBheGlzQ29tbW9uKCksXG4gIGxvZ0F4aXM6IGF4aXNDb21tb24oKSxcbiAgdmFsdWVBeGlzOiBheGlzQ29tbW9uKCksXG4gIGNhdGVnb3J5QXhpczogYXhpc0NvbW1vbigpLFxuICBsaW5lOiB7XG4gICAgc3ltYm9sOiAnY2lyY2xlJ1xuICB9LFxuICBncmFwaDoge1xuICAgIGNvbG9yOiBjb2xvclBhbGV0dGVcbiAgfSxcbiAgZ2F1Z2U6IHtcbiAgICB0aXRsZToge1xuICAgICAgdGV4dFN0eWxlOiB7XG4gICAgICAgIGNvbG9yOiBjb250cmFzdENvbG9yXG4gICAgICB9XG4gICAgfVxuICB9LFxuICBjYW5kbGVzdGljazoge1xuICAgIGl0ZW1TdHlsZToge1xuICAgICAgbm9ybWFsOiB7XG4gICAgICAgIGNvbG9yOiAnI0ZEMTA1MCcsXG4gICAgICAgIGNvbG9yMDogJyMwQ0Y0OUInLFxuICAgICAgICBib3JkZXJDb2xvcjogJyNGRDEwNTAnLFxuICAgICAgICBib3JkZXJDb2xvcjA6ICcjMENGNDlCJ1xuICAgICAgfVxuICAgIH1cbiAgfVxufTtcbnRoZW1lLmNhdGVnb3J5QXhpcy5zcGxpdExpbmUuc2hvdyA9IGZhbHNlO1xudmFyIF9kZWZhdWx0ID0gdGhlbWU7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///237\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar ComponentModel = __webpack_require__(72);\\n\\nvar ComponentView = __webpack_require__(156);\\n\\nvar _sourceHelper = __webpack_require__(91);\\n\\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\\n\\nvar _sourceType = __webpack_require__(84);\\n\\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * This module is imported by echarts directly.\\n *\\n * Notice:\\n * Always keep this file exists for backward compatibility.\\n * Because before 4.1.0, dataset is an optional component,\\n * some users may import this module manually.\\n */\\nComponentModel.extend({\\n  type: 'dataset',\\n\\n  /**\\n   * @protected\\n   */\\n  defaultOption: {\\n    // 'row', 'column'\\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\\n    // null/'auto': auto detect header, see \\\"module:echarts/data/helper/sourceHelper\\\"\\n    sourceHeader: null,\\n    dimensions: null,\\n    source: null\\n  },\\n  optionUpdated: function () {\\n    detectSourceFormat(this);\\n  }\\n});\\nComponentView.extend({\\n  type: 'dataset'\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2RhdGFzZXQuanM/MDM1MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLG1CQUFPLENBQUMsRUFBb0I7O0FBRWpELG9CQUFvQixtQkFBTyxDQUFDLEdBQW1COztBQUUvQyxvQkFBb0IsbUJBQU8sQ0FBQyxFQUE2Qjs7QUFFekQ7O0FBRUEsa0JBQWtCLG1CQUFPLENBQUMsRUFBMkI7O0FBRXJEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIyMzguanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIENvbXBvbmVudE1vZGVsID0gcmVxdWlyZShcIi4uL21vZGVsL0NvbXBvbmVudFwiKTtcblxudmFyIENvbXBvbmVudFZpZXcgPSByZXF1aXJlKFwiLi4vdmlldy9Db21wb25lbnRcIik7XG5cbnZhciBfc291cmNlSGVscGVyID0gcmVxdWlyZShcIi4uL2RhdGEvaGVscGVyL3NvdXJjZUhlbHBlclwiKTtcblxudmFyIGRldGVjdFNvdXJjZUZvcm1hdCA9IF9zb3VyY2VIZWxwZXIuZGV0ZWN0U291cmNlRm9ybWF0O1xuXG52YXIgX3NvdXJjZVR5cGUgPSByZXF1aXJlKFwiLi4vZGF0YS9oZWxwZXIvc291cmNlVHlwZVwiKTtcblxudmFyIFNFUklFU19MQVlPVVRfQllfQ09MVU1OID0gX3NvdXJjZVR5cGUuU0VSSUVTX0xBWU9VVF9CWV9DT0xVTU47XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyoqXG4gKiBUaGlzIG1vZHVsZSBpcyBpbXBvcnRlZCBieSBlY2hhcnRzIGRpcmVjdGx5LlxuICpcbiAqIE5vdGljZTpcbiAqIEFsd2F5cyBrZWVwIHRoaXMgZmlsZSBleGlzdHMgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkuXG4gKiBCZWNhdXNlIGJlZm9yZSA0LjEuMCwgZGF0YXNldCBpcyBhbiBvcHRpb25hbCBjb21wb25lbnQsXG4gKiBzb21lIHVzZXJzIG1heSBpbXBvcnQgdGhpcyBtb2R1bGUgbWFudWFsbHkuXG4gKi9cbkNvbXBvbmVudE1vZGVsLmV4dGVuZCh7XG4gIHR5cGU6ICdkYXRhc2V0JyxcblxuICAvKipcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgZGVmYXVsdE9wdGlvbjoge1xuICAgIC8vICdyb3cnLCAnY29sdW1uJ1xuICAgIHNlcmllc0xheW91dEJ5OiBTRVJJRVNfTEFZT1VUX0JZX0NPTFVNTixcbiAgICAvLyBudWxsLydhdXRvJzogYXV0byBkZXRlY3QgaGVhZGVyLCBzZWUgXCJtb2R1bGU6ZWNoYXJ0cy9kYXRhL2hlbHBlci9zb3VyY2VIZWxwZXJcIlxuICAgIHNvdXJjZUhlYWRlcjogbnVsbCxcbiAgICBkaW1lbnNpb25zOiBudWxsLFxuICAgIHNvdXJjZTogbnVsbFxuICB9LFxuICBvcHRpb25VcGRhdGVkOiBmdW5jdGlvbiAoKSB7XG4gICAgZGV0ZWN0U291cmNlRm9ybWF0KHRoaXMpO1xuICB9XG59KTtcbkNvbXBvbmVudFZpZXcuZXh0ZW5kKHtcbiAgdHlwZTogJ2RhdGFzZXQnXG59KTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///238\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar _util = __webpack_require__(59);\\n\\nvar createHashMap = _util.createHashMap;\\nvar isString = _util.isString;\\nvar isArray = _util.isArray;\\nvar each = _util.each;\\nvar assert = _util.assert;\\n\\nvar _parseSVG = __webpack_require__(240);\\n\\nvar parseXML = _parseSVG.parseXML;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\\n// do not put too much logic in this module.\\n\\nvar _default = {\\n  // The format of record: see `echarts.registerMap`.\\n  // Compatible with previous `echarts.registerMap`.\\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\\n    var records;\\n\\n    if (isArray(rawGeoJson)) {\\n      records = rawGeoJson;\\n    } else if (rawGeoJson.svg) {\\n      records = [{\\n        type: 'svg',\\n        source: rawGeoJson.svg,\\n        specialAreas: rawGeoJson.specialAreas\\n      }];\\n    } else {\\n      // Backward compatibility.\\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\\n        rawSpecialAreas = rawGeoJson.specialAreas;\\n        rawGeoJson = rawGeoJson.geoJson;\\n      }\\n\\n      records = [{\\n        type: 'geoJSON',\\n        source: rawGeoJson,\\n        specialAreas: rawSpecialAreas\\n      }];\\n    }\\n\\n    each(records, function (record) {\\n      var type = record.type;\\n      type === 'geoJson' && (type = record.type = 'geoJSON');\\n      var parse = parsers[type];\\n      parse(record);\\n    });\\n    return storage.set(mapName, records);\\n  },\\n  retrieveMap: function (mapName) {\\n    return storage.get(mapName);\\n  }\\n};\\nvar parsers = {\\n  geoJSON: function (record) {\\n    var source = record.source;\\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\\n  },\\n  // Only perform parse to XML object here, which might be time\\n  // consiming for large SVG.\\n  // Although convert XML to zrender element is also time consiming,\\n  // if we do it here, the clone of zrender elements has to be\\n  // required. So we do it once for each geo instance, util real\\n  // performance issues call for optimizing it.\\n  svg: function (record) {\\n    record.svgXML = parseXML(record.source);\\n  }\\n};\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvZ2VvL21hcERhdGFTdG9yYWdlLmpzP2VjMzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxFQUFjOztBQUVwQzs7QUFFQSxZQUFZLG1CQUFPLENBQUMsRUFBdUI7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsR0FBMkI7O0FBRW5EOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUpBQXlKO0FBQ3pKLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIzOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgX2NvbmZpZyA9IHJlcXVpcmUoXCIuLi8uLi9jb25maWdcIik7XG5cbnZhciBfX0RFVl9fID0gX2NvbmZpZy5fX0RFVl9fO1xuXG52YXIgX3V0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgY3JlYXRlSGFzaE1hcCA9IF91dGlsLmNyZWF0ZUhhc2hNYXA7XG52YXIgaXNTdHJpbmcgPSBfdXRpbC5pc1N0cmluZztcbnZhciBpc0FycmF5ID0gX3V0aWwuaXNBcnJheTtcbnZhciBlYWNoID0gX3V0aWwuZWFjaDtcbnZhciBhc3NlcnQgPSBfdXRpbC5hc3NlcnQ7XG5cbnZhciBfcGFyc2VTVkcgPSByZXF1aXJlKFwienJlbmRlci9saWIvdG9vbC9wYXJzZVNWR1wiKTtcblxudmFyIHBhcnNlWE1MID0gX3BhcnNlU1ZHLnBhcnNlWE1MO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG52YXIgc3RvcmFnZSA9IGNyZWF0ZUhhc2hNYXAoKTsgLy8gRm9yIG1pbmltaXplIHRoZSBjb2RlIHNpemUgb2YgY29tbW9uIGVjaGFydHMgcGFja2FnZSxcbi8vIGRvIG5vdCBwdXQgdG9vIG11Y2ggbG9naWMgaW4gdGhpcyBtb2R1bGUuXG5cbnZhciBfZGVmYXVsdCA9IHtcbiAgLy8gVGhlIGZvcm1hdCBvZiByZWNvcmQ6IHNlZSBgZWNoYXJ0cy5yZWdpc3Rlck1hcGAuXG4gIC8vIENvbXBhdGlibGUgd2l0aCBwcmV2aW91cyBgZWNoYXJ0cy5yZWdpc3Rlck1hcGAuXG4gIHJlZ2lzdGVyTWFwOiBmdW5jdGlvbiAobWFwTmFtZSwgcmF3R2VvSnNvbiwgcmF3U3BlY2lhbEFyZWFzKSB7XG4gICAgdmFyIHJlY29yZHM7XG5cbiAgICBpZiAoaXNBcnJheShyYXdHZW9Kc29uKSkge1xuICAgICAgcmVjb3JkcyA9IHJhd0dlb0pzb247XG4gICAgfSBlbHNlIGlmIChyYXdHZW9Kc29uLnN2Zykge1xuICAgICAgcmVjb3JkcyA9IFt7XG4gICAgICAgIHR5cGU6ICdzdmcnLFxuICAgICAgICBzb3VyY2U6IHJhd0dlb0pzb24uc3ZnLFxuICAgICAgICBzcGVjaWFsQXJlYXM6IHJhd0dlb0pzb24uc3BlY2lhbEFyZWFzXG4gICAgICB9XTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQmFja3dhcmQgY29tcGF0aWJpbGl0eS5cbiAgICAgIGlmIChyYXdHZW9Kc29uLmdlb0pzb24gJiYgIXJhd0dlb0pzb24uZmVhdHVyZXMpIHtcbiAgICAgICAgcmF3U3BlY2lhbEFyZWFzID0gcmF3R2VvSnNvbi5zcGVjaWFsQXJlYXM7XG4gICAgICAgIHJhd0dlb0pzb24gPSByYXdHZW9Kc29uLmdlb0pzb247XG4gICAgICB9XG5cbiAgICAgIHJlY29yZHMgPSBbe1xuICAgICAgICB0eXBlOiAnZ2VvSlNPTicsXG4gICAgICAgIHNvdXJjZTogcmF3R2VvSnNvbixcbiAgICAgICAgc3BlY2lhbEFyZWFzOiByYXdTcGVjaWFsQXJlYXNcbiAgICAgIH1dO1xuICAgIH1cblxuICAgIGVhY2gocmVjb3JkcywgZnVuY3Rpb24gKHJlY29yZCkge1xuICAgICAgdmFyIHR5cGUgPSByZWNvcmQudHlwZTtcbiAgICAgIHR5cGUgPT09ICdnZW9Kc29uJyAmJiAodHlwZSA9IHJlY29yZC50eXBlID0gJ2dlb0pTT04nKTtcbiAgICAgIHZhciBwYXJzZSA9IHBhcnNlcnNbdHlwZV07XG4gICAgICBwYXJzZShyZWNvcmQpO1xuICAgIH0pO1xuICAgIHJldHVybiBzdG9yYWdlLnNldChtYXBOYW1lLCByZWNvcmRzKTtcbiAgfSxcbiAgcmV0cmlldmVNYXA6IGZ1bmN0aW9uIChtYXBOYW1lKSB7XG4gICAgcmV0dXJuIHN0b3JhZ2UuZ2V0KG1hcE5hbWUpO1xuICB9XG59O1xudmFyIHBhcnNlcnMgPSB7XG4gIGdlb0pTT046IGZ1bmN0aW9uIChyZWNvcmQpIHtcbiAgICB2YXIgc291cmNlID0gcmVjb3JkLnNvdXJjZTtcbiAgICByZWNvcmQuZ2VvSlNPTiA9ICFpc1N0cmluZyhzb3VyY2UpID8gc291cmNlIDogdHlwZW9mIEpTT04gIT09ICd1bmRlZmluZWQnICYmIEpTT04ucGFyc2UgPyBKU09OLnBhcnNlKHNvdXJjZSkgOiBuZXcgRnVuY3Rpb24oJ3JldHVybiAoJyArIHNvdXJjZSArICcpOycpKCk7XG4gIH0sXG4gIC8vIE9ubHkgcGVyZm9ybSBwYXJzZSB0byBYTUwgb2JqZWN0IGhlcmUsIHdoaWNoIG1pZ2h0IGJlIHRpbWVcbiAgLy8gY29uc2ltaW5nIGZvciBsYXJnZSBTVkcuXG4gIC8vIEFsdGhvdWdoIGNvbnZlcnQgWE1MIHRvIHpyZW5kZXIgZWxlbWVudCBpcyBhbHNvIHRpbWUgY29uc2ltaW5nLFxuICAvLyBpZiB3ZSBkbyBpdCBoZXJlLCB0aGUgY2xvbmUgb2YgenJlbmRlciBlbGVtZW50cyBoYXMgdG8gYmVcbiAgLy8gcmVxdWlyZWQuIFNvIHdlIGRvIGl0IG9uY2UgZm9yIGVhY2ggZ2VvIGluc3RhbmNlLCB1dGlsIHJlYWxcbiAgLy8gcGVyZm9ybWFuY2UgaXNzdWVzIGNhbGwgZm9yIG9wdGltaXppbmcgaXQuXG4gIHN2ZzogZnVuY3Rpb24gKHJlY29yZCkge1xuICAgIHJlY29yZC5zdmdYTUwgPSBwYXJzZVhNTChyZWNvcmQuc291cmNlKTtcbiAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///239\\n\")},function(module,exports,__webpack_require__){eval(\"var Group = __webpack_require__(81);\\n\\nvar ZImage = __webpack_require__(102);\\n\\nvar Text = __webpack_require__(105);\\n\\nvar Circle = __webpack_require__(144);\\n\\nvar Rect = __webpack_require__(149);\\n\\nvar Ellipse = __webpack_require__(241);\\n\\nvar Line = __webpack_require__(150);\\n\\nvar Path = __webpack_require__(64);\\n\\nvar Polygon = __webpack_require__(146);\\n\\nvar Polyline = __webpack_require__(148);\\n\\nvar LinearGradient = __webpack_require__(151);\\n\\nvar Style = __webpack_require__(101);\\n\\nvar matrix = __webpack_require__(74);\\n\\nvar _path = __webpack_require__(140);\\n\\nvar createFromString = _path.createFromString;\\n\\nvar _util = __webpack_require__(59);\\n\\nvar isString = _util.isString;\\nvar extend = _util.extend;\\nvar defaults = _util.defaults;\\nvar trim = _util.trim;\\nvar each = _util.each;\\n// import RadialGradient from '../graphic/RadialGradient';\\n// import Pattern from '../graphic/Pattern';\\n// import * as vector from '../core/vector';\\n// Most of the values can be separated by comma and/or white space.\\nvar DILIMITER_REG = /[\\\\s,]+/;\\n/**\\n * For big svg string, this method might be time consuming.\\n *\\n * @param {string} svg xml string\\n * @return {Object} xml root.\\n */\\n\\nfunction parseXML(svg) {\\n  if (isString(svg)) {\\n    var parser = new DOMParser();\\n    svg = parser.parseFromString(svg, 'text/xml');\\n  } // Document node. If using $.get, doc node may be input.\\n\\n\\n  if (svg.nodeType === 9) {\\n    svg = svg.firstChild;\\n  } // nodeName of <!DOCTYPE svg> is also 'svg'.\\n\\n\\n  while (svg.nodeName.toLowerCase() !== 'svg' || svg.nodeType !== 1) {\\n    svg = svg.nextSibling;\\n  }\\n\\n  return svg;\\n}\\n\\nfunction SVGParser() {\\n  this._defs = {};\\n  this._root = null;\\n  this._isDefine = false;\\n  this._isText = false;\\n}\\n\\nSVGParser.prototype.parse = function (xml, opt) {\\n  opt = opt || {};\\n  var svg = parseXML(xml);\\n\\n  if (!svg) {\\n    throw new Error('Illegal svg');\\n  }\\n\\n  var root = new Group();\\n  this._root = root; // parse view port\\n\\n  var viewBox = svg.getAttribute('viewBox') || ''; // If width/height not specified, means \\\"100%\\\" of `opt.width/height`.\\n  // TODO: Other percent value not supported yet.\\n\\n  var width = parseFloat(svg.getAttribute('width') || opt.width);\\n  var height = parseFloat(svg.getAttribute('height') || opt.height); // If width/height not specified, set as null for output.\\n\\n  isNaN(width) && (width = null);\\n  isNaN(height) && (height = null); // Apply inline style on svg element.\\n\\n  parseAttributes(svg, root, null, true);\\n  var child = svg.firstChild;\\n\\n  while (child) {\\n    this._parseNode(child, root);\\n\\n    child = child.nextSibling;\\n  }\\n\\n  var viewBoxRect;\\n  var viewBoxTransform;\\n\\n  if (viewBox) {\\n    var viewBoxArr = trim(viewBox).split(DILIMITER_REG); // Some invalid case like viewBox: 'none'.\\n\\n    if (viewBoxArr.length >= 4) {\\n      viewBoxRect = {\\n        x: parseFloat(viewBoxArr[0] || 0),\\n        y: parseFloat(viewBoxArr[1] || 0),\\n        width: parseFloat(viewBoxArr[2]),\\n        height: parseFloat(viewBoxArr[3])\\n      };\\n    }\\n  }\\n\\n  if (viewBoxRect && width != null && height != null) {\\n    viewBoxTransform = makeViewBoxTransform(viewBoxRect, width, height);\\n\\n    if (!opt.ignoreViewBox) {\\n      // If set transform on the output group, it probably bring trouble when\\n      // some users only intend to show the clipped content inside the viewBox,\\n      // but not intend to transform the output group. So we keep the output\\n      // group no transform. If the user intend to use the viewBox as a\\n      // camera, just set `opt.ignoreViewBox` as `true` and set transfrom\\n      // manually according to the viewBox info in the output of this method.\\n      var elRoot = root;\\n      root = new Group();\\n      root.add(elRoot);\\n      elRoot.scale = viewBoxTransform.scale.slice();\\n      elRoot.position = viewBoxTransform.position.slice();\\n    }\\n  } // Some shapes might be overflow the viewport, which should be\\n  // clipped despite whether the viewBox is used, as the SVG does.\\n\\n\\n  if (!opt.ignoreRootClip && width != null && height != null) {\\n    root.setClipPath(new Rect({\\n      shape: {\\n        x: 0,\\n        y: 0,\\n        width: width,\\n        height: height\\n      }\\n    }));\\n  } // Set width/height on group just for output the viewport size.\\n\\n\\n  return {\\n    root: root,\\n    width: width,\\n    height: height,\\n    viewBoxRect: viewBoxRect,\\n    viewBoxTransform: viewBoxTransform\\n  };\\n};\\n\\nSVGParser.prototype._parseNode = function (xmlNode, parentGroup) {\\n  var nodeName = xmlNode.nodeName.toLowerCase(); // TODO\\n  // support <style>...</style> in svg, where nodeName is 'style',\\n  // CSS classes is defined globally wherever the style tags are declared.\\n\\n  if (nodeName === 'defs') {\\n    // define flag\\n    this._isDefine = true;\\n  } else if (nodeName === 'text') {\\n    this._isText = true;\\n  }\\n\\n  var el;\\n\\n  if (this._isDefine) {\\n    var parser = defineParsers[nodeName];\\n\\n    if (parser) {\\n      var def = parser.call(this, xmlNode);\\n      var id = xmlNode.getAttribute('id');\\n\\n      if (id) {\\n        this._defs[id] = def;\\n      }\\n    }\\n  } else {\\n    var parser = nodeParsers[nodeName];\\n\\n    if (parser) {\\n      el = parser.call(this, xmlNode, parentGroup);\\n      parentGroup.add(el);\\n    }\\n  }\\n\\n  var child = xmlNode.firstChild;\\n\\n  while (child) {\\n    if (child.nodeType === 1) {\\n      this._parseNode(child, el);\\n    } // Is text\\n\\n\\n    if (child.nodeType === 3 && this._isText) {\\n      this._parseText(child, el);\\n    }\\n\\n    child = child.nextSibling;\\n  } // Quit define\\n\\n\\n  if (nodeName === 'defs') {\\n    this._isDefine = false;\\n  } else if (nodeName === 'text') {\\n    this._isText = false;\\n  }\\n};\\n\\nSVGParser.prototype._parseText = function (xmlNode, parentGroup) {\\n  if (xmlNode.nodeType === 1) {\\n    var dx = xmlNode.getAttribute('dx') || 0;\\n    var dy = xmlNode.getAttribute('dy') || 0;\\n    this._textX += parseFloat(dx);\\n    this._textY += parseFloat(dy);\\n  }\\n\\n  var text = new Text({\\n    style: {\\n      text: xmlNode.textContent,\\n      transformText: true\\n    },\\n    position: [this._textX || 0, this._textY || 0]\\n  });\\n  inheritStyle(parentGroup, text);\\n  parseAttributes(xmlNode, text, this._defs);\\n  var fontSize = text.style.fontSize;\\n\\n  if (fontSize && fontSize < 9) {\\n    // PENDING\\n    text.style.fontSize = 9;\\n    text.scale = text.scale || [1, 1];\\n    text.scale[0] *= fontSize / 9;\\n    text.scale[1] *= fontSize / 9;\\n  }\\n\\n  var rect = text.getBoundingRect();\\n  this._textX += rect.width;\\n  parentGroup.add(text);\\n  return text;\\n};\\n\\nvar nodeParsers = {\\n  'g': function (xmlNode, parentGroup) {\\n    var g = new Group();\\n    inheritStyle(parentGroup, g);\\n    parseAttributes(xmlNode, g, this._defs);\\n    return g;\\n  },\\n  'rect': function (xmlNode, parentGroup) {\\n    var rect = new Rect();\\n    inheritStyle(parentGroup, rect);\\n    parseAttributes(xmlNode, rect, this._defs);\\n    rect.setShape({\\n      x: parseFloat(xmlNode.getAttribute('x') || 0),\\n      y: parseFloat(xmlNode.getAttribute('y') || 0),\\n      width: parseFloat(xmlNode.getAttribute('width') || 0),\\n      height: parseFloat(xmlNode.getAttribute('height') || 0)\\n    }); // console.log(xmlNode.getAttribute('transform'));\\n    // console.log(rect.transform);\\n\\n    return rect;\\n  },\\n  'circle': function (xmlNode, parentGroup) {\\n    var circle = new Circle();\\n    inheritStyle(parentGroup, circle);\\n    parseAttributes(xmlNode, circle, this._defs);\\n    circle.setShape({\\n      cx: parseFloat(xmlNode.getAttribute('cx') || 0),\\n      cy: parseFloat(xmlNode.getAttribute('cy') || 0),\\n      r: parseFloat(xmlNode.getAttribute('r') || 0)\\n    });\\n    return circle;\\n  },\\n  'line': function (xmlNode, parentGroup) {\\n    var line = new Line();\\n    inheritStyle(parentGroup, line);\\n    parseAttributes(xmlNode, line, this._defs);\\n    line.setShape({\\n      x1: parseFloat(xmlNode.getAttribute('x1') || 0),\\n      y1: parseFloat(xmlNode.getAttribute('y1') || 0),\\n      x2: parseFloat(xmlNode.getAttribute('x2') || 0),\\n      y2: parseFloat(xmlNode.getAttribute('y2') || 0)\\n    });\\n    return line;\\n  },\\n  'ellipse': function (xmlNode, parentGroup) {\\n    var ellipse = new Ellipse();\\n    inheritStyle(parentGroup, ellipse);\\n    parseAttributes(xmlNode, ellipse, this._defs);\\n    ellipse.setShape({\\n      cx: parseFloat(xmlNode.getAttribute('cx') || 0),\\n      cy: parseFloat(xmlNode.getAttribute('cy') || 0),\\n      rx: parseFloat(xmlNode.getAttribute('rx') || 0),\\n      ry: parseFloat(xmlNode.getAttribute('ry') || 0)\\n    });\\n    return ellipse;\\n  },\\n  'polygon': function (xmlNode, parentGroup) {\\n    var points = xmlNode.getAttribute('points');\\n\\n    if (points) {\\n      points = parsePoints(points);\\n    }\\n\\n    var polygon = new Polygon({\\n      shape: {\\n        points: points || []\\n      }\\n    });\\n    inheritStyle(parentGroup, polygon);\\n    parseAttributes(xmlNode, polygon, this._defs);\\n    return polygon;\\n  },\\n  'polyline': function (xmlNode, parentGroup) {\\n    var path = new Path();\\n    inheritStyle(parentGroup, path);\\n    parseAttributes(xmlNode, path, this._defs);\\n    var points = xmlNode.getAttribute('points');\\n\\n    if (points) {\\n      points = parsePoints(points);\\n    }\\n\\n    var polyline = new Polyline({\\n      shape: {\\n        points: points || []\\n      }\\n    });\\n    return polyline;\\n  },\\n  'image': function (xmlNode, parentGroup) {\\n    var img = new ZImage();\\n    inheritStyle(parentGroup, img);\\n    parseAttributes(xmlNode, img, this._defs);\\n    img.setStyle({\\n      image: xmlNode.getAttribute('xlink:href'),\\n      x: xmlNode.getAttribute('x'),\\n      y: xmlNode.getAttribute('y'),\\n      width: xmlNode.getAttribute('width'),\\n      height: xmlNode.getAttribute('height')\\n    });\\n    return img;\\n  },\\n  'text': function (xmlNode, parentGroup) {\\n    var x = xmlNode.getAttribute('x') || 0;\\n    var y = xmlNode.getAttribute('y') || 0;\\n    var dx = xmlNode.getAttribute('dx') || 0;\\n    var dy = xmlNode.getAttribute('dy') || 0;\\n    this._textX = parseFloat(x) + parseFloat(dx);\\n    this._textY = parseFloat(y) + parseFloat(dy);\\n    var g = new Group();\\n    inheritStyle(parentGroup, g);\\n    parseAttributes(xmlNode, g, this._defs);\\n    return g;\\n  },\\n  'tspan': function (xmlNode, parentGroup) {\\n    var x = xmlNode.getAttribute('x');\\n    var y = xmlNode.getAttribute('y');\\n\\n    if (x != null) {\\n      // new offset x\\n      this._textX = parseFloat(x);\\n    }\\n\\n    if (y != null) {\\n      // new offset y\\n      this._textY = parseFloat(y);\\n    }\\n\\n    var dx = xmlNode.getAttribute('dx') || 0;\\n    var dy = xmlNode.getAttribute('dy') || 0;\\n    var g = new Group();\\n    inheritStyle(parentGroup, g);\\n    parseAttributes(xmlNode, g, this._defs);\\n    this._textX += dx;\\n    this._textY += dy;\\n    return g;\\n  },\\n  'path': function (xmlNode, parentGroup) {\\n    // TODO svg fill rule\\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule\\n    // path.style.globalCompositeOperation = 'xor';\\n    var d = xmlNode.getAttribute('d') || ''; // Performance sensitive.\\n\\n    var path = createFromString(d);\\n    inheritStyle(parentGroup, path);\\n    parseAttributes(xmlNode, path, this._defs);\\n    return path;\\n  }\\n};\\nvar defineParsers = {\\n  'lineargradient': function (xmlNode) {\\n    var x1 = parseInt(xmlNode.getAttribute('x1') || 0, 10);\\n    var y1 = parseInt(xmlNode.getAttribute('y1') || 0, 10);\\n    var x2 = parseInt(xmlNode.getAttribute('x2') || 10, 10);\\n    var y2 = parseInt(xmlNode.getAttribute('y2') || 0, 10);\\n    var gradient = new LinearGradient(x1, y1, x2, y2);\\n\\n    _parseGradientColorStops(xmlNode, gradient);\\n\\n    return gradient;\\n  },\\n  'radialgradient': function (xmlNode) {}\\n};\\n\\nfunction _parseGradientColorStops(xmlNode, gradient) {\\n  var stop = xmlNode.firstChild;\\n\\n  while (stop) {\\n    if (stop.nodeType === 1) {\\n      var offset = stop.getAttribute('offset');\\n\\n      if (offset.indexOf('%') > 0) {\\n        // percentage\\n        offset = parseInt(offset, 10) / 100;\\n      } else if (offset) {\\n        // number from 0 to 1\\n        offset = parseFloat(offset);\\n      } else {\\n        offset = 0;\\n      }\\n\\n      var stopColor = stop.getAttribute('stop-color') || '#000000';\\n      gradient.addColorStop(offset, stopColor);\\n    }\\n\\n    stop = stop.nextSibling;\\n  }\\n}\\n\\nfunction inheritStyle(parent, child) {\\n  if (parent && parent.__inheritedStyle) {\\n    if (!child.__inheritedStyle) {\\n      child.__inheritedStyle = {};\\n    }\\n\\n    defaults(child.__inheritedStyle, parent.__inheritedStyle);\\n  }\\n}\\n\\nfunction parsePoints(pointsString) {\\n  var list = trim(pointsString).split(DILIMITER_REG);\\n  var points = [];\\n\\n  for (var i = 0; i < list.length; i += 2) {\\n    var x = parseFloat(list[i]);\\n    var y = parseFloat(list[i + 1]);\\n    points.push([x, y]);\\n  }\\n\\n  return points;\\n}\\n\\nvar attributesMap = {\\n  'fill': 'fill',\\n  'stroke': 'stroke',\\n  'stroke-width': 'lineWidth',\\n  'opacity': 'opacity',\\n  'fill-opacity': 'fillOpacity',\\n  'stroke-opacity': 'strokeOpacity',\\n  'stroke-dasharray': 'lineDash',\\n  'stroke-dashoffset': 'lineDashOffset',\\n  'stroke-linecap': 'lineCap',\\n  'stroke-linejoin': 'lineJoin',\\n  'stroke-miterlimit': 'miterLimit',\\n  'font-family': 'fontFamily',\\n  'font-size': 'fontSize',\\n  'font-style': 'fontStyle',\\n  'font-weight': 'fontWeight',\\n  'text-align': 'textAlign',\\n  'alignment-baseline': 'textBaseline'\\n};\\n\\nfunction parseAttributes(xmlNode, el, defs, onlyInlineStyle) {\\n  var zrStyle = el.__inheritedStyle || {};\\n  var isTextEl = el.type === 'text'; // TODO Shadow\\n\\n  if (xmlNode.nodeType === 1) {\\n    parseTransformAttribute(xmlNode, el);\\n    extend(zrStyle, parseStyleAttribute(xmlNode));\\n\\n    if (!onlyInlineStyle) {\\n      for (var svgAttrName in attributesMap) {\\n        if (attributesMap.hasOwnProperty(svgAttrName)) {\\n          var attrValue = xmlNode.getAttribute(svgAttrName);\\n\\n          if (attrValue != null) {\\n            zrStyle[attributesMap[svgAttrName]] = attrValue;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  var elFillProp = isTextEl ? 'textFill' : 'fill';\\n  var elStrokeProp = isTextEl ? 'textStroke' : 'stroke';\\n  el.style = el.style || new Style();\\n  var elStyle = el.style;\\n  zrStyle.fill != null && elStyle.set(elFillProp, getPaint(zrStyle.fill, defs));\\n  zrStyle.stroke != null && elStyle.set(elStrokeProp, getPaint(zrStyle.stroke, defs));\\n  each(['lineWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'miterLimit', 'fontSize'], function (propName) {\\n    var elPropName = propName === 'lineWidth' && isTextEl ? 'textStrokeWidth' : propName;\\n    zrStyle[propName] != null && elStyle.set(elPropName, parseFloat(zrStyle[propName]));\\n  });\\n\\n  if (!zrStyle.textBaseline || zrStyle.textBaseline === 'auto') {\\n    zrStyle.textBaseline = 'alphabetic';\\n  }\\n\\n  if (zrStyle.textBaseline === 'alphabetic') {\\n    zrStyle.textBaseline = 'bottom';\\n  }\\n\\n  if (zrStyle.textAlign === 'start') {\\n    zrStyle.textAlign = 'left';\\n  }\\n\\n  if (zrStyle.textAlign === 'end') {\\n    zrStyle.textAlign = 'right';\\n  }\\n\\n  each(['lineDashOffset', 'lineCap', 'lineJoin', 'fontWeight', 'fontFamily', 'fontStyle', 'textAlign', 'textBaseline'], function (propName) {\\n    zrStyle[propName] != null && elStyle.set(propName, zrStyle[propName]);\\n  });\\n\\n  if (zrStyle.lineDash) {\\n    el.style.lineDash = trim(zrStyle.lineDash).split(DILIMITER_REG);\\n  }\\n\\n  if (elStyle[elStrokeProp] && elStyle[elStrokeProp] !== 'none') {\\n    // enable stroke\\n    el[elStrokeProp] = true;\\n  }\\n\\n  el.__inheritedStyle = zrStyle;\\n}\\n\\nvar urlRegex = /url\\\\(\\\\s*#(.*?)\\\\)/;\\n\\nfunction getPaint(str, defs) {\\n  // if (str === 'none') {\\n  //     return;\\n  // }\\n  var urlMatch = defs && str && str.match(urlRegex);\\n\\n  if (urlMatch) {\\n    var url = trim(urlMatch[1]);\\n    var def = defs[url];\\n    return def;\\n  }\\n\\n  return str;\\n}\\n\\nvar transformRegex = /(translate|scale|rotate|skewX|skewY|matrix)\\\\(([\\\\-\\\\s0-9\\\\.e,]*)\\\\)/g;\\n\\nfunction parseTransformAttribute(xmlNode, node) {\\n  var transform = xmlNode.getAttribute('transform');\\n\\n  if (transform) {\\n    transform = transform.replace(/,/g, ' ');\\n    var m = null;\\n    var transformOps = [];\\n    transform.replace(transformRegex, function (str, type, value) {\\n      transformOps.push(type, value);\\n    });\\n\\n    for (var i = transformOps.length - 1; i > 0; i -= 2) {\\n      var value = transformOps[i];\\n      var type = transformOps[i - 1];\\n      m = m || matrix.create();\\n\\n      switch (type) {\\n        case 'translate':\\n          value = trim(value).split(DILIMITER_REG);\\n          matrix.translate(m, m, [parseFloat(value[0]), parseFloat(value[1] || 0)]);\\n          break;\\n\\n        case 'scale':\\n          value = trim(value).split(DILIMITER_REG);\\n          matrix.scale(m, m, [parseFloat(value[0]), parseFloat(value[1] || value[0])]);\\n          break;\\n\\n        case 'rotate':\\n          value = trim(value).split(DILIMITER_REG);\\n          matrix.rotate(m, m, parseFloat(value[0]));\\n          break;\\n\\n        case 'skew':\\n          value = trim(value).split(DILIMITER_REG);\\n          console.warn('Skew transform is not supported yet');\\n          break;\\n\\n        case 'matrix':\\n          var value = trim(value).split(DILIMITER_REG);\\n          m[0] = parseFloat(value[0]);\\n          m[1] = parseFloat(value[1]);\\n          m[2] = parseFloat(value[2]);\\n          m[3] = parseFloat(value[3]);\\n          m[4] = parseFloat(value[4]);\\n          m[5] = parseFloat(value[5]);\\n          break;\\n      }\\n    }\\n  }\\n\\n  node.setLocalTransform(m);\\n} // Value may contain space.\\n\\n\\nvar styleRegex = /([^\\\\s:;]+)\\\\s*:\\\\s*([^:;]+)/g;\\n\\nfunction parseStyleAttribute(xmlNode) {\\n  var style = xmlNode.getAttribute('style');\\n  var result = {};\\n\\n  if (!style) {\\n    return result;\\n  }\\n\\n  var styleList = {};\\n  styleRegex.lastIndex = 0;\\n  var styleRegResult;\\n\\n  while ((styleRegResult = styleRegex.exec(style)) != null) {\\n    styleList[styleRegResult[1]] = styleRegResult[2];\\n  }\\n\\n  for (var svgAttrName in attributesMap) {\\n    if (attributesMap.hasOwnProperty(svgAttrName) && styleList[svgAttrName] != null) {\\n      result[attributesMap[svgAttrName]] = styleList[svgAttrName];\\n    }\\n  }\\n\\n  return result;\\n}\\n/**\\n * @param {Array.<number>} viewBoxRect\\n * @param {number} width\\n * @param {number} height\\n * @return {Object} {scale, position}\\n */\\n\\n\\nfunction makeViewBoxTransform(viewBoxRect, width, height) {\\n  var scaleX = width / viewBoxRect.width;\\n  var scaleY = height / viewBoxRect.height;\\n  var scale = Math.min(scaleX, scaleY); // preserveAspectRatio 'xMidYMid'\\n\\n  var viewBoxScale = [scale, scale];\\n  var viewBoxPosition = [-(viewBoxRect.x + viewBoxRect.width / 2) * scale + width / 2, -(viewBoxRect.y + viewBoxRect.height / 2) * scale + height / 2];\\n  return {\\n    scale: viewBoxScale,\\n    position: viewBoxPosition\\n  };\\n}\\n/**\\n * @param {string|XMLElement} xml\\n * @param {Object} [opt]\\n * @param {number} [opt.width] Default width if svg width not specified or is a percent value.\\n * @param {number} [opt.height] Default height if svg height not specified or is a percent value.\\n * @param {boolean} [opt.ignoreViewBox]\\n * @param {boolean} [opt.ignoreRootClip]\\n * @return {Object} result:\\n * {\\n *     root: Group, The root of the the result tree of zrender shapes,\\n *     width: number, the viewport width of the SVG,\\n *     height: number, the viewport height of the SVG,\\n *     viewBoxRect: {x, y, width, height}, the declared viewBox rect of the SVG, if exists,\\n *     viewBoxTransform: the {scale, position} calculated by viewBox and viewport, is exists.\\n * }\\n */\\n\\n\\nfunction parseSVG(xml, opt) {\\n  var parser = new SVGParser();\\n  return parser.parse(xml, opt);\\n}\\n\\nexports.parseXML = parseXML;\\nexports.makeViewBoxTransform = makeViewBoxTransform;\\nexports.parseSVG = parseSVG;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvdG9vbC9wYXJzZVNWRy5qcz8zMDQxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksbUJBQU8sQ0FBQyxFQUFvQjs7QUFFeEMsYUFBYSxtQkFBTyxDQUFDLEdBQWtCOztBQUV2QyxXQUFXLG1CQUFPLENBQUMsR0FBaUI7O0FBRXBDLGFBQWEsbUJBQU8sQ0FBQyxHQUF5Qjs7QUFFOUMsV0FBVyxtQkFBTyxDQUFDLEdBQXVCOztBQUUxQyxjQUFjLG1CQUFPLENBQUMsR0FBMEI7O0FBRWhELFdBQVcsbUJBQU8sQ0FBQyxHQUF1Qjs7QUFFMUMsV0FBVyxtQkFBTyxDQUFDLEVBQWlCOztBQUVwQyxjQUFjLG1CQUFPLENBQUMsR0FBMEI7O0FBRWhELGVBQWUsbUJBQU8sQ0FBQyxHQUEyQjs7QUFFbEQscUJBQXFCLG1CQUFPLENBQUMsR0FBMkI7O0FBRXhELFlBQVksbUJBQU8sQ0FBQyxHQUFrQjs7QUFFdEMsYUFBYSxtQkFBTyxDQUFDLEVBQWdCOztBQUVyQyxZQUFZLG1CQUFPLENBQUMsR0FBUTs7QUFFNUI7O0FBRUEsWUFBWSxtQkFBTyxDQUFDLEVBQWM7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVksT0FBTztBQUNuQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQjs7QUFFcEIsa0RBQWtEO0FBQ2xEOztBQUVBO0FBQ0Esb0VBQW9FOztBQUVwRTtBQUNBLG1DQUFtQzs7QUFFbkM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHdEQUF3RDs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssRUFBRTtBQUNQOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0NBQW9DOztBQUVwQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMLHlDQUF5QyxPQUFPO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUM7OztBQUdELHlCQUF5QixlQUFlOztBQUV4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixZQUFZLE9BQU8sRUFBRTtBQUNyQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrQkFBa0I7QUFDN0IsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDLDhCQUE4QixnQkFBZ0I7QUFDOUM7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjI0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBHcm91cCA9IHJlcXVpcmUoXCIuLi9jb250YWluZXIvR3JvdXBcIik7XG5cbnZhciBaSW1hZ2UgPSByZXF1aXJlKFwiLi4vZ3JhcGhpYy9JbWFnZVwiKTtcblxudmFyIFRleHQgPSByZXF1aXJlKFwiLi4vZ3JhcGhpYy9UZXh0XCIpO1xuXG52YXIgQ2lyY2xlID0gcmVxdWlyZShcIi4uL2dyYXBoaWMvc2hhcGUvQ2lyY2xlXCIpO1xuXG52YXIgUmVjdCA9IHJlcXVpcmUoXCIuLi9ncmFwaGljL3NoYXBlL1JlY3RcIik7XG5cbnZhciBFbGxpcHNlID0gcmVxdWlyZShcIi4uL2dyYXBoaWMvc2hhcGUvRWxsaXBzZVwiKTtcblxudmFyIExpbmUgPSByZXF1aXJlKFwiLi4vZ3JhcGhpYy9zaGFwZS9MaW5lXCIpO1xuXG52YXIgUGF0aCA9IHJlcXVpcmUoXCIuLi9ncmFwaGljL1BhdGhcIik7XG5cbnZhciBQb2x5Z29uID0gcmVxdWlyZShcIi4uL2dyYXBoaWMvc2hhcGUvUG9seWdvblwiKTtcblxudmFyIFBvbHlsaW5lID0gcmVxdWlyZShcIi4uL2dyYXBoaWMvc2hhcGUvUG9seWxpbmVcIik7XG5cbnZhciBMaW5lYXJHcmFkaWVudCA9IHJlcXVpcmUoXCIuLi9ncmFwaGljL0xpbmVhckdyYWRpZW50XCIpO1xuXG52YXIgU3R5bGUgPSByZXF1aXJlKFwiLi4vZ3JhcGhpYy9TdHlsZVwiKTtcblxudmFyIG1hdHJpeCA9IHJlcXVpcmUoXCIuLi9jb3JlL21hdHJpeFwiKTtcblxudmFyIF9wYXRoID0gcmVxdWlyZShcIi4vcGF0aFwiKTtcblxudmFyIGNyZWF0ZUZyb21TdHJpbmcgPSBfcGF0aC5jcmVhdGVGcm9tU3RyaW5nO1xuXG52YXIgX3V0aWwgPSByZXF1aXJlKFwiLi4vY29yZS91dGlsXCIpO1xuXG52YXIgaXNTdHJpbmcgPSBfdXRpbC5pc1N0cmluZztcbnZhciBleHRlbmQgPSBfdXRpbC5leHRlbmQ7XG52YXIgZGVmYXVsdHMgPSBfdXRpbC5kZWZhdWx0cztcbnZhciB0cmltID0gX3V0aWwudHJpbTtcbnZhciBlYWNoID0gX3V0aWwuZWFjaDtcbi8vIGltcG9ydCBSYWRpYWxHcmFkaWVudCBmcm9tICcuLi9ncmFwaGljL1JhZGlhbEdyYWRpZW50Jztcbi8vIGltcG9ydCBQYXR0ZXJuIGZyb20gJy4uL2dyYXBoaWMvUGF0dGVybic7XG4vLyBpbXBvcnQgKiBhcyB2ZWN0b3IgZnJvbSAnLi4vY29yZS92ZWN0b3InO1xuLy8gTW9zdCBvZiB0aGUgdmFsdWVzIGNhbiBiZSBzZXBhcmF0ZWQgYnkgY29tbWEgYW5kL29yIHdoaXRlIHNwYWNlLlxudmFyIERJTElNSVRFUl9SRUcgPSAvW1xccyxdKy87XG4vKipcbiAqIEZvciBiaWcgc3ZnIHN0cmluZywgdGhpcyBtZXRob2QgbWlnaHQgYmUgdGltZSBjb25zdW1pbmcuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN2ZyB4bWwgc3RyaW5nXG4gKiBAcmV0dXJuIHtPYmplY3R9IHhtbCByb290LlxuICovXG5cbmZ1bmN0aW9uIHBhcnNlWE1MKHN2Zykge1xuICBpZiAoaXNTdHJpbmcoc3ZnKSkge1xuICAgIHZhciBwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gICAgc3ZnID0gcGFyc2VyLnBhcnNlRnJvbVN0cmluZyhzdmcsICd0ZXh0L3htbCcpO1xuICB9IC8vIERvY3VtZW50IG5vZGUuIElmIHVzaW5nICQuZ2V0LCBkb2Mgbm9kZSBtYXkgYmUgaW5wdXQuXG5cblxuICBpZiAoc3ZnLm5vZGVUeXBlID09PSA5KSB7XG4gICAgc3ZnID0gc3ZnLmZpcnN0Q2hpbGQ7XG4gIH0gLy8gbm9kZU5hbWUgb2YgPCFET0NUWVBFIHN2Zz4gaXMgYWxzbyAnc3ZnJy5cblxuXG4gIHdoaWxlIChzdmcubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gJ3N2ZycgfHwgc3ZnLm5vZGVUeXBlICE9PSAxKSB7XG4gICAgc3ZnID0gc3ZnLm5leHRTaWJsaW5nO1xuICB9XG5cbiAgcmV0dXJuIHN2Zztcbn1cblxuZnVuY3Rpb24gU1ZHUGFyc2VyKCkge1xuICB0aGlzLl9kZWZzID0ge307XG4gIHRoaXMuX3Jvb3QgPSBudWxsO1xuICB0aGlzLl9pc0RlZmluZSA9IGZhbHNlO1xuICB0aGlzLl9pc1RleHQgPSBmYWxzZTtcbn1cblxuU1ZHUGFyc2VyLnByb3RvdHlwZS5wYXJzZSA9IGZ1bmN0aW9uICh4bWwsIG9wdCkge1xuICBvcHQgPSBvcHQgfHwge307XG4gIHZhciBzdmcgPSBwYXJzZVhNTCh4bWwpO1xuXG4gIGlmICghc3ZnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbGxlZ2FsIHN2ZycpO1xuICB9XG5cbiAgdmFyIHJvb3QgPSBuZXcgR3JvdXAoKTtcbiAgdGhpcy5fcm9vdCA9IHJvb3Q7IC8vIHBhcnNlIHZpZXcgcG9ydFxuXG4gIHZhciB2aWV3Qm94ID0gc3ZnLmdldEF0dHJpYnV0ZSgndmlld0JveCcpIHx8ICcnOyAvLyBJZiB3aWR0aC9oZWlnaHQgbm90IHNwZWNpZmllZCwgbWVhbnMgXCIxMDAlXCIgb2YgYG9wdC53aWR0aC9oZWlnaHRgLlxuICAvLyBUT0RPOiBPdGhlciBwZXJjZW50IHZhbHVlIG5vdCBzdXBwb3J0ZWQgeWV0LlxuXG4gIHZhciB3aWR0aCA9IHBhcnNlRmxvYXQoc3ZnLmdldEF0dHJpYnV0ZSgnd2lkdGgnKSB8fCBvcHQud2lkdGgpO1xuICB2YXIgaGVpZ2h0ID0gcGFyc2VGbG9hdChzdmcuZ2V0QXR0cmlidXRlKCdoZWlnaHQnKSB8fCBvcHQuaGVpZ2h0KTsgLy8gSWYgd2lkdGgvaGVpZ2h0IG5vdCBzcGVjaWZpZWQsIHNldCBhcyBudWxsIGZvciBvdXRwdXQuXG5cbiAgaXNOYU4od2lkdGgpICYmICh3aWR0aCA9IG51bGwpO1xuICBpc05hTihoZWlnaHQpICYmIChoZWlnaHQgPSBudWxsKTsgLy8gQXBwbHkgaW5saW5lIHN0eWxlIG9uIHN2ZyBlbGVtZW50LlxuXG4gIHBhcnNlQXR0cmlidXRlcyhzdmcsIHJvb3QsIG51bGwsIHRydWUpO1xuICB2YXIgY2hpbGQgPSBzdmcuZmlyc3RDaGlsZDtcblxuICB3aGlsZSAoY2hpbGQpIHtcbiAgICB0aGlzLl9wYXJzZU5vZGUoY2hpbGQsIHJvb3QpO1xuXG4gICAgY2hpbGQgPSBjaGlsZC5uZXh0U2libGluZztcbiAgfVxuXG4gIHZhciB2aWV3Qm94UmVjdDtcbiAgdmFyIHZpZXdCb3hUcmFuc2Zvcm07XG5cbiAgaWYgKHZpZXdCb3gpIHtcbiAgICB2YXIgdmlld0JveEFyciA9IHRyaW0odmlld0JveCkuc3BsaXQoRElMSU1JVEVSX1JFRyk7IC8vIFNvbWUgaW52YWxpZCBjYXNlIGxpa2Ugdmlld0JveDogJ25vbmUnLlxuXG4gICAgaWYgKHZpZXdCb3hBcnIubGVuZ3RoID49IDQpIHtcbiAgICAgIHZpZXdCb3hSZWN0ID0ge1xuICAgICAgICB4OiBwYXJzZUZsb2F0KHZpZXdCb3hBcnJbMF0gfHwgMCksXG4gICAgICAgIHk6IHBhcnNlRmxvYXQodmlld0JveEFyclsxXSB8fCAwKSxcbiAgICAgICAgd2lkdGg6IHBhcnNlRmxvYXQodmlld0JveEFyclsyXSksXG4gICAgICAgIGhlaWdodDogcGFyc2VGbG9hdCh2aWV3Qm94QXJyWzNdKVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBpZiAodmlld0JveFJlY3QgJiYgd2lkdGggIT0gbnVsbCAmJiBoZWlnaHQgIT0gbnVsbCkge1xuICAgIHZpZXdCb3hUcmFuc2Zvcm0gPSBtYWtlVmlld0JveFRyYW5zZm9ybSh2aWV3Qm94UmVjdCwgd2lkdGgsIGhlaWdodCk7XG5cbiAgICBpZiAoIW9wdC5pZ25vcmVWaWV3Qm94KSB7XG4gICAgICAvLyBJZiBzZXQgdHJhbnNmb3JtIG9uIHRoZSBvdXRwdXQgZ3JvdXAsIGl0IHByb2JhYmx5IGJyaW5nIHRyb3VibGUgd2hlblxuICAgICAgLy8gc29tZSB1c2VycyBvbmx5IGludGVuZCB0byBzaG93IHRoZSBjbGlwcGVkIGNvbnRlbnQgaW5zaWRlIHRoZSB2aWV3Qm94LFxuICAgICAgLy8gYnV0IG5vdCBpbnRlbmQgdG8gdHJhbnNmb3JtIHRoZSBvdXRwdXQgZ3JvdXAuIFNvIHdlIGtlZXAgdGhlIG91dHB1dFxuICAgICAgLy8gZ3JvdXAgbm8gdHJhbnNmb3JtLiBJZiB0aGUgdXNlciBpbnRlbmQgdG8gdXNlIHRoZSB2aWV3Qm94IGFzIGFcbiAgICAgIC8vIGNhbWVyYSwganVzdCBzZXQgYG9wdC5pZ25vcmVWaWV3Qm94YCBhcyBgdHJ1ZWAgYW5kIHNldCB0cmFuc2Zyb21cbiAgICAgIC8vIG1hbnVhbGx5IGFjY29yZGluZyB0byB0aGUgdmlld0JveCBpbmZvIGluIHRoZSBvdXRwdXQgb2YgdGhpcyBtZXRob2QuXG4gICAgICB2YXIgZWxSb290ID0gcm9vdDtcbiAgICAgIHJvb3QgPSBuZXcgR3JvdXAoKTtcbiAgICAgIHJvb3QuYWRkKGVsUm9vdCk7XG4gICAgICBlbFJvb3Quc2NhbGUgPSB2aWV3Qm94VHJhbnNmb3JtLnNjYWxlLnNsaWNlKCk7XG4gICAgICBlbFJvb3QucG9zaXRpb24gPSB2aWV3Qm94VHJhbnNmb3JtLnBvc2l0aW9uLnNsaWNlKCk7XG4gICAgfVxuICB9IC8vIFNvbWUgc2hhcGVzIG1pZ2h0IGJlIG92ZXJmbG93IHRoZSB2aWV3cG9ydCwgd2hpY2ggc2hvdWxkIGJlXG4gIC8vIGNsaXBwZWQgZGVzcGl0ZSB3aGV0aGVyIHRoZSB2aWV3Qm94IGlzIHVzZWQsIGFzIHRoZSBTVkcgZG9lcy5cblxuXG4gIGlmICghb3B0Lmlnbm9yZVJvb3RDbGlwICYmIHdpZHRoICE9IG51bGwgJiYgaGVpZ2h0ICE9IG51bGwpIHtcbiAgICByb290LnNldENsaXBQYXRoKG5ldyBSZWN0KHtcbiAgICAgIHNoYXBlOiB7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHRcbiAgICAgIH1cbiAgICB9KSk7XG4gIH0gLy8gU2V0IHdpZHRoL2hlaWdodCBvbiBncm91cCBqdXN0IGZvciBvdXRwdXQgdGhlIHZpZXdwb3J0IHNpemUuXG5cblxuICByZXR1cm4ge1xuICAgIHJvb3Q6IHJvb3QsXG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIHZpZXdCb3hSZWN0OiB2aWV3Qm94UmVjdCxcbiAgICB2aWV3Qm94VHJhbnNmb3JtOiB2aWV3Qm94VHJhbnNmb3JtXG4gIH07XG59O1xuXG5TVkdQYXJzZXIucHJvdG90eXBlLl9wYXJzZU5vZGUgPSBmdW5jdGlvbiAoeG1sTm9kZSwgcGFyZW50R3JvdXApIHtcbiAgdmFyIG5vZGVOYW1lID0geG1sTm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOyAvLyBUT0RPXG4gIC8vIHN1cHBvcnQgPHN0eWxlPi4uLjwvc3R5bGU+IGluIHN2Zywgd2hlcmUgbm9kZU5hbWUgaXMgJ3N0eWxlJyxcbiAgLy8gQ1NTIGNsYXNzZXMgaXMgZGVmaW5lZCBnbG9iYWxseSB3aGVyZXZlciB0aGUgc3R5bGUgdGFncyBhcmUgZGVjbGFyZWQuXG5cbiAgaWYgKG5vZGVOYW1lID09PSAnZGVmcycpIHtcbiAgICAvLyBkZWZpbmUgZmxhZ1xuICAgIHRoaXMuX2lzRGVmaW5lID0gdHJ1ZTtcbiAgfSBlbHNlIGlmIChub2RlTmFtZSA9PT0gJ3RleHQnKSB7XG4gICAgdGhpcy5faXNUZXh0ID0gdHJ1ZTtcbiAgfVxuXG4gIHZhciBlbDtcblxuICBpZiAodGhpcy5faXNEZWZpbmUpIHtcbiAgICB2YXIgcGFyc2VyID0gZGVmaW5lUGFyc2Vyc1tub2RlTmFtZV07XG5cbiAgICBpZiAocGFyc2VyKSB7XG4gICAgICB2YXIgZGVmID0gcGFyc2VyLmNhbGwodGhpcywgeG1sTm9kZSk7XG4gICAgICB2YXIgaWQgPSB4bWxOb2RlLmdldEF0dHJpYnV0ZSgnaWQnKTtcblxuICAgICAgaWYgKGlkKSB7XG4gICAgICAgIHRoaXMuX2RlZnNbaWRdID0gZGVmO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFyc2VyID0gbm9kZVBhcnNlcnNbbm9kZU5hbWVdO1xuXG4gICAgaWYgKHBhcnNlcikge1xuICAgICAgZWwgPSBwYXJzZXIuY2FsbCh0aGlzLCB4bWxOb2RlLCBwYXJlbnRHcm91cCk7XG4gICAgICBwYXJlbnRHcm91cC5hZGQoZWwpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjaGlsZCA9IHhtbE5vZGUuZmlyc3RDaGlsZDtcblxuICB3aGlsZSAoY2hpbGQpIHtcbiAgICBpZiAoY2hpbGQubm9kZVR5cGUgPT09IDEpIHtcbiAgICAgIHRoaXMuX3BhcnNlTm9kZShjaGlsZCwgZWwpO1xuICAgIH0gLy8gSXMgdGV4dFxuXG5cbiAgICBpZiAoY2hpbGQubm9kZVR5cGUgPT09IDMgJiYgdGhpcy5faXNUZXh0KSB7XG4gICAgICB0aGlzLl9wYXJzZVRleHQoY2hpbGQsIGVsKTtcbiAgICB9XG5cbiAgICBjaGlsZCA9IGNoaWxkLm5leHRTaWJsaW5nO1xuICB9IC8vIFF1aXQgZGVmaW5lXG5cblxuICBpZiAobm9kZU5hbWUgPT09ICdkZWZzJykge1xuICAgIHRoaXMuX2lzRGVmaW5lID0gZmFsc2U7XG4gIH0gZWxzZSBpZiAobm9kZU5hbWUgPT09ICd0ZXh0Jykge1xuICAgIHRoaXMuX2lzVGV4dCA9IGZhbHNlO1xuICB9XG59O1xuXG5TVkdQYXJzZXIucHJvdG90eXBlLl9wYXJzZVRleHQgPSBmdW5jdGlvbiAoeG1sTm9kZSwgcGFyZW50R3JvdXApIHtcbiAgaWYgKHhtbE5vZGUubm9kZVR5cGUgPT09IDEpIHtcbiAgICB2YXIgZHggPSB4bWxOb2RlLmdldEF0dHJpYnV0ZSgnZHgnKSB8fCAwO1xuICAgIHZhciBkeSA9IHhtbE5vZGUuZ2V0QXR0cmlidXRlKCdkeScpIHx8IDA7XG4gICAgdGhpcy5fdGV4dFggKz0gcGFyc2VGbG9hdChkeCk7XG4gICAgdGhpcy5fdGV4dFkgKz0gcGFyc2VGbG9hdChkeSk7XG4gIH1cblxuICB2YXIgdGV4dCA9IG5ldyBUZXh0KHtcbiAgICBzdHlsZToge1xuICAgICAgdGV4dDogeG1sTm9kZS50ZXh0Q29udGVudCxcbiAgICAgIHRyYW5zZm9ybVRleHQ6IHRydWVcbiAgICB9LFxuICAgIHBvc2l0aW9uOiBbdGhpcy5fdGV4dFggfHwgMCwgdGhpcy5fdGV4dFkgfHwgMF1cbiAgfSk7XG4gIGluaGVyaXRTdHlsZShwYXJlbnRHcm91cCwgdGV4dCk7XG4gIHBhcnNlQXR0cmlidXRlcyh4bWxOb2RlLCB0ZXh0LCB0aGlzLl9kZWZzKTtcbiAgdmFyIGZvbnRTaXplID0gdGV4dC5zdHlsZS5mb250U2l6ZTtcblxuICBpZiAoZm9udFNpemUgJiYgZm9udFNpemUgPCA5KSB7XG4gICAgLy8gUEVORElOR1xuICAgIHRleHQuc3R5bGUuZm9udFNpemUgPSA5O1xuICAgIHRleHQuc2NhbGUgPSB0ZXh0LnNjYWxlIHx8IFsxLCAxXTtcbiAgICB0ZXh0LnNjYWxlWzBdICo9IGZvbnRTaXplIC8gOTtcbiAgICB0ZXh0LnNjYWxlWzFdICo9IGZvbnRTaXplIC8gOTtcbiAgfVxuXG4gIHZhciByZWN0ID0gdGV4dC5nZXRCb3VuZGluZ1JlY3QoKTtcbiAgdGhpcy5fdGV4dFggKz0gcmVjdC53aWR0aDtcbiAgcGFyZW50R3JvdXAuYWRkKHRleHQpO1xuICByZXR1cm4gdGV4dDtcbn07XG5cbnZhciBub2RlUGFyc2VycyA9IHtcbiAgJ2cnOiBmdW5jdGlvbiAoeG1sTm9kZSwgcGFyZW50R3JvdXApIHtcbiAgICB2YXIgZyA9IG5ldyBHcm91cCgpO1xuICAgIGluaGVyaXRTdHlsZShwYXJlbnRHcm91cCwgZyk7XG4gICAgcGFyc2VBdHRyaWJ1dGVzKHhtbE5vZGUsIGcsIHRoaXMuX2RlZnMpO1xuICAgIHJldHVybiBnO1xuICB9LFxuICAncmVjdCc6IGZ1bmN0aW9uICh4bWxOb2RlLCBwYXJlbnRHcm91cCkge1xuICAgIHZhciByZWN0ID0gbmV3IFJlY3QoKTtcbiAgICBpbmhlcml0U3R5bGUocGFyZW50R3JvdXAsIHJlY3QpO1xuICAgIHBhcnNlQXR0cmlidXRlcyh4bWxOb2RlLCByZWN0LCB0aGlzLl9kZWZzKTtcbiAgICByZWN0LnNldFNoYXBlKHtcbiAgICAgIHg6IHBhcnNlRmxvYXQoeG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3gnKSB8fCAwKSxcbiAgICAgIHk6IHBhcnNlRmxvYXQoeG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3knKSB8fCAwKSxcbiAgICAgIHdpZHRoOiBwYXJzZUZsb2F0KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCd3aWR0aCcpIHx8IDApLFxuICAgICAgaGVpZ2h0OiBwYXJzZUZsb2F0KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCdoZWlnaHQnKSB8fCAwKVxuICAgIH0pOyAvLyBjb25zb2xlLmxvZyh4bWxOb2RlLmdldEF0dHJpYnV0ZSgndHJhbnNmb3JtJykpO1xuICAgIC8vIGNvbnNvbGUubG9nKHJlY3QudHJhbnNmb3JtKTtcblxuICAgIHJldHVybiByZWN0O1xuICB9LFxuICAnY2lyY2xlJzogZnVuY3Rpb24gKHhtbE5vZGUsIHBhcmVudEdyb3VwKSB7XG4gICAgdmFyIGNpcmNsZSA9IG5ldyBDaXJjbGUoKTtcbiAgICBpbmhlcml0U3R5bGUocGFyZW50R3JvdXAsIGNpcmNsZSk7XG4gICAgcGFyc2VBdHRyaWJ1dGVzKHhtbE5vZGUsIGNpcmNsZSwgdGhpcy5fZGVmcyk7XG4gICAgY2lyY2xlLnNldFNoYXBlKHtcbiAgICAgIGN4OiBwYXJzZUZsb2F0KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCdjeCcpIHx8IDApLFxuICAgICAgY3k6IHBhcnNlRmxvYXQoeG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ2N5JykgfHwgMCksXG4gICAgICByOiBwYXJzZUZsb2F0KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCdyJykgfHwgMClcbiAgICB9KTtcbiAgICByZXR1cm4gY2lyY2xlO1xuICB9LFxuICAnbGluZSc6IGZ1bmN0aW9uICh4bWxOb2RlLCBwYXJlbnRHcm91cCkge1xuICAgIHZhciBsaW5lID0gbmV3IExpbmUoKTtcbiAgICBpbmhlcml0U3R5bGUocGFyZW50R3JvdXAsIGxpbmUpO1xuICAgIHBhcnNlQXR0cmlidXRlcyh4bWxOb2RlLCBsaW5lLCB0aGlzLl9kZWZzKTtcbiAgICBsaW5lLnNldFNoYXBlKHtcbiAgICAgIHgxOiBwYXJzZUZsb2F0KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCd4MScpIHx8IDApLFxuICAgICAgeTE6IHBhcnNlRmxvYXQoeG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3kxJykgfHwgMCksXG4gICAgICB4MjogcGFyc2VGbG9hdCh4bWxOb2RlLmdldEF0dHJpYnV0ZSgneDInKSB8fCAwKSxcbiAgICAgIHkyOiBwYXJzZUZsb2F0KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCd5MicpIHx8IDApXG4gICAgfSk7XG4gICAgcmV0dXJuIGxpbmU7XG4gIH0sXG4gICdlbGxpcHNlJzogZnVuY3Rpb24gKHhtbE5vZGUsIHBhcmVudEdyb3VwKSB7XG4gICAgdmFyIGVsbGlwc2UgPSBuZXcgRWxsaXBzZSgpO1xuICAgIGluaGVyaXRTdHlsZShwYXJlbnRHcm91cCwgZWxsaXBzZSk7XG4gICAgcGFyc2VBdHRyaWJ1dGVzKHhtbE5vZGUsIGVsbGlwc2UsIHRoaXMuX2RlZnMpO1xuICAgIGVsbGlwc2Uuc2V0U2hhcGUoe1xuICAgICAgY3g6IHBhcnNlRmxvYXQoeG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ2N4JykgfHwgMCksXG4gICAgICBjeTogcGFyc2VGbG9hdCh4bWxOb2RlLmdldEF0dHJpYnV0ZSgnY3knKSB8fCAwKSxcbiAgICAgIHJ4OiBwYXJzZUZsb2F0KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCdyeCcpIHx8IDApLFxuICAgICAgcnk6IHBhcnNlRmxvYXQoeG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3J5JykgfHwgMClcbiAgICB9KTtcbiAgICByZXR1cm4gZWxsaXBzZTtcbiAgfSxcbiAgJ3BvbHlnb24nOiBmdW5jdGlvbiAoeG1sTm9kZSwgcGFyZW50R3JvdXApIHtcbiAgICB2YXIgcG9pbnRzID0geG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3BvaW50cycpO1xuXG4gICAgaWYgKHBvaW50cykge1xuICAgICAgcG9pbnRzID0gcGFyc2VQb2ludHMocG9pbnRzKTtcbiAgICB9XG5cbiAgICB2YXIgcG9seWdvbiA9IG5ldyBQb2x5Z29uKHtcbiAgICAgIHNoYXBlOiB7XG4gICAgICAgIHBvaW50czogcG9pbnRzIHx8IFtdXG4gICAgICB9XG4gICAgfSk7XG4gICAgaW5oZXJpdFN0eWxlKHBhcmVudEdyb3VwLCBwb2x5Z29uKTtcbiAgICBwYXJzZUF0dHJpYnV0ZXMoeG1sTm9kZSwgcG9seWdvbiwgdGhpcy5fZGVmcyk7XG4gICAgcmV0dXJuIHBvbHlnb247XG4gIH0sXG4gICdwb2x5bGluZSc6IGZ1bmN0aW9uICh4bWxOb2RlLCBwYXJlbnRHcm91cCkge1xuICAgIHZhciBwYXRoID0gbmV3IFBhdGgoKTtcbiAgICBpbmhlcml0U3R5bGUocGFyZW50R3JvdXAsIHBhdGgpO1xuICAgIHBhcnNlQXR0cmlidXRlcyh4bWxOb2RlLCBwYXRoLCB0aGlzLl9kZWZzKTtcbiAgICB2YXIgcG9pbnRzID0geG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3BvaW50cycpO1xuXG4gICAgaWYgKHBvaW50cykge1xuICAgICAgcG9pbnRzID0gcGFyc2VQb2ludHMocG9pbnRzKTtcbiAgICB9XG5cbiAgICB2YXIgcG9seWxpbmUgPSBuZXcgUG9seWxpbmUoe1xuICAgICAgc2hhcGU6IHtcbiAgICAgICAgcG9pbnRzOiBwb2ludHMgfHwgW11cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcG9seWxpbmU7XG4gIH0sXG4gICdpbWFnZSc6IGZ1bmN0aW9uICh4bWxOb2RlLCBwYXJlbnRHcm91cCkge1xuICAgIHZhciBpbWcgPSBuZXcgWkltYWdlKCk7XG4gICAgaW5oZXJpdFN0eWxlKHBhcmVudEdyb3VwLCBpbWcpO1xuICAgIHBhcnNlQXR0cmlidXRlcyh4bWxOb2RlLCBpbWcsIHRoaXMuX2RlZnMpO1xuICAgIGltZy5zZXRTdHlsZSh7XG4gICAgICBpbWFnZTogeG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3hsaW5rOmhyZWYnKSxcbiAgICAgIHg6IHhtbE5vZGUuZ2V0QXR0cmlidXRlKCd4JyksXG4gICAgICB5OiB4bWxOb2RlLmdldEF0dHJpYnV0ZSgneScpLFxuICAgICAgd2lkdGg6IHhtbE5vZGUuZ2V0QXR0cmlidXRlKCd3aWR0aCcpLFxuICAgICAgaGVpZ2h0OiB4bWxOb2RlLmdldEF0dHJpYnV0ZSgnaGVpZ2h0JylcbiAgICB9KTtcbiAgICByZXR1cm4gaW1nO1xuICB9LFxuICAndGV4dCc6IGZ1bmN0aW9uICh4bWxOb2RlLCBwYXJlbnRHcm91cCkge1xuICAgIHZhciB4ID0geG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3gnKSB8fCAwO1xuICAgIHZhciB5ID0geG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3knKSB8fCAwO1xuICAgIHZhciBkeCA9IHhtbE5vZGUuZ2V0QXR0cmlidXRlKCdkeCcpIHx8IDA7XG4gICAgdmFyIGR5ID0geG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ2R5JykgfHwgMDtcbiAgICB0aGlzLl90ZXh0WCA9IHBhcnNlRmxvYXQoeCkgKyBwYXJzZUZsb2F0KGR4KTtcbiAgICB0aGlzLl90ZXh0WSA9IHBhcnNlRmxvYXQoeSkgKyBwYXJzZUZsb2F0KGR5KTtcbiAgICB2YXIgZyA9IG5ldyBHcm91cCgpO1xuICAgIGluaGVyaXRTdHlsZShwYXJlbnRHcm91cCwgZyk7XG4gICAgcGFyc2VBdHRyaWJ1dGVzKHhtbE5vZGUsIGcsIHRoaXMuX2RlZnMpO1xuICAgIHJldHVybiBnO1xuICB9LFxuICAndHNwYW4nOiBmdW5jdGlvbiAoeG1sTm9kZSwgcGFyZW50R3JvdXApIHtcbiAgICB2YXIgeCA9IHhtbE5vZGUuZ2V0QXR0cmlidXRlKCd4Jyk7XG4gICAgdmFyIHkgPSB4bWxOb2RlLmdldEF0dHJpYnV0ZSgneScpO1xuXG4gICAgaWYgKHggIT0gbnVsbCkge1xuICAgICAgLy8gbmV3IG9mZnNldCB4XG4gICAgICB0aGlzLl90ZXh0WCA9IHBhcnNlRmxvYXQoeCk7XG4gICAgfVxuXG4gICAgaWYgKHkgIT0gbnVsbCkge1xuICAgICAgLy8gbmV3IG9mZnNldCB5XG4gICAgICB0aGlzLl90ZXh0WSA9IHBhcnNlRmxvYXQoeSk7XG4gICAgfVxuXG4gICAgdmFyIGR4ID0geG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ2R4JykgfHwgMDtcbiAgICB2YXIgZHkgPSB4bWxOb2RlLmdldEF0dHJpYnV0ZSgnZHknKSB8fCAwO1xuICAgIHZhciBnID0gbmV3IEdyb3VwKCk7XG4gICAgaW5oZXJpdFN0eWxlKHBhcmVudEdyb3VwLCBnKTtcbiAgICBwYXJzZUF0dHJpYnV0ZXMoeG1sTm9kZSwgZywgdGhpcy5fZGVmcyk7XG4gICAgdGhpcy5fdGV4dFggKz0gZHg7XG4gICAgdGhpcy5fdGV4dFkgKz0gZHk7XG4gICAgcmV0dXJuIGc7XG4gIH0sXG4gICdwYXRoJzogZnVuY3Rpb24gKHhtbE5vZGUsIHBhcmVudEdyb3VwKSB7XG4gICAgLy8gVE9ETyBzdmcgZmlsbCBydWxlXG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvU1ZHL0F0dHJpYnV0ZS9maWxsLXJ1bGVcbiAgICAvLyBwYXRoLnN0eWxlLmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICd4b3InO1xuICAgIHZhciBkID0geG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ2QnKSB8fCAnJzsgLy8gUGVyZm9ybWFuY2Ugc2Vuc2l0aXZlLlxuXG4gICAgdmFyIHBhdGggPSBjcmVhdGVGcm9tU3RyaW5nKGQpO1xuICAgIGluaGVyaXRTdHlsZShwYXJlbnRHcm91cCwgcGF0aCk7XG4gICAgcGFyc2VBdHRyaWJ1dGVzKHhtbE5vZGUsIHBhdGgsIHRoaXMuX2RlZnMpO1xuICAgIHJldHVybiBwYXRoO1xuICB9XG59O1xudmFyIGRlZmluZVBhcnNlcnMgPSB7XG4gICdsaW5lYXJncmFkaWVudCc6IGZ1bmN0aW9uICh4bWxOb2RlKSB7XG4gICAgdmFyIHgxID0gcGFyc2VJbnQoeG1sTm9kZS5nZXRBdHRyaWJ1dGUoJ3gxJykgfHwgMCwgMTApO1xuICAgIHZhciB5MSA9IHBhcnNlSW50KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCd5MScpIHx8IDAsIDEwKTtcbiAgICB2YXIgeDIgPSBwYXJzZUludCh4bWxOb2RlLmdldEF0dHJpYnV0ZSgneDInKSB8fCAxMCwgMTApO1xuICAgIHZhciB5MiA9IHBhcnNlSW50KHhtbE5vZGUuZ2V0QXR0cmlidXRlKCd5MicpIHx8IDAsIDEwKTtcbiAgICB2YXIgZ3JhZGllbnQgPSBuZXcgTGluZWFyR3JhZGllbnQoeDEsIHkxLCB4MiwgeTIpO1xuXG4gICAgX3BhcnNlR3JhZGllbnRDb2xvclN0b3BzKHhtbE5vZGUsIGdyYWRpZW50KTtcblxuICAgIHJldHVybiBncmFkaWVudDtcbiAgfSxcbiAgJ3JhZGlhbGdyYWRpZW50JzogZnVuY3Rpb24gKHhtbE5vZGUpIHt9XG59O1xuXG5mdW5jdGlvbiBfcGFyc2VHcmFkaWVudENvbG9yU3RvcHMoeG1sTm9kZSwgZ3JhZGllbnQpIHtcbiAgdmFyIHN0b3AgPSB4bWxOb2RlLmZpcnN0Q2hpbGQ7XG5cbiAgd2hpbGUgKHN0b3ApIHtcbiAgICBpZiAoc3RvcC5ub2RlVHlwZSA9PT0gMSkge1xuICAgICAgdmFyIG9mZnNldCA9IHN0b3AuZ2V0QXR0cmlidXRlKCdvZmZzZXQnKTtcblxuICAgICAgaWYgKG9mZnNldC5pbmRleE9mKCclJykgPiAwKSB7XG4gICAgICAgIC8vIHBlcmNlbnRhZ2VcbiAgICAgICAgb2Zmc2V0ID0gcGFyc2VJbnQob2Zmc2V0LCAxMCkgLyAxMDA7XG4gICAgICB9IGVsc2UgaWYgKG9mZnNldCkge1xuICAgICAgICAvLyBudW1iZXIgZnJvbSAwIHRvIDFcbiAgICAgICAgb2Zmc2V0ID0gcGFyc2VGbG9hdChvZmZzZXQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb2Zmc2V0ID0gMDtcbiAgICAgIH1cblxuICAgICAgdmFyIHN0b3BDb2xvciA9IHN0b3AuZ2V0QXR0cmlidXRlKCdzdG9wLWNvbG9yJykgfHwgJyMwMDAwMDAnO1xuICAgICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKG9mZnNldCwgc3RvcENvbG9yKTtcbiAgICB9XG5cbiAgICBzdG9wID0gc3RvcC5uZXh0U2libGluZztcbiAgfVxufVxuXG5mdW5jdGlvbiBpbmhlcml0U3R5bGUocGFyZW50LCBjaGlsZCkge1xuICBpZiAocGFyZW50ICYmIHBhcmVudC5fX2luaGVyaXRlZFN0eWxlKSB7XG4gICAgaWYgKCFjaGlsZC5fX2luaGVyaXRlZFN0eWxlKSB7XG4gICAgICBjaGlsZC5fX2luaGVyaXRlZFN0eWxlID0ge307XG4gICAgfVxuXG4gICAgZGVmYXVsdHMoY2hpbGQuX19pbmhlcml0ZWRTdHlsZSwgcGFyZW50Ll9faW5oZXJpdGVkU3R5bGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHBhcnNlUG9pbnRzKHBvaW50c1N0cmluZykge1xuICB2YXIgbGlzdCA9IHRyaW0ocG9pbnRzU3RyaW5nKS5zcGxpdChESUxJTUlURVJfUkVHKTtcbiAgdmFyIHBvaW50cyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkgKz0gMikge1xuICAgIHZhciB4ID0gcGFyc2VGbG9hdChsaXN0W2ldKTtcbiAgICB2YXIgeSA9IHBhcnNlRmxvYXQobGlzdFtpICsgMV0pO1xuICAgIHBvaW50cy5wdXNoKFt4LCB5XSk7XG4gIH1cblxuICByZXR1cm4gcG9pbnRzO1xufVxuXG52YXIgYXR0cmlidXRlc01hcCA9IHtcbiAgJ2ZpbGwnOiAnZmlsbCcsXG4gICdzdHJva2UnOiAnc3Ryb2tlJyxcbiAgJ3N0cm9rZS13aWR0aCc6ICdsaW5lV2lkdGgnLFxuICAnb3BhY2l0eSc6ICdvcGFjaXR5JyxcbiAgJ2ZpbGwtb3BhY2l0eSc6ICdmaWxsT3BhY2l0eScsXG4gICdzdHJva2Utb3BhY2l0eSc6ICdzdHJva2VPcGFjaXR5JyxcbiAgJ3N0cm9rZS1kYXNoYXJyYXknOiAnbGluZURhc2gnLFxuICAnc3Ryb2tlLWRhc2hvZmZzZXQnOiAnbGluZURhc2hPZmZzZXQnLFxuICAnc3Ryb2tlLWxpbmVjYXAnOiAnbGluZUNhcCcsXG4gICdzdHJva2UtbGluZWpvaW4nOiAnbGluZUpvaW4nLFxuICAnc3Ryb2tlLW1pdGVybGltaXQnOiAnbWl0ZXJMaW1pdCcsXG4gICdmb250LWZhbWlseSc6ICdmb250RmFtaWx5JyxcbiAgJ2ZvbnQtc2l6ZSc6ICdmb250U2l6ZScsXG4gICdmb250LXN0eWxlJzogJ2ZvbnRTdHlsZScsXG4gICdmb250LXdlaWdodCc6ICdmb250V2VpZ2h0JyxcbiAgJ3RleHQtYWxpZ24nOiAndGV4dEFsaWduJyxcbiAgJ2FsaWdubWVudC1iYXNlbGluZSc6ICd0ZXh0QmFzZWxpbmUnXG59O1xuXG5mdW5jdGlvbiBwYXJzZUF0dHJpYnV0ZXMoeG1sTm9kZSwgZWwsIGRlZnMsIG9ubHlJbmxpbmVTdHlsZSkge1xuICB2YXIgenJTdHlsZSA9IGVsLl9faW5oZXJpdGVkU3R5bGUgfHwge307XG4gIHZhciBpc1RleHRFbCA9IGVsLnR5cGUgPT09ICd0ZXh0JzsgLy8gVE9ETyBTaGFkb3dcblxuICBpZiAoeG1sTm9kZS5ub2RlVHlwZSA9PT0gMSkge1xuICAgIHBhcnNlVHJhbnNmb3JtQXR0cmlidXRlKHhtbE5vZGUsIGVsKTtcbiAgICBleHRlbmQoenJTdHlsZSwgcGFyc2VTdHlsZUF0dHJpYnV0ZSh4bWxOb2RlKSk7XG5cbiAgICBpZiAoIW9ubHlJbmxpbmVTdHlsZSkge1xuICAgICAgZm9yICh2YXIgc3ZnQXR0ck5hbWUgaW4gYXR0cmlidXRlc01hcCkge1xuICAgICAgICBpZiAoYXR0cmlidXRlc01hcC5oYXNPd25Qcm9wZXJ0eShzdmdBdHRyTmFtZSkpIHtcbiAgICAgICAgICB2YXIgYXR0clZhbHVlID0geG1sTm9kZS5nZXRBdHRyaWJ1dGUoc3ZnQXR0ck5hbWUpO1xuXG4gICAgICAgICAgaWYgKGF0dHJWYWx1ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICB6clN0eWxlW2F0dHJpYnV0ZXNNYXBbc3ZnQXR0ck5hbWVdXSA9IGF0dHJWYWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgZWxGaWxsUHJvcCA9IGlzVGV4dEVsID8gJ3RleHRGaWxsJyA6ICdmaWxsJztcbiAgdmFyIGVsU3Ryb2tlUHJvcCA9IGlzVGV4dEVsID8gJ3RleHRTdHJva2UnIDogJ3N0cm9rZSc7XG4gIGVsLnN0eWxlID0gZWwuc3R5bGUgfHwgbmV3IFN0eWxlKCk7XG4gIHZhciBlbFN0eWxlID0gZWwuc3R5bGU7XG4gIHpyU3R5bGUuZmlsbCAhPSBudWxsICYmIGVsU3R5bGUuc2V0KGVsRmlsbFByb3AsIGdldFBhaW50KHpyU3R5bGUuZmlsbCwgZGVmcykpO1xuICB6clN0eWxlLnN0cm9rZSAhPSBudWxsICYmIGVsU3R5bGUuc2V0KGVsU3Ryb2tlUHJvcCwgZ2V0UGFpbnQoenJTdHlsZS5zdHJva2UsIGRlZnMpKTtcbiAgZWFjaChbJ2xpbmVXaWR0aCcsICdvcGFjaXR5JywgJ2ZpbGxPcGFjaXR5JywgJ3N0cm9rZU9wYWNpdHknLCAnbWl0ZXJMaW1pdCcsICdmb250U2l6ZSddLCBmdW5jdGlvbiAocHJvcE5hbWUpIHtcbiAgICB2YXIgZWxQcm9wTmFtZSA9IHByb3BOYW1lID09PSAnbGluZVdpZHRoJyAmJiBpc1RleHRFbCA/ICd0ZXh0U3Ryb2tlV2lkdGgnIDogcHJvcE5hbWU7XG4gICAgenJTdHlsZVtwcm9wTmFtZV0gIT0gbnVsbCAmJiBlbFN0eWxlLnNldChlbFByb3BOYW1lLCBwYXJzZUZsb2F0KHpyU3R5bGVbcHJvcE5hbWVdKSk7XG4gIH0pO1xuXG4gIGlmICghenJTdHlsZS50ZXh0QmFzZWxpbmUgfHwgenJTdHlsZS50ZXh0QmFzZWxpbmUgPT09ICdhdXRvJykge1xuICAgIHpyU3R5bGUudGV4dEJhc2VsaW5lID0gJ2FscGhhYmV0aWMnO1xuICB9XG5cbiAgaWYgKHpyU3R5bGUudGV4dEJhc2VsaW5lID09PSAnYWxwaGFiZXRpYycpIHtcbiAgICB6clN0eWxlLnRleHRCYXNlbGluZSA9ICdib3R0b20nO1xuICB9XG5cbiAgaWYgKHpyU3R5bGUudGV4dEFsaWduID09PSAnc3RhcnQnKSB7XG4gICAgenJTdHlsZS50ZXh0QWxpZ24gPSAnbGVmdCc7XG4gIH1cblxuICBpZiAoenJTdHlsZS50ZXh0QWxpZ24gPT09ICdlbmQnKSB7XG4gICAgenJTdHlsZS50ZXh0QWxpZ24gPSAncmlnaHQnO1xuICB9XG5cbiAgZWFjaChbJ2xpbmVEYXNoT2Zmc2V0JywgJ2xpbmVDYXAnLCAnbGluZUpvaW4nLCAnZm9udFdlaWdodCcsICdmb250RmFtaWx5JywgJ2ZvbnRTdHlsZScsICd0ZXh0QWxpZ24nLCAndGV4dEJhc2VsaW5lJ10sIGZ1bmN0aW9uIChwcm9wTmFtZSkge1xuICAgIHpyU3R5bGVbcHJvcE5hbWVdICE9IG51bGwgJiYgZWxTdHlsZS5zZXQocHJvcE5hbWUsIHpyU3R5bGVbcHJvcE5hbWVdKTtcbiAgfSk7XG5cbiAgaWYgKHpyU3R5bGUubGluZURhc2gpIHtcbiAgICBlbC5zdHlsZS5saW5lRGFzaCA9IHRyaW0oenJTdHlsZS5saW5lRGFzaCkuc3BsaXQoRElMSU1JVEVSX1JFRyk7XG4gIH1cblxuICBpZiAoZWxTdHlsZVtlbFN0cm9rZVByb3BdICYmIGVsU3R5bGVbZWxTdHJva2VQcm9wXSAhPT0gJ25vbmUnKSB7XG4gICAgLy8gZW5hYmxlIHN0cm9rZVxuICAgIGVsW2VsU3Ryb2tlUHJvcF0gPSB0cnVlO1xuICB9XG5cbiAgZWwuX19pbmhlcml0ZWRTdHlsZSA9IHpyU3R5bGU7XG59XG5cbnZhciB1cmxSZWdleCA9IC91cmxcXChcXHMqIyguKj8pXFwpLztcblxuZnVuY3Rpb24gZ2V0UGFpbnQoc3RyLCBkZWZzKSB7XG4gIC8vIGlmIChzdHIgPT09ICdub25lJykge1xuICAvLyAgICAgcmV0dXJuO1xuICAvLyB9XG4gIHZhciB1cmxNYXRjaCA9IGRlZnMgJiYgc3RyICYmIHN0ci5tYXRjaCh1cmxSZWdleCk7XG5cbiAgaWYgKHVybE1hdGNoKSB7XG4gICAgdmFyIHVybCA9IHRyaW0odXJsTWF0Y2hbMV0pO1xuICAgIHZhciBkZWYgPSBkZWZzW3VybF07XG4gICAgcmV0dXJuIGRlZjtcbiAgfVxuXG4gIHJldHVybiBzdHI7XG59XG5cbnZhciB0cmFuc2Zvcm1SZWdleCA9IC8odHJhbnNsYXRlfHNjYWxlfHJvdGF0ZXxza2V3WHxza2V3WXxtYXRyaXgpXFwoKFtcXC1cXHMwLTlcXC5lLF0qKVxcKS9nO1xuXG5mdW5jdGlvbiBwYXJzZVRyYW5zZm9ybUF0dHJpYnV0ZSh4bWxOb2RlLCBub2RlKSB7XG4gIHZhciB0cmFuc2Zvcm0gPSB4bWxOb2RlLmdldEF0dHJpYnV0ZSgndHJhbnNmb3JtJyk7XG5cbiAgaWYgKHRyYW5zZm9ybSkge1xuICAgIHRyYW5zZm9ybSA9IHRyYW5zZm9ybS5yZXBsYWNlKC8sL2csICcgJyk7XG4gICAgdmFyIG0gPSBudWxsO1xuICAgIHZhciB0cmFuc2Zvcm1PcHMgPSBbXTtcbiAgICB0cmFuc2Zvcm0ucmVwbGFjZSh0cmFuc2Zvcm1SZWdleCwgZnVuY3Rpb24gKHN0ciwgdHlwZSwgdmFsdWUpIHtcbiAgICAgIHRyYW5zZm9ybU9wcy5wdXNoKHR5cGUsIHZhbHVlKTtcbiAgICB9KTtcblxuICAgIGZvciAodmFyIGkgPSB0cmFuc2Zvcm1PcHMubGVuZ3RoIC0gMTsgaSA+IDA7IGkgLT0gMikge1xuICAgICAgdmFyIHZhbHVlID0gdHJhbnNmb3JtT3BzW2ldO1xuICAgICAgdmFyIHR5cGUgPSB0cmFuc2Zvcm1PcHNbaSAtIDFdO1xuICAgICAgbSA9IG0gfHwgbWF0cml4LmNyZWF0ZSgpO1xuXG4gICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSAndHJhbnNsYXRlJzpcbiAgICAgICAgICB2YWx1ZSA9IHRyaW0odmFsdWUpLnNwbGl0KERJTElNSVRFUl9SRUcpO1xuICAgICAgICAgIG1hdHJpeC50cmFuc2xhdGUobSwgbSwgW3BhcnNlRmxvYXQodmFsdWVbMF0pLCBwYXJzZUZsb2F0KHZhbHVlWzFdIHx8IDApXSk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnc2NhbGUnOlxuICAgICAgICAgIHZhbHVlID0gdHJpbSh2YWx1ZSkuc3BsaXQoRElMSU1JVEVSX1JFRyk7XG4gICAgICAgICAgbWF0cml4LnNjYWxlKG0sIG0sIFtwYXJzZUZsb2F0KHZhbHVlWzBdKSwgcGFyc2VGbG9hdCh2YWx1ZVsxXSB8fCB2YWx1ZVswXSldKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdyb3RhdGUnOlxuICAgICAgICAgIHZhbHVlID0gdHJpbSh2YWx1ZSkuc3BsaXQoRElMSU1JVEVSX1JFRyk7XG4gICAgICAgICAgbWF0cml4LnJvdGF0ZShtLCBtLCBwYXJzZUZsb2F0KHZhbHVlWzBdKSk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnc2tldyc6XG4gICAgICAgICAgdmFsdWUgPSB0cmltKHZhbHVlKS5zcGxpdChESUxJTUlURVJfUkVHKTtcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1NrZXcgdHJhbnNmb3JtIGlzIG5vdCBzdXBwb3J0ZWQgeWV0Jyk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnbWF0cml4JzpcbiAgICAgICAgICB2YXIgdmFsdWUgPSB0cmltKHZhbHVlKS5zcGxpdChESUxJTUlURVJfUkVHKTtcbiAgICAgICAgICBtWzBdID0gcGFyc2VGbG9hdCh2YWx1ZVswXSk7XG4gICAgICAgICAgbVsxXSA9IHBhcnNlRmxvYXQodmFsdWVbMV0pO1xuICAgICAgICAgIG1bMl0gPSBwYXJzZUZsb2F0KHZhbHVlWzJdKTtcbiAgICAgICAgICBtWzNdID0gcGFyc2VGbG9hdCh2YWx1ZVszXSk7XG4gICAgICAgICAgbVs0XSA9IHBhcnNlRmxvYXQodmFsdWVbNF0pO1xuICAgICAgICAgIG1bNV0gPSBwYXJzZUZsb2F0KHZhbHVlWzVdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBub2RlLnNldExvY2FsVHJhbnNmb3JtKG0pO1xufSAvLyBWYWx1ZSBtYXkgY29udGFpbiBzcGFjZS5cblxuXG52YXIgc3R5bGVSZWdleCA9IC8oW15cXHM6O10rKVxccyo6XFxzKihbXjo7XSspL2c7XG5cbmZ1bmN0aW9uIHBhcnNlU3R5bGVBdHRyaWJ1dGUoeG1sTm9kZSkge1xuICB2YXIgc3R5bGUgPSB4bWxOb2RlLmdldEF0dHJpYnV0ZSgnc3R5bGUnKTtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuXG4gIGlmICghc3R5bGUpIHtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgdmFyIHN0eWxlTGlzdCA9IHt9O1xuICBzdHlsZVJlZ2V4Lmxhc3RJbmRleCA9IDA7XG4gIHZhciBzdHlsZVJlZ1Jlc3VsdDtcblxuICB3aGlsZSAoKHN0eWxlUmVnUmVzdWx0ID0gc3R5bGVSZWdleC5leGVjKHN0eWxlKSkgIT0gbnVsbCkge1xuICAgIHN0eWxlTGlzdFtzdHlsZVJlZ1Jlc3VsdFsxXV0gPSBzdHlsZVJlZ1Jlc3VsdFsyXTtcbiAgfVxuXG4gIGZvciAodmFyIHN2Z0F0dHJOYW1lIGluIGF0dHJpYnV0ZXNNYXApIHtcbiAgICBpZiAoYXR0cmlidXRlc01hcC5oYXNPd25Qcm9wZXJ0eShzdmdBdHRyTmFtZSkgJiYgc3R5bGVMaXN0W3N2Z0F0dHJOYW1lXSAhPSBudWxsKSB7XG4gICAgICByZXN1bHRbYXR0cmlidXRlc01hcFtzdmdBdHRyTmFtZV1dID0gc3R5bGVMaXN0W3N2Z0F0dHJOYW1lXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBAcGFyYW0ge0FycmF5LjxudW1iZXI+fSB2aWV3Qm94UmVjdFxuICogQHBhcmFtIHtudW1iZXJ9IHdpZHRoXG4gKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0XG4gKiBAcmV0dXJuIHtPYmplY3R9IHtzY2FsZSwgcG9zaXRpb259XG4gKi9cblxuXG5mdW5jdGlvbiBtYWtlVmlld0JveFRyYW5zZm9ybSh2aWV3Qm94UmVjdCwgd2lkdGgsIGhlaWdodCkge1xuICB2YXIgc2NhbGVYID0gd2lkdGggLyB2aWV3Qm94UmVjdC53aWR0aDtcbiAgdmFyIHNjYWxlWSA9IGhlaWdodCAvIHZpZXdCb3hSZWN0LmhlaWdodDtcbiAgdmFyIHNjYWxlID0gTWF0aC5taW4oc2NhbGVYLCBzY2FsZVkpOyAvLyBwcmVzZXJ2ZUFzcGVjdFJhdGlvICd4TWlkWU1pZCdcblxuICB2YXIgdmlld0JveFNjYWxlID0gW3NjYWxlLCBzY2FsZV07XG4gIHZhciB2aWV3Qm94UG9zaXRpb24gPSBbLSh2aWV3Qm94UmVjdC54ICsgdmlld0JveFJlY3Qud2lkdGggLyAyKSAqIHNjYWxlICsgd2lkdGggLyAyLCAtKHZpZXdCb3hSZWN0LnkgKyB2aWV3Qm94UmVjdC5oZWlnaHQgLyAyKSAqIHNjYWxlICsgaGVpZ2h0IC8gMl07XG4gIHJldHVybiB7XG4gICAgc2NhbGU6IHZpZXdCb3hTY2FsZSxcbiAgICBwb3NpdGlvbjogdmlld0JveFBvc2l0aW9uXG4gIH07XG59XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfFhNTEVsZW1lbnR9IHhtbFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRdXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdC53aWR0aF0gRGVmYXVsdCB3aWR0aCBpZiBzdmcgd2lkdGggbm90IHNwZWNpZmllZCBvciBpcyBhIHBlcmNlbnQgdmFsdWUuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdC5oZWlnaHRdIERlZmF1bHQgaGVpZ2h0IGlmIHN2ZyBoZWlnaHQgbm90IHNwZWNpZmllZCBvciBpcyBhIHBlcmNlbnQgdmFsdWUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHQuaWdub3JlVmlld0JveF1cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdC5pZ25vcmVSb290Q2xpcF1cbiAqIEByZXR1cm4ge09iamVjdH0gcmVzdWx0OlxuICoge1xuICogICAgIHJvb3Q6IEdyb3VwLCBUaGUgcm9vdCBvZiB0aGUgdGhlIHJlc3VsdCB0cmVlIG9mIHpyZW5kZXIgc2hhcGVzLFxuICogICAgIHdpZHRoOiBudW1iZXIsIHRoZSB2aWV3cG9ydCB3aWR0aCBvZiB0aGUgU1ZHLFxuICogICAgIGhlaWdodDogbnVtYmVyLCB0aGUgdmlld3BvcnQgaGVpZ2h0IG9mIHRoZSBTVkcsXG4gKiAgICAgdmlld0JveFJlY3Q6IHt4LCB5LCB3aWR0aCwgaGVpZ2h0fSwgdGhlIGRlY2xhcmVkIHZpZXdCb3ggcmVjdCBvZiB0aGUgU1ZHLCBpZiBleGlzdHMsXG4gKiAgICAgdmlld0JveFRyYW5zZm9ybTogdGhlIHtzY2FsZSwgcG9zaXRpb259IGNhbGN1bGF0ZWQgYnkgdmlld0JveCBhbmQgdmlld3BvcnQsIGlzIGV4aXN0cy5cbiAqIH1cbiAqL1xuXG5cbmZ1bmN0aW9uIHBhcnNlU1ZHKHhtbCwgb3B0KSB7XG4gIHZhciBwYXJzZXIgPSBuZXcgU1ZHUGFyc2VyKCk7XG4gIHJldHVybiBwYXJzZXIucGFyc2UoeG1sLCBvcHQpO1xufVxuXG5leHBvcnRzLnBhcnNlWE1MID0gcGFyc2VYTUw7XG5leHBvcnRzLm1ha2VWaWV3Qm94VHJhbnNmb3JtID0gbWFrZVZpZXdCb3hUcmFuc2Zvcm07XG5leHBvcnRzLnBhcnNlU1ZHID0gcGFyc2VTVkc7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///240\\n\")},function(module,exports,__webpack_require__){eval(\"var Path = __webpack_require__(64);\\n\\n/**\\n * 椭圆形状\\n * @module zrender/graphic/shape/Ellipse\\n */\\nvar _default = Path.extend({\\n  type: 'ellipse',\\n  shape: {\\n    cx: 0,\\n    cy: 0,\\n    rx: 0,\\n    ry: 0\\n  },\\n  buildPath: function (ctx, shape) {\\n    var k = 0.5522848;\\n    var x = shape.cx;\\n    var y = shape.cy;\\n    var a = shape.rx;\\n    var b = shape.ry;\\n    var ox = a * k; // 水平控制点偏移量\\n\\n    var oy = b * k; // 垂直控制点偏移量\\n    // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\\n\\n    ctx.moveTo(x - a, y);\\n    ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\\n    ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\\n    ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\\n    ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\\n    ctx.closePath();\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvZ3JhcGhpYy9zaGFwZS9FbGxpcHNlLmpzP2FlNjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLEVBQVM7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1COztBQUVuQixtQkFBbUI7QUFDbkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjI0MS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQYXRoID0gcmVxdWlyZShcIi4uL1BhdGhcIik7XG5cbi8qKlxuICog5qSt5ZyG5b2i54q2XG4gKiBAbW9kdWxlIHpyZW5kZXIvZ3JhcGhpYy9zaGFwZS9FbGxpcHNlXG4gKi9cbnZhciBfZGVmYXVsdCA9IFBhdGguZXh0ZW5kKHtcbiAgdHlwZTogJ2VsbGlwc2UnLFxuICBzaGFwZToge1xuICAgIGN4OiAwLFxuICAgIGN5OiAwLFxuICAgIHJ4OiAwLFxuICAgIHJ5OiAwXG4gIH0sXG4gIGJ1aWxkUGF0aDogZnVuY3Rpb24gKGN0eCwgc2hhcGUpIHtcbiAgICB2YXIgayA9IDAuNTUyMjg0ODtcbiAgICB2YXIgeCA9IHNoYXBlLmN4O1xuICAgIHZhciB5ID0gc2hhcGUuY3k7XG4gICAgdmFyIGEgPSBzaGFwZS5yeDtcbiAgICB2YXIgYiA9IHNoYXBlLnJ5O1xuICAgIHZhciBveCA9IGEgKiBrOyAvLyDmsLTlubPmjqfliLbngrnlgY/np7vph49cblxuICAgIHZhciBveSA9IGIgKiBrOyAvLyDlnoLnm7TmjqfliLbngrnlgY/np7vph49cbiAgICAvLyDku47mpK3lnIbnmoTlt6bnq6/ngrnlvIDlp4vpobrml7bpkojnu5jliLblm5vmnaHkuInmrKHotJ3loZ7lsJTmm7Lnur9cblxuICAgIGN0eC5tb3ZlVG8oeCAtIGEsIHkpO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKHggLSBhLCB5IC0gb3ksIHggLSBveCwgeSAtIGIsIHgsIHkgLSBiKTtcbiAgICBjdHguYmV6aWVyQ3VydmVUbyh4ICsgb3gsIHkgLSBiLCB4ICsgYSwgeSAtIG95LCB4ICsgYSwgeSk7XG4gICAgY3R4LmJlemllckN1cnZlVG8oeCArIGEsIHkgKyBveSwgeCArIG94LCB5ICsgYiwgeCwgeSArIGIpO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKHggLSBveCwgeSArIGIsIHggLSBhLCB5ICsgb3ksIHggLSBhLCB5KTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///241\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrender = __webpack_require__(127);\\n\\nexports.zrender = zrender;\\n\\nvar matrix = __webpack_require__(74);\\n\\nexports.matrix = matrix;\\n\\nvar vector = __webpack_require__(62);\\n\\nexports.vector = vector;\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar colorTool = __webpack_require__(82);\\n\\nexports.color = colorTool;\\n\\nvar graphicUtil = __webpack_require__(63);\\n\\nvar numberUtil = __webpack_require__(65);\\n\\nexports.number = numberUtil;\\n\\nvar formatUtil = __webpack_require__(69);\\n\\nexports.format = formatUtil;\\n\\nvar _throttle = __webpack_require__(110);\\n\\nvar throttle = _throttle.throttle;\\nexports.throttle = _throttle.throttle;\\n\\nvar ecHelper = __webpack_require__(243);\\n\\nexports.helper = ecHelper;\\n\\nvar parseGeoJSON = __webpack_require__(249);\\n\\nexports.parseGeoJSON = parseGeoJSON;\\n\\nvar _List = __webpack_require__(159);\\n\\nexports.List = _List;\\n\\nvar _Model = __webpack_require__(70);\\n\\nexports.Model = _Model;\\n\\nvar _Axis = __webpack_require__(165);\\n\\nexports.Axis = _Axis;\\n\\nvar _env = __webpack_require__(66);\\n\\nexports.env = _env;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Do not mount those modules on 'src/echarts' for better tree shaking.\\n */\\nvar parseGeoJson = parseGeoJSON;\\nvar ecUtil = {};\\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\\n  ecUtil[name] = zrUtil[name];\\n});\\nvar graphic = {};\\nzrUtil.each(['extendShape', 'extendPath', 'makePath', 'makeImage', 'mergePath', 'resizePath', 'createIcon', 'setHoverStyle', 'setLabelStyle', 'setTextStyle', 'setText', 'getFont', 'updateProps', 'initProps', 'getTransform', 'clipPointsByRect', 'clipRectByRect', 'Group', 'Image', 'Text', 'Circle', 'Sector', 'Ring', 'Polygon', 'Polyline', 'Rect', 'Line', 'BezierCurve', 'Arc', 'IncrementalDisplayable', 'CompoundPath', 'LinearGradient', 'RadialGradient', 'BoundingRect'], function (name) {\\n  graphic[name] = graphicUtil[name];\\n});\\nexports.parseGeoJson = parseGeoJson;\\nexports.util = ecUtil;\\nexports.graphic = graphic;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvZXhwb3J0LmpzP2I3MTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxHQUFxQjs7QUFFM0M7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLEVBQXlCOztBQUU5Qzs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBeUI7O0FBRTlDOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFNUMsZ0JBQWdCLG1CQUFPLENBQUMsRUFBd0I7O0FBRWhEOztBQUVBLGtCQUFrQixtQkFBTyxDQUFDLEVBQWdCOztBQUUxQyxpQkFBaUIsbUJBQU8sQ0FBQyxFQUFlOztBQUV4Qzs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyxFQUFlOztBQUV4Qzs7QUFFQSxnQkFBZ0IsbUJBQU8sQ0FBQyxHQUFpQjs7QUFFekM7QUFDQTs7QUFFQSxlQUFlLG1CQUFPLENBQUMsR0FBVTs7QUFFakM7O0FBRUEsbUJBQW1CLG1CQUFPLENBQUMsR0FBMEI7O0FBRXJEOztBQUVBLFlBQVksbUJBQU8sQ0FBQyxHQUFhOztBQUVqQzs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBZTs7QUFFcEM7O0FBRUEsWUFBWSxtQkFBTyxDQUFDLEdBQWM7O0FBRWxDOztBQUVBLFdBQVcsbUJBQU8sQ0FBQyxFQUFzQjs7QUFFekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSIsImZpbGUiOiIyNDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIHpyZW5kZXIgPSByZXF1aXJlKFwienJlbmRlci9saWIvenJlbmRlclwiKTtcblxuZXhwb3J0cy56cmVuZGVyID0genJlbmRlcjtcblxudmFyIG1hdHJpeCA9IHJlcXVpcmUoXCJ6cmVuZGVyL2xpYi9jb3JlL21hdHJpeFwiKTtcblxuZXhwb3J0cy5tYXRyaXggPSBtYXRyaXg7XG5cbnZhciB2ZWN0b3IgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS92ZWN0b3JcIik7XG5cbmV4cG9ydHMudmVjdG9yID0gdmVjdG9yO1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIGNvbG9yVG9vbCA9IHJlcXVpcmUoXCJ6cmVuZGVyL2xpYi90b29sL2NvbG9yXCIpO1xuXG5leHBvcnRzLmNvbG9yID0gY29sb3JUb29sO1xuXG52YXIgZ3JhcGhpY1V0aWwgPSByZXF1aXJlKFwiLi91dGlsL2dyYXBoaWNcIik7XG5cbnZhciBudW1iZXJVdGlsID0gcmVxdWlyZShcIi4vdXRpbC9udW1iZXJcIik7XG5cbmV4cG9ydHMubnVtYmVyID0gbnVtYmVyVXRpbDtcblxudmFyIGZvcm1hdFV0aWwgPSByZXF1aXJlKFwiLi91dGlsL2Zvcm1hdFwiKTtcblxuZXhwb3J0cy5mb3JtYXQgPSBmb3JtYXRVdGlsO1xuXG52YXIgX3Rocm90dGxlID0gcmVxdWlyZShcIi4vdXRpbC90aHJvdHRsZVwiKTtcblxudmFyIHRocm90dGxlID0gX3Rocm90dGxlLnRocm90dGxlO1xuZXhwb3J0cy50aHJvdHRsZSA9IF90aHJvdHRsZS50aHJvdHRsZTtcblxudmFyIGVjSGVscGVyID0gcmVxdWlyZShcIi4vaGVscGVyXCIpO1xuXG5leHBvcnRzLmhlbHBlciA9IGVjSGVscGVyO1xuXG52YXIgcGFyc2VHZW9KU09OID0gcmVxdWlyZShcIi4vY29vcmQvZ2VvL3BhcnNlR2VvSnNvblwiKTtcblxuZXhwb3J0cy5wYXJzZUdlb0pTT04gPSBwYXJzZUdlb0pTT047XG5cbnZhciBfTGlzdCA9IHJlcXVpcmUoXCIuL2RhdGEvTGlzdFwiKTtcblxuZXhwb3J0cy5MaXN0ID0gX0xpc3Q7XG5cbnZhciBfTW9kZWwgPSByZXF1aXJlKFwiLi9tb2RlbC9Nb2RlbFwiKTtcblxuZXhwb3J0cy5Nb2RlbCA9IF9Nb2RlbDtcblxudmFyIF9BeGlzID0gcmVxdWlyZShcIi4vY29vcmQvQXhpc1wiKTtcblxuZXhwb3J0cy5BeGlzID0gX0F4aXM7XG5cbnZhciBfZW52ID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvZW52XCIpO1xuXG5leHBvcnRzLmVudiA9IF9lbnY7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyoqXG4gKiBEbyBub3QgbW91bnQgdGhvc2UgbW9kdWxlcyBvbiAnc3JjL2VjaGFydHMnIGZvciBiZXR0ZXIgdHJlZSBzaGFraW5nLlxuICovXG52YXIgcGFyc2VHZW9Kc29uID0gcGFyc2VHZW9KU09OO1xudmFyIGVjVXRpbCA9IHt9O1xuenJVdGlsLmVhY2goWydtYXAnLCAnZWFjaCcsICdmaWx0ZXInLCAnaW5kZXhPZicsICdpbmhlcml0cycsICdyZWR1Y2UnLCAnZmlsdGVyJywgJ2JpbmQnLCAnY3VycnknLCAnaXNBcnJheScsICdpc1N0cmluZycsICdpc09iamVjdCcsICdpc0Z1bmN0aW9uJywgJ2V4dGVuZCcsICdkZWZhdWx0cycsICdjbG9uZScsICdtZXJnZSddLCBmdW5jdGlvbiAobmFtZSkge1xuICBlY1V0aWxbbmFtZV0gPSB6clV0aWxbbmFtZV07XG59KTtcbnZhciBncmFwaGljID0ge307XG56clV0aWwuZWFjaChbJ2V4dGVuZFNoYXBlJywgJ2V4dGVuZFBhdGgnLCAnbWFrZVBhdGgnLCAnbWFrZUltYWdlJywgJ21lcmdlUGF0aCcsICdyZXNpemVQYXRoJywgJ2NyZWF0ZUljb24nLCAnc2V0SG92ZXJTdHlsZScsICdzZXRMYWJlbFN0eWxlJywgJ3NldFRleHRTdHlsZScsICdzZXRUZXh0JywgJ2dldEZvbnQnLCAndXBkYXRlUHJvcHMnLCAnaW5pdFByb3BzJywgJ2dldFRyYW5zZm9ybScsICdjbGlwUG9pbnRzQnlSZWN0JywgJ2NsaXBSZWN0QnlSZWN0JywgJ0dyb3VwJywgJ0ltYWdlJywgJ1RleHQnLCAnQ2lyY2xlJywgJ1NlY3RvcicsICdSaW5nJywgJ1BvbHlnb24nLCAnUG9seWxpbmUnLCAnUmVjdCcsICdMaW5lJywgJ0JlemllckN1cnZlJywgJ0FyYycsICdJbmNyZW1lbnRhbERpc3BsYXlhYmxlJywgJ0NvbXBvdW5kUGF0aCcsICdMaW5lYXJHcmFkaWVudCcsICdSYWRpYWxHcmFkaWVudCcsICdCb3VuZGluZ1JlY3QnXSwgZnVuY3Rpb24gKG5hbWUpIHtcbiAgZ3JhcGhpY1tuYW1lXSA9IGdyYXBoaWNVdGlsW25hbWVdO1xufSk7XG5leHBvcnRzLnBhcnNlR2VvSnNvbiA9IHBhcnNlR2VvSnNvbjtcbmV4cG9ydHMudXRpbCA9IGVjVXRpbDtcbmV4cG9ydHMuZ3JhcGhpYyA9IGdyYXBoaWM7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///242\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar createListFromArray = __webpack_require__(158);\\n\\nvar axisHelper = __webpack_require__(86);\\n\\nvar axisModelCommonMixin = __webpack_require__(164);\\n\\nvar Model = __webpack_require__(70);\\n\\nvar _layout = __webpack_require__(78);\\n\\nvar getLayoutRect = _layout.getLayoutRect;\\nexports.getLayoutRect = _layout.getLayoutRect;\\n\\nvar _dataStackHelper = __webpack_require__(79);\\n\\nvar enableDataStack = _dataStackHelper.enableDataStack;\\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\\n\\nvar _completeDimensions = __webpack_require__(161);\\n\\nexports.completeDimensions = _completeDimensions;\\n\\nvar _createDimensions = __webpack_require__(160);\\n\\nexports.createDimensions = _createDimensions;\\n\\nvar _symbol = __webpack_require__(113);\\n\\nexports.createSymbol = _symbol.createSymbol;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// import createGraphFromNodeEdge from \\'./chart/helper/createGraphFromNodeEdge\\';\\n\\n/**\\n * Create a muti dimension List structure from seriesModel.\\n * @param  {module:echarts/model/Model} seriesModel\\n * @return {module:echarts/data/List} list\\n */\\nfunction createList(seriesModel) {\\n  return createListFromArray(seriesModel.getSource(), seriesModel);\\n} // export function createGraph(seriesModel) {\\n//     var nodes = seriesModel.get(\\'data\\');\\n//     var links = seriesModel.get(\\'links\\');\\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\\n// }\\n\\n\\nvar dataStack = {\\n  isDimensionStacked: isDimensionStacked,\\n  enableDataStack: enableDataStack,\\n  getStackedDimension: getStackedDimension\\n};\\n/**\\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\\n * @param {string} symbolDesc\\n * @param {number} x\\n * @param {number} y\\n * @param {number} w\\n * @param {number} h\\n * @param {string} color\\n */\\n\\n/**\\n * Create scale\\n * @param {Array.<number>} dataExtent\\n * @param {Object|module:echarts/Model} option\\n */\\nfunction createScale(dataExtent, option) {\\n  var axisModel = option;\\n\\n  if (!Model.isInstance(option)) {\\n    axisModel = new Model(option);\\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\\n  }\\n\\n  var scale = axisHelper.createScaleByModel(axisModel);\\n  scale.setExtent(dataExtent[0], dataExtent[1]);\\n  axisHelper.niceScaleExtent(scale, axisModel);\\n  return scale;\\n}\\n/**\\n * Mixin common methods to axis model,\\n *\\n * Inlcude methods\\n * `getFormattedLabels() => Array.<string>`\\n * `getCategories() => Array.<string>`\\n * `getMin(origin: boolean) => number`\\n * `getMax(origin: boolean) => number`\\n * `getNeedCrossZero() => boolean`\\n * `setRange(start: number, end: number)`\\n * `resetRange()`\\n */\\n\\n\\nfunction mixinAxisModelCommonMethods(Model) {\\n  zrUtil.mixin(Model, axisModelCommonMixin);\\n}\\n\\nexports.createList = createList;\\nexports.dataStack = dataStack;\\nexports.createScale = createScale;\\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvaGVscGVyLmpzPzE1NDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFNUMsMEJBQTBCLG1CQUFPLENBQUMsR0FBb0M7O0FBRXRFLGlCQUFpQixtQkFBTyxDQUFDLEVBQW9COztBQUU3QywyQkFBMkIsbUJBQU8sQ0FBQyxHQUE4Qjs7QUFFakUsWUFBWSxtQkFBTyxDQUFDLEVBQWU7O0FBRW5DLGNBQWMsbUJBQU8sQ0FBQyxFQUFlOztBQUVyQztBQUNBOztBQUVBLHVCQUF1QixtQkFBTyxDQUFDLEVBQStCOztBQUU5RDtBQUNBO0FBQ0E7O0FBRUEsMEJBQTBCLG1CQUFPLENBQUMsR0FBa0M7O0FBRXBFOztBQUVBLHdCQUF3QixtQkFBTyxDQUFDLEdBQWdDOztBQUVoRTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsR0FBZTs7QUFFckM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkMsWUFBWSx5QkFBeUI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEI7O0FBRUE7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixXQUFXLDRCQUE0QjtBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjI0My5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIGNyZWF0ZUxpc3RGcm9tQXJyYXkgPSByZXF1aXJlKFwiLi9jaGFydC9oZWxwZXIvY3JlYXRlTGlzdEZyb21BcnJheVwiKTtcblxudmFyIGF4aXNIZWxwZXIgPSByZXF1aXJlKFwiLi9jb29yZC9heGlzSGVscGVyXCIpO1xuXG52YXIgYXhpc01vZGVsQ29tbW9uTWl4aW4gPSByZXF1aXJlKFwiLi9jb29yZC9heGlzTW9kZWxDb21tb25NaXhpblwiKTtcblxudmFyIE1vZGVsID0gcmVxdWlyZShcIi4vbW9kZWwvTW9kZWxcIik7XG5cbnZhciBfbGF5b3V0ID0gcmVxdWlyZShcIi4vdXRpbC9sYXlvdXRcIik7XG5cbnZhciBnZXRMYXlvdXRSZWN0ID0gX2xheW91dC5nZXRMYXlvdXRSZWN0O1xuZXhwb3J0cy5nZXRMYXlvdXRSZWN0ID0gX2xheW91dC5nZXRMYXlvdXRSZWN0O1xuXG52YXIgX2RhdGFTdGFja0hlbHBlciA9IHJlcXVpcmUoXCIuL2RhdGEvaGVscGVyL2RhdGFTdGFja0hlbHBlclwiKTtcblxudmFyIGVuYWJsZURhdGFTdGFjayA9IF9kYXRhU3RhY2tIZWxwZXIuZW5hYmxlRGF0YVN0YWNrO1xudmFyIGlzRGltZW5zaW9uU3RhY2tlZCA9IF9kYXRhU3RhY2tIZWxwZXIuaXNEaW1lbnNpb25TdGFja2VkO1xudmFyIGdldFN0YWNrZWREaW1lbnNpb24gPSBfZGF0YVN0YWNrSGVscGVyLmdldFN0YWNrZWREaW1lbnNpb247XG5cbnZhciBfY29tcGxldGVEaW1lbnNpb25zID0gcmVxdWlyZShcIi4vZGF0YS9oZWxwZXIvY29tcGxldGVEaW1lbnNpb25zXCIpO1xuXG5leHBvcnRzLmNvbXBsZXRlRGltZW5zaW9ucyA9IF9jb21wbGV0ZURpbWVuc2lvbnM7XG5cbnZhciBfY3JlYXRlRGltZW5zaW9ucyA9IHJlcXVpcmUoXCIuL2RhdGEvaGVscGVyL2NyZWF0ZURpbWVuc2lvbnNcIik7XG5cbmV4cG9ydHMuY3JlYXRlRGltZW5zaW9ucyA9IF9jcmVhdGVEaW1lbnNpb25zO1xuXG52YXIgX3N5bWJvbCA9IHJlcXVpcmUoXCIuL3V0aWwvc3ltYm9sXCIpO1xuXG5leHBvcnRzLmNyZWF0ZVN5bWJvbCA9IF9zeW1ib2wuY3JlYXRlU3ltYm9sO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG4vLyBpbXBvcnQgY3JlYXRlR3JhcGhGcm9tTm9kZUVkZ2UgZnJvbSAnLi9jaGFydC9oZWxwZXIvY3JlYXRlR3JhcGhGcm9tTm9kZUVkZ2UnO1xuXG4vKipcbiAqIENyZWF0ZSBhIG11dGkgZGltZW5zaW9uIExpc3Qgc3RydWN0dXJlIGZyb20gc2VyaWVzTW9kZWwuXG4gKiBAcGFyYW0gIHttb2R1bGU6ZWNoYXJ0cy9tb2RlbC9Nb2RlbH0gc2VyaWVzTW9kZWxcbiAqIEByZXR1cm4ge21vZHVsZTplY2hhcnRzL2RhdGEvTGlzdH0gbGlzdFxuICovXG5mdW5jdGlvbiBjcmVhdGVMaXN0KHNlcmllc01vZGVsKSB7XG4gIHJldHVybiBjcmVhdGVMaXN0RnJvbUFycmF5KHNlcmllc01vZGVsLmdldFNvdXJjZSgpLCBzZXJpZXNNb2RlbCk7XG59IC8vIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVHcmFwaChzZXJpZXNNb2RlbCkge1xuLy8gICAgIHZhciBub2RlcyA9IHNlcmllc01vZGVsLmdldCgnZGF0YScpO1xuLy8gICAgIHZhciBsaW5rcyA9IHNlcmllc01vZGVsLmdldCgnbGlua3MnKTtcbi8vICAgICByZXR1cm4gY3JlYXRlR3JhcGhGcm9tTm9kZUVkZ2Uobm9kZXMsIGxpbmtzLCBzZXJpZXNNb2RlbCk7XG4vLyB9XG5cblxudmFyIGRhdGFTdGFjayA9IHtcbiAgaXNEaW1lbnNpb25TdGFja2VkOiBpc0RpbWVuc2lvblN0YWNrZWQsXG4gIGVuYWJsZURhdGFTdGFjazogZW5hYmxlRGF0YVN0YWNrLFxuICBnZXRTdGFja2VkRGltZW5zaW9uOiBnZXRTdGFja2VkRGltZW5zaW9uXG59O1xuLyoqXG4gKiBDcmVhdGUgYSBzeW1ib2wgZWxlbWVudCB3aXRoIGdpdmVuIHN5bWJvbCBjb25maWd1cmF0aW9uOiBzaGFwZSwgeCwgeSwgd2lkdGgsIGhlaWdodCwgY29sb3JcbiAqIEBzZWUgaHR0cDovL2VjaGFydHMuYmFpZHUuY29tL29wdGlvbi5odG1sI3Nlcmllcy1zY2F0dGVyLnN5bWJvbFxuICogQHBhcmFtIHtzdHJpbmd9IHN5bWJvbERlc2NcbiAqIEBwYXJhbSB7bnVtYmVyfSB4XG4gKiBAcGFyYW0ge251bWJlcn0geVxuICogQHBhcmFtIHtudW1iZXJ9IHdcbiAqIEBwYXJhbSB7bnVtYmVyfSBoXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3JcbiAqL1xuXG4vKipcbiAqIENyZWF0ZSBzY2FsZVxuICogQHBhcmFtIHtBcnJheS48bnVtYmVyPn0gZGF0YUV4dGVudFxuICogQHBhcmFtIHtPYmplY3R8bW9kdWxlOmVjaGFydHMvTW9kZWx9IG9wdGlvblxuICovXG5mdW5jdGlvbiBjcmVhdGVTY2FsZShkYXRhRXh0ZW50LCBvcHRpb24pIHtcbiAgdmFyIGF4aXNNb2RlbCA9IG9wdGlvbjtcblxuICBpZiAoIU1vZGVsLmlzSW5zdGFuY2Uob3B0aW9uKSkge1xuICAgIGF4aXNNb2RlbCA9IG5ldyBNb2RlbChvcHRpb24pO1xuICAgIHpyVXRpbC5taXhpbihheGlzTW9kZWwsIGF4aXNNb2RlbENvbW1vbk1peGluKTtcbiAgfVxuXG4gIHZhciBzY2FsZSA9IGF4aXNIZWxwZXIuY3JlYXRlU2NhbGVCeU1vZGVsKGF4aXNNb2RlbCk7XG4gIHNjYWxlLnNldEV4dGVudChkYXRhRXh0ZW50WzBdLCBkYXRhRXh0ZW50WzFdKTtcbiAgYXhpc0hlbHBlci5uaWNlU2NhbGVFeHRlbnQoc2NhbGUsIGF4aXNNb2RlbCk7XG4gIHJldHVybiBzY2FsZTtcbn1cbi8qKlxuICogTWl4aW4gY29tbW9uIG1ldGhvZHMgdG8gYXhpcyBtb2RlbCxcbiAqXG4gKiBJbmxjdWRlIG1ldGhvZHNcbiAqIGBnZXRGb3JtYXR0ZWRMYWJlbHMoKSA9PiBBcnJheS48c3RyaW5nPmBcbiAqIGBnZXRDYXRlZ29yaWVzKCkgPT4gQXJyYXkuPHN0cmluZz5gXG4gKiBgZ2V0TWluKG9yaWdpbjogYm9vbGVhbikgPT4gbnVtYmVyYFxuICogYGdldE1heChvcmlnaW46IGJvb2xlYW4pID0+IG51bWJlcmBcbiAqIGBnZXROZWVkQ3Jvc3NaZXJvKCkgPT4gYm9vbGVhbmBcbiAqIGBzZXRSYW5nZShzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcilgXG4gKiBgcmVzZXRSYW5nZSgpYFxuICovXG5cblxuZnVuY3Rpb24gbWl4aW5BeGlzTW9kZWxDb21tb25NZXRob2RzKE1vZGVsKSB7XG4gIHpyVXRpbC5taXhpbihNb2RlbCwgYXhpc01vZGVsQ29tbW9uTWl4aW4pO1xufVxuXG5leHBvcnRzLmNyZWF0ZUxpc3QgPSBjcmVhdGVMaXN0O1xuZXhwb3J0cy5kYXRhU3RhY2sgPSBkYXRhU3RhY2s7XG5leHBvcnRzLmNyZWF0ZVNjYWxlID0gY3JlYXRlU2NhbGU7XG5leHBvcnRzLm1peGluQXhpc01vZGVsQ29tbW9uTWV0aG9kcyA9IG1peGluQXhpc01vZGVsQ29tbW9uTWV0aG9kczsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///243\\n')},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nfunction defaultKeyGetter(item) {\\n  return item;\\n}\\n/**\\n * @param {Array} oldArr\\n * @param {Array} newArr\\n * @param {Function} oldKeyGetter\\n * @param {Function} newKeyGetter\\n * @param {Object} [context] Can be visited by this.context in callback.\\n */\\n\\n\\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\\n  this._old = oldArr;\\n  this._new = newArr;\\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\\n  this.context = context;\\n}\\n\\nDataDiffer.prototype = {\\n  constructor: DataDiffer,\\n\\n  /**\\n   * Callback function when add a data\\n   */\\n  add: function (func) {\\n    this._add = func;\\n    return this;\\n  },\\n\\n  /**\\n   * Callback function when update a data\\n   */\\n  update: function (func) {\\n    this._update = func;\\n    return this;\\n  },\\n\\n  /**\\n   * Callback function when remove a data\\n   */\\n  remove: function (func) {\\n    this._remove = func;\\n    return this;\\n  },\\n  execute: function () {\\n    var oldArr = this._old;\\n    var newArr = this._new;\\n    var oldDataIndexMap = {};\\n    var newDataIndexMap = {};\\n    var oldDataKeyArr = [];\\n    var newDataKeyArr = [];\\n    var i;\\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\\n    // when duplicate keys exists (consider newDataIndex.pop() below).\\n    // For performance consideration, these code below do not look neat.\\n\\n    for (i = 0; i < oldArr.length; i++) {\\n      var key = oldDataKeyArr[i];\\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\\n\\n      if (idx != null) {\\n        // Consider there is duplicate key (for example, use dataItem.name as key).\\n        // We should make sure every item in newArr and oldArr can be visited.\\n        var len = idx.length;\\n\\n        if (len) {\\n          len === 1 && (newDataIndexMap[key] = null);\\n          idx = idx.unshift();\\n        } else {\\n          newDataIndexMap[key] = null;\\n        }\\n\\n        this._update && this._update(idx, i);\\n      } else {\\n        this._remove && this._remove(i);\\n      }\\n    }\\n\\n    for (var i = 0; i < newDataKeyArr.length; i++) {\\n      var key = newDataKeyArr[i];\\n\\n      if (newDataIndexMap.hasOwnProperty(key)) {\\n        var idx = newDataIndexMap[key];\\n\\n        if (idx == null) {\\n          continue;\\n        } // idx can never be empty array here. see 'set null' logic above.\\n\\n\\n        if (!idx.length) {\\n          this._add && this._add(idx);\\n        } else {\\n          for (var j = 0, len = idx.length; j < len; j++) {\\n            this._add && this._add(idx[j]);\\n          }\\n        }\\n      }\\n    }\\n  }\\n};\\n\\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\\n  for (var i = 0; i < arr.length; i++) {\\n    // Add prefix to avoid conflict with Object.prototype.\\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\\n    var existence = map[key];\\n\\n    if (existence == null) {\\n      keyArr.push(key);\\n      map[key] = i;\\n    } else {\\n      if (!existence.length) {\\n        map[key] = existence = [existence];\\n      }\\n\\n      existence.push(i);\\n    }\\n  }\\n}\\n\\nvar _default = DataDiffer;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///244\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Scale = __webpack_require__(92);\\n\\nvar OrdinalMeta = __webpack_require__(162);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Linear continuous scale\\n * @module echarts/coord/scale/Ordinal\\n *\\n * http://en.wikipedia.org/wiki/Level_of_measurement\\n */\\n// FIXME only one data\\nvar scaleProto = Scale.prototype;\\nvar OrdinalScale = Scale.extend({\\n  type: \\'ordinal\\',\\n\\n  /**\\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\\n   */\\n  init: function (ordinalMeta, extent) {\\n    // Caution: Should not use instanceof, consider ec-extensions using\\n    // import approach to get OrdinalMeta class.\\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\\n      ordinalMeta = new OrdinalMeta({\\n        categories: ordinalMeta\\n      });\\n    }\\n\\n    this._ordinalMeta = ordinalMeta;\\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\\n  },\\n  parse: function (val) {\\n    return typeof val === \\'string\\' ? this._ordinalMeta.getOrdinal(val) // val might be float.\\n    : Math.round(val);\\n  },\\n  contain: function (rank) {\\n    rank = this.parse(rank);\\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\\n  },\\n\\n  /**\\n   * Normalize given rank or name to linear [0, 1]\\n   * @param {number|string} [val]\\n   * @return {number}\\n   */\\n  normalize: function (val) {\\n    return scaleProto.normalize.call(this, this.parse(val));\\n  },\\n  scale: function (val) {\\n    return Math.round(scaleProto.scale.call(this, val));\\n  },\\n\\n  /**\\n   * @return {Array}\\n   */\\n  getTicks: function () {\\n    var ticks = [];\\n    var extent = this._extent;\\n    var rank = extent[0];\\n\\n    while (rank <= extent[1]) {\\n      ticks.push(rank);\\n      rank++;\\n    }\\n\\n    return ticks;\\n  },\\n\\n  /**\\n   * Get item on rank n\\n   * @param {number} n\\n   * @return {string}\\n   */\\n  getLabel: function (n) {\\n    if (!this.isBlank()) {\\n      // Note that if no data, ordinalMeta.categories is an empty array.\\n      return this._ordinalMeta.categories[n];\\n    }\\n  },\\n\\n  /**\\n   * @return {number}\\n   */\\n  count: function () {\\n    return this._extent[1] - this._extent[0] + 1;\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  unionExtentFromData: function (data, dim) {\\n    this.unionExtent(data.getApproximateExtent(dim));\\n  },\\n  getOrdinalMeta: function () {\\n    return this._ordinalMeta;\\n  },\\n  niceTicks: zrUtil.noop,\\n  niceExtent: zrUtil.noop\\n});\\n/**\\n * @return {module:echarts/scale/Time}\\n */\\n\\nOrdinalScale.create = function () {\\n  return new OrdinalScale();\\n};\\n\\nvar _default = OrdinalScale;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvc2NhbGUvT3JkaW5hbC5qcz8xOGMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDLFlBQVksbUJBQU8sQ0FBQyxFQUFTOztBQUU3QixrQkFBa0IsbUJBQU8sQ0FBQyxHQUFxQjs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLCtDQUErQztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0IsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiMjQ1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgU2NhbGUgPSByZXF1aXJlKFwiLi9TY2FsZVwiKTtcblxudmFyIE9yZGluYWxNZXRhID0gcmVxdWlyZShcIi4uL2RhdGEvT3JkaW5hbE1ldGFcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyoqXG4gKiBMaW5lYXIgY29udGludW91cyBzY2FsZVxuICogQG1vZHVsZSBlY2hhcnRzL2Nvb3JkL3NjYWxlL09yZGluYWxcbiAqXG4gKiBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xldmVsX29mX21lYXN1cmVtZW50XG4gKi9cbi8vIEZJWE1FIG9ubHkgb25lIGRhdGFcbnZhciBzY2FsZVByb3RvID0gU2NhbGUucHJvdG90eXBlO1xudmFyIE9yZGluYWxTY2FsZSA9IFNjYWxlLmV4dGVuZCh7XG4gIHR5cGU6ICdvcmRpbmFsJyxcblxuICAvKipcbiAgICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9kYXRhL09yZGlhbmxNZXRhfEFycmF5LjxzdHJpbmc+fSBvcmRpbmFsTWV0YVxuICAgKi9cbiAgaW5pdDogZnVuY3Rpb24gKG9yZGluYWxNZXRhLCBleHRlbnQpIHtcbiAgICAvLyBDYXV0aW9uOiBTaG91bGQgbm90IHVzZSBpbnN0YW5jZW9mLCBjb25zaWRlciBlYy1leHRlbnNpb25zIHVzaW5nXG4gICAgLy8gaW1wb3J0IGFwcHJvYWNoIHRvIGdldCBPcmRpbmFsTWV0YSBjbGFzcy5cbiAgICBpZiAoIW9yZGluYWxNZXRhIHx8IHpyVXRpbC5pc0FycmF5KG9yZGluYWxNZXRhKSkge1xuICAgICAgb3JkaW5hbE1ldGEgPSBuZXcgT3JkaW5hbE1ldGEoe1xuICAgICAgICBjYXRlZ29yaWVzOiBvcmRpbmFsTWV0YVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdGhpcy5fb3JkaW5hbE1ldGEgPSBvcmRpbmFsTWV0YTtcbiAgICB0aGlzLl9leHRlbnQgPSBleHRlbnQgfHwgWzAsIG9yZGluYWxNZXRhLmNhdGVnb3JpZXMubGVuZ3RoIC0gMV07XG4gIH0sXG4gIHBhcnNlOiBmdW5jdGlvbiAodmFsKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnID8gdGhpcy5fb3JkaW5hbE1ldGEuZ2V0T3JkaW5hbCh2YWwpIC8vIHZhbCBtaWdodCBiZSBmbG9hdC5cbiAgICA6IE1hdGgucm91bmQodmFsKTtcbiAgfSxcbiAgY29udGFpbjogZnVuY3Rpb24gKHJhbmspIHtcbiAgICByYW5rID0gdGhpcy5wYXJzZShyYW5rKTtcbiAgICByZXR1cm4gc2NhbGVQcm90by5jb250YWluLmNhbGwodGhpcywgcmFuaykgJiYgdGhpcy5fb3JkaW5hbE1ldGEuY2F0ZWdvcmllc1tyYW5rXSAhPSBudWxsO1xuICB9LFxuXG4gIC8qKlxuICAgKiBOb3JtYWxpemUgZ2l2ZW4gcmFuayBvciBuYW1lIHRvIGxpbmVhciBbMCwgMV1cbiAgICogQHBhcmFtIHtudW1iZXJ8c3RyaW5nfSBbdmFsXVxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAqL1xuICBub3JtYWxpemU6IGZ1bmN0aW9uICh2YWwpIHtcbiAgICByZXR1cm4gc2NhbGVQcm90by5ub3JtYWxpemUuY2FsbCh0aGlzLCB0aGlzLnBhcnNlKHZhbCkpO1xuICB9LFxuICBzY2FsZTogZnVuY3Rpb24gKHZhbCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKHNjYWxlUHJvdG8uc2NhbGUuY2FsbCh0aGlzLCB2YWwpKTtcbiAgfSxcblxuICAvKipcbiAgICogQHJldHVybiB7QXJyYXl9XG4gICAqL1xuICBnZXRUaWNrczogZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aWNrcyA9IFtdO1xuICAgIHZhciBleHRlbnQgPSB0aGlzLl9leHRlbnQ7XG4gICAgdmFyIHJhbmsgPSBleHRlbnRbMF07XG5cbiAgICB3aGlsZSAocmFuayA8PSBleHRlbnRbMV0pIHtcbiAgICAgIHRpY2tzLnB1c2gocmFuayk7XG4gICAgICByYW5rKys7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRpY2tzO1xuICB9LFxuXG4gIC8qKlxuICAgKiBHZXQgaXRlbSBvbiByYW5rIG5cbiAgICogQHBhcmFtIHtudW1iZXJ9IG5cbiAgICogQHJldHVybiB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0TGFiZWw6IGZ1bmN0aW9uIChuKSB7XG4gICAgaWYgKCF0aGlzLmlzQmxhbmsoKSkge1xuICAgICAgLy8gTm90ZSB0aGF0IGlmIG5vIGRhdGEsIG9yZGluYWxNZXRhLmNhdGVnb3JpZXMgaXMgYW4gZW1wdHkgYXJyYXkuXG4gICAgICByZXR1cm4gdGhpcy5fb3JkaW5hbE1ldGEuY2F0ZWdvcmllc1tuXTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGNvdW50OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2V4dGVudFsxXSAtIHRoaXMuX2V4dGVudFswXSArIDE7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgdW5pb25FeHRlbnRGcm9tRGF0YTogZnVuY3Rpb24gKGRhdGEsIGRpbSkge1xuICAgIHRoaXMudW5pb25FeHRlbnQoZGF0YS5nZXRBcHByb3hpbWF0ZUV4dGVudChkaW0pKTtcbiAgfSxcbiAgZ2V0T3JkaW5hbE1ldGE6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fb3JkaW5hbE1ldGE7XG4gIH0sXG4gIG5pY2VUaWNrczogenJVdGlsLm5vb3AsXG4gIG5pY2VFeHRlbnQ6IHpyVXRpbC5ub29wXG59KTtcbi8qKlxuICogQHJldHVybiB7bW9kdWxlOmVjaGFydHMvc2NhbGUvVGltZX1cbiAqL1xuXG5PcmRpbmFsU2NhbGUuY3JlYXRlID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gbmV3IE9yZGluYWxTY2FsZSgpO1xufTtcblxudmFyIF9kZWZhdWx0ID0gT3JkaW5hbFNjYWxlO1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///245\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar _number = __webpack_require__(65);\\n\\nvar parsePercent = _number.parsePercent;\\n\\nvar _dataStackHelper = __webpack_require__(79);\\n\\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\\n\\nvar createRenderPlanner = __webpack_require__(109);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/* global Float32Array */\\nvar STACK_PREFIX = '__ec_stack_';\\nvar LARGE_BAR_MIN_WIDTH = 0.5;\\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\\n\\nfunction getSeriesStackId(seriesModel) {\\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\\n}\\n\\nfunction getAxisKey(axis) {\\n  return axis.dim + axis.index;\\n}\\n/**\\n * @param {Object} opt\\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\\n * @param {number} opt.count Positive interger.\\n * @param {number} [opt.barWidth]\\n * @param {number} [opt.barMaxWidth]\\n * @param {number} [opt.barGap]\\n * @param {number} [opt.barCategoryGap]\\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\\n */\\n\\n\\nfunction getLayoutOnAxis(opt) {\\n  var params = [];\\n  var baseAxis = opt.axis;\\n  var axisKey = 'axis0';\\n\\n  if (baseAxis.type !== 'category') {\\n    return;\\n  }\\n\\n  var bandWidth = baseAxis.getBandWidth();\\n\\n  for (var i = 0; i < opt.count || 0; i++) {\\n    params.push(zrUtil.defaults({\\n      bandWidth: bandWidth,\\n      axisKey: axisKey,\\n      stackId: STACK_PREFIX + i\\n    }, opt));\\n  }\\n\\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\\n  var result = [];\\n\\n  for (var i = 0; i < opt.count; i++) {\\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\\n    item.offsetCenter = item.offset + item.width / 2;\\n    result.push(item);\\n  }\\n\\n  return result;\\n}\\n\\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\\n  var seriesModels = [];\\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\\n    // Check series coordinate, do layout for cartesian2d only\\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\\n      seriesModels.push(seriesModel);\\n    }\\n  });\\n  return seriesModels;\\n}\\n\\nfunction makeColumnLayout(barSeries) {\\n  var seriesInfoList = [];\\n  zrUtil.each(barSeries, function (seriesModel) {\\n    var data = seriesModel.getData();\\n    var cartesian = seriesModel.coordinateSystem;\\n    var baseAxis = cartesian.getBaseAxis();\\n    var axisExtent = baseAxis.getExtent();\\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\\n    var barGap = seriesModel.get('barGap');\\n    var barCategoryGap = seriesModel.get('barCategoryGap');\\n    seriesInfoList.push({\\n      bandWidth: bandWidth,\\n      barWidth: barWidth,\\n      barMaxWidth: barMaxWidth,\\n      barGap: barGap,\\n      barCategoryGap: barCategoryGap,\\n      axisKey: getAxisKey(baseAxis),\\n      stackId: getSeriesStackId(seriesModel)\\n    });\\n  });\\n  return doCalBarWidthAndOffset(seriesInfoList);\\n}\\n\\nfunction doCalBarWidthAndOffset(seriesInfoList) {\\n  // Columns info on each category axis. Key is cartesian name\\n  var columnsMap = {};\\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\\n    var axisKey = seriesInfo.axisKey;\\n    var bandWidth = seriesInfo.bandWidth;\\n    var columnsOnAxis = columnsMap[axisKey] || {\\n      bandWidth: bandWidth,\\n      remainedWidth: bandWidth,\\n      autoWidthCount: 0,\\n      categoryGap: '20%',\\n      gap: '30%',\\n      stacks: {}\\n    };\\n    var stacks = columnsOnAxis.stacks;\\n    columnsMap[axisKey] = columnsOnAxis;\\n    var stackId = seriesInfo.stackId;\\n\\n    if (!stacks[stackId]) {\\n      columnsOnAxis.autoWidthCount++;\\n    }\\n\\n    stacks[stackId] = stacks[stackId] || {\\n      width: 0,\\n      maxWidth: 0\\n    }; // Caution: In a single coordinate system, these barGrid attributes\\n    // will be shared by series. Consider that they have default values,\\n    // only the attributes set on the last series will work.\\n    // Do not change this fact unless there will be a break change.\\n    // TODO\\n\\n    var barWidth = seriesInfo.barWidth;\\n\\n    if (barWidth && !stacks[stackId].width) {\\n      // See #6312, do not restrict width.\\n      stacks[stackId].width = barWidth;\\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\\n      columnsOnAxis.remainedWidth -= barWidth;\\n    }\\n\\n    var barMaxWidth = seriesInfo.barMaxWidth;\\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\\n    var barGap = seriesInfo.barGap;\\n    barGap != null && (columnsOnAxis.gap = barGap);\\n    var barCategoryGap = seriesInfo.barCategoryGap;\\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\\n  });\\n  var result = {};\\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\\n    result[coordSysName] = {};\\n    var stacks = columnsOnAxis.stacks;\\n    var bandWidth = columnsOnAxis.bandWidth;\\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\\n    var remainedWidth = columnsOnAxis.remainedWidth;\\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\\n\\n    zrUtil.each(stacks, function (column, stack) {\\n      var maxWidth = column.maxWidth;\\n\\n      if (maxWidth && maxWidth < autoWidth) {\\n        maxWidth = Math.min(maxWidth, remainedWidth);\\n\\n        if (column.width) {\\n          maxWidth = Math.min(maxWidth, column.width);\\n        }\\n\\n        remainedWidth -= maxWidth;\\n        column.width = maxWidth;\\n        autoWidthCount--;\\n      }\\n    }); // Recalculate width again\\n\\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\\n    autoWidth = Math.max(autoWidth, 0);\\n    var widthSum = 0;\\n    var lastColumn;\\n    zrUtil.each(stacks, function (column, idx) {\\n      if (!column.width) {\\n        column.width = autoWidth;\\n      }\\n\\n      lastColumn = column;\\n      widthSum += column.width * (1 + barGapPercent);\\n    });\\n\\n    if (lastColumn) {\\n      widthSum -= lastColumn.width * barGapPercent;\\n    }\\n\\n    var offset = -widthSum / 2;\\n    zrUtil.each(stacks, function (column, stackId) {\\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\\n        offset: offset,\\n        width: column.width\\n      };\\n      offset += column.width * (1 + barGapPercent);\\n    });\\n  });\\n  return result;\\n}\\n/**\\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\\n * @param {module:echarts/coord/Axis} axis\\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\\n */\\n\\n\\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\\n  if (barWidthAndOffset && axis) {\\n    var result = barWidthAndOffset[getAxisKey(axis)];\\n\\n    if (result != null && seriesModel != null) {\\n      result = result[getSeriesStackId(seriesModel)];\\n    }\\n\\n    return result;\\n  }\\n}\\n/**\\n * @param {string} seriesType\\n * @param {module:echarts/model/Global} ecModel\\n */\\n\\n\\nfunction layout(seriesType, ecModel) {\\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\\n  var lastStackCoords = {};\\n  var lastStackCoordsOrigin = {};\\n  zrUtil.each(seriesModels, function (seriesModel) {\\n    var data = seriesModel.getData();\\n    var cartesian = seriesModel.coordinateSystem;\\n    var baseAxis = cartesian.getBaseAxis();\\n    var stackId = getSeriesStackId(seriesModel);\\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\\n    var columnOffset = columnLayoutInfo.offset;\\n    var columnWidth = columnLayoutInfo.width;\\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\\n\\n    data.setLayout({\\n      offset: columnOffset,\\n      size: columnWidth\\n    });\\n    var valueDim = data.mapDimension(valueAxis.dim);\\n    var baseDim = data.mapDimension(baseAxis.dim);\\n    var stacked = isDimensionStacked(data, valueDim\\n    /*, baseDim*/\\n    );\\n    var isValueAxisH = valueAxis.isHorizontal();\\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\\n\\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\\n      var value = data.get(valueDim, idx);\\n      var baseValue = data.get(baseDim, idx);\\n\\n      if (isNaN(value)) {\\n        continue;\\n      }\\n\\n      var sign = value >= 0 ? 'p' : 'n';\\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\\n      // stackResultDimension directly.\\n\\n      if (stacked) {\\n        // Only ordinal axis can be stacked.\\n        if (!lastStackCoords[stackId][baseValue]) {\\n          lastStackCoords[stackId][baseValue] = {\\n            p: valueAxisStart,\\n            // Positive stack\\n            n: valueAxisStart // Negative stack\\n\\n          };\\n        } // Should also consider #4243\\n\\n\\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\\n      }\\n\\n      var x;\\n      var y;\\n      var width;\\n      var height;\\n\\n      if (isValueAxisH) {\\n        var coord = cartesian.dataToPoint([value, baseValue]);\\n        x = baseCoord;\\n        y = coord[1] + columnOffset;\\n        width = coord[0] - valueAxisStart;\\n        height = columnWidth;\\n\\n        if (Math.abs(width) < barMinHeight) {\\n          width = (width < 0 ? -1 : 1) * barMinHeight;\\n        }\\n\\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\\n      } else {\\n        var coord = cartesian.dataToPoint([baseValue, value]);\\n        x = coord[0] + columnOffset;\\n        y = baseCoord;\\n        width = columnWidth;\\n        height = coord[1] - valueAxisStart;\\n\\n        if (Math.abs(height) < barMinHeight) {\\n          // Include zero to has a positive bar\\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\\n        }\\n\\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\\n      }\\n\\n      data.setItemLayout(idx, {\\n        x: x,\\n        y: y,\\n        width: width,\\n        height: height\\n      });\\n    }\\n  }, this);\\n} // TODO: Do not support stack in large mode yet.\\n\\n\\nvar largeLayout = {\\n  seriesType: 'bar',\\n  plan: createRenderPlanner(),\\n  reset: function (seriesModel) {\\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\\n      return;\\n    }\\n\\n    var data = seriesModel.getData();\\n    var cartesian = seriesModel.coordinateSystem;\\n    var baseAxis = cartesian.getBaseAxis();\\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\\n    var valueDim = data.mapDimension(valueAxis.dim);\\n    var baseDim = data.mapDimension(baseAxis.dim);\\n    var valueAxisHorizontal = valueAxis.isHorizontal();\\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\\n\\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\\n      // jshint ignore:line\\n      barWidth = LARGE_BAR_MIN_WIDTH;\\n    }\\n\\n    return {\\n      progress: progress\\n    };\\n\\n    function progress(params, data) {\\n      var largePoints = new LargeArr(params.count * 2);\\n      var dataIndex;\\n      var coord = [];\\n      var valuePair = [];\\n      var offset = 0;\\n\\n      while ((dataIndex = params.next()) != null) {\\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\\n        coord = cartesian.dataToPoint(valuePair, null, coord);\\n        largePoints[offset++] = coord[0];\\n        largePoints[offset++] = coord[1];\\n      }\\n\\n      data.setLayout({\\n        largePoints: largePoints,\\n        barWidth: barWidth,\\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\\n        valueAxisHorizontal: valueAxisHorizontal\\n      });\\n    }\\n  }\\n};\\n\\nfunction isOnCartesian(seriesModel) {\\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\\n}\\n\\nfunction isInLargeMode(seriesModel) {\\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\\n} // See cases in `test/bar-start.html` and `#7412`, `#8747`.\\n\\n\\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\\n  var extent = valueAxis.getGlobalExtent();\\n  var min;\\n  var max;\\n\\n  if (extent[0] > extent[1]) {\\n    min = extent[1];\\n    max = extent[0];\\n  } else {\\n    min = extent[0];\\n    max = extent[1];\\n  }\\n\\n  var valueStart = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\\n  valueStart < min && (valueStart = min);\\n  valueStart > max && (valueStart = max);\\n  return valueStart;\\n}\\n\\nexports.getLayoutOnAxis = getLayoutOnAxis;\\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\\nexports.makeColumnLayout = makeColumnLayout;\\nexports.retrieveColumnLayout = retrieveColumnLayout;\\nexports.layout = layout;\\nexports.largeLayout = largeLayout;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///246\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar numberUtil = __webpack_require__(65);\\n\\nvar formatUtil = __webpack_require__(69);\\n\\nvar scaleHelper = __webpack_require__(163);\\n\\nvar IntervalScale = __webpack_require__(112);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* The `scaleLevels` references to d3.js. The use of the source\\n* code of this file is also subject to the terms and consitions\\n* of its license (BSD-3Clause, see <echarts/src/licenses/LICENSE-d3>).\\n*/\\n// [About UTC and local time zone]:\\n// In most cases, `number.parseDate` will treat input data string as local time\\n// (except time zone is specified in time string). And `format.formateTime` returns\\n// local time by default. option.useUTC is false by default. This design have\\n// concidered these common case:\\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\\n// in local time by default.\\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\\n// as its original time, without any time difference.\\nvar intervalScaleProto = IntervalScale.prototype;\\nvar mathCeil = Math.ceil;\\nvar mathFloor = Math.floor;\\nvar ONE_SECOND = 1000;\\nvar ONE_MINUTE = ONE_SECOND * 60;\\nvar ONE_HOUR = ONE_MINUTE * 60;\\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\\n\\nvar bisect = function (a, x, lo, hi) {\\n  while (lo < hi) {\\n    var mid = lo + hi >>> 1;\\n\\n    if (a[mid][1] < x) {\\n      lo = mid + 1;\\n    } else {\\n      hi = mid;\\n    }\\n  }\\n\\n  return lo;\\n};\\n/**\\n * @alias module:echarts/coord/scale/Time\\n * @constructor\\n */\\n\\n\\nvar TimeScale = IntervalScale.extend({\\n  type: 'time',\\n\\n  /**\\n   * @override\\n   */\\n  getLabel: function (val) {\\n    var stepLvl = this._stepLvl;\\n    var date = new Date(val);\\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  niceExtent: function (opt) {\\n    var extent = this._extent; // If extent start and end are same, expand them\\n\\n    if (extent[0] === extent[1]) {\\n      // Expand extent\\n      extent[0] -= ONE_DAY;\\n      extent[1] += ONE_DAY;\\n    } // If there are no data and extent are [Infinity, -Infinity]\\n\\n\\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\\n      var d = new Date();\\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\\n      extent[0] = extent[1] - ONE_DAY;\\n    }\\n\\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\\n\\n    var interval = this._interval;\\n\\n    if (!opt.fixMin) {\\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\\n    }\\n\\n    if (!opt.fixMax) {\\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\\n    }\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\\n    approxTickNum = approxTickNum || 10;\\n    var extent = this._extent;\\n    var span = extent[1] - extent[0];\\n    var approxInterval = span / approxTickNum;\\n\\n    if (minInterval != null && approxInterval < minInterval) {\\n      approxInterval = minInterval;\\n    }\\n\\n    if (maxInterval != null && approxInterval > maxInterval) {\\n      approxInterval = maxInterval;\\n    }\\n\\n    var scaleLevelsLen = scaleLevels.length;\\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\\n\\n    if (level[0] === 'year') {\\n      var yearSpan = span / interval; // From \\\"Nice Numbers for Graph Labels\\\" of Graphic Gems\\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\\n\\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\\n      interval *= yearStep;\\n    }\\n\\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\\n    scaleHelper.fixExtent(niceExtent, extent);\\n    this._stepLvl = level; // Interval will be used in getTicks\\n\\n    this._interval = interval;\\n    this._niceExtent = niceExtent;\\n  },\\n  parse: function (val) {\\n    // val might be float.\\n    return +numberUtil.parseDate(val);\\n  }\\n});\\nzrUtil.each(['contain', 'normalize'], function (methodName) {\\n  TimeScale.prototype[methodName] = function (val) {\\n    return intervalScaleProto[methodName].call(this, this.parse(val));\\n  };\\n}); // Steps from d3, see the license statement at the top of this file.\\n\\nvar scaleLevels = [// Format              interval\\n['hh:mm:ss', ONE_SECOND], // 1s\\n['hh:mm:ss', ONE_SECOND * 5], // 5s\\n['hh:mm:ss', ONE_SECOND * 10], // 10s\\n['hh:mm:ss', ONE_SECOND * 15], // 15s\\n['hh:mm:ss', ONE_SECOND * 30], // 30s\\n['hh:mm\\\\nMM-dd', ONE_MINUTE], // 1m\\n['hh:mm\\\\nMM-dd', ONE_MINUTE * 5], // 5m\\n['hh:mm\\\\nMM-dd', ONE_MINUTE * 10], // 10m\\n['hh:mm\\\\nMM-dd', ONE_MINUTE * 15], // 15m\\n['hh:mm\\\\nMM-dd', ONE_MINUTE * 30], // 30m\\n['hh:mm\\\\nMM-dd', ONE_HOUR], // 1h\\n['hh:mm\\\\nMM-dd', ONE_HOUR * 2], // 2h\\n['hh:mm\\\\nMM-dd', ONE_HOUR * 6], // 6h\\n['hh:mm\\\\nMM-dd', ONE_HOUR * 12], // 12h\\n['MM-dd\\\\nyyyy', ONE_DAY], // 1d\\n['MM-dd\\\\nyyyy', ONE_DAY * 2], // 2d\\n['MM-dd\\\\nyyyy', ONE_DAY * 3], // 3d\\n['MM-dd\\\\nyyyy', ONE_DAY * 4], // 4d\\n['MM-dd\\\\nyyyy', ONE_DAY * 5], // 5d\\n['MM-dd\\\\nyyyy', ONE_DAY * 6], // 6d\\n['week', ONE_DAY * 7], // 7d\\n['MM-dd\\\\nyyyy', ONE_DAY * 10], // 10d\\n['week', ONE_DAY * 14], // 2w\\n['week', ONE_DAY * 21], // 3w\\n['month', ONE_DAY * 31], // 1M\\n['week', ONE_DAY * 42], // 6w\\n['month', ONE_DAY * 62], // 2M\\n['week', ONE_DAY * 70], // 10w\\n['quarter', ONE_DAY * 95], // 3M\\n['month', ONE_DAY * 31 * 4], // 4M\\n['month', ONE_DAY * 31 * 5], // 5M\\n['half-year', ONE_DAY * 380 / 2], // 6M\\n['month', ONE_DAY * 31 * 8], // 8M\\n['month', ONE_DAY * 31 * 10], // 10M\\n['year', ONE_DAY * 380] // 1Y\\n];\\n/**\\n * @param {module:echarts/model/Model}\\n * @return {module:echarts/scale/Time}\\n */\\n\\nTimeScale.create = function (model) {\\n  return new TimeScale({\\n    useUTC: model.ecModel.get('useUTC')\\n  });\\n};\\n\\nvar _default = TimeScale;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///247\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Scale = __webpack_require__(92);\\n\\nvar numberUtil = __webpack_require__(65);\\n\\nvar IntervalScale = __webpack_require__(112);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Log scale\\n * @module echarts/scale/Log\\n */\\n// Use some method of IntervalScale\\nvar scaleProto = Scale.prototype;\\nvar intervalScaleProto = IntervalScale.prototype;\\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\\nvar roundingErrorFix = numberUtil.round;\\nvar mathFloor = Math.floor;\\nvar mathCeil = Math.ceil;\\nvar mathPow = Math.pow;\\nvar mathLog = Math.log;\\nvar LogScale = Scale.extend({\\n  type: \\'log\\',\\n  base: 10,\\n  $constructor: function () {\\n    Scale.apply(this, arguments);\\n    this._originalScale = new IntervalScale();\\n  },\\n\\n  /**\\n   * @return {Array.<number>}\\n   */\\n  getTicks: function () {\\n    var originalScale = this._originalScale;\\n    var extent = this._extent;\\n    var originalExtent = originalScale.getExtent();\\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\\n\\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\\n      return powVal;\\n    }, this);\\n  },\\n\\n  /**\\n   * @param {number} val\\n   * @return {string}\\n   */\\n  getLabel: intervalScaleProto.getLabel,\\n\\n  /**\\n   * @param  {number} val\\n   * @return {number}\\n   */\\n  scale: function (val) {\\n    val = scaleProto.scale.call(this, val);\\n    return mathPow(this.base, val);\\n  },\\n\\n  /**\\n   * @param {number} start\\n   * @param {number} end\\n   */\\n  setExtent: function (start, end) {\\n    var base = this.base;\\n    start = mathLog(start) / mathLog(base);\\n    end = mathLog(end) / mathLog(base);\\n    intervalScaleProto.setExtent.call(this, start, end);\\n  },\\n\\n  /**\\n   * @return {number} end\\n   */\\n  getExtent: function () {\\n    var base = this.base;\\n    var extent = scaleProto.getExtent.call(this);\\n    extent[0] = mathPow(base, extent[0]);\\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\\n\\n    var originalScale = this._originalScale;\\n    var originalExtent = originalScale.getExtent();\\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\\n    return extent;\\n  },\\n\\n  /**\\n   * @param  {Array.<number>} extent\\n   */\\n  unionExtent: function (extent) {\\n    this._originalScale.unionExtent(extent);\\n\\n    var base = this.base;\\n    extent[0] = mathLog(extent[0]) / mathLog(base);\\n    extent[1] = mathLog(extent[1]) / mathLog(base);\\n    scaleProto.unionExtent.call(this, extent);\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  unionExtentFromData: function (data, dim) {\\n    // TODO\\n    // filter value that <= 0\\n    this.unionExtent(data.getApproximateExtent(dim));\\n  },\\n\\n  /**\\n   * Update interval and extent of intervals for nice ticks\\n   * @param  {number} [approxTickNum = 10] Given approx tick number\\n   */\\n  niceTicks: function (approxTickNum) {\\n    approxTickNum = approxTickNum || 10;\\n    var extent = this._extent;\\n    var span = extent[1] - extent[0];\\n\\n    if (span === Infinity || span <= 0) {\\n      return;\\n    }\\n\\n    var interval = numberUtil.quantity(span);\\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\\n\\n    if (err <= 0.5) {\\n      interval *= 10;\\n    } // Interval should be integer\\n\\n\\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\\n      interval *= 10;\\n    }\\n\\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\\n    this._interval = interval;\\n    this._niceExtent = niceExtent;\\n  },\\n\\n  /**\\n   * Nice extent.\\n   * @override\\n   */\\n  niceExtent: function (opt) {\\n    intervalScaleProto.niceExtent.call(this, opt);\\n    var originalScale = this._originalScale;\\n    originalScale.__fixMin = opt.fixMin;\\n    originalScale.__fixMax = opt.fixMax;\\n  }\\n});\\nzrUtil.each([\\'contain\\', \\'normalize\\'], function (methodName) {\\n  LogScale.prototype[methodName] = function (val) {\\n    val = mathLog(val) / mathLog(this.base);\\n    return scaleProto[methodName].call(this, val);\\n  };\\n});\\n\\nLogScale.create = function () {\\n  return new LogScale();\\n};\\n\\nfunction fixRoundingError(val, originalVal) {\\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\\n}\\n\\nvar _default = LogScale;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///248\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Region = __webpack_require__(250);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Parse and decode geo json\\n * @module echarts/coord/geo/parseGeoJson\\n */\\nfunction decode(json) {\\n  if (!json.UTF8Encoding) {\\n    return json;\\n  }\\n\\n  var encodeScale = json.UTF8Scale;\\n\\n  if (encodeScale == null) {\\n    encodeScale = 1024;\\n  }\\n\\n  var features = json.features;\\n\\n  for (var f = 0; f < features.length; f++) {\\n    var feature = features[f];\\n    var geometry = feature.geometry;\\n    var coordinates = geometry.coordinates;\\n    var encodeOffsets = geometry.encodeOffsets;\\n\\n    for (var c = 0; c < coordinates.length; c++) {\\n      var coordinate = coordinates[c];\\n\\n      if (geometry.type === 'Polygon') {\\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\\n      } else if (geometry.type === 'MultiPolygon') {\\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\\n          var polygon = coordinate[c2];\\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\\n        }\\n      }\\n    }\\n  } // Has been decoded\\n\\n\\n  json.UTF8Encoding = false;\\n  return json;\\n}\\n\\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\\n  var result = [];\\n  var prevX = encodeOffsets[0];\\n  var prevY = encodeOffsets[1];\\n\\n  for (var i = 0; i < coordinate.length; i += 2) {\\n    var x = coordinate.charCodeAt(i) - 64;\\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\\n\\n    x = x >> 1 ^ -(x & 1);\\n    y = y >> 1 ^ -(y & 1); // Delta deocding\\n\\n    x += prevX;\\n    y += prevY;\\n    prevX = x;\\n    prevY = y; // Dequantize\\n\\n    result.push([x / encodeScale, y / encodeScale]);\\n  }\\n\\n  return result;\\n}\\n/**\\n * @alias module:echarts/coord/geo/parseGeoJson\\n * @param {Object} geoJson\\n * @return {module:zrender/container/Group}\\n */\\n\\n\\nfunction _default(geoJson) {\\n  decode(geoJson);\\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\\n    // Output of mapshaper may have geometry null\\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\\n  }), function (featureObj) {\\n    var properties = featureObj.properties;\\n    var geo = featureObj.geometry;\\n    var coordinates = geo.coordinates;\\n    var geometries = [];\\n\\n    if (geo.type === 'Polygon') {\\n      geometries.push({\\n        type: 'polygon',\\n        // According to the GeoJSON specification.\\n        // First must be exterior, and the rest are all interior(holes).\\n        exterior: coordinates[0],\\n        interiors: coordinates.slice(1)\\n      });\\n    }\\n\\n    if (geo.type === 'MultiPolygon') {\\n      zrUtil.each(coordinates, function (item) {\\n        if (item[0]) {\\n          geometries.push({\\n            type: 'polygon',\\n            exterior: item[0],\\n            interiors: item.slice(1)\\n          });\\n        }\\n      });\\n    }\\n\\n    var region = new Region(properties.name, geometries, properties.cp);\\n    region.properties = properties;\\n    return region;\\n  });\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvZ2VvL3BhcnNlR2VvSnNvbi5qcz9iZGE3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDLGFBQWEsbUJBQU8sQ0FBQyxHQUFVOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxpQkFBaUIscUJBQXFCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQix3QkFBd0I7QUFDM0M7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCx3QkFBd0Isd0JBQXdCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLHVCQUF1QjtBQUN4QztBQUNBLDhDQUE4Qzs7QUFFOUM7QUFDQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBLGNBQWM7O0FBRWQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwiZmlsZSI6IjI0OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIFJlZ2lvbiA9IHJlcXVpcmUoXCIuL1JlZ2lvblwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG4vKipcbiAqIFBhcnNlIGFuZCBkZWNvZGUgZ2VvIGpzb25cbiAqIEBtb2R1bGUgZWNoYXJ0cy9jb29yZC9nZW8vcGFyc2VHZW9Kc29uXG4gKi9cbmZ1bmN0aW9uIGRlY29kZShqc29uKSB7XG4gIGlmICghanNvbi5VVEY4RW5jb2RpbmcpIHtcbiAgICByZXR1cm4ganNvbjtcbiAgfVxuXG4gIHZhciBlbmNvZGVTY2FsZSA9IGpzb24uVVRGOFNjYWxlO1xuXG4gIGlmIChlbmNvZGVTY2FsZSA9PSBudWxsKSB7XG4gICAgZW5jb2RlU2NhbGUgPSAxMDI0O1xuICB9XG5cbiAgdmFyIGZlYXR1cmVzID0ganNvbi5mZWF0dXJlcztcblxuICBmb3IgKHZhciBmID0gMDsgZiA8IGZlYXR1cmVzLmxlbmd0aDsgZisrKSB7XG4gICAgdmFyIGZlYXR1cmUgPSBmZWF0dXJlc1tmXTtcbiAgICB2YXIgZ2VvbWV0cnkgPSBmZWF0dXJlLmdlb21ldHJ5O1xuICAgIHZhciBjb29yZGluYXRlcyA9IGdlb21ldHJ5LmNvb3JkaW5hdGVzO1xuICAgIHZhciBlbmNvZGVPZmZzZXRzID0gZ2VvbWV0cnkuZW5jb2RlT2Zmc2V0cztcblxuICAgIGZvciAodmFyIGMgPSAwOyBjIDwgY29vcmRpbmF0ZXMubGVuZ3RoOyBjKyspIHtcbiAgICAgIHZhciBjb29yZGluYXRlID0gY29vcmRpbmF0ZXNbY107XG5cbiAgICAgIGlmIChnZW9tZXRyeS50eXBlID09PSAnUG9seWdvbicpIHtcbiAgICAgICAgY29vcmRpbmF0ZXNbY10gPSBkZWNvZGVQb2x5Z29uKGNvb3JkaW5hdGUsIGVuY29kZU9mZnNldHNbY10sIGVuY29kZVNjYWxlKTtcbiAgICAgIH0gZWxzZSBpZiAoZ2VvbWV0cnkudHlwZSA9PT0gJ011bHRpUG9seWdvbicpIHtcbiAgICAgICAgZm9yICh2YXIgYzIgPSAwOyBjMiA8IGNvb3JkaW5hdGUubGVuZ3RoOyBjMisrKSB7XG4gICAgICAgICAgdmFyIHBvbHlnb24gPSBjb29yZGluYXRlW2MyXTtcbiAgICAgICAgICBjb29yZGluYXRlW2MyXSA9IGRlY29kZVBvbHlnb24ocG9seWdvbiwgZW5jb2RlT2Zmc2V0c1tjXVtjMl0sIGVuY29kZVNjYWxlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSAvLyBIYXMgYmVlbiBkZWNvZGVkXG5cblxuICBqc29uLlVURjhFbmNvZGluZyA9IGZhbHNlO1xuICByZXR1cm4ganNvbjtcbn1cblxuZnVuY3Rpb24gZGVjb2RlUG9seWdvbihjb29yZGluYXRlLCBlbmNvZGVPZmZzZXRzLCBlbmNvZGVTY2FsZSkge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBwcmV2WCA9IGVuY29kZU9mZnNldHNbMF07XG4gIHZhciBwcmV2WSA9IGVuY29kZU9mZnNldHNbMV07XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb29yZGluYXRlLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgdmFyIHggPSBjb29yZGluYXRlLmNoYXJDb2RlQXQoaSkgLSA2NDtcbiAgICB2YXIgeSA9IGNvb3JkaW5hdGUuY2hhckNvZGVBdChpICsgMSkgLSA2NDsgLy8gWmlnWmFnIGRlY29kaW5nXG5cbiAgICB4ID0geCA+PiAxIF4gLSh4ICYgMSk7XG4gICAgeSA9IHkgPj4gMSBeIC0oeSAmIDEpOyAvLyBEZWx0YSBkZW9jZGluZ1xuXG4gICAgeCArPSBwcmV2WDtcbiAgICB5ICs9IHByZXZZO1xuICAgIHByZXZYID0geDtcbiAgICBwcmV2WSA9IHk7IC8vIERlcXVhbnRpemVcblxuICAgIHJlc3VsdC5wdXNoKFt4IC8gZW5jb2RlU2NhbGUsIHkgLyBlbmNvZGVTY2FsZV0pO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogQGFsaWFzIG1vZHVsZTplY2hhcnRzL2Nvb3JkL2dlby9wYXJzZUdlb0pzb25cbiAqIEBwYXJhbSB7T2JqZWN0fSBnZW9Kc29uXG4gKiBAcmV0dXJuIHttb2R1bGU6enJlbmRlci9jb250YWluZXIvR3JvdXB9XG4gKi9cblxuXG5mdW5jdGlvbiBfZGVmYXVsdChnZW9Kc29uKSB7XG4gIGRlY29kZShnZW9Kc29uKTtcbiAgcmV0dXJuIHpyVXRpbC5tYXAoenJVdGlsLmZpbHRlcihnZW9Kc29uLmZlYXR1cmVzLCBmdW5jdGlvbiAoZmVhdHVyZU9iaikge1xuICAgIC8vIE91dHB1dCBvZiBtYXBzaGFwZXIgbWF5IGhhdmUgZ2VvbWV0cnkgbnVsbFxuICAgIHJldHVybiBmZWF0dXJlT2JqLmdlb21ldHJ5ICYmIGZlYXR1cmVPYmoucHJvcGVydGllcyAmJiBmZWF0dXJlT2JqLmdlb21ldHJ5LmNvb3JkaW5hdGVzLmxlbmd0aCA+IDA7XG4gIH0pLCBmdW5jdGlvbiAoZmVhdHVyZU9iaikge1xuICAgIHZhciBwcm9wZXJ0aWVzID0gZmVhdHVyZU9iai5wcm9wZXJ0aWVzO1xuICAgIHZhciBnZW8gPSBmZWF0dXJlT2JqLmdlb21ldHJ5O1xuICAgIHZhciBjb29yZGluYXRlcyA9IGdlby5jb29yZGluYXRlcztcbiAgICB2YXIgZ2VvbWV0cmllcyA9IFtdO1xuXG4gICAgaWYgKGdlby50eXBlID09PSAnUG9seWdvbicpIHtcbiAgICAgIGdlb21ldHJpZXMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdwb2x5Z29uJyxcbiAgICAgICAgLy8gQWNjb3JkaW5nIHRvIHRoZSBHZW9KU09OIHNwZWNpZmljYXRpb24uXG4gICAgICAgIC8vIEZpcnN0IG11c3QgYmUgZXh0ZXJpb3IsIGFuZCB0aGUgcmVzdCBhcmUgYWxsIGludGVyaW9yKGhvbGVzKS5cbiAgICAgICAgZXh0ZXJpb3I6IGNvb3JkaW5hdGVzWzBdLFxuICAgICAgICBpbnRlcmlvcnM6IGNvb3JkaW5hdGVzLnNsaWNlKDEpXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoZ2VvLnR5cGUgPT09ICdNdWx0aVBvbHlnb24nKSB7XG4gICAgICB6clV0aWwuZWFjaChjb29yZGluYXRlcywgZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgaWYgKGl0ZW1bMF0pIHtcbiAgICAgICAgICBnZW9tZXRyaWVzLnB1c2goe1xuICAgICAgICAgICAgdHlwZTogJ3BvbHlnb24nLFxuICAgICAgICAgICAgZXh0ZXJpb3I6IGl0ZW1bMF0sXG4gICAgICAgICAgICBpbnRlcmlvcnM6IGl0ZW0uc2xpY2UoMSlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIHJlZ2lvbiA9IG5ldyBSZWdpb24ocHJvcGVydGllcy5uYW1lLCBnZW9tZXRyaWVzLCBwcm9wZXJ0aWVzLmNwKTtcbiAgICByZWdpb24ucHJvcGVydGllcyA9IHByb3BlcnRpZXM7XG4gICAgcmV0dXJuIHJlZ2lvbjtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///249\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar BoundingRect = __webpack_require__(67);\\n\\nvar bbox = __webpack_require__(141);\\n\\nvar vec2 = __webpack_require__(62);\\n\\nvar polygonContain = __webpack_require__(251);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @module echarts/coord/geo/Region\\n */\\n\\n/**\\n * @param {string|Region} name\\n * @param {Array} geometries\\n * @param {Array.<number>} cp\\n */\\nfunction Region(name, geometries, cp) {\\n  /**\\n   * @type {string}\\n   * @readOnly\\n   */\\n  this.name = name;\\n  /**\\n   * @type {Array.<Array>}\\n   * @readOnly\\n   */\\n\\n  this.geometries = geometries;\\n\\n  if (!cp) {\\n    var rect = this.getBoundingRect();\\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\\n  } else {\\n    cp = [cp[0], cp[1]];\\n  }\\n  /**\\n   * @type {Array.<number>}\\n   */\\n\\n\\n  this.center = cp;\\n}\\n\\nRegion.prototype = {\\n  constructor: Region,\\n  properties: null,\\n\\n  /**\\n   * @return {module:zrender/core/BoundingRect}\\n   */\\n  getBoundingRect: function () {\\n    var rect = this._rect;\\n\\n    if (rect) {\\n      return rect;\\n    }\\n\\n    var MAX_NUMBER = Number.MAX_VALUE;\\n    var min = [MAX_NUMBER, MAX_NUMBER];\\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\\n    var min2 = [];\\n    var max2 = [];\\n    var geometries = this.geometries;\\n\\n    for (var i = 0; i < geometries.length; i++) {\\n      // Only support polygon\\n      if (geometries[i].type !== \\'polygon\\') {\\n        continue;\\n      } // Doesn\\'t consider hole\\n\\n\\n      var exterior = geometries[i].exterior;\\n      bbox.fromPoints(exterior, min2, max2);\\n      vec2.min(min, min, min2);\\n      vec2.max(max, max, max2);\\n    } // No data\\n\\n\\n    if (i === 0) {\\n      min[0] = min[1] = max[0] = max[1] = 0;\\n    }\\n\\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\\n  },\\n\\n  /**\\n   * @param {<Array.<number>} coord\\n   * @return {boolean}\\n   */\\n  contain: function (coord) {\\n    var rect = this.getBoundingRect();\\n    var geometries = this.geometries;\\n\\n    if (!rect.contain(coord[0], coord[1])) {\\n      return false;\\n    }\\n\\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\\n      // Only support polygon.\\n      if (geometries[i].type !== \\'polygon\\') {\\n        continue;\\n      }\\n\\n      var exterior = geometries[i].exterior;\\n      var interiors = geometries[i].interiors;\\n\\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\\n        // Not in the region if point is in the hole.\\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\\n          if (polygonContain.contain(interiors[k])) {\\n            continue loopGeo;\\n          }\\n        }\\n\\n        return true;\\n      }\\n    }\\n\\n    return false;\\n  },\\n  transformTo: function (x, y, width, height) {\\n    var rect = this.getBoundingRect();\\n    var aspect = rect.width / rect.height;\\n\\n    if (!width) {\\n      width = aspect * height;\\n    } else if (!height) {\\n      height = width / aspect;\\n    }\\n\\n    var target = new BoundingRect(x, y, width, height);\\n    var transform = rect.calculateTransform(target);\\n    var geometries = this.geometries;\\n\\n    for (var i = 0; i < geometries.length; i++) {\\n      // Only support polygon.\\n      if (geometries[i].type !== \\'polygon\\') {\\n        continue;\\n      }\\n\\n      var exterior = geometries[i].exterior;\\n      var interiors = geometries[i].interiors;\\n\\n      for (var p = 0; p < exterior.length; p++) {\\n        vec2.applyTransform(exterior[p], exterior[p], transform);\\n      }\\n\\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\\n        for (var p = 0; p < interiors[h].length; p++) {\\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\\n        }\\n      }\\n    }\\n\\n    rect = this._rect;\\n    rect.copy(target); // Update center\\n\\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\\n  },\\n  cloneShallow: function (name) {\\n    name == null && (name = this.name);\\n    var newRegion = new Region(name, this.geometries, this.center);\\n    newRegion._rect = this._rect;\\n    newRegion.transformTo = null; // Simply avoid to be called.\\n\\n    return newRegion;\\n  }\\n};\\nvar _default = Region;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///250\\n')},function(module,exports,__webpack_require__){eval(\"var windingLine = __webpack_require__(143);\\n\\nvar EPSILON = 1e-8;\\n\\nfunction isAroundEqual(a, b) {\\n  return Math.abs(a - b) < EPSILON;\\n}\\n\\nfunction contain(points, x, y) {\\n  var w = 0;\\n  var p = points[0];\\n\\n  if (!p) {\\n    return false;\\n  }\\n\\n  for (var i = 1; i < points.length; i++) {\\n    var p2 = points[i];\\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\\n    p = p2;\\n  } // Close polygon\\n\\n\\n  var p0 = points[0];\\n\\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\\n  }\\n\\n  return w !== 0;\\n}\\n\\nexports.contain = contain;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvenJlbmRlci9saWIvY29udGFpbi9wb2x5Z29uLmpzPzA2NTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsR0FBZTs7QUFFekM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIyNTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2luZGluZ0xpbmUgPSByZXF1aXJlKFwiLi93aW5kaW5nTGluZVwiKTtcblxudmFyIEVQU0lMT04gPSAxZS04O1xuXG5mdW5jdGlvbiBpc0Fyb3VuZEVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIE1hdGguYWJzKGEgLSBiKSA8IEVQU0lMT047XG59XG5cbmZ1bmN0aW9uIGNvbnRhaW4ocG9pbnRzLCB4LCB5KSB7XG4gIHZhciB3ID0gMDtcbiAgdmFyIHAgPSBwb2ludHNbMF07XG5cbiAgaWYgKCFwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBwb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgcDIgPSBwb2ludHNbaV07XG4gICAgdyArPSB3aW5kaW5nTGluZShwWzBdLCBwWzFdLCBwMlswXSwgcDJbMV0sIHgsIHkpO1xuICAgIHAgPSBwMjtcbiAgfSAvLyBDbG9zZSBwb2x5Z29uXG5cblxuICB2YXIgcDAgPSBwb2ludHNbMF07XG5cbiAgaWYgKCFpc0Fyb3VuZEVxdWFsKHBbMF0sIHAwWzBdKSB8fCAhaXNBcm91bmRFcXVhbChwWzFdLCBwMFsxXSkpIHtcbiAgICB3ICs9IHdpbmRpbmdMaW5lKHBbMF0sIHBbMV0sIHAwWzBdLCBwMFsxXSwgeCwgeSk7XG4gIH1cblxuICByZXR1cm4gdyAhPT0gMDtcbn1cblxuZXhwb3J0cy5jb250YWluID0gY29udGFpbjsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///251\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar textContain = __webpack_require__(76);\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\n\\nvar _axisHelper = __webpack_require__(86);\\n\\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar inner = makeInner();\\n/**\\n * @param {module:echats/coord/Axis} axis\\n * @return {Object} {\\n *     labels: [{\\n *         formattedLabel: string,\\n *         rawLabel: string,\\n *         tickValue: number\\n *     }, ...],\\n *     labelCategoryInterval: number\\n * }\\n */\\n\\nfunction createAxisLabels(axis) {\\n  // Only ordinal scale support tick interval\\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\\n}\\n/**\\n * @param {module:echats/coord/Axis} axis\\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\\n * @return {Object} {\\n *     ticks: Array.<number>\\n *     tickCategoryInterval: number\\n * }\\n */\\n\\n\\nfunction createAxisTicks(axis, tickModel) {\\n  // Only ordinal scale support tick interval\\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\\n    ticks: axis.scale.getTicks()\\n  };\\n}\\n\\nfunction makeCategoryLabels(axis) {\\n  var labelModel = axis.getLabelModel();\\n  var result = makeCategoryLabelsActually(axis, labelModel);\\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\\n    labels: [],\\n    labelCategoryInterval: result.labelCategoryInterval\\n  } : result;\\n}\\n\\nfunction makeCategoryLabelsActually(axis, labelModel) {\\n  var labelsCache = getListCache(axis, 'labels');\\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\\n  var result = listCacheGet(labelsCache, optionLabelInterval);\\n\\n  if (result) {\\n    return result;\\n  }\\n\\n  var labels;\\n  var numericLabelInterval;\\n\\n  if (zrUtil.isFunction(optionLabelInterval)) {\\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\\n  } else {\\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\\n  } // Cache to avoid calling interval function repeatly.\\n\\n\\n  return listCacheSet(labelsCache, optionLabelInterval, {\\n    labels: labels,\\n    labelCategoryInterval: numericLabelInterval\\n  });\\n}\\n\\nfunction makeCategoryTicks(axis, tickModel) {\\n  var ticksCache = getListCache(axis, 'ticks');\\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\\n  var result = listCacheGet(ticksCache, optionTickInterval);\\n\\n  if (result) {\\n    return result;\\n  }\\n\\n  var ticks;\\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\\n  // we should not return all ticks.\\n\\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\\n    ticks = [];\\n  }\\n\\n  if (zrUtil.isFunction(optionTickInterval)) {\\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\\n  } // Always use label interval by default despite label show. Consider this\\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\\n  else if (optionTickInterval === 'auto') {\\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\\n        return labelItem.tickValue;\\n      });\\n    } else {\\n      tickCategoryInterval = optionTickInterval;\\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\\n    } // Cache to avoid calling interval function repeatly.\\n\\n\\n  return listCacheSet(ticksCache, optionTickInterval, {\\n    ticks: ticks,\\n    tickCategoryInterval: tickCategoryInterval\\n  });\\n}\\n\\nfunction makeRealNumberLabels(axis) {\\n  var ticks = axis.scale.getTicks();\\n  var labelFormatter = makeLabelFormatter(axis);\\n  return {\\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\\n      return {\\n        formattedLabel: labelFormatter(tickValue, idx),\\n        rawLabel: axis.scale.getLabel(tickValue),\\n        tickValue: tickValue\\n      };\\n    })\\n  };\\n} // Large category data calculation is performence sensitive, and ticks and label\\n// probably be fetched by multiple times. So we cache the result.\\n// axis is created each time during a ec process, so we do not need to clear cache.\\n\\n\\nfunction getListCache(axis, prop) {\\n  // Because key can be funciton, and cache size always be small, we use array cache.\\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\\n}\\n\\nfunction listCacheGet(cache, key) {\\n  for (var i = 0; i < cache.length; i++) {\\n    if (cache[i].key === key) {\\n      return cache[i].value;\\n    }\\n  }\\n}\\n\\nfunction listCacheSet(cache, key, value) {\\n  cache.push({\\n    key: key,\\n    value: value\\n  });\\n  return value;\\n}\\n\\nfunction makeAutoCategoryInterval(axis) {\\n  var result = inner(axis).autoInterval;\\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\\n}\\n/**\\n * Calculate interval for category axis ticks and labels.\\n * To get precise result, at least one of `getRotate` and `isHorizontal`\\n * should be implemented in axis.\\n */\\n\\n\\nfunction calculateCategoryInterval(axis) {\\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\\n  var labelFormatter = makeLabelFormatter(axis);\\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\\n  var ordinalScale = axis.scale;\\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\\n  // avoid generating a long array by `getTicks`\\n  // in large category data case.\\n\\n  var tickCount = ordinalScale.count();\\n\\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\\n    return 0;\\n  }\\n\\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\\n\\n  if (tickCount > 40) {\\n    step = Math.max(1, Math.floor(tickCount / 40));\\n  }\\n\\n  var tickValue = ordinalExtent[0];\\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\\n  var maxW = 0;\\n  var maxH = 0; // Caution: Performance sensitive for large category data.\\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\\n\\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\\n    var width = 0;\\n    var height = 0; // Not precise, do not consider align and vertical align\\n    // and each distance from axis line yet.\\n\\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\\n\\n    width = rect.width * 1.3;\\n    height = rect.height * 1.3; // Min size, void long loop.\\n\\n    maxW = Math.max(maxW, width, 7);\\n    maxH = Math.max(maxH, height, 7);\\n  }\\n\\n  var dw = maxW / unitW;\\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\\n\\n  isNaN(dw) && (dw = Infinity);\\n  isNaN(dh) && (dh = Infinity);\\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\\n  var cache = inner(axis.model);\\n  var lastAutoInterval = cache.lastAutoInterval;\\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\\n  // otherwise the calculated interval might jitter when the zoom\\n  // window size is close to the interval-changing size.\\n\\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\\n  // point is not the same when zooming in or zooming out.\\n  && lastAutoInterval > interval) {\\n    interval = lastAutoInterval;\\n  } // Only update cache if cache not used, otherwise the\\n  // changing of interval is too insensitive.\\n  else {\\n      cache.lastTickCount = tickCount;\\n      cache.lastAutoInterval = interval;\\n    }\\n\\n  return interval;\\n}\\n\\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\\n  var labelModel = axis.getLabelModel();\\n  return {\\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\\n    labelRotate: labelModel.get('rotate') || 0,\\n    font: labelModel.getFont()\\n  };\\n}\\n\\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\\n  var labelFormatter = makeLabelFormatter(axis);\\n  var ordinalScale = axis.scale;\\n  var ordinalExtent = ordinalScale.getExtent();\\n  var labelModel = axis.getLabelModel();\\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\\n\\n  var step = Math.max((categoryInterval || 0) + 1, 1);\\n  var startTick = ordinalExtent[0];\\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\\n  // while zooming and moving while interval > 0. Otherwise the selection\\n  // of displayable ticks and symbols probably keep changing.\\n  // 3 is empirical value.\\n\\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\\n    startTick = Math.round(Math.ceil(startTick / step) * step);\\n  } // (1) Only add min max label here but leave overlap checking\\n  // to render stage, which also ensure the returned list\\n  // suitable for splitLine and splitArea rendering.\\n  // (2) Scales except category always contain min max label so\\n  // do not need to perform this process.\\n\\n\\n  var showMinMax = {\\n    min: labelModel.get('showMinLabel'),\\n    max: labelModel.get('showMaxLabel')\\n  };\\n\\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\\n    addItem(ordinalExtent[0]);\\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\\n\\n\\n  var tickValue = startTick;\\n\\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\\n    addItem(tickValue);\\n  }\\n\\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\\n    addItem(ordinalExtent[1]);\\n  }\\n\\n  function addItem(tVal) {\\n    result.push(onlyTick ? tVal : {\\n      formattedLabel: labelFormatter(tVal),\\n      rawLabel: ordinalScale.getLabel(tVal),\\n      tickValue: tVal\\n    });\\n  }\\n\\n  return result;\\n} // When interval is function, the result `false` means ignore the tick.\\n// It is time consuming for large category data.\\n\\n\\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\\n  var ordinalScale = axis.scale;\\n  var labelFormatter = makeLabelFormatter(axis);\\n  var result = [];\\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\\n    var rawLabel = ordinalScale.getLabel(tickValue);\\n\\n    if (categoryInterval(tickValue, rawLabel)) {\\n      result.push(onlyTick ? tickValue : {\\n        formattedLabel: labelFormatter(tickValue),\\n        rawLabel: rawLabel,\\n        tickValue: tickValue\\n      });\\n    }\\n  });\\n  return result;\\n} // Can be null|'auto'|number|function\\n\\n\\nfunction getOptionCategoryInterval(model) {\\n  var interval = model.get('interval');\\n  return interval == null ? 'auto' : interval;\\n}\\n\\nexports.createAxisLabels = createAxisLabels;\\nexports.createAxisTicks = createAxisTicks;\\nexports.calculateCategoryInterval = calculateCategoryInterval;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvYXhpc1RpY2tMYWJlbEJ1aWxkZXIuanM/ZTA3MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLEVBQXVCOztBQUU1QyxrQkFBa0IsbUJBQU8sQ0FBQyxFQUEwQjs7QUFFcEQsYUFBYSxtQkFBTyxDQUFDLEVBQWU7O0FBRXBDOztBQUVBLGtCQUFrQixtQkFBTyxDQUFDLEVBQWM7O0FBRXhDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUJBQXlCO0FBQ3BDLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUJBQXlCO0FBQ3BDLFdBQVcsMkJBQTJCO0FBQ3RDLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGVBQWU7O0FBRWY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7O0FBRUEsUUFBUSwrQkFBK0I7QUFDdkM7QUFDQSxtQkFBbUI7QUFDbkI7O0FBRUEsb0dBQW9HOztBQUVwRztBQUNBLCtCQUErQjs7QUFFL0I7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCOztBQUV4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7OztBQUdIOztBQUVBLFFBQVEsK0JBQStCO0FBQ3ZDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxDQUFDO0FBQ0Q7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0EsQ0FBQzs7O0FBR0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjI1Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgenJVdGlsID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvcmUvdXRpbFwiKTtcblxudmFyIHRleHRDb250YWluID0gcmVxdWlyZShcInpyZW5kZXIvbGliL2NvbnRhaW4vdGV4dFwiKTtcblxudmFyIF9tb2RlbCA9IHJlcXVpcmUoXCIuLi91dGlsL21vZGVsXCIpO1xuXG52YXIgbWFrZUlubmVyID0gX21vZGVsLm1ha2VJbm5lcjtcblxudmFyIF9heGlzSGVscGVyID0gcmVxdWlyZShcIi4vYXhpc0hlbHBlclwiKTtcblxudmFyIG1ha2VMYWJlbEZvcm1hdHRlciA9IF9heGlzSGVscGVyLm1ha2VMYWJlbEZvcm1hdHRlcjtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIGlubmVyID0gbWFrZUlubmVyKCk7XG4vKipcbiAqIEBwYXJhbSB7bW9kdWxlOmVjaGF0cy9jb29yZC9BeGlzfSBheGlzXG4gKiBAcmV0dXJuIHtPYmplY3R9IHtcbiAqICAgICBsYWJlbHM6IFt7XG4gKiAgICAgICAgIGZvcm1hdHRlZExhYmVsOiBzdHJpbmcsXG4gKiAgICAgICAgIHJhd0xhYmVsOiBzdHJpbmcsXG4gKiAgICAgICAgIHRpY2tWYWx1ZTogbnVtYmVyXG4gKiAgICAgfSwgLi4uXSxcbiAqICAgICBsYWJlbENhdGVnb3J5SW50ZXJ2YWw6IG51bWJlclxuICogfVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUF4aXNMYWJlbHMoYXhpcykge1xuICAvLyBPbmx5IG9yZGluYWwgc2NhbGUgc3VwcG9ydCB0aWNrIGludGVydmFsXG4gIHJldHVybiBheGlzLnR5cGUgPT09ICdjYXRlZ29yeScgPyBtYWtlQ2F0ZWdvcnlMYWJlbHMoYXhpcykgOiBtYWtlUmVhbE51bWJlckxhYmVscyhheGlzKTtcbn1cbi8qKlxuICogQHBhcmFtIHttb2R1bGU6ZWNoYXRzL2Nvb3JkL0F4aXN9IGF4aXNcbiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvbW9kZWwvTW9kZWx9IHRpY2tNb2RlbCBGb3IgZXhhbXBsZSwgY2FuIGJlIGF4aXNUaWNrLCBzcGxpdExpbmUsIHNwbGl0QXJlYS5cbiAqIEByZXR1cm4ge09iamVjdH0ge1xuICogICAgIHRpY2tzOiBBcnJheS48bnVtYmVyPlxuICogICAgIHRpY2tDYXRlZ29yeUludGVydmFsOiBudW1iZXJcbiAqIH1cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUF4aXNUaWNrcyhheGlzLCB0aWNrTW9kZWwpIHtcbiAgLy8gT25seSBvcmRpbmFsIHNjYWxlIHN1cHBvcnQgdGljayBpbnRlcnZhbFxuICByZXR1cm4gYXhpcy50eXBlID09PSAnY2F0ZWdvcnknID8gbWFrZUNhdGVnb3J5VGlja3MoYXhpcywgdGlja01vZGVsKSA6IHtcbiAgICB0aWNrczogYXhpcy5zY2FsZS5nZXRUaWNrcygpXG4gIH07XG59XG5cbmZ1bmN0aW9uIG1ha2VDYXRlZ29yeUxhYmVscyhheGlzKSB7XG4gIHZhciBsYWJlbE1vZGVsID0gYXhpcy5nZXRMYWJlbE1vZGVsKCk7XG4gIHZhciByZXN1bHQgPSBtYWtlQ2F0ZWdvcnlMYWJlbHNBY3R1YWxseShheGlzLCBsYWJlbE1vZGVsKTtcbiAgcmV0dXJuICFsYWJlbE1vZGVsLmdldCgnc2hvdycpIHx8IGF4aXMuc2NhbGUuaXNCbGFuaygpID8ge1xuICAgIGxhYmVsczogW10sXG4gICAgbGFiZWxDYXRlZ29yeUludGVydmFsOiByZXN1bHQubGFiZWxDYXRlZ29yeUludGVydmFsXG4gIH0gOiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1ha2VDYXRlZ29yeUxhYmVsc0FjdHVhbGx5KGF4aXMsIGxhYmVsTW9kZWwpIHtcbiAgdmFyIGxhYmVsc0NhY2hlID0gZ2V0TGlzdENhY2hlKGF4aXMsICdsYWJlbHMnKTtcbiAgdmFyIG9wdGlvbkxhYmVsSW50ZXJ2YWwgPSBnZXRPcHRpb25DYXRlZ29yeUludGVydmFsKGxhYmVsTW9kZWwpO1xuICB2YXIgcmVzdWx0ID0gbGlzdENhY2hlR2V0KGxhYmVsc0NhY2hlLCBvcHRpb25MYWJlbEludGVydmFsKTtcblxuICBpZiAocmVzdWx0KSB7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHZhciBsYWJlbHM7XG4gIHZhciBudW1lcmljTGFiZWxJbnRlcnZhbDtcblxuICBpZiAoenJVdGlsLmlzRnVuY3Rpb24ob3B0aW9uTGFiZWxJbnRlcnZhbCkpIHtcbiAgICBsYWJlbHMgPSBtYWtlTGFiZWxzQnlDdXN0b21pemVkQ2F0ZWdvcnlJbnRlcnZhbChheGlzLCBvcHRpb25MYWJlbEludGVydmFsKTtcbiAgfSBlbHNlIHtcbiAgICBudW1lcmljTGFiZWxJbnRlcnZhbCA9IG9wdGlvbkxhYmVsSW50ZXJ2YWwgPT09ICdhdXRvJyA/IG1ha2VBdXRvQ2F0ZWdvcnlJbnRlcnZhbChheGlzKSA6IG9wdGlvbkxhYmVsSW50ZXJ2YWw7XG4gICAgbGFiZWxzID0gbWFrZUxhYmVsc0J5TnVtZXJpY0NhdGVnb3J5SW50ZXJ2YWwoYXhpcywgbnVtZXJpY0xhYmVsSW50ZXJ2YWwpO1xuICB9IC8vIENhY2hlIHRvIGF2b2lkIGNhbGxpbmcgaW50ZXJ2YWwgZnVuY3Rpb24gcmVwZWF0bHkuXG5cblxuICByZXR1cm4gbGlzdENhY2hlU2V0KGxhYmVsc0NhY2hlLCBvcHRpb25MYWJlbEludGVydmFsLCB7XG4gICAgbGFiZWxzOiBsYWJlbHMsXG4gICAgbGFiZWxDYXRlZ29yeUludGVydmFsOiBudW1lcmljTGFiZWxJbnRlcnZhbFxuICB9KTtcbn1cblxuZnVuY3Rpb24gbWFrZUNhdGVnb3J5VGlja3MoYXhpcywgdGlja01vZGVsKSB7XG4gIHZhciB0aWNrc0NhY2hlID0gZ2V0TGlzdENhY2hlKGF4aXMsICd0aWNrcycpO1xuICB2YXIgb3B0aW9uVGlja0ludGVydmFsID0gZ2V0T3B0aW9uQ2F0ZWdvcnlJbnRlcnZhbCh0aWNrTW9kZWwpO1xuICB2YXIgcmVzdWx0ID0gbGlzdENhY2hlR2V0KHRpY2tzQ2FjaGUsIG9wdGlvblRpY2tJbnRlcnZhbCk7XG5cbiAgaWYgKHJlc3VsdCkge1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICB2YXIgdGlja3M7XG4gIHZhciB0aWNrQ2F0ZWdvcnlJbnRlcnZhbDsgLy8gT3B0aW1pemUgZm9yIHRoZSBjYXNlIHRoYXQgbGFyZ2UgY2F0ZWdvcnkgZGF0YSBhbmQgbm8gbGFiZWwgZGlzcGxheWVkLFxuICAvLyB3ZSBzaG91bGQgbm90IHJldHVybiBhbGwgdGlja3MuXG5cbiAgaWYgKCF0aWNrTW9kZWwuZ2V0KCdzaG93JykgfHwgYXhpcy5zY2FsZS5pc0JsYW5rKCkpIHtcbiAgICB0aWNrcyA9IFtdO1xuICB9XG5cbiAgaWYgKHpyVXRpbC5pc0Z1bmN0aW9uKG9wdGlvblRpY2tJbnRlcnZhbCkpIHtcbiAgICB0aWNrcyA9IG1ha2VMYWJlbHNCeUN1c3RvbWl6ZWRDYXRlZ29yeUludGVydmFsKGF4aXMsIG9wdGlvblRpY2tJbnRlcnZhbCwgdHJ1ZSk7XG4gIH0gLy8gQWx3YXlzIHVzZSBsYWJlbCBpbnRlcnZhbCBieSBkZWZhdWx0IGRlc3BpdGUgbGFiZWwgc2hvdy4gQ29uc2lkZXIgdGhpc1xuICAvLyBzY2VuYXJpbywgVXNlIG11bHRpcGxlIGdyaWQgd2l0aCB0aGUgeEF4aXMgc3luYywgYW5kIG9ubHkgb25lIHhBeGlzIHNob3dzXG4gIC8vIGxhYmVscy4gYHNwbGl0TGluZWAgYW5kIGBheGlzVGlja2Agc2hvdWxkIGJlIGNvbnNpc3RlbnQgaW4gdGhpcyBjYXNlLlxuICBlbHNlIGlmIChvcHRpb25UaWNrSW50ZXJ2YWwgPT09ICdhdXRvJykge1xuICAgICAgdmFyIGxhYmVsc1Jlc3VsdCA9IG1ha2VDYXRlZ29yeUxhYmVsc0FjdHVhbGx5KGF4aXMsIGF4aXMuZ2V0TGFiZWxNb2RlbCgpKTtcbiAgICAgIHRpY2tDYXRlZ29yeUludGVydmFsID0gbGFiZWxzUmVzdWx0LmxhYmVsQ2F0ZWdvcnlJbnRlcnZhbDtcbiAgICAgIHRpY2tzID0genJVdGlsLm1hcChsYWJlbHNSZXN1bHQubGFiZWxzLCBmdW5jdGlvbiAobGFiZWxJdGVtKSB7XG4gICAgICAgIHJldHVybiBsYWJlbEl0ZW0udGlja1ZhbHVlO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRpY2tDYXRlZ29yeUludGVydmFsID0gb3B0aW9uVGlja0ludGVydmFsO1xuICAgICAgdGlja3MgPSBtYWtlTGFiZWxzQnlOdW1lcmljQ2F0ZWdvcnlJbnRlcnZhbChheGlzLCB0aWNrQ2F0ZWdvcnlJbnRlcnZhbCwgdHJ1ZSk7XG4gICAgfSAvLyBDYWNoZSB0byBhdm9pZCBjYWxsaW5nIGludGVydmFsIGZ1bmN0aW9uIHJlcGVhdGx5LlxuXG5cbiAgcmV0dXJuIGxpc3RDYWNoZVNldCh0aWNrc0NhY2hlLCBvcHRpb25UaWNrSW50ZXJ2YWwsIHtcbiAgICB0aWNrczogdGlja3MsXG4gICAgdGlja0NhdGVnb3J5SW50ZXJ2YWw6IHRpY2tDYXRlZ29yeUludGVydmFsXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBtYWtlUmVhbE51bWJlckxhYmVscyhheGlzKSB7XG4gIHZhciB0aWNrcyA9IGF4aXMuc2NhbGUuZ2V0VGlja3MoKTtcbiAgdmFyIGxhYmVsRm9ybWF0dGVyID0gbWFrZUxhYmVsRm9ybWF0dGVyKGF4aXMpO1xuICByZXR1cm4ge1xuICAgIGxhYmVsczogenJVdGlsLm1hcCh0aWNrcywgZnVuY3Rpb24gKHRpY2tWYWx1ZSwgaWR4KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmb3JtYXR0ZWRMYWJlbDogbGFiZWxGb3JtYXR0ZXIodGlja1ZhbHVlLCBpZHgpLFxuICAgICAgICByYXdMYWJlbDogYXhpcy5zY2FsZS5nZXRMYWJlbCh0aWNrVmFsdWUpLFxuICAgICAgICB0aWNrVmFsdWU6IHRpY2tWYWx1ZVxuICAgICAgfTtcbiAgICB9KVxuICB9O1xufSAvLyBMYXJnZSBjYXRlZ29yeSBkYXRhIGNhbGN1bGF0aW9uIGlzIHBlcmZvcm1lbmNlIHNlbnNpdGl2ZSwgYW5kIHRpY2tzIGFuZCBsYWJlbFxuLy8gcHJvYmFibHkgYmUgZmV0Y2hlZCBieSBtdWx0aXBsZSB0aW1lcy4gU28gd2UgY2FjaGUgdGhlIHJlc3VsdC5cbi8vIGF4aXMgaXMgY3JlYXRlZCBlYWNoIHRpbWUgZHVyaW5nIGEgZWMgcHJvY2Vzcywgc28gd2UgZG8gbm90IG5lZWQgdG8gY2xlYXIgY2FjaGUuXG5cblxuZnVuY3Rpb24gZ2V0TGlzdENhY2hlKGF4aXMsIHByb3ApIHtcbiAgLy8gQmVjYXVzZSBrZXkgY2FuIGJlIGZ1bmNpdG9uLCBhbmQgY2FjaGUgc2l6ZSBhbHdheXMgYmUgc21hbGwsIHdlIHVzZSBhcnJheSBjYWNoZS5cbiAgcmV0dXJuIGlubmVyKGF4aXMpW3Byb3BdIHx8IChpbm5lcihheGlzKVtwcm9wXSA9IFtdKTtcbn1cblxuZnVuY3Rpb24gbGlzdENhY2hlR2V0KGNhY2hlLCBrZXkpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjYWNoZS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChjYWNoZVtpXS5rZXkgPT09IGtleSkge1xuICAgICAgcmV0dXJuIGNhY2hlW2ldLnZhbHVlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBsaXN0Q2FjaGVTZXQoY2FjaGUsIGtleSwgdmFsdWUpIHtcbiAgY2FjaGUucHVzaCh7XG4gICAga2V5OiBrZXksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH0pO1xuICByZXR1cm4gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIG1ha2VBdXRvQ2F0ZWdvcnlJbnRlcnZhbChheGlzKSB7XG4gIHZhciByZXN1bHQgPSBpbm5lcihheGlzKS5hdXRvSW50ZXJ2YWw7XG4gIHJldHVybiByZXN1bHQgIT0gbnVsbCA/IHJlc3VsdCA6IGlubmVyKGF4aXMpLmF1dG9JbnRlcnZhbCA9IGF4aXMuY2FsY3VsYXRlQ2F0ZWdvcnlJbnRlcnZhbCgpO1xufVxuLyoqXG4gKiBDYWxjdWxhdGUgaW50ZXJ2YWwgZm9yIGNhdGVnb3J5IGF4aXMgdGlja3MgYW5kIGxhYmVscy5cbiAqIFRvIGdldCBwcmVjaXNlIHJlc3VsdCwgYXQgbGVhc3Qgb25lIG9mIGBnZXRSb3RhdGVgIGFuZCBgaXNIb3Jpem9udGFsYFxuICogc2hvdWxkIGJlIGltcGxlbWVudGVkIGluIGF4aXMuXG4gKi9cblxuXG5mdW5jdGlvbiBjYWxjdWxhdGVDYXRlZ29yeUludGVydmFsKGF4aXMpIHtcbiAgdmFyIHBhcmFtcyA9IGZldGNoQXV0b0NhdGVnb3J5SW50ZXJ2YWxDYWxjdWxhdGlvblBhcmFtcyhheGlzKTtcbiAgdmFyIGxhYmVsRm9ybWF0dGVyID0gbWFrZUxhYmVsRm9ybWF0dGVyKGF4aXMpO1xuICB2YXIgcm90YXRpb24gPSAocGFyYW1zLmF4aXNSb3RhdGUgLSBwYXJhbXMubGFiZWxSb3RhdGUpIC8gMTgwICogTWF0aC5QSTtcbiAgdmFyIG9yZGluYWxTY2FsZSA9IGF4aXMuc2NhbGU7XG4gIHZhciBvcmRpbmFsRXh0ZW50ID0gb3JkaW5hbFNjYWxlLmdldEV4dGVudCgpOyAvLyBQcm92aWRpbmcgdGhpcyBtZXRob2QgaXMgZm9yIG9wdGltaXphdGlvbjpcbiAgLy8gYXZvaWQgZ2VuZXJhdGluZyBhIGxvbmcgYXJyYXkgYnkgYGdldFRpY2tzYFxuICAvLyBpbiBsYXJnZSBjYXRlZ29yeSBkYXRhIGNhc2UuXG5cbiAgdmFyIHRpY2tDb3VudCA9IG9yZGluYWxTY2FsZS5jb3VudCgpO1xuXG4gIGlmIChvcmRpbmFsRXh0ZW50WzFdIC0gb3JkaW5hbEV4dGVudFswXSA8IDEpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIHZhciBzdGVwID0gMTsgLy8gU2ltcGxlIG9wdGltaXphdGlvbi4gRW1waXJpY2FsIHZhbHVlOiB0aWNrIGNvdW50IHNob3VsZCBsZXNzIHRoYW4gNDAuXG5cbiAgaWYgKHRpY2tDb3VudCA+IDQwKSB7XG4gICAgc3RlcCA9IE1hdGgubWF4KDEsIE1hdGguZmxvb3IodGlja0NvdW50IC8gNDApKTtcbiAgfVxuXG4gIHZhciB0aWNrVmFsdWUgPSBvcmRpbmFsRXh0ZW50WzBdO1xuICB2YXIgdW5pdFNwYW4gPSBheGlzLmRhdGFUb0Nvb3JkKHRpY2tWYWx1ZSArIDEpIC0gYXhpcy5kYXRhVG9Db29yZCh0aWNrVmFsdWUpO1xuICB2YXIgdW5pdFcgPSBNYXRoLmFicyh1bml0U3BhbiAqIE1hdGguY29zKHJvdGF0aW9uKSk7XG4gIHZhciB1bml0SCA9IE1hdGguYWJzKHVuaXRTcGFuICogTWF0aC5zaW4ocm90YXRpb24pKTtcbiAgdmFyIG1heFcgPSAwO1xuICB2YXIgbWF4SCA9IDA7IC8vIENhdXRpb246IFBlcmZvcm1hbmNlIHNlbnNpdGl2ZSBmb3IgbGFyZ2UgY2F0ZWdvcnkgZGF0YS5cbiAgLy8gQ29uc2lkZXIgZGF0YVpvb20sIHdlIHNob3VsZCBtYWtlIGFwcHJvcHJpYXRlIHN0ZXAgdG8gYXZvaWQgTyhuKSBsb29wLlxuXG4gIGZvciAoOyB0aWNrVmFsdWUgPD0gb3JkaW5hbEV4dGVudFsxXTsgdGlja1ZhbHVlICs9IHN0ZXApIHtcbiAgICB2YXIgd2lkdGggPSAwO1xuICAgIHZhciBoZWlnaHQgPSAwOyAvLyBOb3QgcHJlY2lzZSwgZG8gbm90IGNvbnNpZGVyIGFsaWduIGFuZCB2ZXJ0aWNhbCBhbGlnblxuICAgIC8vIGFuZCBlYWNoIGRpc3RhbmNlIGZyb20gYXhpcyBsaW5lIHlldC5cblxuICAgIHZhciByZWN0ID0gdGV4dENvbnRhaW4uZ2V0Qm91bmRpbmdSZWN0KGxhYmVsRm9ybWF0dGVyKHRpY2tWYWx1ZSksIHBhcmFtcy5mb250LCAnY2VudGVyJywgJ3RvcCcpOyAvLyBNYWdpYyBudW1iZXJcblxuICAgIHdpZHRoID0gcmVjdC53aWR0aCAqIDEuMztcbiAgICBoZWlnaHQgPSByZWN0LmhlaWdodCAqIDEuMzsgLy8gTWluIHNpemUsIHZvaWQgbG9uZyBsb29wLlxuXG4gICAgbWF4VyA9IE1hdGgubWF4KG1heFcsIHdpZHRoLCA3KTtcbiAgICBtYXhIID0gTWF0aC5tYXgobWF4SCwgaGVpZ2h0LCA3KTtcbiAgfVxuXG4gIHZhciBkdyA9IG1heFcgLyB1bml0VztcbiAgdmFyIGRoID0gbWF4SCAvIHVuaXRIOyAvLyAwLzAgaXMgTmFOLCAxLzAgaXMgSW5maW5pdHkuXG5cbiAgaXNOYU4oZHcpICYmIChkdyA9IEluZmluaXR5KTtcbiAgaXNOYU4oZGgpICYmIChkaCA9IEluZmluaXR5KTtcbiAgdmFyIGludGVydmFsID0gTWF0aC5tYXgoMCwgTWF0aC5mbG9vcihNYXRoLm1pbihkdywgZGgpKSk7XG4gIHZhciBjYWNoZSA9IGlubmVyKGF4aXMubW9kZWwpO1xuICB2YXIgbGFzdEF1dG9JbnRlcnZhbCA9IGNhY2hlLmxhc3RBdXRvSW50ZXJ2YWw7XG4gIHZhciBsYXN0VGlja0NvdW50ID0gY2FjaGUubGFzdFRpY2tDb3VudDsgLy8gVXNlIGNhY2hlIHRvIGtlZXAgaW50ZXJ2YWwgc3RhYmxlIHdoaWxlIG1vdmluZyB6b29tIHdpbmRvdyxcbiAgLy8gb3RoZXJ3aXNlIHRoZSBjYWxjdWxhdGVkIGludGVydmFsIG1pZ2h0IGppdHRlciB3aGVuIHRoZSB6b29tXG4gIC8vIHdpbmRvdyBzaXplIGlzIGNsb3NlIHRvIHRoZSBpbnRlcnZhbC1jaGFuZ2luZyBzaXplLlxuXG4gIGlmIChsYXN0QXV0b0ludGVydmFsICE9IG51bGwgJiYgbGFzdFRpY2tDb3VudCAhPSBudWxsICYmIE1hdGguYWJzKGxhc3RBdXRvSW50ZXJ2YWwgLSBpbnRlcnZhbCkgPD0gMSAmJiBNYXRoLmFicyhsYXN0VGlja0NvdW50IC0gdGlja0NvdW50KSA8PSAxIC8vIEFsd2F5cyBjaG9vc2UgdGhlIGJpZ2dlciBvbmUsIG90aGVyd2lzZSB0aGUgY3JpdGljYWxcbiAgLy8gcG9pbnQgaXMgbm90IHRoZSBzYW1lIHdoZW4gem9vbWluZyBpbiBvciB6b29taW5nIG91dC5cbiAgJiYgbGFzdEF1dG9JbnRlcnZhbCA+IGludGVydmFsKSB7XG4gICAgaW50ZXJ2YWwgPSBsYXN0QXV0b0ludGVydmFsO1xuICB9IC8vIE9ubHkgdXBkYXRlIGNhY2hlIGlmIGNhY2hlIG5vdCB1c2VkLCBvdGhlcndpc2UgdGhlXG4gIC8vIGNoYW5naW5nIG9mIGludGVydmFsIGlzIHRvbyBpbnNlbnNpdGl2ZS5cbiAgZWxzZSB7XG4gICAgICBjYWNoZS5sYXN0VGlja0NvdW50ID0gdGlja0NvdW50O1xuICAgICAgY2FjaGUubGFzdEF1dG9JbnRlcnZhbCA9IGludGVydmFsO1xuICAgIH1cblxuICByZXR1cm4gaW50ZXJ2YWw7XG59XG5cbmZ1bmN0aW9uIGZldGNoQXV0b0NhdGVnb3J5SW50ZXJ2YWxDYWxjdWxhdGlvblBhcmFtcyhheGlzKSB7XG4gIHZhciBsYWJlbE1vZGVsID0gYXhpcy5nZXRMYWJlbE1vZGVsKCk7XG4gIHJldHVybiB7XG4gICAgYXhpc1JvdGF0ZTogYXhpcy5nZXRSb3RhdGUgPyBheGlzLmdldFJvdGF0ZSgpIDogYXhpcy5pc0hvcml6b250YWwgJiYgIWF4aXMuaXNIb3Jpem9udGFsKCkgPyA5MCA6IDAsXG4gICAgbGFiZWxSb3RhdGU6IGxhYmVsTW9kZWwuZ2V0KCdyb3RhdGUnKSB8fCAwLFxuICAgIGZvbnQ6IGxhYmVsTW9kZWwuZ2V0Rm9udCgpXG4gIH07XG59XG5cbmZ1bmN0aW9uIG1ha2VMYWJlbHNCeU51bWVyaWNDYXRlZ29yeUludGVydmFsKGF4aXMsIGNhdGVnb3J5SW50ZXJ2YWwsIG9ubHlUaWNrKSB7XG4gIHZhciBsYWJlbEZvcm1hdHRlciA9IG1ha2VMYWJlbEZvcm1hdHRlcihheGlzKTtcbiAgdmFyIG9yZGluYWxTY2FsZSA9IGF4aXMuc2NhbGU7XG4gIHZhciBvcmRpbmFsRXh0ZW50ID0gb3JkaW5hbFNjYWxlLmdldEV4dGVudCgpO1xuICB2YXIgbGFiZWxNb2RlbCA9IGF4aXMuZ2V0TGFiZWxNb2RlbCgpO1xuICB2YXIgcmVzdWx0ID0gW107IC8vIFRPRE86IGF4aXNUeXBlOiBvcmRpbmFsVGltZSwgcGljayB0aGUgdGljayBmcm9tIGVhY2ggbW9udGgvZGF5L3llYXIvLi4uXG5cbiAgdmFyIHN0ZXAgPSBNYXRoLm1heCgoY2F0ZWdvcnlJbnRlcnZhbCB8fCAwKSArIDEsIDEpO1xuICB2YXIgc3RhcnRUaWNrID0gb3JkaW5hbEV4dGVudFswXTtcbiAgdmFyIHRpY2tDb3VudCA9IG9yZGluYWxTY2FsZS5jb3VudCgpOyAvLyBDYWxjdWxhdGUgc3RhcnQgdGljayBiYXNlZCBvbiB6ZXJvIGlmIHBvc3NpYmxlIHRvIGtlZXAgbGFiZWwgY29uc2lzdGVudFxuICAvLyB3aGlsZSB6b29taW5nIGFuZCBtb3Zpbmcgd2hpbGUgaW50ZXJ2YWwgPiAwLiBPdGhlcndpc2UgdGhlIHNlbGVjdGlvblxuICAvLyBvZiBkaXNwbGF5YWJsZSB0aWNrcyBhbmQgc3ltYm9scyBwcm9iYWJseSBrZWVwIGNoYW5naW5nLlxuICAvLyAzIGlzIGVtcGlyaWNhbCB2YWx1ZS5cblxuICBpZiAoc3RhcnRUaWNrICE9PSAwICYmIHN0ZXAgPiAxICYmIHRpY2tDb3VudCAvIHN0ZXAgPiAyKSB7XG4gICAgc3RhcnRUaWNrID0gTWF0aC5yb3VuZChNYXRoLmNlaWwoc3RhcnRUaWNrIC8gc3RlcCkgKiBzdGVwKTtcbiAgfSAvLyAoMSkgT25seSBhZGQgbWluIG1heCBsYWJlbCBoZXJlIGJ1dCBsZWF2ZSBvdmVybGFwIGNoZWNraW5nXG4gIC8vIHRvIHJlbmRlciBzdGFnZSwgd2hpY2ggYWxzbyBlbnN1cmUgdGhlIHJldHVybmVkIGxpc3RcbiAgLy8gc3VpdGFibGUgZm9yIHNwbGl0TGluZSBhbmQgc3BsaXRBcmVhIHJlbmRlcmluZy5cbiAgLy8gKDIpIFNjYWxlcyBleGNlcHQgY2F0ZWdvcnkgYWx3YXlzIGNvbnRhaW4gbWluIG1heCBsYWJlbCBzb1xuICAvLyBkbyBub3QgbmVlZCB0byBwZXJmb3JtIHRoaXMgcHJvY2Vzcy5cblxuXG4gIHZhciBzaG93TWluTWF4ID0ge1xuICAgIG1pbjogbGFiZWxNb2RlbC5nZXQoJ3Nob3dNaW5MYWJlbCcpLFxuICAgIG1heDogbGFiZWxNb2RlbC5nZXQoJ3Nob3dNYXhMYWJlbCcpXG4gIH07XG5cbiAgaWYgKHNob3dNaW5NYXgubWluICYmIHN0YXJ0VGljayAhPT0gb3JkaW5hbEV4dGVudFswXSkge1xuICAgIGFkZEl0ZW0ob3JkaW5hbEV4dGVudFswXSk7XG4gIH0gLy8gT3B0aW1pemU6IGF2b2lkIGdlbmVyYXRpbmcgbGFyZ2UgYXJyYXkgYnkgYG9yZGluYWxTY2FsZS5nZXRUaWNrcygpYC5cblxuXG4gIHZhciB0aWNrVmFsdWUgPSBzdGFydFRpY2s7XG5cbiAgZm9yICg7IHRpY2tWYWx1ZSA8PSBvcmRpbmFsRXh0ZW50WzFdOyB0aWNrVmFsdWUgKz0gc3RlcCkge1xuICAgIGFkZEl0ZW0odGlja1ZhbHVlKTtcbiAgfVxuXG4gIGlmIChzaG93TWluTWF4Lm1heCAmJiB0aWNrVmFsdWUgIT09IG9yZGluYWxFeHRlbnRbMV0pIHtcbiAgICBhZGRJdGVtKG9yZGluYWxFeHRlbnRbMV0pO1xuICB9XG5cbiAgZnVuY3Rpb24gYWRkSXRlbSh0VmFsKSB7XG4gICAgcmVzdWx0LnB1c2gob25seVRpY2sgPyB0VmFsIDoge1xuICAgICAgZm9ybWF0dGVkTGFiZWw6IGxhYmVsRm9ybWF0dGVyKHRWYWwpLFxuICAgICAgcmF3TGFiZWw6IG9yZGluYWxTY2FsZS5nZXRMYWJlbCh0VmFsKSxcbiAgICAgIHRpY2tWYWx1ZTogdFZhbFxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn0gLy8gV2hlbiBpbnRlcnZhbCBpcyBmdW5jdGlvbiwgdGhlIHJlc3VsdCBgZmFsc2VgIG1lYW5zIGlnbm9yZSB0aGUgdGljay5cbi8vIEl0IGlzIHRpbWUgY29uc3VtaW5nIGZvciBsYXJnZSBjYXRlZ29yeSBkYXRhLlxuXG5cbmZ1bmN0aW9uIG1ha2VMYWJlbHNCeUN1c3RvbWl6ZWRDYXRlZ29yeUludGVydmFsKGF4aXMsIGNhdGVnb3J5SW50ZXJ2YWwsIG9ubHlUaWNrKSB7XG4gIHZhciBvcmRpbmFsU2NhbGUgPSBheGlzLnNjYWxlO1xuICB2YXIgbGFiZWxGb3JtYXR0ZXIgPSBtYWtlTGFiZWxGb3JtYXR0ZXIoYXhpcyk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgenJVdGlsLmVhY2gob3JkaW5hbFNjYWxlLmdldFRpY2tzKCksIGZ1bmN0aW9uICh0aWNrVmFsdWUpIHtcbiAgICB2YXIgcmF3TGFiZWwgPSBvcmRpbmFsU2NhbGUuZ2V0TGFiZWwodGlja1ZhbHVlKTtcblxuICAgIGlmIChjYXRlZ29yeUludGVydmFsKHRpY2tWYWx1ZSwgcmF3TGFiZWwpKSB7XG4gICAgICByZXN1bHQucHVzaChvbmx5VGljayA/IHRpY2tWYWx1ZSA6IHtcbiAgICAgICAgZm9ybWF0dGVkTGFiZWw6IGxhYmVsRm9ybWF0dGVyKHRpY2tWYWx1ZSksXG4gICAgICAgIHJhd0xhYmVsOiByYXdMYWJlbCxcbiAgICAgICAgdGlja1ZhbHVlOiB0aWNrVmFsdWVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59IC8vIENhbiBiZSBudWxsfCdhdXRvJ3xudW1iZXJ8ZnVuY3Rpb25cblxuXG5mdW5jdGlvbiBnZXRPcHRpb25DYXRlZ29yeUludGVydmFsKG1vZGVsKSB7XG4gIHZhciBpbnRlcnZhbCA9IG1vZGVsLmdldCgnaW50ZXJ2YWwnKTtcbiAgcmV0dXJuIGludGVydmFsID09IG51bGwgPyAnYXV0bycgOiBpbnRlcnZhbDtcbn1cblxuZXhwb3J0cy5jcmVhdGVBeGlzTGFiZWxzID0gY3JlYXRlQXhpc0xhYmVscztcbmV4cG9ydHMuY3JlYXRlQXhpc1RpY2tzID0gY3JlYXRlQXhpc1RpY2tzO1xuZXhwb3J0cy5jYWxjdWxhdGVDYXRlZ29yeUludGVydmFsID0gY2FsY3VsYXRlQ2F0ZWdvcnlJbnRlcnZhbDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///252\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar echarts = __webpack_require__(68);\\n\\n__webpack_require__(254);\\n\\n__webpack_require__(255);\\n\\nvar visualSymbol = __webpack_require__(260);\\n\\nvar layoutPoints = __webpack_require__(261);\\n\\nvar dataSample = __webpack_require__(262);\\n\\n__webpack_require__(263);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// In case developer forget to include grid component\\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\\n\\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY2hhcnQvbGluZS5qcz9lZjk3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBWTs7QUFFbEMsbUJBQU8sQ0FBQyxHQUFtQjs7QUFFM0IsbUJBQU8sQ0FBQyxHQUFpQjs7QUFFekIsbUJBQW1CLG1CQUFPLENBQUMsR0FBa0I7O0FBRTdDLG1CQUFtQixtQkFBTyxDQUFDLEdBQWtCOztBQUU3QyxpQkFBaUIsbUJBQU8sQ0FBQyxHQUF5Qjs7QUFFbEQsbUJBQU8sQ0FBQyxHQUF5Qjs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDOztBQUU3QyIsImZpbGUiOiIyNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIGVjaGFydHMgPSByZXF1aXJlKFwiLi4vZWNoYXJ0c1wiKTtcblxucmVxdWlyZShcIi4vbGluZS9MaW5lU2VyaWVzXCIpO1xuXG5yZXF1aXJlKFwiLi9saW5lL0xpbmVWaWV3XCIpO1xuXG52YXIgdmlzdWFsU3ltYm9sID0gcmVxdWlyZShcIi4uL3Zpc3VhbC9zeW1ib2xcIik7XG5cbnZhciBsYXlvdXRQb2ludHMgPSByZXF1aXJlKFwiLi4vbGF5b3V0L3BvaW50c1wiKTtcblxudmFyIGRhdGFTYW1wbGUgPSByZXF1aXJlKFwiLi4vcHJvY2Vzc29yL2RhdGFTYW1wbGVcIik7XG5cbnJlcXVpcmUoXCIuLi9jb21wb25lbnQvZ3JpZFNpbXBsZVwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuLy8gSW4gY2FzZSBkZXZlbG9wZXIgZm9yZ2V0IHRvIGluY2x1ZGUgZ3JpZCBjb21wb25lbnRcbmVjaGFydHMucmVnaXN0ZXJWaXN1YWwodmlzdWFsU3ltYm9sKCdsaW5lJywgJ2NpcmNsZScsICdsaW5lJykpO1xuZWNoYXJ0cy5yZWdpc3RlckxheW91dChsYXlvdXRQb2ludHMoJ2xpbmUnKSk7IC8vIERvd24gc2FtcGxlIGFmdGVyIGZpbHRlclxuXG5lY2hhcnRzLnJlZ2lzdGVyUHJvY2Vzc29yKGVjaGFydHMuUFJJT1JJVFkuUFJPQ0VTU09SLlNUQVRJU1RJQywgZGF0YVNhbXBsZSgnbGluZScpKTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///253\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar createListFromArray = __webpack_require__(158);\\n\\nvar SeriesModel = __webpack_require__(155);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar _default = SeriesModel.extend({\\n  type: 'series.line',\\n  dependencies: ['grid', 'polar'],\\n  getInitialData: function (option, ecModel) {\\n    return createListFromArray(this.getSource(), this);\\n  },\\n  defaultOption: {\\n    zlevel: 0,\\n    z: 2,\\n    coordinateSystem: 'cartesian2d',\\n    legendHoverLink: true,\\n    hoverAnimation: true,\\n    // stack: null\\n    // xAxisIndex: 0,\\n    // yAxisIndex: 0,\\n    // polarIndex: 0,\\n    // If clip the overflow value\\n    clipOverflow: true,\\n    // cursor: null,\\n    label: {\\n      position: 'top'\\n    },\\n    // itemStyle: {\\n    // },\\n    lineStyle: {\\n      width: 2,\\n      type: 'solid'\\n    },\\n    // areaStyle: {\\n    // origin of areaStyle. Valid values:\\n    // `'auto'/null/undefined`: from axisLine to data\\n    // `'start'`: from min to data\\n    // `'end'`: from data to max\\n    // origin: 'auto'\\n    // },\\n    // false, 'start', 'end', 'middle'\\n    step: false,\\n    // Disabled if step is true\\n    smooth: false,\\n    smoothMonotone: null,\\n    symbol: 'emptyCircle',\\n    symbolSize: 4,\\n    symbolRotate: null,\\n    showSymbol: true,\\n    // `false`: follow the label interval strategy.\\n    // `true`: show all symbols.\\n    // `'auto'`: If possible, show all symbols, otherwise\\n    //           follow the label interval strategy.\\n    showAllSymbol: 'auto',\\n    // Whether to connect break point.\\n    connectNulls: false,\\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\\n    sampling: 'none',\\n    animationEasing: 'linear',\\n    // Disable progressive\\n    progressive: 0,\\n    hoverLayerThreshold: Infinity\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY2hhcnQvbGluZS9MaW5lU2VyaWVzLmpzPzIxN2IiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxFQUFjOztBQUVwQzs7QUFFQSwwQkFBMEIsbUJBQU8sQ0FBQyxHQUErQjs7QUFFakUsa0JBQWtCLG1CQUFPLENBQUMsR0FBb0I7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiIyNTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIF9jb25maWcgPSByZXF1aXJlKFwiLi4vLi4vY29uZmlnXCIpO1xuXG52YXIgX19ERVZfXyA9IF9jb25maWcuX19ERVZfXztcblxudmFyIGNyZWF0ZUxpc3RGcm9tQXJyYXkgPSByZXF1aXJlKFwiLi4vaGVscGVyL2NyZWF0ZUxpc3RGcm9tQXJyYXlcIik7XG5cbnZhciBTZXJpZXNNb2RlbCA9IHJlcXVpcmUoXCIuLi8uLi9tb2RlbC9TZXJpZXNcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBfZGVmYXVsdCA9IFNlcmllc01vZGVsLmV4dGVuZCh7XG4gIHR5cGU6ICdzZXJpZXMubGluZScsXG4gIGRlcGVuZGVuY2llczogWydncmlkJywgJ3BvbGFyJ10sXG4gIGdldEluaXRpYWxEYXRhOiBmdW5jdGlvbiAob3B0aW9uLCBlY01vZGVsKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUxpc3RGcm9tQXJyYXkodGhpcy5nZXRTb3VyY2UoKSwgdGhpcyk7XG4gIH0sXG4gIGRlZmF1bHRPcHRpb246IHtcbiAgICB6bGV2ZWw6IDAsXG4gICAgejogMixcbiAgICBjb29yZGluYXRlU3lzdGVtOiAnY2FydGVzaWFuMmQnLFxuICAgIGxlZ2VuZEhvdmVyTGluazogdHJ1ZSxcbiAgICBob3ZlckFuaW1hdGlvbjogdHJ1ZSxcbiAgICAvLyBzdGFjazogbnVsbFxuICAgIC8vIHhBeGlzSW5kZXg6IDAsXG4gICAgLy8geUF4aXNJbmRleDogMCxcbiAgICAvLyBwb2xhckluZGV4OiAwLFxuICAgIC8vIElmIGNsaXAgdGhlIG92ZXJmbG93IHZhbHVlXG4gICAgY2xpcE92ZXJmbG93OiB0cnVlLFxuICAgIC8vIGN1cnNvcjogbnVsbCxcbiAgICBsYWJlbDoge1xuICAgICAgcG9zaXRpb246ICd0b3AnXG4gICAgfSxcbiAgICAvLyBpdGVtU3R5bGU6IHtcbiAgICAvLyB9LFxuICAgIGxpbmVTdHlsZToge1xuICAgICAgd2lkdGg6IDIsXG4gICAgICB0eXBlOiAnc29saWQnXG4gICAgfSxcbiAgICAvLyBhcmVhU3R5bGU6IHtcbiAgICAvLyBvcmlnaW4gb2YgYXJlYVN0eWxlLiBWYWxpZCB2YWx1ZXM6XG4gICAgLy8gYCdhdXRvJy9udWxsL3VuZGVmaW5lZGA6IGZyb20gYXhpc0xpbmUgdG8gZGF0YVxuICAgIC8vIGAnc3RhcnQnYDogZnJvbSBtaW4gdG8gZGF0YVxuICAgIC8vIGAnZW5kJ2A6IGZyb20gZGF0YSB0byBtYXhcbiAgICAvLyBvcmlnaW46ICdhdXRvJ1xuICAgIC8vIH0sXG4gICAgLy8gZmFsc2UsICdzdGFydCcsICdlbmQnLCAnbWlkZGxlJ1xuICAgIHN0ZXA6IGZhbHNlLFxuICAgIC8vIERpc2FibGVkIGlmIHN0ZXAgaXMgdHJ1ZVxuICAgIHNtb290aDogZmFsc2UsXG4gICAgc21vb3RoTW9ub3RvbmU6IG51bGwsXG4gICAgc3ltYm9sOiAnZW1wdHlDaXJjbGUnLFxuICAgIHN5bWJvbFNpemU6IDQsXG4gICAgc3ltYm9sUm90YXRlOiBudWxsLFxuICAgIHNob3dTeW1ib2w6IHRydWUsXG4gICAgLy8gYGZhbHNlYDogZm9sbG93IHRoZSBsYWJlbCBpbnRlcnZhbCBzdHJhdGVneS5cbiAgICAvLyBgdHJ1ZWA6IHNob3cgYWxsIHN5bWJvbHMuXG4gICAgLy8gYCdhdXRvJ2A6IElmIHBvc3NpYmxlLCBzaG93IGFsbCBzeW1ib2xzLCBvdGhlcndpc2VcbiAgICAvLyAgICAgICAgICAgZm9sbG93IHRoZSBsYWJlbCBpbnRlcnZhbCBzdHJhdGVneS5cbiAgICBzaG93QWxsU3ltYm9sOiAnYXV0bycsXG4gICAgLy8gV2hldGhlciB0byBjb25uZWN0IGJyZWFrIHBvaW50LlxuICAgIGNvbm5lY3ROdWxsczogZmFsc2UsXG4gICAgLy8gU2FtcGxpbmcgZm9yIGxhcmdlIGRhdGEuIENhbiBiZTogJ2F2ZXJhZ2UnLCAnbWF4JywgJ21pbicsICdzdW0nLlxuICAgIHNhbXBsaW5nOiAnbm9uZScsXG4gICAgYW5pbWF0aW9uRWFzaW5nOiAnbGluZWFyJyxcbiAgICAvLyBEaXNhYmxlIHByb2dyZXNzaXZlXG4gICAgcHJvZ3Jlc3NpdmU6IDAsXG4gICAgaG92ZXJMYXllclRocmVzaG9sZDogSW5maW5pdHlcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///254\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar SymbolDraw = __webpack_require__(256);\\n\\nvar SymbolClz = __webpack_require__(166);\\n\\nvar lineAnimationDiff = __webpack_require__(258);\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar modelUtil = __webpack_require__(60);\\n\\nvar _poly = __webpack_require__(259);\\n\\nvar Polyline = _poly.Polyline;\\nvar Polygon = _poly.Polygon;\\n\\nvar ChartView = __webpack_require__(157);\\n\\nvar _number = __webpack_require__(65);\\n\\nvar round = _number.round;\\n\\nvar _helper = __webpack_require__(167);\\n\\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\\nvar getStackedOnPoint = _helper.getStackedOnPoint;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// FIXME step not support polar\\nfunction isPointsSame(points1, points2) {\\n  if (points1.length !== points2.length) {\\n    return;\\n  }\\n\\n  for (var i = 0; i < points1.length; i++) {\\n    var p1 = points1[i];\\n    var p2 = points2[i];\\n\\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\\n      return;\\n    }\\n  }\\n\\n  return true;\\n}\\n\\nfunction getSmooth(smooth) {\\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\\n}\\n\\nfunction getAxisExtentWithGap(axis) {\\n  var extent = axis.getGlobalExtent();\\n\\n  if (axis.onBand) {\\n    // Remove extra 1px to avoid line miter in clipped edge\\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\\n    var dir = extent[1] > extent[0] ? 1 : -1;\\n    extent[0] += dir * halfBandWidth;\\n    extent[1] -= dir * halfBandWidth;\\n  }\\n\\n  return extent;\\n}\\n/**\\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\\n * @param {module:echarts/data/List} data\\n * @param {Object} dataCoordInfo\\n * @param {Array.<Array.<number>>} points\\n */\\n\\n\\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\\n  if (!dataCoordInfo.valueDim) {\\n    return [];\\n  }\\n\\n  var points = [];\\n\\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\\n  }\\n\\n  return points;\\n}\\n\\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\\n  var x = Math.min(xExtent[0], xExtent[1]);\\n  var y = Math.min(yExtent[0], yExtent[1]);\\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\\n  // See #7913 and `test/dataZoom-clip.html`.\\n\\n  if (forSymbol) {\\n    x -= 0.5;\\n    width += 0.5;\\n    y -= 0.5;\\n    height += 0.5;\\n  } else {\\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\\n\\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\\n\\n    if (isHorizontal) {\\n      y -= expandSize;\\n      height += expandSize * 2;\\n    } else {\\n      x -= expandSize;\\n      width += expandSize * 2;\\n    }\\n  }\\n\\n  var clipPath = new graphic.Rect({\\n    shape: {\\n      x: x,\\n      y: y,\\n      width: width,\\n      height: height\\n    }\\n  });\\n\\n  if (hasAnimation) {\\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\\n    graphic.initProps(clipPath, {\\n      shape: {\\n        width: width,\\n        height: height\\n      }\\n    }, seriesModel);\\n  }\\n\\n  return clipPath;\\n}\\n\\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\\n  var angleAxis = polar.getAngleAxis();\\n  var radiusAxis = polar.getRadiusAxis();\\n  var radiusExtent = radiusAxis.getExtent().slice();\\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\\n  var angleExtent = angleAxis.getExtent();\\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\\n\\n  if (forSymbol) {\\n    radiusExtent[0] -= 0.5;\\n    radiusExtent[1] += 0.5;\\n  }\\n\\n  var clipPath = new graphic.Sector({\\n    shape: {\\n      cx: round(polar.cx, 1),\\n      cy: round(polar.cy, 1),\\n      r0: round(radiusExtent[0], 1),\\n      r: round(radiusExtent[1], 1),\\n      startAngle: -angleExtent[0] * RADIAN,\\n      endAngle: -angleExtent[1] * RADIAN,\\n      clockwise: angleAxis.inverse\\n    }\\n  });\\n\\n  if (hasAnimation) {\\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\\n    graphic.initProps(clipPath, {\\n      shape: {\\n        endAngle: -angleExtent[1] * RADIAN\\n      }\\n    }, seriesModel);\\n  }\\n\\n  return clipPath;\\n}\\n\\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\\n}\\n\\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\\n  var baseAxis = coordSys.getBaseAxis();\\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\\n  var stepPoints = [];\\n\\n  for (var i = 0; i < points.length - 1; i++) {\\n    var nextPt = points[i + 1];\\n    var pt = points[i];\\n    stepPoints.push(pt);\\n    var stepPt = [];\\n\\n    switch (stepTurnAt) {\\n      case 'end':\\n        stepPt[baseIndex] = nextPt[baseIndex];\\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\\n\\n        stepPoints.push(stepPt);\\n        break;\\n\\n      case 'middle':\\n        // default is start\\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\\n        var stepPt2 = [];\\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\\n        stepPoints.push(stepPt);\\n        stepPoints.push(stepPt2);\\n        break;\\n\\n      default:\\n        stepPt[baseIndex] = pt[baseIndex];\\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\\n\\n        stepPoints.push(stepPt);\\n    }\\n  } // Last points\\n\\n\\n  points[i] && stepPoints.push(points[i]);\\n  return stepPoints;\\n}\\n\\nfunction getVisualGradient(data, coordSys) {\\n  var visualMetaList = data.getVisual('visualMeta');\\n\\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\\n    // When data.count() is 0, gradient range can not be calculated.\\n    return;\\n  }\\n\\n  if (coordSys.type !== 'cartesian2d') {\\n    return;\\n  }\\n\\n  var coordDim;\\n  var visualMeta;\\n\\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\\n    var dimIndex = visualMetaList[i].dimension;\\n    var dimName = data.dimensions[dimIndex];\\n    var dimInfo = data.getDimensionInfo(dimName);\\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\\n\\n    if (coordDim === 'x' || coordDim === 'y') {\\n      visualMeta = visualMetaList[i];\\n      break;\\n    }\\n  }\\n\\n  if (!visualMeta) {\\n    return;\\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\\n  // the canvas spec prescribes that the color of the first stop and the last\\n  // stop should be used. But if two stops are added at offset 0, in effect\\n  // browsers use the color of the second stop to render area outside\\n  // LinearGradient. So we can only infinitesimally extend area defined in\\n  // LinearGradient to render `outerColors`.\\n\\n\\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\\n\\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\\n    return {\\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\\n      color: stop.color\\n    };\\n  });\\n  var stopLen = colorStops.length;\\n  var outerColors = visualMeta.outerColors.slice();\\n\\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\\n    colorStops.reverse();\\n    outerColors.reverse();\\n  }\\n\\n  var tinyExtent = 10; // Arbitrary value: 10px\\n\\n  var minCoord = colorStops[0].coord - tinyExtent;\\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\\n  var coordSpan = maxCoord - minCoord;\\n\\n  if (coordSpan < 1e-3) {\\n    return 'transparent';\\n  }\\n\\n  zrUtil.each(colorStops, function (stop) {\\n    stop.offset = (stop.coord - minCoord) / coordSpan;\\n  });\\n  colorStops.push({\\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\\n    color: outerColors[1] || 'transparent'\\n  });\\n  colorStops.unshift({\\n    // notice colorStops.length have been changed.\\n    offset: stopLen ? colorStops[0].offset : 0.5,\\n    color: outerColors[0] || 'transparent'\\n  }); // zrUtil.each(colorStops, function (colorStop) {\\n  //     // Make sure each offset has rounded px to avoid not sharp edge\\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\\n  // });\\n\\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\\n  gradient[coordDim] = minCoord;\\n  gradient[coordDim + '2'] = maxCoord;\\n  return gradient;\\n}\\n\\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\\n  var showAllSymbol = seriesModel.get('showAllSymbol');\\n  var isAuto = showAllSymbol === 'auto';\\n\\n  if (showAllSymbol && !isAuto) {\\n    return;\\n  }\\n\\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\\n\\n  if (!categoryAxis) {\\n    return;\\n  } // Note that category label interval strategy might bring some weird effect\\n  // in some scenario: users may wonder why some of the symbols are not\\n  // displayed. So we show all symbols as possible as we can.\\n\\n\\n  if (isAuto // Simplify the logic, do not determine label overlap here.\\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\\n    return;\\n  } // Otherwise follow the label interval strategy on category axis.\\n\\n\\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\\n  var labelMap = {};\\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\\n    labelMap[labelItem.tickValue] = 1;\\n  });\\n  return function (dataIndex) {\\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\\n  };\\n}\\n\\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\\n  // In mose cases, line is monotonous on category axis, and the label size\\n  // is close with each other. So we check the symbol size and some of the\\n  // label size alone with the category axis to estimate whether all symbol\\n  // can be shown without overlap.\\n  var axisExtent = categoryAxis.getExtent();\\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\\n  // Sampling some points, max 5.\\n\\n  var dataLen = data.count();\\n  var step = Math.max(1, Math.round(dataLen / 5));\\n\\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\\n    * 1.5 > availSize) {\\n      return false;\\n    }\\n  }\\n\\n  return true;\\n}\\n\\nvar _default = ChartView.extend({\\n  type: 'line',\\n  init: function () {\\n    var lineGroup = new graphic.Group();\\n    var symbolDraw = new SymbolDraw();\\n    this.group.add(symbolDraw.group);\\n    this._symbolDraw = symbolDraw;\\n    this._lineGroup = lineGroup;\\n  },\\n  render: function (seriesModel, ecModel, api) {\\n    var coordSys = seriesModel.coordinateSystem;\\n    var group = this.group;\\n    var data = seriesModel.getData();\\n    var lineStyleModel = seriesModel.getModel('lineStyle');\\n    var areaStyleModel = seriesModel.getModel('areaStyle');\\n    var points = data.mapArray(data.getItemLayout);\\n    var isCoordSysPolar = coordSys.type === 'polar';\\n    var prevCoordSys = this._coordSys;\\n    var symbolDraw = this._symbolDraw;\\n    var polyline = this._polyline;\\n    var polygon = this._polygon;\\n    var lineGroup = this._lineGroup;\\n    var hasAnimation = seriesModel.get('animation');\\n    var isAreaChart = !areaStyleModel.isEmpty();\\n    var valueOrigin = areaStyleModel.get('origin');\\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\\n    var showSymbol = seriesModel.get('showSymbol');\\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\\n\\n    var oldData = this._data;\\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\\n      if (el.__temp) {\\n        group.remove(el);\\n        oldData.setItemGraphicEl(idx, null);\\n      }\\n    }); // Remove previous created symbols if showSymbol changed to false\\n\\n    if (!showSymbol) {\\n      symbolDraw.remove();\\n    }\\n\\n    group.add(lineGroup); // FIXME step not support polar\\n\\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\\n\\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\\n      showSymbol && symbolDraw.updateData(data, {\\n        isIgnore: isIgnoreFunc,\\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\\n      });\\n\\n      if (step) {\\n        // TODO If stacked series is not step\\n        points = turnPointsIntoStep(points, coordSys, step);\\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\\n      }\\n\\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\\n\\n      if (isAreaChart) {\\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\\n      }\\n\\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\\n    } else {\\n      if (isAreaChart && !polygon) {\\n        // If areaStyle is added\\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\\n      } else if (polygon && !isAreaChart) {\\n        // If areaStyle is removed\\n        lineGroup.remove(polygon);\\n        polygon = this._polygon = null;\\n      } // Update clipPath\\n\\n\\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\\n      // because points are not changed\\n\\n      showSymbol && symbolDraw.updateData(data, {\\n        isIgnore: isIgnoreFunc,\\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\\n      }); // Stop symbol animation and sync with line points\\n      // FIXME performance?\\n\\n      data.eachItemGraphicEl(function (el) {\\n        el.stopAnimation(true);\\n      }); // In the case data zoom triggerred refreshing frequently\\n      // Data may not change if line has a category axis. So it should animate nothing\\n\\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\\n        if (hasAnimation) {\\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\\n        } else {\\n          // Not do it in update with animation\\n          if (step) {\\n            // TODO If stacked series is not step\\n            points = turnPointsIntoStep(points, coordSys, step);\\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\\n          }\\n\\n          polyline.setShape({\\n            points: points\\n          });\\n          polygon && polygon.setShape({\\n            points: points,\\n            stackedOnPoints: stackedOnPoints\\n          });\\n        }\\n      }\\n    }\\n\\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\\n    lineStyleModel.getLineStyle(), {\\n      fill: 'none',\\n      stroke: visualColor,\\n      lineJoin: 'bevel'\\n    }));\\n    var smooth = seriesModel.get('smooth');\\n    smooth = getSmooth(seriesModel.get('smooth'));\\n    polyline.setShape({\\n      smooth: smooth,\\n      smoothMonotone: seriesModel.get('smoothMonotone'),\\n      connectNulls: seriesModel.get('connectNulls')\\n    });\\n\\n    if (polygon) {\\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\\n      var stackedOnSmooth = 0;\\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\\n        fill: visualColor,\\n        opacity: 0.7,\\n        lineJoin: 'bevel'\\n      }));\\n\\n      if (stackedOnSeries) {\\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\\n      }\\n\\n      polygon.setShape({\\n        smooth: smooth,\\n        stackedOnSmooth: stackedOnSmooth,\\n        smoothMonotone: seriesModel.get('smoothMonotone'),\\n        connectNulls: seriesModel.get('connectNulls')\\n      });\\n    }\\n\\n    this._data = data; // Save the coordinate system for transition animation when data changed\\n\\n    this._coordSys = coordSys;\\n    this._stackedOnPoints = stackedOnPoints;\\n    this._points = points;\\n    this._step = step;\\n    this._valueOrigin = valueOrigin;\\n  },\\n  dispose: function () {},\\n  highlight: function (seriesModel, ecModel, api, payload) {\\n    var data = seriesModel.getData();\\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\\n\\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\\n      var symbol = data.getItemGraphicEl(dataIndex);\\n\\n      if (!symbol) {\\n        // Create a temporary symbol if it is not exists\\n        var pt = data.getItemLayout(dataIndex);\\n\\n        if (!pt) {\\n          // Null data\\n          return;\\n        }\\n\\n        symbol = new SymbolClz(data, dataIndex);\\n        symbol.position = pt;\\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\\n        symbol.__temp = true;\\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\\n\\n        symbol.stopSymbolAnimation(true);\\n        this.group.add(symbol);\\n      }\\n\\n      symbol.highlight();\\n    } else {\\n      // Highlight whole series\\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\\n    }\\n  },\\n  downplay: function (seriesModel, ecModel, api, payload) {\\n    var data = seriesModel.getData();\\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\\n\\n    if (dataIndex != null && dataIndex >= 0) {\\n      var symbol = data.getItemGraphicEl(dataIndex);\\n\\n      if (symbol) {\\n        if (symbol.__temp) {\\n          data.setItemGraphicEl(dataIndex, null);\\n          this.group.remove(symbol);\\n        } else {\\n          symbol.downplay();\\n        }\\n      }\\n    } else {\\n      // FIXME\\n      // can not downplay completely.\\n      // Downplay whole series\\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\\n    }\\n  },\\n\\n  /**\\n   * @param {module:zrender/container/Group} group\\n   * @param {Array.<Array.<number>>} points\\n   * @private\\n   */\\n  _newPolyline: function (points) {\\n    var polyline = this._polyline; // Remove previous created polyline\\n\\n    if (polyline) {\\n      this._lineGroup.remove(polyline);\\n    }\\n\\n    polyline = new Polyline({\\n      shape: {\\n        points: points\\n      },\\n      silent: true,\\n      z2: 10\\n    });\\n\\n    this._lineGroup.add(polyline);\\n\\n    this._polyline = polyline;\\n    return polyline;\\n  },\\n\\n  /**\\n   * @param {module:zrender/container/Group} group\\n   * @param {Array.<Array.<number>>} stackedOnPoints\\n   * @param {Array.<Array.<number>>} points\\n   * @private\\n   */\\n  _newPolygon: function (points, stackedOnPoints) {\\n    var polygon = this._polygon; // Remove previous created polygon\\n\\n    if (polygon) {\\n      this._lineGroup.remove(polygon);\\n    }\\n\\n    polygon = new Polygon({\\n      shape: {\\n        points: points,\\n        stackedOnPoints: stackedOnPoints\\n      },\\n      silent: true\\n    });\\n\\n    this._lineGroup.add(polygon);\\n\\n    this._polygon = polygon;\\n    return polygon;\\n  },\\n\\n  /**\\n   * @private\\n   */\\n  // FIXME Two value axis\\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\\n    var polyline = this._polyline;\\n    var polygon = this._polygon;\\n    var seriesModel = data.hostModel;\\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\\n    var current = diff.current;\\n    var stackedOnCurrent = diff.stackedOnCurrent;\\n    var next = diff.next;\\n    var stackedOnNext = diff.stackedOnNext;\\n\\n    if (step) {\\n      // TODO If stacked series is not step\\n      current = turnPointsIntoStep(diff.current, coordSys, step);\\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\\n      next = turnPointsIntoStep(diff.next, coordSys, step);\\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\\n    } // `diff.current` is subset of `current` (which should be ensured by\\n    // turnPointsIntoStep), so points in `__points` can be updated when\\n    // points in `current` are update during animation.\\n\\n\\n    polyline.shape.__points = diff.current;\\n    polyline.shape.points = current;\\n    graphic.updateProps(polyline, {\\n      shape: {\\n        points: next\\n      }\\n    }, seriesModel);\\n\\n    if (polygon) {\\n      polygon.setShape({\\n        points: current,\\n        stackedOnPoints: stackedOnCurrent\\n      });\\n      graphic.updateProps(polygon, {\\n        shape: {\\n          points: next,\\n          stackedOnPoints: stackedOnNext\\n        }\\n      }, seriesModel);\\n    }\\n\\n    var updatedDataInfo = [];\\n    var diffStatus = diff.status;\\n\\n    for (var i = 0; i < diffStatus.length; i++) {\\n      var cmd = diffStatus[i].cmd;\\n\\n      if (cmd === '=') {\\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\\n\\n        if (el) {\\n          updatedDataInfo.push({\\n            el: el,\\n            ptIdx: i // Index of points\\n\\n          });\\n        }\\n      }\\n    }\\n\\n    if (polyline.animators && polyline.animators.length) {\\n      polyline.animators[0].during(function () {\\n        for (var i = 0; i < updatedDataInfo.length; i++) {\\n          var el = updatedDataInfo[i].el;\\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\\n        }\\n      });\\n    }\\n  },\\n  remove: function (ecModel) {\\n    var group = this.group;\\n    var oldData = this._data;\\n\\n    this._lineGroup.removeAll();\\n\\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\\n\\n\\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\\n      if (el.__temp) {\\n        group.remove(el);\\n        oldData.setItemGraphicEl(idx, null);\\n      }\\n    });\\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///255\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar SymbolClz = __webpack_require__(166);\\n\\nvar _util = __webpack_require__(59);\\n\\nvar isObject = _util.isObject;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @module echarts/chart/helper/SymbolDraw\\n */\\n\\n/**\\n * @constructor\\n * @alias module:echarts/chart/helper/SymbolDraw\\n * @param {module:zrender/graphic/Group} [symbolCtor]\\n */\\nfunction SymbolDraw(symbolCtor) {\\n  this.group = new graphic.Group();\\n  this._symbolCtor = symbolCtor || SymbolClz;\\n}\\n\\nvar symbolDrawProto = SymbolDraw.prototype;\\n\\nfunction symbolNeedsDraw(data, point, idx, opt) {\\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\\n  // the symbol element shape. We use the same clip shape here as\\n  // the line clip.\\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\\n}\\n/**\\n * Update symbols draw by new data\\n * @param {module:echarts/data/List} data\\n * @param {Object} [opt] Or isIgnore\\n * @param {Function} [opt.isIgnore]\\n * @param {Object} [opt.clipShape]\\n */\\n\\n\\nsymbolDrawProto.updateData = function (data, opt) {\\n  opt = normalizeUpdateOpt(opt);\\n  var group = this.group;\\n  var seriesModel = data.hostModel;\\n  var oldData = this._data;\\n  var SymbolCtor = this._symbolCtor;\\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\\n  // stream mode to normal mode, where previous elements should be removed.\\n\\n  if (!oldData) {\\n    group.removeAll();\\n  }\\n\\n  data.diff(oldData).add(function (newIdx) {\\n    var point = data.getItemLayout(newIdx);\\n\\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\\n      symbolEl.attr('position', point);\\n      data.setItemGraphicEl(newIdx, symbolEl);\\n      group.add(symbolEl);\\n    }\\n  }).update(function (newIdx, oldIdx) {\\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\\n    var point = data.getItemLayout(newIdx);\\n\\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\\n      group.remove(symbolEl);\\n      return;\\n    }\\n\\n    if (!symbolEl) {\\n      symbolEl = new SymbolCtor(data, newIdx);\\n      symbolEl.attr('position', point);\\n    } else {\\n      symbolEl.updateData(data, newIdx, seriesScope);\\n      graphic.updateProps(symbolEl, {\\n        position: point\\n      }, seriesModel);\\n    } // Add back\\n\\n\\n    group.add(symbolEl);\\n    data.setItemGraphicEl(newIdx, symbolEl);\\n  }).remove(function (oldIdx) {\\n    var el = oldData.getItemGraphicEl(oldIdx);\\n    el && el.fadeOut(function () {\\n      group.remove(el);\\n    });\\n  }).execute();\\n  this._data = data;\\n};\\n\\nsymbolDrawProto.isPersistent = function () {\\n  return true;\\n};\\n\\nsymbolDrawProto.updateLayout = function () {\\n  var data = this._data;\\n\\n  if (data) {\\n    // Not use animation\\n    data.eachItemGraphicEl(function (el, idx) {\\n      var point = data.getItemLayout(idx);\\n      el.attr('position', point);\\n    });\\n  }\\n};\\n\\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\\n  this._seriesScope = makeSeriesScope(data);\\n  this._data = null;\\n  this.group.removeAll();\\n};\\n/**\\n * Update symbols draw by new data\\n * @param {module:echarts/data/List} data\\n * @param {Object} [opt] Or isIgnore\\n * @param {Function} [opt.isIgnore]\\n * @param {Object} [opt.clipShape]\\n */\\n\\n\\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\\n  opt = normalizeUpdateOpt(opt);\\n\\n  function updateIncrementalAndHover(el) {\\n    if (!el.isGroup) {\\n      el.incremental = el.useHoverLayer = true;\\n    }\\n  }\\n\\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\\n    var point = data.getItemLayout(idx);\\n\\n    if (symbolNeedsDraw(data, point, idx, opt)) {\\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\\n      el.traverse(updateIncrementalAndHover);\\n      el.attr('position', point);\\n      this.group.add(el);\\n      data.setItemGraphicEl(idx, el);\\n    }\\n  }\\n};\\n\\nfunction normalizeUpdateOpt(opt) {\\n  if (opt != null && !isObject(opt)) {\\n    opt = {\\n      isIgnore: opt\\n    };\\n  }\\n\\n  return opt || {};\\n}\\n\\nsymbolDrawProto.remove = function (enableAnimation) {\\n  var group = this.group;\\n  var data = this._data; // Incremental model do not have this._data.\\n\\n  if (data && enableAnimation) {\\n    data.eachItemGraphicEl(function (el) {\\n      el.fadeOut(function () {\\n        group.remove(el);\\n      });\\n    });\\n  } else {\\n    group.removeAll();\\n  }\\n};\\n\\nfunction makeSeriesScope(data) {\\n  var seriesModel = data.hostModel;\\n  return {\\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\\n    symbolRotate: seriesModel.get('symbolRotate'),\\n    symbolOffset: seriesModel.get('symbolOffset'),\\n    hoverAnimation: seriesModel.get('hoverAnimation'),\\n    labelModel: seriesModel.getModel('label'),\\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\\n    cursorStyle: seriesModel.get('cursor')\\n  };\\n}\\n\\nvar _default = SymbolDraw;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///256\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _dataProvider = __webpack_require__(85);\\n\\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * @param {module:echarts/data/List} data\\n * @param {number} dataIndex\\n * @return {string} label string. Not null/undefined\\n */\\nfunction getDefaultLabel(data, dataIndex) {\\n  var labelDims = data.mapDimension(\\'defaultedLabel\\', true);\\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\\n\\n  if (len === 1) {\\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\\n  } else if (len) {\\n    var vals = [];\\n\\n    for (var i = 0; i < labelDims.length; i++) {\\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\\n      vals.push(val);\\n    }\\n\\n    return vals.join(\\' \\');\\n  }\\n}\\n\\nexports.getDefaultLabel = getDefaultLabel;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY2hhcnQvaGVscGVyL2xhYmVsSGVscGVyLmpzP2M3NzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixtQkFBTyxDQUFDLEVBQWdDOztBQUU1RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcseUJBQXlCO0FBQ3BDLFdBQVcsT0FBTztBQUNsQixZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCOztBQUU3QjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyNTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIF9kYXRhUHJvdmlkZXIgPSByZXF1aXJlKFwiLi4vLi4vZGF0YS9oZWxwZXIvZGF0YVByb3ZpZGVyXCIpO1xuXG52YXIgcmV0cmlldmVSYXdWYWx1ZSA9IF9kYXRhUHJvdmlkZXIucmV0cmlldmVSYXdWYWx1ZTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG4vKipcbiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvZGF0YS9MaXN0fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gZGF0YUluZGV4XG4gKiBAcmV0dXJuIHtzdHJpbmd9IGxhYmVsIHN0cmluZy4gTm90IG51bGwvdW5kZWZpbmVkXG4gKi9cbmZ1bmN0aW9uIGdldERlZmF1bHRMYWJlbChkYXRhLCBkYXRhSW5kZXgpIHtcbiAgdmFyIGxhYmVsRGltcyA9IGRhdGEubWFwRGltZW5zaW9uKCdkZWZhdWx0ZWRMYWJlbCcsIHRydWUpO1xuICB2YXIgbGVuID0gbGFiZWxEaW1zLmxlbmd0aDsgLy8gU2ltcGxlIG9wdGltaXphdGlvbiAoaW4gbG90cyBvZiBjYXNlcywgbGFiZWwgZGltcyBsZW5ndGggaXMgMSlcblxuICBpZiAobGVuID09PSAxKSB7XG4gICAgcmV0dXJuIHJldHJpZXZlUmF3VmFsdWUoZGF0YSwgZGF0YUluZGV4LCBsYWJlbERpbXNbMF0pO1xuICB9IGVsc2UgaWYgKGxlbikge1xuICAgIHZhciB2YWxzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhYmVsRGltcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHZhbCA9IHJldHJpZXZlUmF3VmFsdWUoZGF0YSwgZGF0YUluZGV4LCBsYWJlbERpbXNbaV0pO1xuICAgICAgdmFscy5wdXNoKHZhbCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHMuam9pbignICcpO1xuICB9XG59XG5cbmV4cG9ydHMuZ2V0RGVmYXVsdExhYmVsID0gZ2V0RGVmYXVsdExhYmVsOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///257\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _helper = __webpack_require__(167);\\n\\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\\nvar getStackedOnPoint = _helper.getStackedOnPoint;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// var arrayDiff = require('zrender/src/core/arrayDiff');\\n// 'zrender/src/core/arrayDiff' has been used before, but it did\\n// not do well in performance when roam with fixed dataZoom window.\\n// function convertToIntId(newIdList, oldIdList) {\\n//     // Generate int id instead of string id.\\n//     // Compare string maybe slow in score function of arrDiff\\n//     // Assume id in idList are all unique\\n//     var idIndicesMap = {};\\n//     var idx = 0;\\n//     for (var i = 0; i < newIdList.length; i++) {\\n//         idIndicesMap[newIdList[i]] = idx;\\n//         newIdList[i] = idx++;\\n//     }\\n//     for (var i = 0; i < oldIdList.length; i++) {\\n//         var oldId = oldIdList[i];\\n//         // Same with newIdList\\n//         if (idIndicesMap[oldId]) {\\n//             oldIdList[i] = idIndicesMap[oldId];\\n//         }\\n//         else {\\n//             oldIdList[i] = idx++;\\n//         }\\n//     }\\n// }\\nfunction diffData(oldData, newData) {\\n  var diffResult = [];\\n  newData.diff(oldData).add(function (idx) {\\n    diffResult.push({\\n      cmd: '+',\\n      idx: idx\\n    });\\n  }).update(function (newIdx, oldIdx) {\\n    diffResult.push({\\n      cmd: '=',\\n      idx: oldIdx,\\n      idx1: newIdx\\n    });\\n  }).remove(function (idx) {\\n    diffResult.push({\\n      cmd: '-',\\n      idx: idx\\n    });\\n  }).execute();\\n  return diffResult;\\n}\\n\\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\\n  // var oldIdList = oldData.mapArray(oldData.getId);\\n  // convertToIntId(newIdList, oldIdList);\\n  // // FIXME One data ?\\n  // diff = arrayDiff(oldIdList, newIdList);\\n\\n  var currPoints = [];\\n  var nextPoints = []; // Points for stacking base line\\n\\n  var currStackedPoints = [];\\n  var nextStackedPoints = [];\\n  var status = [];\\n  var sortedIndices = [];\\n  var rawIndices = [];\\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\\n\\n  for (var i = 0; i < diff.length; i++) {\\n    var diffItem = diff[i];\\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\\n    // Which is in case remvoing or add more than one data in the tail or head\\n\\n    switch (diffItem.cmd) {\\n      case '=':\\n        var currentPt = oldData.getItemLayout(diffItem.idx);\\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\\n\\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\\n          currentPt = nextPt.slice();\\n        }\\n\\n        currPoints.push(currentPt);\\n        nextPoints.push(nextPt);\\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\\n        break;\\n\\n      case '+':\\n        var idx = diffItem.idx;\\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\\n        nextPoints.push(newData.getItemLayout(idx).slice());\\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\\n        nextStackedPoints.push(newStackedOnPoints[idx]);\\n        rawIndices.push(newData.getRawIndex(idx));\\n        break;\\n\\n      case '-':\\n        var idx = diffItem.idx;\\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\\n        // FIXME FIXME FIXME\\n\\n        if (rawIndex !== idx) {\\n          currPoints.push(oldData.getItemLayout(idx));\\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\\n          currStackedPoints.push(oldStackedOnPoints[idx]);\\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\\n          rawIndices.push(rawIndex);\\n        } else {\\n          pointAdded = false;\\n        }\\n\\n    } // Original indices\\n\\n\\n    if (pointAdded) {\\n      status.push(diffItem);\\n      sortedIndices.push(sortedIndices.length);\\n    }\\n  } // Diff result may be crossed if all items are changed\\n  // Sort by data index\\n\\n\\n  sortedIndices.sort(function (a, b) {\\n    return rawIndices[a] - rawIndices[b];\\n  });\\n  var sortedCurrPoints = [];\\n  var sortedNextPoints = [];\\n  var sortedCurrStackedPoints = [];\\n  var sortedNextStackedPoints = [];\\n  var sortedStatus = [];\\n\\n  for (var i = 0; i < sortedIndices.length; i++) {\\n    var idx = sortedIndices[i];\\n    sortedCurrPoints[i] = currPoints[idx];\\n    sortedNextPoints[i] = nextPoints[idx];\\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\\n    sortedStatus[i] = status[idx];\\n  }\\n\\n  return {\\n    current: sortedCurrPoints,\\n    next: sortedNextPoints,\\n    stackedOnCurrent: sortedCurrStackedPoints,\\n    stackedOnNext: sortedNextStackedPoints,\\n    status: sortedStatus\\n  };\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///258\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar Path = __webpack_require__(64);\\n\\nvar vec2 = __webpack_require__(62);\\n\\nvar fixClipWithShadow = __webpack_require__(145);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// Poly path support NaN point\\nvar vec2Min = vec2.min;\\nvar vec2Max = vec2.max;\\nvar scaleAndAdd = vec2.scaleAndAdd;\\nvar v2Copy = vec2.copy; // Temporary variable\\n\\nvar v = [];\\nvar cp0 = [];\\nvar cp1 = [];\\n\\nfunction isPointNull(p) {\\n  return isNaN(p[0]) || isNaN(p[1]);\\n}\\n\\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\\n  // if (smoothMonotone == null) {\\n  //     if (isMono(points, 'x')) {\\n  //         return drawMono(ctx, points, start, segLen, allLen,\\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\\n  //     }\\n  //     else if (isMono(points, 'y')) {\\n  //         return drawMono(ctx, points, start, segLen, allLen,\\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\\n  //     }\\n  //     else {\\n  //         return drawNonMono.apply(this, arguments);\\n  //     }\\n  // }\\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\\n  //     return drawMono.apply(this, arguments);\\n  // }\\n  // else {\\n  //     return drawNonMono.apply(this, arguments);\\n  // }\\n  if (smoothMonotone === 'none' || !smoothMonotone) {\\n    return drawNonMono.apply(this, arguments);\\n  } else {\\n    return drawMono.apply(this, arguments);\\n  }\\n}\\n/**\\n * Check if points is in monotone.\\n *\\n * @param {number[][]} points         Array of points which is in [x, y] form\\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\\n *                                    dimension that is checking.\\n *                                    If is 'none', `drawNonMono` should be\\n *                                    called.\\n *                                    If is undefined, either being monotone\\n *                                    in 'x' or 'y' will call `drawMono`.\\n */\\n// function isMono(points, smoothMonotone) {\\n//     if (points.length <= 1) {\\n//         return true;\\n//     }\\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\\n//     var last = points[0][dim];\\n//     var lastDiff = 0;\\n//     for (var i = 1; i < points.length; ++i) {\\n//         var diff = points[i][dim] - last;\\n//         if (!isNaN(diff) && !isNaN(lastDiff)\\n//             && diff !== 0 && lastDiff !== 0\\n//             && ((diff >= 0) !== (lastDiff >= 0))\\n//         ) {\\n//             return false;\\n//         }\\n//         if (!isNaN(diff) && diff !== 0) {\\n//             lastDiff = diff;\\n//             last = points[i][dim];\\n//         }\\n//     }\\n//     return true;\\n// }\\n\\n/**\\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\\n * control points will be used. This should be used when points are monotone\\n * either in x or y dimension.\\n */\\n\\n\\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\\n  var prevIdx = 0;\\n  var idx = start;\\n\\n  for (var k = 0; k < segLen; k++) {\\n    var p = points[idx];\\n\\n    if (idx >= allLen || idx < 0) {\\n      break;\\n    }\\n\\n    if (isPointNull(p)) {\\n      if (connectNulls) {\\n        idx += dir;\\n        continue;\\n      }\\n\\n      break;\\n    }\\n\\n    if (idx === start) {\\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\\n    } else {\\n      if (smooth > 0) {\\n        var prevP = points[prevIdx];\\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\\n\\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\\n        v2Copy(cp0, prevP);\\n        cp0[dim] = prevP[dim] + ctrlLen;\\n        v2Copy(cp1, p);\\n        cp1[dim] = p[dim] - ctrlLen;\\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\\n      } else {\\n        ctx.lineTo(p[0], p[1]);\\n      }\\n    }\\n\\n    prevIdx = idx;\\n    idx += dir;\\n  }\\n\\n  return k;\\n}\\n/**\\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\\n * situations. This should be used when points are non-monotone neither in x or\\n * y dimension.\\n */\\n\\n\\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\\n  var prevIdx = 0;\\n  var idx = start;\\n\\n  for (var k = 0; k < segLen; k++) {\\n    var p = points[idx];\\n\\n    if (idx >= allLen || idx < 0) {\\n      break;\\n    }\\n\\n    if (isPointNull(p)) {\\n      if (connectNulls) {\\n        idx += dir;\\n        continue;\\n      }\\n\\n      break;\\n    }\\n\\n    if (idx === start) {\\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\\n      v2Copy(cp0, p);\\n    } else {\\n      if (smooth > 0) {\\n        var nextIdx = idx + dir;\\n        var nextP = points[nextIdx];\\n\\n        if (connectNulls) {\\n          // Find next point not null\\n          while (nextP && isPointNull(points[nextIdx])) {\\n            nextIdx += dir;\\n            nextP = points[nextIdx];\\n          }\\n        }\\n\\n        var ratioNextSeg = 0.5;\\n        var prevP = points[prevIdx];\\n        var nextP = points[nextIdx]; // Last point\\n\\n        if (!nextP || isPointNull(nextP)) {\\n          v2Copy(cp1, p);\\n        } else {\\n          // If next data is null in not connect case\\n          if (isPointNull(nextP) && !connectNulls) {\\n            nextP = p;\\n          }\\n\\n          vec2.sub(v, nextP, prevP);\\n          var lenPrevSeg;\\n          var lenNextSeg;\\n\\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\\n            var dim = smoothMonotone === 'x' ? 0 : 1;\\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\\n          } else {\\n            lenPrevSeg = vec2.dist(p, prevP);\\n            lenNextSeg = vec2.dist(p, nextP);\\n          } // Use ratio of seg length\\n\\n\\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\\n        } // Smooth constraint\\n\\n\\n        vec2Min(cp0, cp0, smoothMax);\\n        vec2Max(cp0, cp0, smoothMin);\\n        vec2Min(cp1, cp1, smoothMax);\\n        vec2Max(cp1, cp1, smoothMin);\\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\\n\\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\\n      } else {\\n        ctx.lineTo(p[0], p[1]);\\n      }\\n    }\\n\\n    prevIdx = idx;\\n    idx += dir;\\n  }\\n\\n  return k;\\n}\\n\\nfunction getBoundingBox(points, smoothConstraint) {\\n  var ptMin = [Infinity, Infinity];\\n  var ptMax = [-Infinity, -Infinity];\\n\\n  if (smoothConstraint) {\\n    for (var i = 0; i < points.length; i++) {\\n      var pt = points[i];\\n\\n      if (pt[0] < ptMin[0]) {\\n        ptMin[0] = pt[0];\\n      }\\n\\n      if (pt[1] < ptMin[1]) {\\n        ptMin[1] = pt[1];\\n      }\\n\\n      if (pt[0] > ptMax[0]) {\\n        ptMax[0] = pt[0];\\n      }\\n\\n      if (pt[1] > ptMax[1]) {\\n        ptMax[1] = pt[1];\\n      }\\n    }\\n  }\\n\\n  return {\\n    min: smoothConstraint ? ptMin : ptMax,\\n    max: smoothConstraint ? ptMax : ptMin\\n  };\\n}\\n\\nvar Polyline = Path.extend({\\n  type: 'ec-polyline',\\n  shape: {\\n    points: [],\\n    smooth: 0,\\n    smoothConstraint: true,\\n    smoothMonotone: null,\\n    connectNulls: false\\n  },\\n  style: {\\n    fill: null,\\n    stroke: '#000'\\n  },\\n  brush: fixClipWithShadow(Path.prototype.brush),\\n  buildPath: function (ctx, shape) {\\n    var points = shape.points;\\n    var i = 0;\\n    var len = points.length;\\n    var result = getBoundingBox(points, shape.smoothConstraint);\\n\\n    if (shape.connectNulls) {\\n      // Must remove first and last null values avoid draw error in polygon\\n      for (; len > 0; len--) {\\n        if (!isPointNull(points[len - 1])) {\\n          break;\\n        }\\n      }\\n\\n      for (; i < len; i++) {\\n        if (!isPointNull(points[i])) {\\n          break;\\n        }\\n      }\\n    }\\n\\n    while (i < len) {\\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\\n    }\\n  }\\n});\\nvar Polygon = Path.extend({\\n  type: 'ec-polygon',\\n  shape: {\\n    points: [],\\n    // Offset between stacked base points and points\\n    stackedOnPoints: [],\\n    smooth: 0,\\n    stackedOnSmooth: 0,\\n    smoothConstraint: true,\\n    smoothMonotone: null,\\n    connectNulls: false\\n  },\\n  brush: fixClipWithShadow(Path.prototype.brush),\\n  buildPath: function (ctx, shape) {\\n    var points = shape.points;\\n    var stackedOnPoints = shape.stackedOnPoints;\\n    var i = 0;\\n    var len = points.length;\\n    var smoothMonotone = shape.smoothMonotone;\\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\\n\\n    if (shape.connectNulls) {\\n      // Must remove first and last null values avoid draw error in polygon\\n      for (; len > 0; len--) {\\n        if (!isPointNull(points[len - 1])) {\\n          break;\\n        }\\n      }\\n\\n      for (; i < len; i++) {\\n        if (!isPointNull(points[i])) {\\n          break;\\n        }\\n      }\\n    }\\n\\n    while (i < len) {\\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\\n      i += k + 1;\\n      ctx.closePath();\\n    }\\n  }\\n});\\nexports.Polyline = Polyline;\\nexports.Polygon = Polygon;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///259\\n\")},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\\n  // Encoding visual for all series include which is filtered for legend drawing\\n  return {\\n    seriesType: seriesType,\\n    // For legend.\\n    performRawSeries: true,\\n    reset: function (seriesModel, ecModel, api) {\\n      var data = seriesModel.getData();\\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\\n      var symbolSize = seriesModel.get('symbolSize');\\n      var keepAspect = seriesModel.get('symbolKeepAspect');\\n      data.setVisual({\\n        legendSymbol: legendSymbol || symbolType,\\n        symbol: symbolType,\\n        symbolSize: symbolSize,\\n        symbolKeepAspect: keepAspect\\n      }); // Only visible series has each data be visual encoded\\n\\n      if (ecModel.isSeriesFiltered(seriesModel)) {\\n        return;\\n      }\\n\\n      var hasCallback = typeof symbolSize === 'function';\\n\\n      function dataEach(data, idx) {\\n        if (typeof symbolSize === 'function') {\\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\\n\\n          var params = seriesModel.getDataParams(idx);\\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\\n        }\\n\\n        if (data.hasItemOption) {\\n          var itemModel = data.getItemModel(idx);\\n          var itemSymbolType = itemModel.getShallow('symbol', true);\\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\\n\\n          if (itemSymbolType != null) {\\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\\n          }\\n\\n          if (itemSymbolSize != null) {\\n            // PENDING Transform symbolSize ?\\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\\n          }\\n\\n          if (itemSymbolKeepAspect != null) {\\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\\n          }\\n        }\\n      }\\n\\n      return {\\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\\n      };\\n    }\\n  };\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvdmlzdWFsL3N5bWJvbC5qcz83Zjk2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxFQUFFOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0Esc0RBQXNEOztBQUV0RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRkFBb0Y7O0FBRXBGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyNjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuZnVuY3Rpb24gX2RlZmF1bHQoc2VyaWVzVHlwZSwgZGVmYXVsdFN5bWJvbFR5cGUsIGxlZ2VuZFN5bWJvbCkge1xuICAvLyBFbmNvZGluZyB2aXN1YWwgZm9yIGFsbCBzZXJpZXMgaW5jbHVkZSB3aGljaCBpcyBmaWx0ZXJlZCBmb3IgbGVnZW5kIGRyYXdpbmdcbiAgcmV0dXJuIHtcbiAgICBzZXJpZXNUeXBlOiBzZXJpZXNUeXBlLFxuICAgIC8vIEZvciBsZWdlbmQuXG4gICAgcGVyZm9ybVJhd1NlcmllczogdHJ1ZSxcbiAgICByZXNldDogZnVuY3Rpb24gKHNlcmllc01vZGVsLCBlY01vZGVsLCBhcGkpIHtcbiAgICAgIHZhciBkYXRhID0gc2VyaWVzTW9kZWwuZ2V0RGF0YSgpO1xuICAgICAgdmFyIHN5bWJvbFR5cGUgPSBzZXJpZXNNb2RlbC5nZXQoJ3N5bWJvbCcpIHx8IGRlZmF1bHRTeW1ib2xUeXBlO1xuICAgICAgdmFyIHN5bWJvbFNpemUgPSBzZXJpZXNNb2RlbC5nZXQoJ3N5bWJvbFNpemUnKTtcbiAgICAgIHZhciBrZWVwQXNwZWN0ID0gc2VyaWVzTW9kZWwuZ2V0KCdzeW1ib2xLZWVwQXNwZWN0Jyk7XG4gICAgICBkYXRhLnNldFZpc3VhbCh7XG4gICAgICAgIGxlZ2VuZFN5bWJvbDogbGVnZW5kU3ltYm9sIHx8IHN5bWJvbFR5cGUsXG4gICAgICAgIHN5bWJvbDogc3ltYm9sVHlwZSxcbiAgICAgICAgc3ltYm9sU2l6ZTogc3ltYm9sU2l6ZSxcbiAgICAgICAgc3ltYm9sS2VlcEFzcGVjdDoga2VlcEFzcGVjdFxuICAgICAgfSk7IC8vIE9ubHkgdmlzaWJsZSBzZXJpZXMgaGFzIGVhY2ggZGF0YSBiZSB2aXN1YWwgZW5jb2RlZFxuXG4gICAgICBpZiAoZWNNb2RlbC5pc1Nlcmllc0ZpbHRlcmVkKHNlcmllc01vZGVsKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBoYXNDYWxsYmFjayA9IHR5cGVvZiBzeW1ib2xTaXplID09PSAnZnVuY3Rpb24nO1xuXG4gICAgICBmdW5jdGlvbiBkYXRhRWFjaChkYXRhLCBpZHgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzeW1ib2xTaXplID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgdmFyIHJhd1ZhbHVlID0gc2VyaWVzTW9kZWwuZ2V0UmF3VmFsdWUoaWR4KTsgLy8gRklYTUVcblxuICAgICAgICAgIHZhciBwYXJhbXMgPSBzZXJpZXNNb2RlbC5nZXREYXRhUGFyYW1zKGlkeCk7XG4gICAgICAgICAgZGF0YS5zZXRJdGVtVmlzdWFsKGlkeCwgJ3N5bWJvbFNpemUnLCBzeW1ib2xTaXplKHJhd1ZhbHVlLCBwYXJhbXMpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkYXRhLmhhc0l0ZW1PcHRpb24pIHtcbiAgICAgICAgICB2YXIgaXRlbU1vZGVsID0gZGF0YS5nZXRJdGVtTW9kZWwoaWR4KTtcbiAgICAgICAgICB2YXIgaXRlbVN5bWJvbFR5cGUgPSBpdGVtTW9kZWwuZ2V0U2hhbGxvdygnc3ltYm9sJywgdHJ1ZSk7XG4gICAgICAgICAgdmFyIGl0ZW1TeW1ib2xTaXplID0gaXRlbU1vZGVsLmdldFNoYWxsb3coJ3N5bWJvbFNpemUnLCB0cnVlKTtcbiAgICAgICAgICB2YXIgaXRlbVN5bWJvbEtlZXBBc3BlY3QgPSBpdGVtTW9kZWwuZ2V0U2hhbGxvdygnc3ltYm9sS2VlcEFzcGVjdCcsIHRydWUpOyAvLyBJZiBoYXMgaXRlbSBzeW1ib2xcblxuICAgICAgICAgIGlmIChpdGVtU3ltYm9sVHlwZSAhPSBudWxsKSB7XG4gICAgICAgICAgICBkYXRhLnNldEl0ZW1WaXN1YWwoaWR4LCAnc3ltYm9sJywgaXRlbVN5bWJvbFR5cGUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChpdGVtU3ltYm9sU2l6ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAvLyBQRU5ESU5HIFRyYW5zZm9ybSBzeW1ib2xTaXplID9cbiAgICAgICAgICAgIGRhdGEuc2V0SXRlbVZpc3VhbChpZHgsICdzeW1ib2xTaXplJywgaXRlbVN5bWJvbFNpemUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChpdGVtU3ltYm9sS2VlcEFzcGVjdCAhPSBudWxsKSB7XG4gICAgICAgICAgICBkYXRhLnNldEl0ZW1WaXN1YWwoaWR4LCAnc3ltYm9sS2VlcEFzcGVjdCcsIGl0ZW1TeW1ib2xLZWVwQXNwZWN0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YUVhY2g6IGRhdGEuaGFzSXRlbU9wdGlvbiB8fCBoYXNDYWxsYmFjayA/IGRhdGFFYWNoIDogbnVsbFxuICAgICAgfTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///260\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _util = __webpack_require__(59);\\n\\nvar map = _util.map;\\n\\nvar createRenderPlanner = __webpack_require__(109);\\n\\nvar _dataStackHelper = __webpack_require__(79);\\n\\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/* global Float32Array */\\nfunction _default(seriesType) {\\n  return {\\n    seriesType: seriesType,\\n    plan: createRenderPlanner(),\\n    reset: function (seriesModel) {\\n      var data = seriesModel.getData();\\n      var coordSys = seriesModel.coordinateSystem;\\n      var pipelineContext = seriesModel.pipelineContext;\\n      var isLargeRender = pipelineContext.large;\\n\\n      if (!coordSys) {\\n        return;\\n      }\\n\\n      var dims = map(coordSys.dimensions, function (dim) {\\n        return data.mapDimension(dim);\\n      }).slice(0, 2);\\n      var dimLen = dims.length;\\n      var stackResultDim = data.getCalculationInfo(\\'stackResultDimension\\');\\n\\n      if (isDimensionStacked(data, dims[0]\\n      /*, dims[1]*/\\n      )) {\\n        dims[0] = stackResultDim;\\n      }\\n\\n      if (isDimensionStacked(data, dims[1]\\n      /*, dims[0]*/\\n      )) {\\n        dims[1] = stackResultDim;\\n      }\\n\\n      function progress(params, data) {\\n        var segCount = params.end - params.start;\\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\\n\\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\\n          var point;\\n\\n          if (dimLen === 1) {\\n            var x = data.get(dims[0], i);\\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\\n          } else {\\n            var x = tmpIn[0] = data.get(dims[0], i);\\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\\n\\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\\n          }\\n\\n          if (isLargeRender) {\\n            points[offset++] = point ? point[0] : NaN;\\n            points[offset++] = point ? point[1] : NaN;\\n          } else {\\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\\n          }\\n        }\\n\\n        isLargeRender && data.setLayout(\\'symbolPoints\\', points);\\n      }\\n\\n      return dimLen && {\\n        progress: progress\\n      };\\n    }\\n  };\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvbGF5b3V0L3BvaW50cy5qcz84N2MzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLG1CQUFPLENBQUMsRUFBdUI7O0FBRTNDOztBQUVBLDBCQUEwQixtQkFBTyxDQUFDLEdBQXFDOztBQUV2RSx1QkFBdUIsbUJBQU8sQ0FBQyxFQUFnQzs7QUFFL0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHVFQUF1RSxnQkFBZ0I7QUFDdkY7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0Esb0RBQW9ELFVBQVUsZUFBZTs7QUFFN0U7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjI2MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgX3V0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgbWFwID0gX3V0aWwubWFwO1xuXG52YXIgY3JlYXRlUmVuZGVyUGxhbm5lciA9IHJlcXVpcmUoXCIuLi9jaGFydC9oZWxwZXIvY3JlYXRlUmVuZGVyUGxhbm5lclwiKTtcblxudmFyIF9kYXRhU3RhY2tIZWxwZXIgPSByZXF1aXJlKFwiLi4vZGF0YS9oZWxwZXIvZGF0YVN0YWNrSGVscGVyXCIpO1xuXG52YXIgaXNEaW1lbnNpb25TdGFja2VkID0gX2RhdGFTdGFja0hlbHBlci5pc0RpbWVuc2lvblN0YWNrZWQ7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyogZ2xvYmFsIEZsb2F0MzJBcnJheSAqL1xuZnVuY3Rpb24gX2RlZmF1bHQoc2VyaWVzVHlwZSkge1xuICByZXR1cm4ge1xuICAgIHNlcmllc1R5cGU6IHNlcmllc1R5cGUsXG4gICAgcGxhbjogY3JlYXRlUmVuZGVyUGxhbm5lcigpLFxuICAgIHJlc2V0OiBmdW5jdGlvbiAoc2VyaWVzTW9kZWwpIHtcbiAgICAgIHZhciBkYXRhID0gc2VyaWVzTW9kZWwuZ2V0RGF0YSgpO1xuICAgICAgdmFyIGNvb3JkU3lzID0gc2VyaWVzTW9kZWwuY29vcmRpbmF0ZVN5c3RlbTtcbiAgICAgIHZhciBwaXBlbGluZUNvbnRleHQgPSBzZXJpZXNNb2RlbC5waXBlbGluZUNvbnRleHQ7XG4gICAgICB2YXIgaXNMYXJnZVJlbmRlciA9IHBpcGVsaW5lQ29udGV4dC5sYXJnZTtcblxuICAgICAgaWYgKCFjb29yZFN5cykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBkaW1zID0gbWFwKGNvb3JkU3lzLmRpbWVuc2lvbnMsIGZ1bmN0aW9uIChkaW0pIHtcbiAgICAgICAgcmV0dXJuIGRhdGEubWFwRGltZW5zaW9uKGRpbSk7XG4gICAgICB9KS5zbGljZSgwLCAyKTtcbiAgICAgIHZhciBkaW1MZW4gPSBkaW1zLmxlbmd0aDtcbiAgICAgIHZhciBzdGFja1Jlc3VsdERpbSA9IGRhdGEuZ2V0Q2FsY3VsYXRpb25JbmZvKCdzdGFja1Jlc3VsdERpbWVuc2lvbicpO1xuXG4gICAgICBpZiAoaXNEaW1lbnNpb25TdGFja2VkKGRhdGEsIGRpbXNbMF1cbiAgICAgIC8qLCBkaW1zWzFdKi9cbiAgICAgICkpIHtcbiAgICAgICAgZGltc1swXSA9IHN0YWNrUmVzdWx0RGltO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNEaW1lbnNpb25TdGFja2VkKGRhdGEsIGRpbXNbMV1cbiAgICAgIC8qLCBkaW1zWzBdKi9cbiAgICAgICkpIHtcbiAgICAgICAgZGltc1sxXSA9IHN0YWNrUmVzdWx0RGltO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBwcm9ncmVzcyhwYXJhbXMsIGRhdGEpIHtcbiAgICAgICAgdmFyIHNlZ0NvdW50ID0gcGFyYW1zLmVuZCAtIHBhcmFtcy5zdGFydDtcbiAgICAgICAgdmFyIHBvaW50cyA9IGlzTGFyZ2VSZW5kZXIgJiYgbmV3IEZsb2F0MzJBcnJheShzZWdDb3VudCAqIGRpbUxlbik7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IHBhcmFtcy5zdGFydCwgb2Zmc2V0ID0gMCwgdG1wSW4gPSBbXSwgdG1wT3V0ID0gW107IGkgPCBwYXJhbXMuZW5kOyBpKyspIHtcbiAgICAgICAgICB2YXIgcG9pbnQ7XG5cbiAgICAgICAgICBpZiAoZGltTGVuID09PSAxKSB7XG4gICAgICAgICAgICB2YXIgeCA9IGRhdGEuZ2V0KGRpbXNbMF0sIGkpO1xuICAgICAgICAgICAgcG9pbnQgPSAhaXNOYU4oeCkgJiYgY29vcmRTeXMuZGF0YVRvUG9pbnQoeCwgbnVsbCwgdG1wT3V0KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIHggPSB0bXBJblswXSA9IGRhdGEuZ2V0KGRpbXNbMF0sIGkpO1xuICAgICAgICAgICAgdmFyIHkgPSB0bXBJblsxXSA9IGRhdGEuZ2V0KGRpbXNbMV0sIGkpOyAvLyBBbHNvIHtBcnJheS48bnVtYmVyPn0sIG5vdCB1bmRlZmluZWQgdG8gYXZvaWQgaWYuLi5lbHNlLi4uIHN0YXRlbWVudFxuXG4gICAgICAgICAgICBwb2ludCA9ICFpc05hTih4KSAmJiAhaXNOYU4oeSkgJiYgY29vcmRTeXMuZGF0YVRvUG9pbnQodG1wSW4sIG51bGwsIHRtcE91dCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGlzTGFyZ2VSZW5kZXIpIHtcbiAgICAgICAgICAgIHBvaW50c1tvZmZzZXQrK10gPSBwb2ludCA/IHBvaW50WzBdIDogTmFOO1xuICAgICAgICAgICAgcG9pbnRzW29mZnNldCsrXSA9IHBvaW50ID8gcG9pbnRbMV0gOiBOYU47XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRhdGEuc2V0SXRlbUxheW91dChpLCBwb2ludCAmJiBwb2ludC5zbGljZSgpIHx8IFtOYU4sIE5hTl0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlzTGFyZ2VSZW5kZXIgJiYgZGF0YS5zZXRMYXlvdXQoJ3N5bWJvbFBvaW50cycsIHBvaW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkaW1MZW4gJiYge1xuICAgICAgICBwcm9ncmVzczogcHJvZ3Jlc3NcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///261\\n')},function(module,exports){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar samplers = {\\n  average: function (frame) {\\n    var sum = 0;\\n    var count = 0;\\n\\n    for (var i = 0; i < frame.length; i++) {\\n      if (!isNaN(frame[i])) {\\n        sum += frame[i];\\n        count++;\\n      }\\n    } // Return NaN if count is 0\\n\\n\\n    return count === 0 ? NaN : sum / count;\\n  },\\n  sum: function (frame) {\\n    var sum = 0;\\n\\n    for (var i = 0; i < frame.length; i++) {\\n      // Ignore NaN\\n      sum += frame[i] || 0;\\n    }\\n\\n    return sum;\\n  },\\n  max: function (frame) {\\n    var max = -Infinity;\\n\\n    for (var i = 0; i < frame.length; i++) {\\n      frame[i] > max && (max = frame[i]);\\n    } // NaN will cause illegal axis extent.\\n\\n\\n    return isFinite(max) ? max : NaN;\\n  },\\n  min: function (frame) {\\n    var min = Infinity;\\n\\n    for (var i = 0; i < frame.length; i++) {\\n      frame[i] < min && (min = frame[i]);\\n    } // NaN will cause illegal axis extent.\\n\\n\\n    return isFinite(min) ? min : NaN;\\n  },\\n  // TODO\\n  // Median\\n  nearest: function (frame) {\\n    return frame[0];\\n  }\\n};\\n\\nvar indexSampler = function (frame, value) {\\n  return Math.round(frame.length / 2);\\n};\\n\\nfunction _default(seriesType) {\\n  return {\\n    seriesType: seriesType,\\n    modifyOutputEnd: true,\\n    reset: function (seriesModel, ecModel, api) {\\n      var data = seriesModel.getData();\\n      var sampling = seriesModel.get('sampling');\\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\\n\\n      if (coordSys.type === 'cartesian2d' && sampling) {\\n        var baseAxis = coordSys.getBaseAxis();\\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\\n\\n        var size = extent[1] - extent[0];\\n        var rate = Math.round(data.count() / size);\\n\\n        if (rate > 1) {\\n          var sampler;\\n\\n          if (typeof sampling === 'string') {\\n            sampler = samplers[sampling];\\n          } else if (typeof sampling === 'function') {\\n            sampler = sampling;\\n          }\\n\\n          if (sampler) {\\n            // Only support sample the first dim mapped from value axis.\\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\\n          }\\n        }\\n      }\\n    }\\n  };\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvcHJvY2Vzc29yL2RhdGFTYW1wbGUuanM/ZmRkZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsa0JBQWtCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQSxtQkFBbUIsa0JBQWtCO0FBQ3JDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQSxLQUFLOzs7QUFHTDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQSxLQUFLOzs7QUFHTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEOztBQUVsRDtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7O0FBRTFDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjI2Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG52YXIgc2FtcGxlcnMgPSB7XG4gIGF2ZXJhZ2U6IGZ1bmN0aW9uIChmcmFtZSkge1xuICAgIHZhciBzdW0gPSAwO1xuICAgIHZhciBjb3VudCA9IDA7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZyYW1lLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoIWlzTmFOKGZyYW1lW2ldKSkge1xuICAgICAgICBzdW0gKz0gZnJhbWVbaV07XG4gICAgICAgIGNvdW50Kys7XG4gICAgICB9XG4gICAgfSAvLyBSZXR1cm4gTmFOIGlmIGNvdW50IGlzIDBcblxuXG4gICAgcmV0dXJuIGNvdW50ID09PSAwID8gTmFOIDogc3VtIC8gY291bnQ7XG4gIH0sXG4gIHN1bTogZnVuY3Rpb24gKGZyYW1lKSB7XG4gICAgdmFyIHN1bSA9IDA7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZyYW1lLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBJZ25vcmUgTmFOXG4gICAgICBzdW0gKz0gZnJhbWVbaV0gfHwgMDtcbiAgICB9XG5cbiAgICByZXR1cm4gc3VtO1xuICB9LFxuICBtYXg6IGZ1bmN0aW9uIChmcmFtZSkge1xuICAgIHZhciBtYXggPSAtSW5maW5pdHk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZyYW1lLmxlbmd0aDsgaSsrKSB7XG4gICAgICBmcmFtZVtpXSA+IG1heCAmJiAobWF4ID0gZnJhbWVbaV0pO1xuICAgIH0gLy8gTmFOIHdpbGwgY2F1c2UgaWxsZWdhbCBheGlzIGV4dGVudC5cblxuXG4gICAgcmV0dXJuIGlzRmluaXRlKG1heCkgPyBtYXggOiBOYU47XG4gIH0sXG4gIG1pbjogZnVuY3Rpb24gKGZyYW1lKSB7XG4gICAgdmFyIG1pbiA9IEluZmluaXR5O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmcmFtZS5sZW5ndGg7IGkrKykge1xuICAgICAgZnJhbWVbaV0gPCBtaW4gJiYgKG1pbiA9IGZyYW1lW2ldKTtcbiAgICB9IC8vIE5hTiB3aWxsIGNhdXNlIGlsbGVnYWwgYXhpcyBleHRlbnQuXG5cblxuICAgIHJldHVybiBpc0Zpbml0ZShtaW4pID8gbWluIDogTmFOO1xuICB9LFxuICAvLyBUT0RPXG4gIC8vIE1lZGlhblxuICBuZWFyZXN0OiBmdW5jdGlvbiAoZnJhbWUpIHtcbiAgICByZXR1cm4gZnJhbWVbMF07XG4gIH1cbn07XG5cbnZhciBpbmRleFNhbXBsZXIgPSBmdW5jdGlvbiAoZnJhbWUsIHZhbHVlKSB7XG4gIHJldHVybiBNYXRoLnJvdW5kKGZyYW1lLmxlbmd0aCAvIDIpO1xufTtcblxuZnVuY3Rpb24gX2RlZmF1bHQoc2VyaWVzVHlwZSkge1xuICByZXR1cm4ge1xuICAgIHNlcmllc1R5cGU6IHNlcmllc1R5cGUsXG4gICAgbW9kaWZ5T3V0cHV0RW5kOiB0cnVlLFxuICAgIHJlc2V0OiBmdW5jdGlvbiAoc2VyaWVzTW9kZWwsIGVjTW9kZWwsIGFwaSkge1xuICAgICAgdmFyIGRhdGEgPSBzZXJpZXNNb2RlbC5nZXREYXRhKCk7XG4gICAgICB2YXIgc2FtcGxpbmcgPSBzZXJpZXNNb2RlbC5nZXQoJ3NhbXBsaW5nJyk7XG4gICAgICB2YXIgY29vcmRTeXMgPSBzZXJpZXNNb2RlbC5jb29yZGluYXRlU3lzdGVtOyAvLyBPbmx5IGNhcnRlc2lhbjJkIHN1cHBvcnQgZG93biBzYW1wbGluZ1xuXG4gICAgICBpZiAoY29vcmRTeXMudHlwZSA9PT0gJ2NhcnRlc2lhbjJkJyAmJiBzYW1wbGluZykge1xuICAgICAgICB2YXIgYmFzZUF4aXMgPSBjb29yZFN5cy5nZXRCYXNlQXhpcygpO1xuICAgICAgICB2YXIgdmFsdWVBeGlzID0gY29vcmRTeXMuZ2V0T3RoZXJBeGlzKGJhc2VBeGlzKTtcbiAgICAgICAgdmFyIGV4dGVudCA9IGJhc2VBeGlzLmdldEV4dGVudCgpOyAvLyBDb29yZGluc3RlIHN5c3RlbSBoYXMgYmVlbiByZXNpemVkXG5cbiAgICAgICAgdmFyIHNpemUgPSBleHRlbnRbMV0gLSBleHRlbnRbMF07XG4gICAgICAgIHZhciByYXRlID0gTWF0aC5yb3VuZChkYXRhLmNvdW50KCkgLyBzaXplKTtcblxuICAgICAgICBpZiAocmF0ZSA+IDEpIHtcbiAgICAgICAgICB2YXIgc2FtcGxlcjtcblxuICAgICAgICAgIGlmICh0eXBlb2Ygc2FtcGxpbmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzYW1wbGVyID0gc2FtcGxlcnNbc2FtcGxpbmddO1xuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHNhbXBsaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBzYW1wbGVyID0gc2FtcGxpbmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNhbXBsZXIpIHtcbiAgICAgICAgICAgIC8vIE9ubHkgc3VwcG9ydCBzYW1wbGUgdGhlIGZpcnN0IGRpbSBtYXBwZWQgZnJvbSB2YWx1ZSBheGlzLlxuICAgICAgICAgICAgc2VyaWVzTW9kZWwuc2V0RGF0YShkYXRhLmRvd25TYW1wbGUoZGF0YS5tYXBEaW1lbnNpb24odmFsdWVBeGlzLmRpbSksIDEgLyByYXRlLCBzYW1wbGVyLCBpbmRleFNhbXBsZXIpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///262\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar echarts = __webpack_require__(68);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar graphic = __webpack_require__(63);\\n\\n__webpack_require__(264);\\n\\n__webpack_require__(271);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// Grid view\\necharts.extendComponentView({\\n  type: \\'grid\\',\\n  render: function (gridModel, ecModel) {\\n    this.group.removeAll();\\n\\n    if (gridModel.get(\\'show\\')) {\\n      this.group.add(new graphic.Rect({\\n        shape: gridModel.coordinateSystem.getRect(),\\n        style: zrUtil.defaults({\\n          fill: gridModel.get(\\'backgroundColor\\')\\n        }, gridModel.getItemStyle()),\\n        silent: true,\\n        z2: -1\\n      }));\\n    }\\n  }\\n});\\necharts.registerPreprocessor(function (option) {\\n  // Only create grid when need\\n  if (option.xAxis && option.yAxis && !option.grid) {\\n    option.grid = {};\\n  }\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2dyaWRTaW1wbGUuanM/MDFlZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxtQkFBTyxDQUFDLEVBQVk7O0FBRWxDLGFBQWEsbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFNUMsY0FBYyxtQkFBTyxDQUFDLEVBQWlCOztBQUV2QyxtQkFBTyxDQUFDLEdBQXlCOztBQUVqQyxtQkFBTyxDQUFDLEdBQVE7O0FBRWhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIyNjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIGVjaGFydHMgPSByZXF1aXJlKFwiLi4vZWNoYXJ0c1wiKTtcblxudmFyIHpyVXRpbCA9IHJlcXVpcmUoXCJ6cmVuZGVyL2xpYi9jb3JlL3V0aWxcIik7XG5cbnZhciBncmFwaGljID0gcmVxdWlyZShcIi4uL3V0aWwvZ3JhcGhpY1wiKTtcblxucmVxdWlyZShcIi4uL2Nvb3JkL2NhcnRlc2lhbi9HcmlkXCIpO1xuXG5yZXF1aXJlKFwiLi9heGlzXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG4vLyBHcmlkIHZpZXdcbmVjaGFydHMuZXh0ZW5kQ29tcG9uZW50Vmlldyh7XG4gIHR5cGU6ICdncmlkJyxcbiAgcmVuZGVyOiBmdW5jdGlvbiAoZ3JpZE1vZGVsLCBlY01vZGVsKSB7XG4gICAgdGhpcy5ncm91cC5yZW1vdmVBbGwoKTtcblxuICAgIGlmIChncmlkTW9kZWwuZ2V0KCdzaG93JykpIHtcbiAgICAgIHRoaXMuZ3JvdXAuYWRkKG5ldyBncmFwaGljLlJlY3Qoe1xuICAgICAgICBzaGFwZTogZ3JpZE1vZGVsLmNvb3JkaW5hdGVTeXN0ZW0uZ2V0UmVjdCgpLFxuICAgICAgICBzdHlsZTogenJVdGlsLmRlZmF1bHRzKHtcbiAgICAgICAgICBmaWxsOiBncmlkTW9kZWwuZ2V0KCdiYWNrZ3JvdW5kQ29sb3InKVxuICAgICAgICB9LCBncmlkTW9kZWwuZ2V0SXRlbVN0eWxlKCkpLFxuICAgICAgICBzaWxlbnQ6IHRydWUsXG4gICAgICAgIHoyOiAtMVxuICAgICAgfSkpO1xuICAgIH1cbiAgfVxufSk7XG5lY2hhcnRzLnJlZ2lzdGVyUHJlcHJvY2Vzc29yKGZ1bmN0aW9uIChvcHRpb24pIHtcbiAgLy8gT25seSBjcmVhdGUgZ3JpZCB3aGVuIG5lZWRcbiAgaWYgKG9wdGlvbi54QXhpcyAmJiBvcHRpb24ueUF4aXMgJiYgIW9wdGlvbi5ncmlkKSB7XG4gICAgb3B0aW9uLmdyaWQgPSB7fTtcbiAgfVxufSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///263\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar _config = __webpack_require__(61);\\n\\nvar __DEV__ = _config.__DEV__;\\n\\nvar _util = __webpack_require__(59);\\n\\nvar isObject = _util.isObject;\\nvar each = _util.each;\\nvar map = _util.map;\\nvar indexOf = _util.indexOf;\\nvar retrieve = _util.retrieve;\\n\\nvar _layout = __webpack_require__(78);\\n\\nvar getLayoutRect = _layout.getLayoutRect;\\n\\nvar _axisHelper = __webpack_require__(86);\\n\\nvar createScaleByModel = _axisHelper.createScaleByModel;\\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\\n\\nvar Cartesian2D = __webpack_require__(265);\\n\\nvar Axis2D = __webpack_require__(267);\\n\\nvar CoordinateSystem = __webpack_require__(107);\\n\\nvar _dataStackHelper = __webpack_require__(79);\\n\\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\\n\\n__webpack_require__(268);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Grid is a region which contains at most 4 cartesian systems\\n *\\n * TODO Default cartesian\\n */\\n// Depends on GridModel, AxisModel, which performs preprocess.\\n\\n/**\\n * Check if the axis is used in the specified grid\\n * @inner\\n */\\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\\n  return axisModel.getCoordSysModel() === gridModel;\\n}\\n\\nfunction Grid(gridModel, ecModel, api) {\\n  /**\\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\\n   * @private\\n   */\\n  this._coordsMap = {};\\n  /**\\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\\n   * @private\\n   */\\n\\n  this._coordsList = [];\\n  /**\\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\\n   * @private\\n   */\\n\\n  this._axesMap = {};\\n  /**\\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\\n   * @private\\n   */\\n\\n  this._axesList = [];\\n\\n  this._initCartesian(gridModel, ecModel, api);\\n\\n  this.model = gridModel;\\n}\\n\\nvar gridProto = Grid.prototype;\\ngridProto.type = 'grid';\\ngridProto.axisPointerEnabled = true;\\n\\ngridProto.getRect = function () {\\n  return this._rect;\\n};\\n\\ngridProto.update = function (ecModel, api) {\\n  var axesMap = this._axesMap;\\n\\n  this._updateScale(ecModel, this.model);\\n\\n  each(axesMap.x, function (xAxis) {\\n    niceScaleExtent(xAxis.scale, xAxis.model);\\n  });\\n  each(axesMap.y, function (yAxis) {\\n    niceScaleExtent(yAxis.scale, yAxis.model);\\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\\n\\n  var onZeroRecords = {};\\n  each(axesMap.x, function (xAxis) {\\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\\n  });\\n  each(axesMap.y, function (yAxis) {\\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\\n  }); // Resize again if containLabel is enabled\\n  // FIXME It may cause getting wrong grid size in data processing stage\\n\\n  this.resize(this.model, api);\\n};\\n\\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\\n  axis.getAxesOnZeroOf = function () {\\n    // TODO: onZero of multiple axes.\\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\\n  }; // onZero can not be enabled in these two situations:\\n  // 1. When any other axis is a category axis.\\n  // 2. When no axis is cross 0 point.\\n\\n\\n  var otherAxes = axesMap[otherAxisDim];\\n  var otherAxisOnZeroOf;\\n  var axisModel = axis.model;\\n  var onZero = axisModel.get('axisLine.onZero');\\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\\n\\n  if (!onZero) {\\n    return;\\n  } // If target axis is specified.\\n\\n\\n  if (onZeroAxisIndex != null) {\\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\\n    }\\n  } else {\\n    // Find the first available other axis.\\n    for (var idx in otherAxes) {\\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\\n      // if both onZero, the two Y axes overlap.\\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\\n        otherAxisOnZeroOf = otherAxes[idx];\\n        break;\\n      }\\n    }\\n  }\\n\\n  if (otherAxisOnZeroOf) {\\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\\n  }\\n\\n  function getOnZeroRecordKey(axis) {\\n    return axis.dim + '_' + axis.index;\\n  }\\n}\\n\\nfunction canOnZeroToAxis(axis) {\\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\\n}\\n/**\\n * Resize the grid\\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\\n * @param {module:echarts/ExtensionAPI} api\\n */\\n\\n\\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\\n    width: api.getWidth(),\\n    height: api.getHeight()\\n  });\\n  this._rect = gridRect;\\n  var axesList = this._axesList;\\n  adjustAxes(); // Minus label size\\n\\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\\n    each(axesList, function (axis) {\\n      if (!axis.model.get('axisLabel.inside')) {\\n        var labelUnionRect = estimateLabelUnionRect(axis);\\n\\n        if (labelUnionRect) {\\n          var dim = axis.isHorizontal() ? 'height' : 'width';\\n          var margin = axis.model.get('axisLabel.margin');\\n          gridRect[dim] -= labelUnionRect[dim] + margin;\\n\\n          if (axis.position === 'top') {\\n            gridRect.y += labelUnionRect.height + margin;\\n          } else if (axis.position === 'left') {\\n            gridRect.x += labelUnionRect.width + margin;\\n          }\\n        }\\n      }\\n    });\\n    adjustAxes();\\n  }\\n\\n  function adjustAxes() {\\n    each(axesList, function (axis) {\\n      var isHorizontal = axis.isHorizontal();\\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\\n      var idx = axis.inverse ? 1 : 0;\\n      axis.setExtent(extent[idx], extent[1 - idx]);\\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\\n    });\\n  }\\n};\\n/**\\n * @param {string} axisType\\n * @param {number} [axisIndex]\\n */\\n\\n\\ngridProto.getAxis = function (axisType, axisIndex) {\\n  var axesMapOnDim = this._axesMap[axisType];\\n\\n  if (axesMapOnDim != null) {\\n    if (axisIndex == null) {\\n      // Find first axis\\n      for (var name in axesMapOnDim) {\\n        if (axesMapOnDim.hasOwnProperty(name)) {\\n          return axesMapOnDim[name];\\n        }\\n      }\\n    }\\n\\n    return axesMapOnDim[axisIndex];\\n  }\\n};\\n/**\\n * @return {Array.<module:echarts/coord/Axis>}\\n */\\n\\n\\ngridProto.getAxes = function () {\\n  return this._axesList.slice();\\n};\\n/**\\n * Usage:\\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\\n *      grid.getCartesian(xAxisIndex);\\n *      grid.getCartesian(null, yAxisIndex);\\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\\n *\\n * @param {number|Object} [xAxisIndex]\\n * @param {number} [yAxisIndex]\\n */\\n\\n\\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\\n  if (xAxisIndex != null && yAxisIndex != null) {\\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\\n    return this._coordsMap[key];\\n  }\\n\\n  if (isObject(xAxisIndex)) {\\n    yAxisIndex = xAxisIndex.yAxisIndex;\\n    xAxisIndex = xAxisIndex.xAxisIndex;\\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\\n\\n\\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\\n      return coordList[i];\\n    }\\n  }\\n};\\n\\ngridProto.getCartesians = function () {\\n  return this._coordsList.slice();\\n};\\n/**\\n * @implements\\n * see {module:echarts/CoodinateSystem}\\n */\\n\\n\\ngridProto.convertToPixel = function (ecModel, finder, value) {\\n  var target = this._findConvertTarget(ecModel, finder);\\n\\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\\n};\\n/**\\n * @implements\\n * see {module:echarts/CoodinateSystem}\\n */\\n\\n\\ngridProto.convertFromPixel = function (ecModel, finder, value) {\\n  var target = this._findConvertTarget(ecModel, finder);\\n\\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\\n};\\n/**\\n * @inner\\n */\\n\\n\\ngridProto._findConvertTarget = function (ecModel, finder) {\\n  var seriesModel = finder.seriesModel;\\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\\n  var gridModel = finder.gridModel;\\n  var coordsList = this._coordsList;\\n  var cartesian;\\n  var axis;\\n\\n  if (seriesModel) {\\n    cartesian = seriesModel.coordinateSystem;\\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\\n  } else if (xAxisModel && yAxisModel) {\\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\\n  } else if (xAxisModel) {\\n    axis = this.getAxis('x', xAxisModel.componentIndex);\\n  } else if (yAxisModel) {\\n    axis = this.getAxis('y', yAxisModel.componentIndex);\\n  } // Lowest priority.\\n  else if (gridModel) {\\n      var grid = gridModel.coordinateSystem;\\n\\n      if (grid === this) {\\n        cartesian = this._coordsList[0];\\n      }\\n    }\\n\\n  return {\\n    cartesian: cartesian,\\n    axis: axis\\n  };\\n};\\n/**\\n * @implements\\n * see {module:echarts/CoodinateSystem}\\n */\\n\\n\\ngridProto.containPoint = function (point) {\\n  var coord = this._coordsList[0];\\n\\n  if (coord) {\\n    return coord.containPoint(point);\\n  }\\n};\\n/**\\n * Initialize cartesian coordinate systems\\n * @private\\n */\\n\\n\\ngridProto._initCartesian = function (gridModel, ecModel, api) {\\n  var axisPositionUsed = {\\n    left: false,\\n    right: false,\\n    top: false,\\n    bottom: false\\n  };\\n  var axesMap = {\\n    x: {},\\n    y: {}\\n  };\\n  var axesCount = {\\n    x: 0,\\n    y: 0\\n  }; /// Create axis\\n\\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\\n\\n  if (!axesCount.x || !axesCount.y) {\\n    // Roll back when there no either x or y axis\\n    this._axesMap = {};\\n    this._axesList = [];\\n    return;\\n  }\\n\\n  this._axesMap = axesMap; /// Create cartesian2d\\n\\n  each(axesMap.x, function (xAxis, xAxisIndex) {\\n    each(axesMap.y, function (yAxis, yAxisIndex) {\\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\\n      var cartesian = new Cartesian2D(key);\\n      cartesian.grid = this;\\n      cartesian.model = gridModel;\\n      this._coordsMap[key] = cartesian;\\n\\n      this._coordsList.push(cartesian);\\n\\n      cartesian.addAxis(xAxis);\\n      cartesian.addAxis(yAxis);\\n    }, this);\\n  }, this);\\n\\n  function createAxisCreator(axisType) {\\n    return function (axisModel, idx) {\\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\\n        return;\\n      }\\n\\n      var axisPosition = axisModel.get('position');\\n\\n      if (axisType === 'x') {\\n        // Fix position\\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\\n          // Default bottom of X\\n          axisPosition = 'bottom';\\n\\n          if (axisPositionUsed[axisPosition]) {\\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\\n          }\\n        }\\n      } else {\\n        // Fix position\\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\\n          // Default left of Y\\n          axisPosition = 'left';\\n\\n          if (axisPositionUsed[axisPosition]) {\\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\\n          }\\n        }\\n      }\\n\\n      axisPositionUsed[axisPosition] = true;\\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\\n      var isCategory = axis.type === 'category';\\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\\n\\n      axisModel.axis = axis; // Inject axisModel into axis\\n\\n      axis.model = axisModel; // Inject grid info axis\\n\\n      axis.grid = this; // Index of axis, can be used as key\\n\\n      axis.index = idx;\\n\\n      this._axesList.push(axis);\\n\\n      axesMap[axisType][idx] = axis;\\n      axesCount[axisType]++;\\n    };\\n  }\\n};\\n/**\\n * Update cartesian properties from series\\n * @param  {module:echarts/model/Option} option\\n * @private\\n */\\n\\n\\ngridProto._updateScale = function (ecModel, gridModel) {\\n  // Reset scale\\n  each(this._axesList, function (axis) {\\n    axis.scale.setExtent(Infinity, -Infinity);\\n  });\\n  ecModel.eachSeries(function (seriesModel) {\\n    if (isCartesian2D(seriesModel)) {\\n      var axesModels = findAxesModels(seriesModel, ecModel);\\n      var xAxisModel = axesModels[0];\\n      var yAxisModel = axesModels[1];\\n\\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\\n        return;\\n      }\\n\\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\\n      var data = seriesModel.getData();\\n      var xAxis = cartesian.getAxis('x');\\n      var yAxis = cartesian.getAxis('y');\\n\\n      if (data.type === 'list') {\\n        unionExtent(data, xAxis, seriesModel);\\n        unionExtent(data, yAxis, seriesModel);\\n      }\\n    }\\n  }, this);\\n\\n  function unionExtent(data, axis, seriesModel) {\\n    each(data.mapDimension(axis.dim, true), function (dim) {\\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\\n      // is [7, 9], the final extent should not include [0.1, 0.5].\\n      data, getStackedDimension(data, dim));\\n    });\\n  }\\n};\\n/**\\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\\n * @return {Object} {baseAxes: [], otherAxes: []}\\n */\\n\\n\\ngridProto.getTooltipAxes = function (dim) {\\n  var baseAxes = [];\\n  var otherAxes = [];\\n  each(this.getCartesians(), function (cartesian) {\\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\\n  });\\n  return {\\n    baseAxes: baseAxes,\\n    otherAxes: otherAxes\\n  };\\n};\\n/**\\n * @inner\\n */\\n\\n\\nfunction updateAxisTransform(axis, coordBase) {\\n  var axisExtent = axis.getExtent();\\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\\n\\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\\n    return coord + coordBase;\\n  } : function (coord) {\\n    return axisExtentSum - coord + coordBase;\\n  };\\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\\n    return coord - coordBase;\\n  } : function (coord) {\\n    return axisExtentSum - coord + coordBase;\\n  };\\n}\\n\\nvar axesTypes = ['xAxis', 'yAxis'];\\n/**\\n * @inner\\n */\\n\\nfunction findAxesModels(seriesModel, ecModel) {\\n  return map(axesTypes, function (axisType) {\\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\\n    return axisModel;\\n  });\\n}\\n/**\\n * @inner\\n */\\n\\n\\nfunction isCartesian2D(seriesModel) {\\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\\n}\\n\\nGrid.create = function (ecModel, api) {\\n  var grids = [];\\n  ecModel.eachComponent('grid', function (gridModel, idx) {\\n    var grid = new Grid(gridModel, ecModel, api);\\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\\n    // should be performed in create stage.\\n\\n    grid.resize(gridModel, api, true);\\n    gridModel.coordinateSystem = grid;\\n    grids.push(grid);\\n  }); // Inject the coordinateSystems into seriesModel\\n\\n  ecModel.eachSeries(function (seriesModel) {\\n    if (!isCartesian2D(seriesModel)) {\\n      return;\\n    }\\n\\n    var axesModels = findAxesModels(seriesModel, ecModel);\\n    var xAxisModel = axesModels[0];\\n    var yAxisModel = axesModels[1];\\n    var gridModel = xAxisModel.getCoordSysModel();\\n    var grid = gridModel.coordinateSystem;\\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\\n  });\\n  return grids;\\n}; // For deciding which dimensions to use when creating list data\\n\\n\\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\\nCoordinateSystem.register('cartesian2d', Grid);\\nvar _default = Grid;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///264\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Cartesian = __webpack_require__(266);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nfunction Cartesian2D(name) {\\n  Cartesian.call(this, name);\\n}\\n\\nCartesian2D.prototype = {\\n  constructor: Cartesian2D,\\n  type: 'cartesian2d',\\n\\n  /**\\n   * @type {Array.<string>}\\n   * @readOnly\\n   */\\n  dimensions: ['x', 'y'],\\n\\n  /**\\n   * Base axis will be used on stacking.\\n   *\\n   * @return {module:echarts/coord/cartesian/Axis2D}\\n   */\\n  getBaseAxis: function () {\\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\\n  },\\n\\n  /**\\n   * If contain point\\n   * @param {Array.<number>} point\\n   * @return {boolean}\\n   */\\n  containPoint: function (point) {\\n    var axisX = this.getAxis('x');\\n    var axisY = this.getAxis('y');\\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\\n  },\\n\\n  /**\\n   * If contain data\\n   * @param {Array.<number>} data\\n   * @return {boolean}\\n   */\\n  containData: function (data) {\\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\\n  },\\n\\n  /**\\n   * @param {Array.<number>} data\\n   * @param {Array.<number>} out\\n   * @return {Array.<number>}\\n   */\\n  dataToPoint: function (data, reserved, out) {\\n    var xAxis = this.getAxis('x');\\n    var yAxis = this.getAxis('y');\\n    out = out || [];\\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\\n    return out;\\n  },\\n\\n  /**\\n   * @param {Array.<number>} data\\n   * @param {Array.<number>} out\\n   * @return {Array.<number>}\\n   */\\n  clampData: function (data, out) {\\n    var xScale = this.getAxis('x').scale;\\n    var yScale = this.getAxis('y').scale;\\n    var xAxisExtent = xScale.getExtent();\\n    var yAxisExtent = yScale.getExtent();\\n    var x = xScale.parse(data[0]);\\n    var y = yScale.parse(data[1]);\\n    out = out || [];\\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\\n    return out;\\n  },\\n\\n  /**\\n   * @param {Array.<number>} point\\n   * @param {Array.<number>} out\\n   * @return {Array.<number>}\\n   */\\n  pointToData: function (point, out) {\\n    var xAxis = this.getAxis('x');\\n    var yAxis = this.getAxis('y');\\n    out = out || [];\\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\\n    return out;\\n  },\\n\\n  /**\\n   * Get other axis\\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\\n   */\\n  getOtherAxis: function (axis) {\\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\\n  }\\n};\\nzrUtil.inherits(Cartesian2D, Cartesian);\\nvar _default = Cartesian2D;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvY2FydGVzaWFuL0NhcnRlc2lhbjJELmpzP2NiZTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUF1Qjs7QUFFNUMsZ0JBQWdCLG1CQUFPLENBQUMsR0FBYTs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsYUFBYSxlQUFlO0FBQzVCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsYUFBYSxlQUFlO0FBQzVCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsYUFBYSxlQUFlO0FBQzVCLGFBQWEsZUFBZTtBQUM1QixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxhQUFhLGVBQWU7QUFDNUIsYUFBYSxlQUFlO0FBQzVCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsYUFBYSxlQUFlO0FBQzVCLGFBQWEsZUFBZTtBQUM1QixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLGFBQWEsc0NBQXNDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjY1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgQ2FydGVzaWFuID0gcmVxdWlyZShcIi4vQ2FydGVzaWFuXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5mdW5jdGlvbiBDYXJ0ZXNpYW4yRChuYW1lKSB7XG4gIENhcnRlc2lhbi5jYWxsKHRoaXMsIG5hbWUpO1xufVxuXG5DYXJ0ZXNpYW4yRC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBDYXJ0ZXNpYW4yRCxcbiAgdHlwZTogJ2NhcnRlc2lhbjJkJyxcblxuICAvKipcbiAgICogQHR5cGUge0FycmF5LjxzdHJpbmc+fVxuICAgKiBAcmVhZE9ubHlcbiAgICovXG4gIGRpbWVuc2lvbnM6IFsneCcsICd5J10sXG5cbiAgLyoqXG4gICAqIEJhc2UgYXhpcyB3aWxsIGJlIHVzZWQgb24gc3RhY2tpbmcuXG4gICAqXG4gICAqIEByZXR1cm4ge21vZHVsZTplY2hhcnRzL2Nvb3JkL2NhcnRlc2lhbi9BeGlzMkR9XG4gICAqL1xuICBnZXRCYXNlQXhpczogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLmdldEF4ZXNCeVNjYWxlKCdvcmRpbmFsJylbMF0gfHwgdGhpcy5nZXRBeGVzQnlTY2FsZSgndGltZScpWzBdIHx8IHRoaXMuZ2V0QXhpcygneCcpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBJZiBjb250YWluIHBvaW50XG4gICAqIEBwYXJhbSB7QXJyYXkuPG51bWJlcj59IHBvaW50XG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBjb250YWluUG9pbnQ6IGZ1bmN0aW9uIChwb2ludCkge1xuICAgIHZhciBheGlzWCA9IHRoaXMuZ2V0QXhpcygneCcpO1xuICAgIHZhciBheGlzWSA9IHRoaXMuZ2V0QXhpcygneScpO1xuICAgIHJldHVybiBheGlzWC5jb250YWluKGF4aXNYLnRvTG9jYWxDb29yZChwb2ludFswXSkpICYmIGF4aXNZLmNvbnRhaW4oYXhpc1kudG9Mb2NhbENvb3JkKHBvaW50WzFdKSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIElmIGNvbnRhaW4gZGF0YVxuICAgKiBAcGFyYW0ge0FycmF5LjxudW1iZXI+fSBkYXRhXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBjb250YWluRGF0YTogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRBeGlzKCd4JykuY29udGFpbkRhdGEoZGF0YVswXSkgJiYgdGhpcy5nZXRBeGlzKCd5JykuY29udGFpbkRhdGEoZGF0YVsxXSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7QXJyYXkuPG51bWJlcj59IGRhdGFcbiAgICogQHBhcmFtIHtBcnJheS48bnVtYmVyPn0gb3V0XG4gICAqIEByZXR1cm4ge0FycmF5LjxudW1iZXI+fVxuICAgKi9cbiAgZGF0YVRvUG9pbnQ6IGZ1bmN0aW9uIChkYXRhLCByZXNlcnZlZCwgb3V0KSB7XG4gICAgdmFyIHhBeGlzID0gdGhpcy5nZXRBeGlzKCd4Jyk7XG4gICAgdmFyIHlBeGlzID0gdGhpcy5nZXRBeGlzKCd5Jyk7XG4gICAgb3V0ID0gb3V0IHx8IFtdO1xuICAgIG91dFswXSA9IHhBeGlzLnRvR2xvYmFsQ29vcmQoeEF4aXMuZGF0YVRvQ29vcmQoZGF0YVswXSkpO1xuICAgIG91dFsxXSA9IHlBeGlzLnRvR2xvYmFsQ29vcmQoeUF4aXMuZGF0YVRvQ29vcmQoZGF0YVsxXSkpO1xuICAgIHJldHVybiBvdXQ7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7QXJyYXkuPG51bWJlcj59IGRhdGFcbiAgICogQHBhcmFtIHtBcnJheS48bnVtYmVyPn0gb3V0XG4gICAqIEByZXR1cm4ge0FycmF5LjxudW1iZXI+fVxuICAgKi9cbiAgY2xhbXBEYXRhOiBmdW5jdGlvbiAoZGF0YSwgb3V0KSB7XG4gICAgdmFyIHhTY2FsZSA9IHRoaXMuZ2V0QXhpcygneCcpLnNjYWxlO1xuICAgIHZhciB5U2NhbGUgPSB0aGlzLmdldEF4aXMoJ3knKS5zY2FsZTtcbiAgICB2YXIgeEF4aXNFeHRlbnQgPSB4U2NhbGUuZ2V0RXh0ZW50KCk7XG4gICAgdmFyIHlBeGlzRXh0ZW50ID0geVNjYWxlLmdldEV4dGVudCgpO1xuICAgIHZhciB4ID0geFNjYWxlLnBhcnNlKGRhdGFbMF0pO1xuICAgIHZhciB5ID0geVNjYWxlLnBhcnNlKGRhdGFbMV0pO1xuICAgIG91dCA9IG91dCB8fCBbXTtcbiAgICBvdXRbMF0gPSBNYXRoLm1pbihNYXRoLm1heChNYXRoLm1pbih4QXhpc0V4dGVudFswXSwgeEF4aXNFeHRlbnRbMV0pLCB4KSwgTWF0aC5tYXgoeEF4aXNFeHRlbnRbMF0sIHhBeGlzRXh0ZW50WzFdKSk7XG4gICAgb3V0WzFdID0gTWF0aC5taW4oTWF0aC5tYXgoTWF0aC5taW4oeUF4aXNFeHRlbnRbMF0sIHlBeGlzRXh0ZW50WzFdKSwgeSksIE1hdGgubWF4KHlBeGlzRXh0ZW50WzBdLCB5QXhpc0V4dGVudFsxXSkpO1xuICAgIHJldHVybiBvdXQ7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7QXJyYXkuPG51bWJlcj59IHBvaW50XG4gICAqIEBwYXJhbSB7QXJyYXkuPG51bWJlcj59IG91dFxuICAgKiBAcmV0dXJuIHtBcnJheS48bnVtYmVyPn1cbiAgICovXG4gIHBvaW50VG9EYXRhOiBmdW5jdGlvbiAocG9pbnQsIG91dCkge1xuICAgIHZhciB4QXhpcyA9IHRoaXMuZ2V0QXhpcygneCcpO1xuICAgIHZhciB5QXhpcyA9IHRoaXMuZ2V0QXhpcygneScpO1xuICAgIG91dCA9IG91dCB8fCBbXTtcbiAgICBvdXRbMF0gPSB4QXhpcy5jb29yZFRvRGF0YSh4QXhpcy50b0xvY2FsQ29vcmQocG9pbnRbMF0pKTtcbiAgICBvdXRbMV0gPSB5QXhpcy5jb29yZFRvRGF0YSh5QXhpcy50b0xvY2FsQ29vcmQocG9pbnRbMV0pKTtcbiAgICByZXR1cm4gb3V0O1xuICB9LFxuXG4gIC8qKlxuICAgKiBHZXQgb3RoZXIgYXhpc1xuICAgKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2Nvb3JkL2NhcnRlc2lhbi9BeGlzMkR9IGF4aXNcbiAgICovXG4gIGdldE90aGVyQXhpczogZnVuY3Rpb24gKGF4aXMpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRBeGlzKGF4aXMuZGltID09PSAneCcgPyAneScgOiAneCcpO1xuICB9XG59O1xuenJVdGlsLmluaGVyaXRzKENhcnRlc2lhbjJELCBDYXJ0ZXNpYW4pO1xudmFyIF9kZWZhdWx0ID0gQ2FydGVzaWFuMkQ7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///265\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Cartesian coordinate system\\n * @module  echarts/coord/Cartesian\\n *\\n */\\nfunction dimAxisMapper(dim) {\\n  return this._axes[dim];\\n}\\n/**\\n * @alias module:echarts/coord/Cartesian\\n * @constructor\\n */\\n\\n\\nvar Cartesian = function (name) {\\n  this._axes = {};\\n  this._dimList = [];\\n  /**\\n   * @type {string}\\n   */\\n\\n  this.name = name || '';\\n};\\n\\nCartesian.prototype = {\\n  constructor: Cartesian,\\n  type: 'cartesian',\\n\\n  /**\\n   * Get axis\\n   * @param  {number|string} dim\\n   * @return {module:echarts/coord/Cartesian~Axis}\\n   */\\n  getAxis: function (dim) {\\n    return this._axes[dim];\\n  },\\n\\n  /**\\n   * Get axes list\\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\\n   */\\n  getAxes: function () {\\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\\n  },\\n\\n  /**\\n   * Get axes list by given scale type\\n   */\\n  getAxesByScale: function (scaleType) {\\n    scaleType = scaleType.toLowerCase();\\n    return zrUtil.filter(this.getAxes(), function (axis) {\\n      return axis.scale.type === scaleType;\\n    });\\n  },\\n\\n  /**\\n   * Add axis\\n   * @param {module:echarts/coord/Cartesian.Axis}\\n   */\\n  addAxis: function (axis) {\\n    var dim = axis.dim;\\n    this._axes[dim] = axis;\\n\\n    this._dimList.push(dim);\\n  },\\n\\n  /**\\n   * Convert data to coord in nd space\\n   * @param {Array.<number>|Object.<string, number>} val\\n   * @return {Array.<number>|Object.<string, number>}\\n   */\\n  dataToCoord: function (val) {\\n    return this._dataCoordConvert(val, 'dataToCoord');\\n  },\\n\\n  /**\\n   * Convert coord in nd space to data\\n   * @param  {Array.<number>|Object.<string, number>} val\\n   * @return {Array.<number>|Object.<string, number>}\\n   */\\n  coordToData: function (val) {\\n    return this._dataCoordConvert(val, 'coordToData');\\n  },\\n  _dataCoordConvert: function (input, method) {\\n    var dimList = this._dimList;\\n    var output = input instanceof Array ? [] : {};\\n\\n    for (var i = 0; i < dimList.length; i++) {\\n      var dim = dimList[i];\\n      var axis = this._axes[dim];\\n      output[dim] = axis[method](input[dim]);\\n    }\\n\\n    return output;\\n  }\\n};\\nvar _default = Cartesian;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvY2FydGVzaWFuL0NhcnRlc2lhbi5qcz9jZjdlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWMsY0FBYztBQUM1QixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsYUFBYSx1Q0FBdUM7QUFDcEQsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLGNBQWMsdUNBQXVDO0FBQ3JELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixvQkFBb0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyNjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIHpyVXRpbCA9IHJlcXVpcmUoXCJ6cmVuZGVyL2xpYi9jb3JlL3V0aWxcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuLyoqXG4gKiBDYXJ0ZXNpYW4gY29vcmRpbmF0ZSBzeXN0ZW1cbiAqIEBtb2R1bGUgIGVjaGFydHMvY29vcmQvQ2FydGVzaWFuXG4gKlxuICovXG5mdW5jdGlvbiBkaW1BeGlzTWFwcGVyKGRpbSkge1xuICByZXR1cm4gdGhpcy5fYXhlc1tkaW1dO1xufVxuLyoqXG4gKiBAYWxpYXMgbW9kdWxlOmVjaGFydHMvY29vcmQvQ2FydGVzaWFuXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuXG5cbnZhciBDYXJ0ZXNpYW4gPSBmdW5jdGlvbiAobmFtZSkge1xuICB0aGlzLl9heGVzID0ge307XG4gIHRoaXMuX2RpbUxpc3QgPSBbXTtcbiAgLyoqXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuXG4gIHRoaXMubmFtZSA9IG5hbWUgfHwgJyc7XG59O1xuXG5DYXJ0ZXNpYW4ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogQ2FydGVzaWFuLFxuICB0eXBlOiAnY2FydGVzaWFuJyxcblxuICAvKipcbiAgICogR2V0IGF4aXNcbiAgICogQHBhcmFtICB7bnVtYmVyfHN0cmluZ30gZGltXG4gICAqIEByZXR1cm4ge21vZHVsZTplY2hhcnRzL2Nvb3JkL0NhcnRlc2lhbn5BeGlzfVxuICAgKi9cbiAgZ2V0QXhpczogZnVuY3Rpb24gKGRpbSkge1xuICAgIHJldHVybiB0aGlzLl9heGVzW2RpbV07XG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldCBheGVzIGxpc3RcbiAgICogQHJldHVybiB7QXJyYXkuPG1vZHVsZTplY2hhcnRzL2Nvb3JkL0NhcnRlc2lhbn5BeGlzPn1cbiAgICovXG4gIGdldEF4ZXM6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4genJVdGlsLm1hcCh0aGlzLl9kaW1MaXN0LCBkaW1BeGlzTWFwcGVyLCB0aGlzKTtcbiAgfSxcblxuICAvKipcbiAgICogR2V0IGF4ZXMgbGlzdCBieSBnaXZlbiBzY2FsZSB0eXBlXG4gICAqL1xuICBnZXRBeGVzQnlTY2FsZTogZnVuY3Rpb24gKHNjYWxlVHlwZSkge1xuICAgIHNjYWxlVHlwZSA9IHNjYWxlVHlwZS50b0xvd2VyQ2FzZSgpO1xuICAgIHJldHVybiB6clV0aWwuZmlsdGVyKHRoaXMuZ2V0QXhlcygpLCBmdW5jdGlvbiAoYXhpcykge1xuICAgICAgcmV0dXJuIGF4aXMuc2NhbGUudHlwZSA9PT0gc2NhbGVUeXBlO1xuICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBBZGQgYXhpc1xuICAgKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2Nvb3JkL0NhcnRlc2lhbi5BeGlzfVxuICAgKi9cbiAgYWRkQXhpczogZnVuY3Rpb24gKGF4aXMpIHtcbiAgICB2YXIgZGltID0gYXhpcy5kaW07XG4gICAgdGhpcy5fYXhlc1tkaW1dID0gYXhpcztcblxuICAgIHRoaXMuX2RpbUxpc3QucHVzaChkaW0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBDb252ZXJ0IGRhdGEgdG8gY29vcmQgaW4gbmQgc3BhY2VcbiAgICogQHBhcmFtIHtBcnJheS48bnVtYmVyPnxPYmplY3QuPHN0cmluZywgbnVtYmVyPn0gdmFsXG4gICAqIEByZXR1cm4ge0FycmF5LjxudW1iZXI+fE9iamVjdC48c3RyaW5nLCBudW1iZXI+fVxuICAgKi9cbiAgZGF0YVRvQ29vcmQ6IGZ1bmN0aW9uICh2YWwpIHtcbiAgICByZXR1cm4gdGhpcy5fZGF0YUNvb3JkQ29udmVydCh2YWwsICdkYXRhVG9Db29yZCcpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBDb252ZXJ0IGNvb3JkIGluIG5kIHNwYWNlIHRvIGRhdGFcbiAgICogQHBhcmFtICB7QXJyYXkuPG51bWJlcj58T2JqZWN0LjxzdHJpbmcsIG51bWJlcj59IHZhbFxuICAgKiBAcmV0dXJuIHtBcnJheS48bnVtYmVyPnxPYmplY3QuPHN0cmluZywgbnVtYmVyPn1cbiAgICovXG4gIGNvb3JkVG9EYXRhOiBmdW5jdGlvbiAodmFsKSB7XG4gICAgcmV0dXJuIHRoaXMuX2RhdGFDb29yZENvbnZlcnQodmFsLCAnY29vcmRUb0RhdGEnKTtcbiAgfSxcbiAgX2RhdGFDb29yZENvbnZlcnQ6IGZ1bmN0aW9uIChpbnB1dCwgbWV0aG9kKSB7XG4gICAgdmFyIGRpbUxpc3QgPSB0aGlzLl9kaW1MaXN0O1xuICAgIHZhciBvdXRwdXQgPSBpbnB1dCBpbnN0YW5jZW9mIEFycmF5ID8gW10gOiB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGltTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRpbSA9IGRpbUxpc3RbaV07XG4gICAgICB2YXIgYXhpcyA9IHRoaXMuX2F4ZXNbZGltXTtcbiAgICAgIG91dHB1dFtkaW1dID0gYXhpc1ttZXRob2RdKGlucHV0W2RpbV0pO1xuICAgIH1cblxuICAgIHJldHVybiBvdXRwdXQ7XG4gIH1cbn07XG52YXIgX2RlZmF1bHQgPSBDYXJ0ZXNpYW47XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///266\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Axis = __webpack_require__(165);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n/**\\n * Extend axis 2d\\n * @constructor module:echarts/coord/cartesian/Axis2D\\n * @extends {module:echarts/coord/cartesian/Axis}\\n * @param {string} dim\\n * @param {*} scale\\n * @param {Array.<number>} coordExtent\\n * @param {string} axisType\\n * @param {string} position\\n */\\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\\n  Axis.call(this, dim, scale, coordExtent);\\n  /**\\n   * Axis type\\n   *  - 'category'\\n   *  - 'value'\\n   *  - 'time'\\n   *  - 'log'\\n   * @type {string}\\n   */\\n\\n  this.type = axisType || 'value';\\n  /**\\n   * Axis position\\n   *  - 'top'\\n   *  - 'bottom'\\n   *  - 'left'\\n   *  - 'right'\\n   */\\n\\n  this.position = position || 'bottom';\\n};\\n\\nAxis2D.prototype = {\\n  constructor: Axis2D,\\n\\n  /**\\n   * Index of axis, can be used as key\\n   */\\n  index: 0,\\n\\n  /**\\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\\n   *         If not on zero of other axis, return null/undefined.\\n   *         If no axes, return an empty array.\\n   */\\n  getAxesOnZeroOf: null,\\n\\n  /**\\n   * Axis model\\n   * @param {module:echarts/coord/cartesian/AxisModel}\\n   */\\n  model: null,\\n  isHorizontal: function () {\\n    var position = this.position;\\n    return position === 'top' || position === 'bottom';\\n  },\\n\\n  /**\\n   * Each item cooresponds to this.getExtent(), which\\n   * means globalExtent[0] may greater than globalExtent[1],\\n   * unless `asc` is input.\\n   *\\n   * @param {boolean} [asc]\\n   * @return {Array.<number>}\\n   */\\n  getGlobalExtent: function (asc) {\\n    var ret = this.getExtent();\\n    ret[0] = this.toGlobalCoord(ret[0]);\\n    ret[1] = this.toGlobalCoord(ret[1]);\\n    asc && ret[0] > ret[1] && ret.reverse();\\n    return ret;\\n  },\\n  getOtherAxis: function () {\\n    this.grid.getOtherAxis();\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  pointToData: function (point, clamp) {\\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\\n  },\\n\\n  /**\\n   * Transform global coord to local coord,\\n   * i.e. var localCoord = axis.toLocalCoord(80);\\n   * designate by module:echarts/coord/cartesian/Grid.\\n   * @type {Function}\\n   */\\n  toLocalCoord: null,\\n\\n  /**\\n   * Transform global coord to local coord,\\n   * i.e. var globalCoord = axis.toLocalCoord(40);\\n   * designate by module:echarts/coord/cartesian/Grid.\\n   * @type {Function}\\n   */\\n  toGlobalCoord: null\\n};\\nzrUtil.inherits(Axis2D, Axis);\\nvar _default = Axis2D;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvY2FydGVzaWFuL0F4aXMyRC5qcz9lYzAyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDLFdBQVcsbUJBQU8sQ0FBQyxHQUFTOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsRUFBRTtBQUNiLFdBQVcsZUFBZTtBQUMxQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjY3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgQXhpcyA9IHJlcXVpcmUoXCIuLi9BeGlzXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbi8qKlxuICogRXh0ZW5kIGF4aXMgMmRcbiAqIEBjb25zdHJ1Y3RvciBtb2R1bGU6ZWNoYXJ0cy9jb29yZC9jYXJ0ZXNpYW4vQXhpczJEXG4gKiBAZXh0ZW5kcyB7bW9kdWxlOmVjaGFydHMvY29vcmQvY2FydGVzaWFuL0F4aXN9XG4gKiBAcGFyYW0ge3N0cmluZ30gZGltXG4gKiBAcGFyYW0geyp9IHNjYWxlXG4gKiBAcGFyYW0ge0FycmF5LjxudW1iZXI+fSBjb29yZEV4dGVudFxuICogQHBhcmFtIHtzdHJpbmd9IGF4aXNUeXBlXG4gKiBAcGFyYW0ge3N0cmluZ30gcG9zaXRpb25cbiAqL1xudmFyIEF4aXMyRCA9IGZ1bmN0aW9uIChkaW0sIHNjYWxlLCBjb29yZEV4dGVudCwgYXhpc1R5cGUsIHBvc2l0aW9uKSB7XG4gIEF4aXMuY2FsbCh0aGlzLCBkaW0sIHNjYWxlLCBjb29yZEV4dGVudCk7XG4gIC8qKlxuICAgKiBBeGlzIHR5cGVcbiAgICogIC0gJ2NhdGVnb3J5J1xuICAgKiAgLSAndmFsdWUnXG4gICAqICAtICd0aW1lJ1xuICAgKiAgLSAnbG9nJ1xuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cblxuICB0aGlzLnR5cGUgPSBheGlzVHlwZSB8fCAndmFsdWUnO1xuICAvKipcbiAgICogQXhpcyBwb3NpdGlvblxuICAgKiAgLSAndG9wJ1xuICAgKiAgLSAnYm90dG9tJ1xuICAgKiAgLSAnbGVmdCdcbiAgICogIC0gJ3JpZ2h0J1xuICAgKi9cblxuICB0aGlzLnBvc2l0aW9uID0gcG9zaXRpb24gfHwgJ2JvdHRvbSc7XG59O1xuXG5BeGlzMkQucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogQXhpczJELFxuXG4gIC8qKlxuICAgKiBJbmRleCBvZiBheGlzLCBjYW4gYmUgdXNlZCBhcyBrZXlcbiAgICovXG4gIGluZGV4OiAwLFxuXG4gIC8qKlxuICAgKiBJbXBsZW1lbnRlZCBpbiA8bW9kdWxlOmVjaGFydHMvY29vcmQvY2FydGVzaWFuL0dyaWQ+LlxuICAgKiBAcmV0dXJuIHtBcnJheS48bW9kdWxlOmVjaGFydHMvY29vcmQvY2FydGVzaWFuL0F4aXMyRD59XG4gICAqICAgICAgICAgSWYgbm90IG9uIHplcm8gb2Ygb3RoZXIgYXhpcywgcmV0dXJuIG51bGwvdW5kZWZpbmVkLlxuICAgKiAgICAgICAgIElmIG5vIGF4ZXMsIHJldHVybiBhbiBlbXB0eSBhcnJheS5cbiAgICovXG4gIGdldEF4ZXNPblplcm9PZjogbnVsbCxcblxuICAvKipcbiAgICogQXhpcyBtb2RlbFxuICAgKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2Nvb3JkL2NhcnRlc2lhbi9BeGlzTW9kZWx9XG4gICAqL1xuICBtb2RlbDogbnVsbCxcbiAgaXNIb3Jpem9udGFsOiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBvc2l0aW9uID0gdGhpcy5wb3NpdGlvbjtcbiAgICByZXR1cm4gcG9zaXRpb24gPT09ICd0b3AnIHx8IHBvc2l0aW9uID09PSAnYm90dG9tJztcbiAgfSxcblxuICAvKipcbiAgICogRWFjaCBpdGVtIGNvb3Jlc3BvbmRzIHRvIHRoaXMuZ2V0RXh0ZW50KCksIHdoaWNoXG4gICAqIG1lYW5zIGdsb2JhbEV4dGVudFswXSBtYXkgZ3JlYXRlciB0aGFuIGdsb2JhbEV4dGVudFsxXSxcbiAgICogdW5sZXNzIGBhc2NgIGlzIGlucHV0LlxuICAgKlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFthc2NdXG4gICAqIEByZXR1cm4ge0FycmF5LjxudW1iZXI+fVxuICAgKi9cbiAgZ2V0R2xvYmFsRXh0ZW50OiBmdW5jdGlvbiAoYXNjKSB7XG4gICAgdmFyIHJldCA9IHRoaXMuZ2V0RXh0ZW50KCk7XG4gICAgcmV0WzBdID0gdGhpcy50b0dsb2JhbENvb3JkKHJldFswXSk7XG4gICAgcmV0WzFdID0gdGhpcy50b0dsb2JhbENvb3JkKHJldFsxXSk7XG4gICAgYXNjICYmIHJldFswXSA+IHJldFsxXSAmJiByZXQucmV2ZXJzZSgpO1xuICAgIHJldHVybiByZXQ7XG4gIH0sXG4gIGdldE90aGVyQXhpczogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZ3JpZC5nZXRPdGhlckF4aXMoKTtcbiAgfSxcblxuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICBwb2ludFRvRGF0YTogZnVuY3Rpb24gKHBvaW50LCBjbGFtcCkge1xuICAgIHJldHVybiB0aGlzLmNvb3JkVG9EYXRhKHRoaXMudG9Mb2NhbENvb3JkKHBvaW50W3RoaXMuZGltID09PSAneCcgPyAwIDogMV0pLCBjbGFtcCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFRyYW5zZm9ybSBnbG9iYWwgY29vcmQgdG8gbG9jYWwgY29vcmQsXG4gICAqIGkuZS4gdmFyIGxvY2FsQ29vcmQgPSBheGlzLnRvTG9jYWxDb29yZCg4MCk7XG4gICAqIGRlc2lnbmF0ZSBieSBtb2R1bGU6ZWNoYXJ0cy9jb29yZC9jYXJ0ZXNpYW4vR3JpZC5cbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKi9cbiAgdG9Mb2NhbENvb3JkOiBudWxsLFxuXG4gIC8qKlxuICAgKiBUcmFuc2Zvcm0gZ2xvYmFsIGNvb3JkIHRvIGxvY2FsIGNvb3JkLFxuICAgKiBpLmUuIHZhciBnbG9iYWxDb29yZCA9IGF4aXMudG9Mb2NhbENvb3JkKDQwKTtcbiAgICogZGVzaWduYXRlIGJ5IG1vZHVsZTplY2hhcnRzL2Nvb3JkL2NhcnRlc2lhbi9HcmlkLlxuICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAqL1xuICB0b0dsb2JhbENvb3JkOiBudWxsXG59O1xuenJVdGlsLmluaGVyaXRzKEF4aXMyRCwgQXhpcyk7XG52YXIgX2RlZmF1bHQgPSBBeGlzMkQ7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///267\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n__webpack_require__(168);\\n\\nvar ComponentModel = __webpack_require__(72);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// Grid 是在有直角坐标系的时候必须要存在的\\n// 所以这里也要被 Cartesian2D 依赖\\nvar _default = ComponentModel.extend({\\n  type: 'grid',\\n  dependencies: ['xAxis', 'yAxis'],\\n  layoutMode: 'box',\\n\\n  /**\\n   * @type {module:echarts/coord/cartesian/Grid}\\n   */\\n  coordinateSystem: null,\\n  defaultOption: {\\n    show: false,\\n    zlevel: 0,\\n    z: 0,\\n    left: '10%',\\n    top: 60,\\n    right: '10%',\\n    bottom: 60,\\n    // If grid size contain label\\n    containLabel: false,\\n    // width: {totalWidth} - left - right,\\n    // height: {totalHeight} - top - bottom,\\n    backgroundColor: 'rgba(0,0,0,0)',\\n    borderWidth: 1,\\n    borderColor: '#ccc'\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvY2FydGVzaWFuL0dyaWRNb2RlbC5qcz84ZWQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBTyxDQUFDLEdBQWE7O0FBRXJCLHFCQUFxQixtQkFBTyxDQUFDLEVBQXVCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFdBQVc7QUFDMUIsZ0JBQWdCLFlBQVk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjI2OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5yZXF1aXJlKFwiLi9BeGlzTW9kZWxcIik7XG5cbnZhciBDb21wb25lbnRNb2RlbCA9IHJlcXVpcmUoXCIuLi8uLi9tb2RlbC9Db21wb25lbnRcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbi8vIEdyaWQg5piv5Zyo5pyJ55u06KeS5Z2Q5qCH57O755qE5pe25YCZ5b+F6aG76KaB5a2Y5Zyo55qEXG4vLyDmiYDku6Xov5nph4zkuZ/opoHooqsgQ2FydGVzaWFuMkQg5L6d6LWWXG52YXIgX2RlZmF1bHQgPSBDb21wb25lbnRNb2RlbC5leHRlbmQoe1xuICB0eXBlOiAnZ3JpZCcsXG4gIGRlcGVuZGVuY2llczogWyd4QXhpcycsICd5QXhpcyddLFxuICBsYXlvdXRNb2RlOiAnYm94JyxcblxuICAvKipcbiAgICogQHR5cGUge21vZHVsZTplY2hhcnRzL2Nvb3JkL2NhcnRlc2lhbi9HcmlkfVxuICAgKi9cbiAgY29vcmRpbmF0ZVN5c3RlbTogbnVsbCxcbiAgZGVmYXVsdE9wdGlvbjoge1xuICAgIHNob3c6IGZhbHNlLFxuICAgIHpsZXZlbDogMCxcbiAgICB6OiAwLFxuICAgIGxlZnQ6ICcxMCUnLFxuICAgIHRvcDogNjAsXG4gICAgcmlnaHQ6ICcxMCUnLFxuICAgIGJvdHRvbTogNjAsXG4gICAgLy8gSWYgZ3JpZCBzaXplIGNvbnRhaW4gbGFiZWxcbiAgICBjb250YWluTGFiZWw6IGZhbHNlLFxuICAgIC8vIHdpZHRoOiB7dG90YWxXaWR0aH0gLSBsZWZ0IC0gcmlnaHQsXG4gICAgLy8gaGVpZ2h0OiB7dG90YWxIZWlnaHR9IC0gdG9wIC0gYm90dG9tLFxuICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwwLDAsMCknLFxuICAgIGJvcmRlcldpZHRoOiAxLFxuICAgIGJvcmRlckNvbG9yOiAnI2NjYydcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///268\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar axisDefault = __webpack_require__(270);\\n\\nvar ComponentModel = __webpack_require__(72);\\n\\nvar _layout = __webpack_require__(78);\\n\\nvar getLayoutParams = _layout.getLayoutParams;\\nvar mergeLayoutParam = _layout.mergeLayoutParam;\\n\\nvar OrdinalMeta = __webpack_require__(162);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// FIXME axisType is fixed ?\\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\\n/**\\n * Generate sub axis model class\\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\\n * @param {module:echarts/model/Component} BaseAxisModelClass\\n * @param {Function} axisTypeDefaulter\\n * @param {Object} [extraDefaultOption]\\n */\\n\\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\\n  zrUtil.each(AXIS_TYPES, function (axisType) {\\n    BaseAxisModelClass.extend({\\n      /**\\n       * @readOnly\\n       */\\n      type: axisName + 'Axis.' + axisType,\\n      mergeDefaultAndTheme: function (option, ecModel) {\\n        var layoutMode = this.layoutMode;\\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\\n        var themeModel = ecModel.getTheme();\\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\\n        zrUtil.merge(option, this.getDefaultOption());\\n        option.type = axisTypeDefaulter(axisName, option);\\n\\n        if (layoutMode) {\\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\\n        }\\n      },\\n\\n      /**\\n       * @override\\n       */\\n      optionUpdated: function () {\\n        var thisOption = this.option;\\n\\n        if (thisOption.type === 'category') {\\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\\n        }\\n      },\\n\\n      /**\\n       * Should not be called before all of 'getInitailData' finished.\\n       * Because categories are collected during initializing data.\\n       */\\n      getCategories: function (rawData) {\\n        var option = this.option; // FIXME\\n        // warning if called before all of 'getInitailData' finished.\\n\\n        if (option.type === 'category') {\\n          if (rawData) {\\n            return option.data;\\n          }\\n\\n          return this.__ordinalMeta.categories;\\n        }\\n      },\\n      getOrdinalMeta: function () {\\n        return this.__ordinalMeta;\\n      },\\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\\n    });\\n  });\\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29vcmQvYXhpc01vZGVsQ3JlYXRvci5qcz85ZTQ3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDLGtCQUFrQixtQkFBTyxDQUFDLEdBQWU7O0FBRXpDLHFCQUFxQixtQkFBTyxDQUFDLEVBQW9COztBQUVqRCxjQUFjLG1CQUFPLENBQUMsRUFBZ0I7O0FBRXRDO0FBQ0E7O0FBRUEsa0JBQWtCLG1CQUFPLENBQUMsR0FBcUI7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVywrQkFBK0I7QUFDMUMsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQLHdDQUF3QztBQUN4QyxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjY5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgYXhpc0RlZmF1bHQgPSByZXF1aXJlKFwiLi9heGlzRGVmYXVsdFwiKTtcblxudmFyIENvbXBvbmVudE1vZGVsID0gcmVxdWlyZShcIi4uL21vZGVsL0NvbXBvbmVudFwiKTtcblxudmFyIF9sYXlvdXQgPSByZXF1aXJlKFwiLi4vdXRpbC9sYXlvdXRcIik7XG5cbnZhciBnZXRMYXlvdXRQYXJhbXMgPSBfbGF5b3V0LmdldExheW91dFBhcmFtcztcbnZhciBtZXJnZUxheW91dFBhcmFtID0gX2xheW91dC5tZXJnZUxheW91dFBhcmFtO1xuXG52YXIgT3JkaW5hbE1ldGEgPSByZXF1aXJlKFwiLi4vZGF0YS9PcmRpbmFsTWV0YVwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuLy8gRklYTUUgYXhpc1R5cGUgaXMgZml4ZWQgP1xudmFyIEFYSVNfVFlQRVMgPSBbJ3ZhbHVlJywgJ2NhdGVnb3J5JywgJ3RpbWUnLCAnbG9nJ107XG4vKipcbiAqIEdlbmVyYXRlIHN1YiBheGlzIG1vZGVsIGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZ30gYXhpc05hbWUgJ3gnICd5JyAncmFkaXVzJyAnYW5nbGUnICdwYXJhbGxlbCdcbiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvbW9kZWwvQ29tcG9uZW50fSBCYXNlQXhpc01vZGVsQ2xhc3NcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGF4aXNUeXBlRGVmYXVsdGVyXG4gKiBAcGFyYW0ge09iamVjdH0gW2V4dHJhRGVmYXVsdE9wdGlvbl1cbiAqL1xuXG5mdW5jdGlvbiBfZGVmYXVsdChheGlzTmFtZSwgQmFzZUF4aXNNb2RlbENsYXNzLCBheGlzVHlwZURlZmF1bHRlciwgZXh0cmFEZWZhdWx0T3B0aW9uKSB7XG4gIHpyVXRpbC5lYWNoKEFYSVNfVFlQRVMsIGZ1bmN0aW9uIChheGlzVHlwZSkge1xuICAgIEJhc2VBeGlzTW9kZWxDbGFzcy5leHRlbmQoe1xuICAgICAgLyoqXG4gICAgICAgKiBAcmVhZE9ubHlcbiAgICAgICAqL1xuICAgICAgdHlwZTogYXhpc05hbWUgKyAnQXhpcy4nICsgYXhpc1R5cGUsXG4gICAgICBtZXJnZURlZmF1bHRBbmRUaGVtZTogZnVuY3Rpb24gKG9wdGlvbiwgZWNNb2RlbCkge1xuICAgICAgICB2YXIgbGF5b3V0TW9kZSA9IHRoaXMubGF5b3V0TW9kZTtcbiAgICAgICAgdmFyIGlucHV0UG9zaXRpb25QYXJhbXMgPSBsYXlvdXRNb2RlID8gZ2V0TGF5b3V0UGFyYW1zKG9wdGlvbikgOiB7fTtcbiAgICAgICAgdmFyIHRoZW1lTW9kZWwgPSBlY01vZGVsLmdldFRoZW1lKCk7XG4gICAgICAgIHpyVXRpbC5tZXJnZShvcHRpb24sIHRoZW1lTW9kZWwuZ2V0KGF4aXNUeXBlICsgJ0F4aXMnKSk7XG4gICAgICAgIHpyVXRpbC5tZXJnZShvcHRpb24sIHRoaXMuZ2V0RGVmYXVsdE9wdGlvbigpKTtcbiAgICAgICAgb3B0aW9uLnR5cGUgPSBheGlzVHlwZURlZmF1bHRlcihheGlzTmFtZSwgb3B0aW9uKTtcblxuICAgICAgICBpZiAobGF5b3V0TW9kZSkge1xuICAgICAgICAgIG1lcmdlTGF5b3V0UGFyYW0ob3B0aW9uLCBpbnB1dFBvc2l0aW9uUGFyYW1zLCBsYXlvdXRNb2RlKTtcbiAgICAgICAgfVxuICAgICAgfSxcblxuICAgICAgLyoqXG4gICAgICAgKiBAb3ZlcnJpZGVcbiAgICAgICAqL1xuICAgICAgb3B0aW9uVXBkYXRlZDogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdGhpc09wdGlvbiA9IHRoaXMub3B0aW9uO1xuXG4gICAgICAgIGlmICh0aGlzT3B0aW9uLnR5cGUgPT09ICdjYXRlZ29yeScpIHtcbiAgICAgICAgICB0aGlzLl9fb3JkaW5hbE1ldGEgPSBPcmRpbmFsTWV0YS5jcmVhdGVCeUF4aXNNb2RlbCh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgfSxcblxuICAgICAgLyoqXG4gICAgICAgKiBTaG91bGQgbm90IGJlIGNhbGxlZCBiZWZvcmUgYWxsIG9mICdnZXRJbml0YWlsRGF0YScgZmluaXNoZWQuXG4gICAgICAgKiBCZWNhdXNlIGNhdGVnb3JpZXMgYXJlIGNvbGxlY3RlZCBkdXJpbmcgaW5pdGlhbGl6aW5nIGRhdGEuXG4gICAgICAgKi9cbiAgICAgIGdldENhdGVnb3JpZXM6IGZ1bmN0aW9uIChyYXdEYXRhKSB7XG4gICAgICAgIHZhciBvcHRpb24gPSB0aGlzLm9wdGlvbjsgLy8gRklYTUVcbiAgICAgICAgLy8gd2FybmluZyBpZiBjYWxsZWQgYmVmb3JlIGFsbCBvZiAnZ2V0SW5pdGFpbERhdGEnIGZpbmlzaGVkLlxuXG4gICAgICAgIGlmIChvcHRpb24udHlwZSA9PT0gJ2NhdGVnb3J5Jykge1xuICAgICAgICAgIGlmIChyYXdEYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9uLmRhdGE7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHRoaXMuX19vcmRpbmFsTWV0YS5jYXRlZ29yaWVzO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZ2V0T3JkaW5hbE1ldGE6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX19vcmRpbmFsTWV0YTtcbiAgICAgIH0sXG4gICAgICBkZWZhdWx0T3B0aW9uOiB6clV0aWwubWVyZ2VBbGwoW3t9LCBheGlzRGVmYXVsdFtheGlzVHlwZSArICdBeGlzJ10sIGV4dHJhRGVmYXVsdE9wdGlvbl0sIHRydWUpXG4gICAgfSk7XG4gIH0pO1xuICBDb21wb25lbnRNb2RlbC5yZWdpc3RlclN1YlR5cGVEZWZhdWx0ZXIoYXhpc05hbWUgKyAnQXhpcycsIHpyVXRpbC5jdXJyeShheGlzVHlwZURlZmF1bHRlciwgYXhpc05hbWUpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///269\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar defaultOption = {\\n  show: true,\\n  zlevel: 0,\\n  z: 0,\\n  // Inverse the axis.\\n  inverse: false,\\n  // Axis name displayed.\\n  name: '',\\n  // 'start' | 'middle' | 'end'\\n  nameLocation: 'end',\\n  // By degree. By defualt auto rotate by nameLocation.\\n  nameRotate: null,\\n  nameTruncate: {\\n    maxWidth: null,\\n    ellipsis: '...',\\n    placeholder: '.'\\n  },\\n  // Use global text style by default.\\n  nameTextStyle: {},\\n  // The gap between axisName and axisLine.\\n  nameGap: 15,\\n  // Default `false` to support tooltip.\\n  silent: false,\\n  // Default `false` to avoid legacy user event listener fail.\\n  triggerEvent: false,\\n  tooltip: {\\n    show: false\\n  },\\n  axisPointer: {},\\n  axisLine: {\\n    show: true,\\n    onZero: true,\\n    onZeroAxisIndex: null,\\n    lineStyle: {\\n      color: '#333',\\n      width: 1,\\n      type: 'solid'\\n    },\\n    // The arrow at both ends the the axis.\\n    symbol: ['none', 'none'],\\n    symbolSize: [10, 15]\\n  },\\n  axisTick: {\\n    show: true,\\n    // Whether axisTick is inside the grid or outside the grid.\\n    inside: false,\\n    // The length of axisTick.\\n    length: 5,\\n    lineStyle: {\\n      width: 1\\n    }\\n  },\\n  axisLabel: {\\n    show: true,\\n    // Whether axisLabel is inside the grid or outside the grid.\\n    inside: false,\\n    rotate: 0,\\n    // true | false | null/undefined (auto)\\n    showMinLabel: null,\\n    // true | false | null/undefined (auto)\\n    showMaxLabel: null,\\n    margin: 8,\\n    // formatter: null,\\n    fontSize: 12\\n  },\\n  splitLine: {\\n    show: true,\\n    lineStyle: {\\n      color: ['#ccc'],\\n      width: 1,\\n      type: 'solid'\\n    }\\n  },\\n  splitArea: {\\n    show: false,\\n    areaStyle: {\\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\\n    }\\n  }\\n};\\nvar axisDefault = {};\\naxisDefault.categoryAxis = zrUtil.merge({\\n  // The gap at both ends of the axis. For categoryAxis, boolean.\\n  boundaryGap: true,\\n  // Set false to faster category collection.\\n  // Only usefull in the case like: category is\\n  // ['2012-01-01', '2012-01-02', ...], where the input\\n  // data has been ensured not duplicate and is large data.\\n  // null means \\\"auto\\\":\\n  // if axis.data provided, do not deduplication,\\n  // else do deduplication.\\n  deduplication: null,\\n  // splitArea: {\\n  // show: false\\n  // },\\n  splitLine: {\\n    show: false\\n  },\\n  axisTick: {\\n    // If tick is align with label when boundaryGap is true\\n    alignWithLabel: false,\\n    interval: 'auto'\\n  },\\n  axisLabel: {\\n    interval: 'auto'\\n  }\\n}, defaultOption);\\naxisDefault.valueAxis = zrUtil.merge({\\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\\n  boundaryGap: [0, 0],\\n  // TODO\\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\\n  // Min value of the axis. can be:\\n  // + a number\\n  // + 'dataMin': use the min value in data.\\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\\n  // min: null,\\n  // Max value of the axis. can be:\\n  // + a number\\n  // + 'dataMax': use the max value in data.\\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\\n  // max: null,\\n  // Readonly prop, specifies start value of the range when using data zoom.\\n  // rangeStart: null\\n  // Readonly prop, specifies end value of the range when using data zoom.\\n  // rangeEnd: null\\n  // Optional value can be:\\n  // + `false`: always include value 0.\\n  // + `true`: the extent do not consider value 0.\\n  // scale: false,\\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\\n  // interval: null\\n  // Specify min interval when auto calculate tick interval.\\n  // minInterval: null\\n  // Specify max interval when auto calculate tick interval.\\n  // maxInterval: null\\n\\n}, defaultOption);\\naxisDefault.timeAxis = zrUtil.defaults({\\n  scale: true,\\n  min: 'dataMin',\\n  max: 'dataMax'\\n}, axisDefault.valueAxis);\\naxisDefault.logAxis = zrUtil.defaults({\\n  scale: true,\\n  logBase: 10\\n}, axisDefault.valueAxis);\\nvar _default = axisDefault;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///270\\n\")},function(module,exports,__webpack_require__){eval('\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \"License\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\n__webpack_require__(168);\\n\\n__webpack_require__(272);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2F4aXMuanM/YWYyNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQU8sQ0FBQyxHQUE4Qjs7QUFFdEMsbUJBQU8sQ0FBQyxHQUEwQiIsImZpbGUiOiIyNzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxucmVxdWlyZShcIi4uL2Nvb3JkL2NhcnRlc2lhbi9BeGlzTW9kZWxcIik7XG5cbnJlcXVpcmUoXCIuL2F4aXMvQ2FydGVzaWFuQXhpc1ZpZXdcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///271\\n')},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar AxisBuilder = __webpack_require__(169);\\n\\nvar AxisView = __webpack_require__(170);\\n\\nvar cartesianAxisHelper = __webpack_require__(171);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\\n//     var alignWithLabel = model.get('alignWithLabel');\\n//     if (alignWithLabel === 'auto') {\\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\\n//     }\\n//     return alignWithLabel;\\n// }\\n\\nvar CartesianAxisView = AxisView.extend({\\n  type: 'cartesianAxis',\\n  axisPointerClass: 'CartesianAxisPointer',\\n\\n  /**\\n   * @override\\n   */\\n  render: function (axisModel, ecModel, api, payload) {\\n    this.group.removeAll();\\n    var oldAxisGroup = this._axisGroup;\\n    this._axisGroup = new graphic.Group();\\n    this.group.add(this._axisGroup);\\n\\n    if (!axisModel.get('show')) {\\n      return;\\n    }\\n\\n    var gridModel = axisModel.getCoordSysModel();\\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\\n    var axisBuilder = new AxisBuilder(axisModel, layout);\\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\\n\\n    this._axisGroup.add(axisBuilder.getGroup());\\n\\n    zrUtil.each(selfBuilderAttrs, function (name) {\\n      if (axisModel.get(name + '.show')) {\\n        this['_' + name](axisModel, gridModel);\\n      }\\n    }, this);\\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\\n  },\\n  remove: function () {\\n    this._splitAreaColors = null;\\n  },\\n\\n  /**\\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\\n   * @private\\n   */\\n  _splitLine: function (axisModel, gridModel) {\\n    var axis = axisModel.axis;\\n\\n    if (axis.scale.isBlank()) {\\n      return;\\n    }\\n\\n    var splitLineModel = axisModel.getModel('splitLine');\\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\\n    var lineColors = lineStyleModel.get('color');\\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\\n    var gridRect = gridModel.coordinateSystem.getRect();\\n    var isHorizontal = axis.isHorizontal();\\n    var lineCount = 0;\\n    var ticksCoords = axis.getTicksCoords({\\n      tickModel: splitLineModel\\n    });\\n    var p1 = [];\\n    var p2 = []; // Simple optimization\\n    // Batching the lines if color are the same\\n\\n    var lineStyle = lineStyleModel.getLineStyle();\\n\\n    for (var i = 0; i < ticksCoords.length; i++) {\\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\\n\\n      if (isHorizontal) {\\n        p1[0] = tickCoord;\\n        p1[1] = gridRect.y;\\n        p2[0] = tickCoord;\\n        p2[1] = gridRect.y + gridRect.height;\\n      } else {\\n        p1[0] = gridRect.x;\\n        p1[1] = tickCoord;\\n        p2[0] = gridRect.x + gridRect.width;\\n        p2[1] = tickCoord;\\n      }\\n\\n      var colorIndex = lineCount++ % lineColors.length;\\n      var tickValue = ticksCoords[i].tickValue;\\n\\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\\n        shape: {\\n          x1: p1[0],\\n          y1: p1[1],\\n          x2: p2[0],\\n          y2: p2[1]\\n        },\\n        style: zrUtil.defaults({\\n          stroke: lineColors[colorIndex]\\n        }, lineStyle),\\n        silent: true\\n      })));\\n    }\\n  },\\n\\n  /**\\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\\n   * @private\\n   */\\n  _splitArea: function (axisModel, gridModel) {\\n    var axis = axisModel.axis;\\n\\n    if (axis.scale.isBlank()) {\\n      return;\\n    }\\n\\n    var splitAreaModel = axisModel.getModel('splitArea');\\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\\n    var areaColors = areaStyleModel.get('color');\\n    var gridRect = gridModel.coordinateSystem.getRect();\\n    var ticksCoords = axis.getTicksCoords({\\n      tickModel: splitAreaModel,\\n      clamp: true\\n    });\\n\\n    if (!ticksCoords.length) {\\n      return;\\n    } // For Making appropriate splitArea animation, the color and anid\\n    // should be corresponding to previous one if possible.\\n\\n\\n    var areaColorsLen = areaColors.length;\\n    var lastSplitAreaColors = this._splitAreaColors;\\n    var newSplitAreaColors = zrUtil.createHashMap();\\n    var colorIndex = 0;\\n\\n    if (lastSplitAreaColors) {\\n      for (var i = 0; i < ticksCoords.length; i++) {\\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\\n\\n        if (cIndex != null) {\\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\\n          break;\\n        }\\n      }\\n    }\\n\\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\\n    var areaStyle = areaStyleModel.getAreaStyle();\\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\\n\\n    for (var i = 1; i < ticksCoords.length; i++) {\\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\\n      var x;\\n      var y;\\n      var width;\\n      var height;\\n\\n      if (axis.isHorizontal()) {\\n        x = prev;\\n        y = gridRect.y;\\n        width = tickCoord - x;\\n        height = gridRect.height;\\n        prev = x + width;\\n      } else {\\n        x = gridRect.x;\\n        y = prev;\\n        width = gridRect.width;\\n        height = tickCoord - y;\\n        prev = y + height;\\n      }\\n\\n      var tickValue = ticksCoords[i - 1].tickValue;\\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\\n\\n      this._axisGroup.add(new graphic.Rect({\\n        anid: tickValue != null ? 'area_' + tickValue : null,\\n        shape: {\\n          x: x,\\n          y: y,\\n          width: width,\\n          height: height\\n        },\\n        style: zrUtil.defaults({\\n          fill: areaColors[colorIndex]\\n        }, areaStyle),\\n        silent: true\\n      }));\\n\\n      colorIndex = (colorIndex + 1) % areaColorsLen;\\n    }\\n\\n    this._splitAreaColors = newSplitAreaColors;\\n  }\\n});\\nCartesianAxisView.extend({\\n  type: 'xAxis'\\n});\\nCartesianAxisView.extend({\\n  type: 'yAxis'\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///272\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar echarts = __webpack_require__(68);\\n\\n__webpack_require__(274);\\n\\n__webpack_require__(280);\\n\\n__webpack_require__(281);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// FIXME Better way to pack data in graphic element\\n\\n/**\\n * @action\\n * @property {string} type\\n * @property {number} seriesIndex\\n * @property {number} dataIndex\\n * @property {number} [x]\\n * @property {number} [y]\\n */\\necharts.registerAction({\\n  type: 'showTip',\\n  event: 'showTip',\\n  update: 'tooltip:manuallyShowTip'\\n}, // noop\\nfunction () {});\\necharts.registerAction({\\n  type: 'hideTip',\\n  event: 'hideTip',\\n  update: 'tooltip:manuallyHideTip'\\n}, // noop\\nfunction () {});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L3Rvb2x0aXAuanM/MDA3ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxtQkFBTyxDQUFDLEVBQVk7O0FBRWxDLG1CQUFPLENBQUMsR0FBZTs7QUFFdkIsbUJBQU8sQ0FBQyxHQUF3Qjs7QUFFaEMsbUJBQU8sQ0FBQyxHQUF1Qjs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCLGNBQWMsT0FBTztBQUNyQixjQUFjLE9BQU87QUFDckIsY0FBYyxPQUFPO0FBQ3JCLGNBQWMsT0FBTztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxjQUFjIiwiZmlsZSI6IjI3My5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgZWNoYXJ0cyA9IHJlcXVpcmUoXCIuLi9lY2hhcnRzXCIpO1xuXG5yZXF1aXJlKFwiLi9heGlzUG9pbnRlclwiKTtcblxucmVxdWlyZShcIi4vdG9vbHRpcC9Ub29sdGlwTW9kZWxcIik7XG5cbnJlcXVpcmUoXCIuL3Rvb2x0aXAvVG9vbHRpcFZpZXdcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbi8vIEZJWE1FIEJldHRlciB3YXkgdG8gcGFjayBkYXRhIGluIGdyYXBoaWMgZWxlbWVudFxuXG4vKipcbiAqIEBhY3Rpb25cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0eXBlXG4gKiBAcHJvcGVydHkge251bWJlcn0gc2VyaWVzSW5kZXhcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBkYXRhSW5kZXhcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbeF1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbeV1cbiAqL1xuZWNoYXJ0cy5yZWdpc3RlckFjdGlvbih7XG4gIHR5cGU6ICdzaG93VGlwJyxcbiAgZXZlbnQ6ICdzaG93VGlwJyxcbiAgdXBkYXRlOiAndG9vbHRpcDptYW51YWxseVNob3dUaXAnXG59LCAvLyBub29wXG5mdW5jdGlvbiAoKSB7fSk7XG5lY2hhcnRzLnJlZ2lzdGVyQWN0aW9uKHtcbiAgdHlwZTogJ2hpZGVUaXAnLFxuICBldmVudDogJ2hpZGVUaXAnLFxuICB1cGRhdGU6ICd0b29sdGlwOm1hbnVhbGx5SGlkZVRpcCdcbn0sIC8vIG5vb3BcbmZ1bmN0aW9uICgpIHt9KTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///273\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar echarts = __webpack_require__(68);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar axisPointerModelHelper = __webpack_require__(93);\\n\\nvar axisTrigger = __webpack_require__(275);\\n\\n__webpack_require__(276);\\n\\n__webpack_require__(277);\\n\\n__webpack_require__(278);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// CartesianAxisPointer is not supposed to be required here. But consider\\n// echarts.simple.js and online build tooltip, which only require gridSimple,\\n// CartesianAxisPointer should be able to required somewhere.\\necharts.registerPreprocessor(function (option) {\\n  // Always has a global axisPointerModel for default setting.\\n  if (option) {\\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\\n    // is not set, remain null/undefined, otherwise it will\\n    // override existent link setting.\\n\\n    if (link && !zrUtil.isArray(link)) {\\n      option.axisPointer.link = [link];\\n    }\\n  }\\n}); // This process should proformed after coordinate systems created\\n// and series data processed. So put it on statistic processing stage.\\n\\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\\n  // allAxesInfo should be updated when setOption performed.\\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\\n}); // Broadcast to all views.\\n\\necharts.registerAction({\\n  type: 'updateAxisPointer',\\n  event: 'updateAxisPointer',\\n  update: ':updateAxisPointer'\\n}, axisTrigger);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2F4aXNQb2ludGVyLmpzP2NiOGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxFQUFZOztBQUVsQyxhQUFhLG1CQUFPLENBQUMsRUFBdUI7O0FBRTVDLDZCQUE2QixtQkFBTyxDQUFDLEVBQTJCOztBQUVoRSxrQkFBa0IsbUJBQU8sQ0FBQyxHQUEyQjs7QUFFckQsbUJBQU8sQ0FBQyxHQUFnQzs7QUFFeEMsbUJBQU8sQ0FBQyxHQUErQjs7QUFFdkMsbUJBQU8sQ0FBQyxHQUFvQzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RkFBd0Y7QUFDeEYsdUNBQXVDO0FBQ3ZDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUU7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBRTs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMjc0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbnZhciBlY2hhcnRzID0gcmVxdWlyZShcIi4uL2VjaGFydHNcIik7XG5cbnZhciB6clV0aWwgPSByZXF1aXJlKFwienJlbmRlci9saWIvY29yZS91dGlsXCIpO1xuXG52YXIgYXhpc1BvaW50ZXJNb2RlbEhlbHBlciA9IHJlcXVpcmUoXCIuL2F4aXNQb2ludGVyL21vZGVsSGVscGVyXCIpO1xuXG52YXIgYXhpc1RyaWdnZXIgPSByZXF1aXJlKFwiLi9heGlzUG9pbnRlci9heGlzVHJpZ2dlclwiKTtcblxucmVxdWlyZShcIi4vYXhpc1BvaW50ZXIvQXhpc1BvaW50ZXJNb2RlbFwiKTtcblxucmVxdWlyZShcIi4vYXhpc1BvaW50ZXIvQXhpc1BvaW50ZXJWaWV3XCIpO1xuXG5yZXF1aXJlKFwiLi9heGlzUG9pbnRlci9DYXJ0ZXNpYW5BeGlzUG9pbnRlclwiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuLy8gQ2FydGVzaWFuQXhpc1BvaW50ZXIgaXMgbm90IHN1cHBvc2VkIHRvIGJlIHJlcXVpcmVkIGhlcmUuIEJ1dCBjb25zaWRlclxuLy8gZWNoYXJ0cy5zaW1wbGUuanMgYW5kIG9ubGluZSBidWlsZCB0b29sdGlwLCB3aGljaCBvbmx5IHJlcXVpcmUgZ3JpZFNpbXBsZSxcbi8vIENhcnRlc2lhbkF4aXNQb2ludGVyIHNob3VsZCBiZSBhYmxlIHRvIHJlcXVpcmVkIHNvbWV3aGVyZS5cbmVjaGFydHMucmVnaXN0ZXJQcmVwcm9jZXNzb3IoZnVuY3Rpb24gKG9wdGlvbikge1xuICAvLyBBbHdheXMgaGFzIGEgZ2xvYmFsIGF4aXNQb2ludGVyTW9kZWwgZm9yIGRlZmF1bHQgc2V0dGluZy5cbiAgaWYgKG9wdGlvbikge1xuICAgICghb3B0aW9uLmF4aXNQb2ludGVyIHx8IG9wdGlvbi5heGlzUG9pbnRlci5sZW5ndGggPT09IDApICYmIChvcHRpb24uYXhpc1BvaW50ZXIgPSB7fSk7XG4gICAgdmFyIGxpbmsgPSBvcHRpb24uYXhpc1BvaW50ZXIubGluazsgLy8gTm9ybWFsaXplIHRvIGFycmF5IHRvIGF2b2lkIG9iamVjdCBtZXJnaW4uIEJ1dCBpZiBsaW5rXG4gICAgLy8gaXMgbm90IHNldCwgcmVtYWluIG51bGwvdW5kZWZpbmVkLCBvdGhlcndpc2UgaXQgd2lsbFxuICAgIC8vIG92ZXJyaWRlIGV4aXN0ZW50IGxpbmsgc2V0dGluZy5cblxuICAgIGlmIChsaW5rICYmICF6clV0aWwuaXNBcnJheShsaW5rKSkge1xuICAgICAgb3B0aW9uLmF4aXNQb2ludGVyLmxpbmsgPSBbbGlua107XG4gICAgfVxuICB9XG59KTsgLy8gVGhpcyBwcm9jZXNzIHNob3VsZCBwcm9mb3JtZWQgYWZ0ZXIgY29vcmRpbmF0ZSBzeXN0ZW1zIGNyZWF0ZWRcbi8vIGFuZCBzZXJpZXMgZGF0YSBwcm9jZXNzZWQuIFNvIHB1dCBpdCBvbiBzdGF0aXN0aWMgcHJvY2Vzc2luZyBzdGFnZS5cblxuZWNoYXJ0cy5yZWdpc3RlclByb2Nlc3NvcihlY2hhcnRzLlBSSU9SSVRZLlBST0NFU1NPUi5TVEFUSVNUSUMsIGZ1bmN0aW9uIChlY01vZGVsLCBhcGkpIHtcbiAgLy8gQnVpbGQgYXhpc1BvaW50ZXJNb2RlbCwgbWVyZ2luIHRvb2x0aXAuYXhpc1BvaW50ZXIgbW9kZWwgZm9yIGVhY2ggYXhpcy5cbiAgLy8gYWxsQXhlc0luZm8gc2hvdWxkIGJlIHVwZGF0ZWQgd2hlbiBzZXRPcHRpb24gcGVyZm9ybWVkLlxuICBlY01vZGVsLmdldENvbXBvbmVudCgnYXhpc1BvaW50ZXInKS5jb29yZFN5c0F4ZXNJbmZvID0gYXhpc1BvaW50ZXJNb2RlbEhlbHBlci5jb2xsZWN0KGVjTW9kZWwsIGFwaSk7XG59KTsgLy8gQnJvYWRjYXN0IHRvIGFsbCB2aWV3cy5cblxuZWNoYXJ0cy5yZWdpc3RlckFjdGlvbih7XG4gIHR5cGU6ICd1cGRhdGVBeGlzUG9pbnRlcicsXG4gIGV2ZW50OiAndXBkYXRlQXhpc1BvaW50ZXInLFxuICB1cGRhdGU6ICc6dXBkYXRlQXhpc1BvaW50ZXInXG59LCBheGlzVHJpZ2dlcik7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///274\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\n\\nvar modelHelper = __webpack_require__(93);\\n\\nvar findPointFromSeries = __webpack_require__(172);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar each = zrUtil.each;\\nvar curry = zrUtil.curry;\\nvar inner = makeInner();\\n/**\\n * Basic logic: check all axis, if they do not demand show/highlight,\\n * then hide/downplay them.\\n *\\n * @param {Object} coordSysAxesInfo\\n * @param {Object} payload\\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\\n *              trigger axisPointer and tooltip.\\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\\n *              trigger axisPointer and tooltip.\\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\\n *        [{\\n *          axisDim: 'x'|'y'|'angle'|...,\\n *          axisIndex: ...,\\n *          value: ...\\n *        }, ...]\\n * @param {Function} [payload.dispatchAction]\\n * @param {Object} [payload.tooltipOption]\\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\\n *        which can be specified in dispatchAction\\n * @param {module:echarts/model/Global} ecModel\\n * @param {module:echarts/ExtensionAPI} api\\n * @return {Object} content of event obj for echarts.connect.\\n */\\n\\nfunction _default(payload, ecModel, api) {\\n  var currTrigger = payload.currTrigger;\\n  var point = [payload.x, payload.y];\\n  var finder = payload;\\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\\n  // See #6121. But we are not able to reproduce it yet.\\n\\n  if (!coordSysAxesInfo) {\\n    return;\\n  }\\n\\n  if (illegalPoint(point)) {\\n    // Used in the default behavior of `connection`: use the sample seriesIndex\\n    // and dataIndex. And also used in the tooltipView trigger.\\n    point = findPointFromSeries({\\n      seriesIndex: finder.seriesIndex,\\n      // Do not use dataIndexInside from other ec instance.\\n      // FIXME: auto detect it?\\n      dataIndex: finder.dataIndex\\n    }, ecModel).point;\\n  }\\n\\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\\n  // and dataIndex.\\n\\n  var inputAxesInfo = finder.axesInfo;\\n  var axesInfo = coordSysAxesInfo.axesInfo;\\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\\n  var outputFinder = {};\\n  var showValueMap = {};\\n  var dataByCoordSys = {\\n    list: [],\\n    map: {}\\n  };\\n  var updaters = {\\n    showPointer: curry(showPointer, showValueMap),\\n    showTooltip: curry(showTooltip, dataByCoordSys)\\n  }; // Process for triggered axes.\\n\\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\\n    // If a point given, it must be contained by the coordinate system.\\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\\n      var axis = axisInfo.axis;\\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\\n\\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\\n        var val = inputAxisInfo && inputAxisInfo.value;\\n\\n        if (val == null && !isIllegalPoint) {\\n          val = axis.pointToData(point);\\n        }\\n\\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\\n      }\\n    });\\n  }); // Process for linked axes.\\n\\n  var linkTriggers = {};\\n  each(axesInfo, function (tarAxisInfo, tarKey) {\\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\\n\\n    if (linkGroup && !showValueMap[tarKey]) {\\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\\n\\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\\n          var val = srcValItem.value;\\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\\n          linkTriggers[tarAxisInfo.key] = val;\\n        }\\n      });\\n    }\\n  });\\n  each(linkTriggers, function (val, tarKey) {\\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\\n  });\\n  updateModelActually(showValueMap, axesInfo, outputFinder);\\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\\n  return outputFinder;\\n}\\n\\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\\n  var axis = axisInfo.axis;\\n\\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\\n    return;\\n  }\\n\\n  if (!axisInfo.involveSeries) {\\n    updaters.showPointer(axisInfo, newValue);\\n    return;\\n  } // Heavy calculation. So put it after axis.containData checking.\\n\\n\\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\\n  var payloadBatch = payloadInfo.payloadBatch;\\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\\n  // By defualt use the first involved series data as a sample to connect.\\n\\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\\n    zrUtil.extend(outputFinder, payloadBatch[0]);\\n  } // If no linkSource input, this process is for collecting link\\n  // target, where snap should not be accepted.\\n\\n\\n  if (!dontSnap && axisInfo.snap) {\\n    if (axis.containData(snapToValue) && snapToValue != null) {\\n      newValue = snapToValue;\\n    }\\n  }\\n\\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\\n  // incorrect \\\"axis value ~ series value\\\" mapping displayed in tooltip.\\n\\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\\n}\\n\\nfunction buildPayloadsBySeries(value, axisInfo) {\\n  var axis = axisInfo.axis;\\n  var dim = axis.dim;\\n  var snapToValue = value;\\n  var payloadBatch = [];\\n  var minDist = Number.MAX_VALUE;\\n  var minDiff = -1;\\n  each(axisInfo.seriesModels, function (series, idx) {\\n    var dataDim = series.getData().mapDimension(dim, true);\\n    var seriesNestestValue;\\n    var dataIndices;\\n\\n    if (series.getAxisTooltipData) {\\n      var result = series.getAxisTooltipData(dataDim, value, axis);\\n      dataIndices = result.dataIndices;\\n      seriesNestestValue = result.nestestValue;\\n    } else {\\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\\n      // when data length is not same.\\n      // false,\\n      axis.type === 'category' ? 0.5 : null);\\n\\n      if (!dataIndices.length) {\\n        return;\\n      }\\n\\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\\n    }\\n\\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\\n      return;\\n    }\\n\\n    var diff = value - seriesNestestValue;\\n    var dist = Math.abs(diff); // Consider category case\\n\\n    if (dist <= minDist) {\\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\\n        minDist = dist;\\n        minDiff = diff;\\n        snapToValue = seriesNestestValue;\\n        payloadBatch.length = 0;\\n      }\\n\\n      each(dataIndices, function (dataIndex) {\\n        payloadBatch.push({\\n          seriesIndex: series.seriesIndex,\\n          dataIndexInside: dataIndex,\\n          dataIndex: series.getData().getRawIndex(dataIndex)\\n        });\\n      });\\n    }\\n  });\\n  return {\\n    payloadBatch: payloadBatch,\\n    snapToValue: snapToValue\\n  };\\n}\\n\\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\\n  showValueMap[axisInfo.key] = {\\n    value: value,\\n    payloadBatch: payloadBatch\\n  };\\n}\\n\\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\\n  var payloadBatch = payloadInfo.payloadBatch;\\n  var axis = axisInfo.axis;\\n  var axisModel = axis.model;\\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\\n  // whose length will be used to judge whether dispatch action.\\n\\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\\n    return;\\n  }\\n\\n  var coordSysModel = axisInfo.coordSys.model;\\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\\n\\n  if (!coordSysItem) {\\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\\n      coordSysId: coordSysModel.id,\\n      coordSysIndex: coordSysModel.componentIndex,\\n      coordSysType: coordSysModel.type,\\n      coordSysMainType: coordSysModel.mainType,\\n      dataByAxis: []\\n    };\\n    dataByCoordSys.list.push(coordSysItem);\\n  }\\n\\n  coordSysItem.dataByAxis.push({\\n    axisDim: axis.dim,\\n    axisIndex: axisModel.componentIndex,\\n    axisType: axisModel.type,\\n    axisId: axisModel.id,\\n    value: value,\\n    // Caustion: viewHelper.getValueLabel is actually on \\\"view stage\\\", which\\n    // depends that all models have been updated. So it should not be performed\\n    // here. Considering axisPointerModel used here is volatile, which is hard\\n    // to be retrieve in TooltipView, we prepare parameters here.\\n    valueLabelOpt: {\\n      precision: axisPointerModel.get('label.precision'),\\n      formatter: axisPointerModel.get('label.formatter')\\n    },\\n    seriesDataIndices: payloadBatch.slice()\\n  });\\n}\\n\\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\\n\\n  each(axesInfo, function (axisInfo, key) {\\n    var option = axisInfo.axisPointerModel.option;\\n    var valItem = showValueMap[key];\\n\\n    if (valItem) {\\n      !axisInfo.useHandle && (option.status = 'show');\\n      option.value = valItem.value; // For label formatter param and highlight.\\n\\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\\n    } // When always show (e.g., handle used), remain\\n    // original value and status.\\n    else {\\n        // If hide, value still need to be set, consider\\n        // click legend to toggle axis blank.\\n        !axisInfo.useHandle && (option.status = 'hide');\\n      } // If status is 'hide', should be no info in payload.\\n\\n\\n    option.status === 'show' && outputAxesInfo.push({\\n      axisDim: axisInfo.axis.dim,\\n      axisIndex: axisInfo.axis.model.componentIndex,\\n      value: option.value\\n    });\\n  });\\n}\\n\\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\\n  // Basic logic: If no showTip required, hideTip will be dispatched.\\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\\n    dispatchAction({\\n      type: 'hideTip'\\n    });\\n    return;\\n  } // In most case only one axis (or event one series is used). It is\\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\\n  // axis on the payload.\\n\\n\\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\\n  dispatchAction({\\n    type: 'showTip',\\n    escapeConnect: true,\\n    x: point[0],\\n    y: point[1],\\n    tooltipOption: payload.tooltipOption,\\n    position: payload.position,\\n    dataIndexInside: sampleItem.dataIndexInside,\\n    dataIndex: sampleItem.dataIndex,\\n    seriesIndex: sampleItem.seriesIndex,\\n    dataByCoordSys: dataByCoordSys.list\\n  });\\n}\\n\\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\\n  // FIXME\\n  // highlight status modification shoule be a stage of main process?\\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\\n  var zr = api.getZr();\\n  var highDownKey = 'axisPointerLastHighlights';\\n  var lastHighlights = inner(zr)[highDownKey] || {};\\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\\n  // Build hash map and remove duplicate incidentally.\\n\\n  each(axesInfo, function (axisInfo, key) {\\n    var option = axisInfo.axisPointerModel.option;\\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\\n      newHighlights[key] = batchItem;\\n    });\\n  }); // Diff.\\n\\n  var toHighlight = [];\\n  var toDownplay = [];\\n  zrUtil.each(lastHighlights, function (batchItem, key) {\\n    !newHighlights[key] && toDownplay.push(batchItem);\\n  });\\n  zrUtil.each(newHighlights, function (batchItem, key) {\\n    !lastHighlights[key] && toHighlight.push(batchItem);\\n  });\\n  toDownplay.length && api.dispatchAction({\\n    type: 'downplay',\\n    escapeConnect: true,\\n    batch: toDownplay\\n  });\\n  toHighlight.length && api.dispatchAction({\\n    type: 'highlight',\\n    escapeConnect: true,\\n    batch: toHighlight\\n  });\\n}\\n\\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\\n    var inputAxisInfo = inputAxesInfo[i];\\n\\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\\n      return inputAxisInfo;\\n    }\\n  }\\n}\\n\\nfunction makeMapperParam(axisInfo) {\\n  var axisModel = axisInfo.axis.model;\\n  var item = {};\\n  var dim = item.axisDim = axisInfo.axis.dim;\\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\\n  return item;\\n}\\n\\nfunction illegalPoint(point) {\\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///275\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar echarts = __webpack_require__(68);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar AxisPointerModel = echarts.extendComponentModel({\\n  type: 'axisPointer',\\n  coordSysAxesInfo: null,\\n  defaultOption: {\\n    // 'auto' means that show when triggered by tooltip or handle.\\n    show: 'auto',\\n    // 'click' | 'mousemove' | 'none'\\n    triggerOn: null,\\n    // set default in AxisPonterView.js\\n    zlevel: 0,\\n    z: 50,\\n    type: 'line',\\n    // 'line' 'shadow' 'cross' 'none'.\\n    // axispointer triggered by tootip determine snap automatically,\\n    // see `modelHelper`.\\n    snap: false,\\n    triggerTooltip: true,\\n    value: null,\\n    status: null,\\n    // Init value depends on whether handle is used.\\n    // [group0, group1, ...]\\n    // Each group can be: {\\n    //      mapper: function () {},\\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\\n    //      xAxisId: ...,\\n    //      yAxisName: ...,\\n    //      angleAxisIndex: ...\\n    // }\\n    // mapper: can be ignored.\\n    //      input: {axisInfo, value}\\n    //      output: {axisInfo, value}\\n    link: [],\\n    // Do not set 'auto' here, otherwise global animation: false\\n    // will not effect at this axispointer.\\n    animation: null,\\n    animationDurationUpdate: 200,\\n    lineStyle: {\\n      color: '#aaa',\\n      width: 1,\\n      type: 'solid'\\n    },\\n    shadowStyle: {\\n      color: 'rgba(150,150,150,0.3)'\\n    },\\n    label: {\\n      show: true,\\n      formatter: null,\\n      // string | Function\\n      precision: 'auto',\\n      // Or a number like 0, 1, 2 ...\\n      margin: 3,\\n      color: '#fff',\\n      padding: [5, 7, 5, 7],\\n      backgroundColor: 'auto',\\n      // default: axis line color\\n      borderColor: null,\\n      borderWidth: 0,\\n      shadowBlur: 3,\\n      shadowColor: '#aaa' // Considering applicability, common style should\\n      // better not have shadowOffset.\\n      // shadowOffsetX: 0,\\n      // shadowOffsetY: 2\\n\\n    },\\n    handle: {\\n      show: false,\\n\\n      /* eslint-disable */\\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\\n      // jshint ignore:line\\n\\n      /* eslint-enable */\\n      size: 45,\\n      // handle margin is from symbol center to axis, which is stable when circular move.\\n      margin: 50,\\n      // color: '#1b8bbd'\\n      // color: '#2f4554'\\n      color: '#333',\\n      shadowBlur: 3,\\n      shadowColor: '#aaa',\\n      shadowOffsetX: 0,\\n      shadowOffsetY: 2,\\n      // For mobile performance\\n      throttle: 40\\n    }\\n  }\\n});\\nvar _default = AxisPointerModel;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2F4aXNQb2ludGVyL0F4aXNQb2ludGVyTW9kZWwuanM/NDhhYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxtQkFBTyxDQUFDLEVBQWU7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6IjI3Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG52YXIgZWNoYXJ0cyA9IHJlcXVpcmUoXCIuLi8uLi9lY2hhcnRzXCIpO1xuXG4vKlxuKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4qIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4qIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4qIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuKiB1bmRlciB0aGUgTGljZW5zZS5cbiovXG52YXIgQXhpc1BvaW50ZXJNb2RlbCA9IGVjaGFydHMuZXh0ZW5kQ29tcG9uZW50TW9kZWwoe1xuICB0eXBlOiAnYXhpc1BvaW50ZXInLFxuICBjb29yZFN5c0F4ZXNJbmZvOiBudWxsLFxuICBkZWZhdWx0T3B0aW9uOiB7XG4gICAgLy8gJ2F1dG8nIG1lYW5zIHRoYXQgc2hvdyB3aGVuIHRyaWdnZXJlZCBieSB0b29sdGlwIG9yIGhhbmRsZS5cbiAgICBzaG93OiAnYXV0bycsXG4gICAgLy8gJ2NsaWNrJyB8ICdtb3VzZW1vdmUnIHwgJ25vbmUnXG4gICAgdHJpZ2dlck9uOiBudWxsLFxuICAgIC8vIHNldCBkZWZhdWx0IGluIEF4aXNQb250ZXJWaWV3LmpzXG4gICAgemxldmVsOiAwLFxuICAgIHo6IDUwLFxuICAgIHR5cGU6ICdsaW5lJyxcbiAgICAvLyAnbGluZScgJ3NoYWRvdycgJ2Nyb3NzJyAnbm9uZScuXG4gICAgLy8gYXhpc3BvaW50ZXIgdHJpZ2dlcmVkIGJ5IHRvb3RpcCBkZXRlcm1pbmUgc25hcCBhdXRvbWF0aWNhbGx5LFxuICAgIC8vIHNlZSBgbW9kZWxIZWxwZXJgLlxuICAgIHNuYXA6IGZhbHNlLFxuICAgIHRyaWdnZXJUb29sdGlwOiB0cnVlLFxuICAgIHZhbHVlOiBudWxsLFxuICAgIHN0YXR1czogbnVsbCxcbiAgICAvLyBJbml0IHZhbHVlIGRlcGVuZHMgb24gd2hldGhlciBoYW5kbGUgaXMgdXNlZC5cbiAgICAvLyBbZ3JvdXAwLCBncm91cDEsIC4uLl1cbiAgICAvLyBFYWNoIGdyb3VwIGNhbiBiZToge1xuICAgIC8vICAgICAgbWFwcGVyOiBmdW5jdGlvbiAoKSB7fSxcbiAgICAvLyAgICAgIHNpbmdsZVRvb2x0aXA6ICdtdWx0aXBsZScsICAvLyAnbXVsdGlwbGUnIG9yICdzaW5nbGUnXG4gICAgLy8gICAgICB4QXhpc0lkOiAuLi4sXG4gICAgLy8gICAgICB5QXhpc05hbWU6IC4uLixcbiAgICAvLyAgICAgIGFuZ2xlQXhpc0luZGV4OiAuLi5cbiAgICAvLyB9XG4gICAgLy8gbWFwcGVyOiBjYW4gYmUgaWdub3JlZC5cbiAgICAvLyAgICAgIGlucHV0OiB7YXhpc0luZm8sIHZhbHVlfVxuICAgIC8vICAgICAgb3V0cHV0OiB7YXhpc0luZm8sIHZhbHVlfVxuICAgIGxpbms6IFtdLFxuICAgIC8vIERvIG5vdCBzZXQgJ2F1dG8nIGhlcmUsIG90aGVyd2lzZSBnbG9iYWwgYW5pbWF0aW9uOiBmYWxzZVxuICAgIC8vIHdpbGwgbm90IGVmZmVjdCBhdCB0aGlzIGF4aXNwb2ludGVyLlxuICAgIGFuaW1hdGlvbjogbnVsbCxcbiAgICBhbmltYXRpb25EdXJhdGlvblVwZGF0ZTogMjAwLFxuICAgIGxpbmVTdHlsZToge1xuICAgICAgY29sb3I6ICcjYWFhJyxcbiAgICAgIHdpZHRoOiAxLFxuICAgICAgdHlwZTogJ3NvbGlkJ1xuICAgIH0sXG4gICAgc2hhZG93U3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiYSgxNTAsMTUwLDE1MCwwLjMpJ1xuICAgIH0sXG4gICAgbGFiZWw6IHtcbiAgICAgIHNob3c6IHRydWUsXG4gICAgICBmb3JtYXR0ZXI6IG51bGwsXG4gICAgICAvLyBzdHJpbmcgfCBGdW5jdGlvblxuICAgICAgcHJlY2lzaW9uOiAnYXV0bycsXG4gICAgICAvLyBPciBhIG51bWJlciBsaWtlIDAsIDEsIDIgLi4uXG4gICAgICBtYXJnaW46IDMsXG4gICAgICBjb2xvcjogJyNmZmYnLFxuICAgICAgcGFkZGluZzogWzUsIDcsIDUsIDddLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnYXV0bycsXG4gICAgICAvLyBkZWZhdWx0OiBheGlzIGxpbmUgY29sb3JcbiAgICAgIGJvcmRlckNvbG9yOiBudWxsLFxuICAgICAgYm9yZGVyV2lkdGg6IDAsXG4gICAgICBzaGFkb3dCbHVyOiAzLFxuICAgICAgc2hhZG93Q29sb3I6ICcjYWFhJyAvLyBDb25zaWRlcmluZyBhcHBsaWNhYmlsaXR5LCBjb21tb24gc3R5bGUgc2hvdWxkXG4gICAgICAvLyBiZXR0ZXIgbm90IGhhdmUgc2hhZG93T2Zmc2V0LlxuICAgICAgLy8gc2hhZG93T2Zmc2V0WDogMCxcbiAgICAgIC8vIHNoYWRvd09mZnNldFk6IDJcblxuICAgIH0sXG4gICAgaGFuZGxlOiB7XG4gICAgICBzaG93OiBmYWxzZSxcblxuICAgICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAgIGljb246ICdNMTAuNywxMS45di0xLjNIOS4zdjEuM2MtNC45LDAuMy04LjgsNC40LTguOCw5LjRjMCw1LDMuOSw5LjEsOC44LDkuNGgxLjNjNC45LTAuMyw4LjgtNC40LDguOC05LjRDMTkuNSwxNi4zLDE1LjYsMTIuMiwxMC43LDExLjl6IE0xMy4zLDI0LjRINi43di0xLjJoNi42eiBNMTMuMywyMkg2Ljd2LTEuMmg2LjZ6IE0xMy4zLDE5LjZINi43di0xLjJoNi42eicsXG4gICAgICAvLyBqc2hpbnQgaWdub3JlOmxpbmVcblxuICAgICAgLyogZXNsaW50LWVuYWJsZSAqL1xuICAgICAgc2l6ZTogNDUsXG4gICAgICAvLyBoYW5kbGUgbWFyZ2luIGlzIGZyb20gc3ltYm9sIGNlbnRlciB0byBheGlzLCB3aGljaCBpcyBzdGFibGUgd2hlbiBjaXJjdWxhciBtb3ZlLlxuICAgICAgbWFyZ2luOiA1MCxcbiAgICAgIC8vIGNvbG9yOiAnIzFiOGJiZCdcbiAgICAgIC8vIGNvbG9yOiAnIzJmNDU1NCdcbiAgICAgIGNvbG9yOiAnIzMzMycsXG4gICAgICBzaGFkb3dCbHVyOiAzLFxuICAgICAgc2hhZG93Q29sb3I6ICcjYWFhJyxcbiAgICAgIHNoYWRvd09mZnNldFg6IDAsXG4gICAgICBzaGFkb3dPZmZzZXRZOiAyLFxuICAgICAgLy8gRm9yIG1vYmlsZSBwZXJmb3JtYW5jZVxuICAgICAgdGhyb3R0bGU6IDQwXG4gICAgfVxuICB9XG59KTtcbnZhciBfZGVmYXVsdCA9IEF4aXNQb2ludGVyTW9kZWw7XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///276\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar echarts = __webpack_require__(68);\\n\\nvar globalListener = __webpack_require__(173);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar AxisPointerView = echarts.extendComponentView({\\n  type: 'axisPointer',\\n  render: function (globalAxisPointerModel, ecModel, api) {\\n    var globalTooltipModel = ecModel.getComponent('tooltip');\\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\\n    // AxisPointerView to be independent to Tooltip.\\n\\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\\n      // If 'none', it is not controlled by mouse totally.\\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\\n        dispatchAction({\\n          type: 'updateAxisPointer',\\n          currTrigger: currTrigger,\\n          x: e && e.offsetX,\\n          y: e && e.offsetY\\n        });\\n      }\\n    });\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  remove: function (ecModel, api) {\\n    globalListener.unregister(api.getZr(), 'axisPointer');\\n    AxisPointerView.superApply(this._model, 'remove', arguments);\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  dispose: function (ecModel, api) {\\n    globalListener.unregister('axisPointer', api);\\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\\n  }\\n});\\nvar _default = AxisPointerView;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L2F4aXNQb2ludGVyL0F4aXNQb2ludGVyVmlldy5qcz9kNGIxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBZTs7QUFFckMscUJBQXFCLG1CQUFPLENBQUMsR0FBa0I7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4SUFBOEk7QUFDOUk7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIyNzcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIGVjaGFydHMgPSByZXF1aXJlKFwiLi4vLi4vZWNoYXJ0c1wiKTtcblxudmFyIGdsb2JhbExpc3RlbmVyID0gcmVxdWlyZShcIi4vZ2xvYmFsTGlzdGVuZXJcIik7XG5cbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBBeGlzUG9pbnRlclZpZXcgPSBlY2hhcnRzLmV4dGVuZENvbXBvbmVudFZpZXcoe1xuICB0eXBlOiAnYXhpc1BvaW50ZXInLFxuICByZW5kZXI6IGZ1bmN0aW9uIChnbG9iYWxBeGlzUG9pbnRlck1vZGVsLCBlY01vZGVsLCBhcGkpIHtcbiAgICB2YXIgZ2xvYmFsVG9vbHRpcE1vZGVsID0gZWNNb2RlbC5nZXRDb21wb25lbnQoJ3Rvb2x0aXAnKTtcbiAgICB2YXIgdHJpZ2dlck9uID0gZ2xvYmFsQXhpc1BvaW50ZXJNb2RlbC5nZXQoJ3RyaWdnZXJPbicpIHx8IGdsb2JhbFRvb2x0aXBNb2RlbCAmJiBnbG9iYWxUb29sdGlwTW9kZWwuZ2V0KCd0cmlnZ2VyT24nKSB8fCAnbW91c2Vtb3ZlfGNsaWNrJzsgLy8gUmVnaXN0ZXIgZ2xvYmFsIGxpc3RlbmVyIGluIEF4aXNQb2ludGVyVmlldyB0byBlbmFibGVcbiAgICAvLyBBeGlzUG9pbnRlclZpZXcgdG8gYmUgaW5kZXBlbmRlbnQgdG8gVG9vbHRpcC5cblxuICAgIGdsb2JhbExpc3RlbmVyLnJlZ2lzdGVyKCdheGlzUG9pbnRlcicsIGFwaSwgZnVuY3Rpb24gKGN1cnJUcmlnZ2VyLCBlLCBkaXNwYXRjaEFjdGlvbikge1xuICAgICAgLy8gSWYgJ25vbmUnLCBpdCBpcyBub3QgY29udHJvbGxlZCBieSBtb3VzZSB0b3RhbGx5LlxuICAgICAgaWYgKHRyaWdnZXJPbiAhPT0gJ25vbmUnICYmIChjdXJyVHJpZ2dlciA9PT0gJ2xlYXZlJyB8fCB0cmlnZ2VyT24uaW5kZXhPZihjdXJyVHJpZ2dlcikgPj0gMCkpIHtcbiAgICAgICAgZGlzcGF0Y2hBY3Rpb24oe1xuICAgICAgICAgIHR5cGU6ICd1cGRhdGVBeGlzUG9pbnRlcicsXG4gICAgICAgICAgY3VyclRyaWdnZXI6IGN1cnJUcmlnZ2VyLFxuICAgICAgICAgIHg6IGUgJiYgZS5vZmZzZXRYLFxuICAgICAgICAgIHk6IGUgJiYgZS5vZmZzZXRZXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAb3ZlcnJpZGVcbiAgICovXG4gIHJlbW92ZTogZnVuY3Rpb24gKGVjTW9kZWwsIGFwaSkge1xuICAgIGdsb2JhbExpc3RlbmVyLnVucmVnaXN0ZXIoYXBpLmdldFpyKCksICdheGlzUG9pbnRlcicpO1xuICAgIEF4aXNQb2ludGVyVmlldy5zdXBlckFwcGx5KHRoaXMuX21vZGVsLCAncmVtb3ZlJywgYXJndW1lbnRzKTtcbiAgfSxcblxuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICBkaXNwb3NlOiBmdW5jdGlvbiAoZWNNb2RlbCwgYXBpKSB7XG4gICAgZ2xvYmFsTGlzdGVuZXIudW5yZWdpc3RlcignYXhpc1BvaW50ZXInLCBhcGkpO1xuICAgIEF4aXNQb2ludGVyVmlldy5zdXBlckFwcGx5KHRoaXMuX21vZGVsLCAnZGlzcG9zZScsIGFyZ3VtZW50cyk7XG4gIH1cbn0pO1xudmFyIF9kZWZhdWx0ID0gQXhpc1BvaW50ZXJWaWV3O1xubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///277\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar BaseAxisPointer = __webpack_require__(279);\\n\\nvar viewHelper = __webpack_require__(174);\\n\\nvar cartesianAxisHelper = __webpack_require__(171);\\n\\nvar AxisView = __webpack_require__(170);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar CartesianAxisPointer = BaseAxisPointer.extend({\\n  /**\\n   * @override\\n   */\\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\\n    var axis = axisModel.axis;\\n    var grid = axis.grid;\\n    var axisPointerType = axisPointerModel.get('type');\\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\\n\\n    if (axisPointerType && axisPointerType !== 'none') {\\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\\n      pointerOption.style = elStyle;\\n      elOption.graphicKey = pointerOption.type;\\n      elOption.pointer = pointerOption;\\n    }\\n\\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\\n      labelInside: false\\n    });\\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\\n    return {\\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\\n    };\\n  },\\n\\n  /**\\n   * @override\\n   */\\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\\n    var axis = axisModel.axis;\\n    var grid = axis.grid;\\n    var axisExtent = axis.getGlobalExtent(true);\\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\\n    var currPosition = transform.position;\\n    currPosition[dimIndex] += delta[dimIndex];\\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\\n\\n    var tooltipOptions = [{\\n      verticalAlign: 'middle'\\n    }, {\\n      align: 'center'\\n    }];\\n    return {\\n      position: currPosition,\\n      rotation: transform.rotation,\\n      cursorPoint: cursorPoint,\\n      tooltipOption: tooltipOptions[dimIndex]\\n    };\\n  }\\n});\\n\\nfunction getCartesian(grid, axis) {\\n  var opt = {};\\n  opt[axis.dim + 'AxisIndex'] = axis.index;\\n  return grid.getCartesian(opt);\\n}\\n\\nvar pointerShapeBuilder = {\\n  line: function (axis, pixelValue, otherExtent, elStyle) {\\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\\n    graphic.subPixelOptimizeLine({\\n      shape: targetShape,\\n      style: elStyle\\n    });\\n    return {\\n      type: 'Line',\\n      shape: targetShape\\n    };\\n  },\\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\\n    var bandWidth = Math.max(1, axis.getBandWidth());\\n    var span = otherExtent[1] - otherExtent[0];\\n    return {\\n      type: 'Rect',\\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\\n    };\\n  }\\n};\\n\\nfunction getAxisDimIndex(axis) {\\n  return axis.dim === 'x' ? 0 : 1;\\n}\\n\\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\\nvar _default = CartesianAxisPointer;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///278\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar clazzUtil = __webpack_require__(71);\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar axisPointerModelHelper = __webpack_require__(93);\\n\\nvar eventTool = __webpack_require__(75);\\n\\nvar throttleUtil = __webpack_require__(110);\\n\\nvar _model = __webpack_require__(60);\\n\\nvar makeInner = _model.makeInner;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar inner = makeInner();\\nvar clone = zrUtil.clone;\\nvar bind = zrUtil.bind;\\n/**\\n * Base axis pointer class in 2D.\\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\\n */\\n\\nfunction BaseAxisPointer() {}\\n\\nBaseAxisPointer.prototype = {\\n  /**\\n   * @private\\n   */\\n  _group: null,\\n\\n  /**\\n   * @private\\n   */\\n  _lastGraphicKey: null,\\n\\n  /**\\n   * @private\\n   */\\n  _handle: null,\\n\\n  /**\\n   * @private\\n   */\\n  _dragging: false,\\n\\n  /**\\n   * @private\\n   */\\n  _lastValue: null,\\n\\n  /**\\n   * @private\\n   */\\n  _lastStatus: null,\\n\\n  /**\\n   * @private\\n   */\\n  _payloadInfo: null,\\n\\n  /**\\n   * In px, arbitrary value. Do not set too small,\\n   * no animation is ok for most cases.\\n   * @protected\\n   */\\n  animationThreshold: 15,\\n\\n  /**\\n   * @implement\\n   */\\n  render: function (axisModel, axisPointerModel, api, forceRender) {\\n    var value = axisPointerModel.get('value');\\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\\n    // be replaced when user calling setOption in not merge mode.\\n\\n    this._axisModel = axisModel;\\n    this._axisPointerModel = axisPointerModel;\\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\\n    // So it is power consuming if performing `render` each time,\\n    // especially on mobile device.\\n\\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\\n      return;\\n    }\\n\\n    this._lastValue = value;\\n    this._lastStatus = status;\\n    var group = this._group;\\n    var handle = this._handle;\\n\\n    if (!status || status === 'hide') {\\n      // Do not clear here, for animation better.\\n      group && group.hide();\\n      handle && handle.hide();\\n      return;\\n    }\\n\\n    group && group.show();\\n    handle && handle.show(); // Otherwise status is 'show'\\n\\n    var elOption = {};\\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\\n\\n    var graphicKey = elOption.graphicKey;\\n\\n    if (graphicKey !== this._lastGraphicKey) {\\n      this.clear(api);\\n    }\\n\\n    this._lastGraphicKey = graphicKey;\\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\\n\\n    if (!group) {\\n      group = this._group = new graphic.Group();\\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\\n      api.getZr().add(group);\\n    } else {\\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\\n    }\\n\\n    updateMandatoryProps(group, axisPointerModel, true);\\n\\n    this._renderHandle(value);\\n  },\\n\\n  /**\\n   * @implement\\n   */\\n  remove: function (api) {\\n    this.clear(api);\\n  },\\n\\n  /**\\n   * @implement\\n   */\\n  dispose: function (api) {\\n    this.clear(api);\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  determineAnimation: function (axisModel, axisPointerModel) {\\n    var animation = axisPointerModel.get('animation');\\n    var axis = axisModel.axis;\\n    var isCategoryAxis = axis.type === 'category';\\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\\n\\n    if (!useSnap && !isCategoryAxis) {\\n      return false;\\n    }\\n\\n    if (animation === 'auto' || animation == null) {\\n      var animationThreshold = this.animationThreshold;\\n\\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\\n        return true;\\n      } // It is important to auto animation when snap used. Consider if there is\\n      // a dataZoom, animation will be disabled when too many points exist, while\\n      // it will be enabled for better visual effect when little points exist.\\n\\n\\n      if (useSnap) {\\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\\n        var axisExtent = axis.getExtent(); // Approximate band width\\n\\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\\n      }\\n\\n      return false;\\n    }\\n\\n    return animation === true;\\n  },\\n\\n  /**\\n   * add {pointer, label, graphicKey} to elOption\\n   * @protected\\n   */\\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\\n    var pointerOption = elOption.pointer;\\n\\n    if (pointerOption) {\\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\\n      group.add(pointerEl);\\n    }\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\\n    if (elOption.label) {\\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\\n      group.add(labelEl);\\n      updateLabelShowHide(labelEl, axisPointerModel);\\n    }\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  updatePointerEl: function (group, elOption, updateProps) {\\n    var pointerEl = inner(group).pointerEl;\\n\\n    if (pointerEl) {\\n      pointerEl.setStyle(elOption.pointer.style);\\n      updateProps(pointerEl, {\\n        shape: elOption.pointer.shape\\n      });\\n    }\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\\n    var labelEl = inner(group).labelEl;\\n\\n    if (labelEl) {\\n      labelEl.setStyle(elOption.label.style);\\n      updateProps(labelEl, {\\n        // Consider text length change in vertical axis, animation should\\n        // be used on shape, otherwise the effect will be weird.\\n        shape: elOption.label.shape,\\n        position: elOption.label.position\\n      });\\n      updateLabelShowHide(labelEl, axisPointerModel);\\n    }\\n  },\\n\\n  /**\\n   * @private\\n   */\\n  _renderHandle: function (value) {\\n    if (this._dragging || !this.updateHandleTransform) {\\n      return;\\n    }\\n\\n    var axisPointerModel = this._axisPointerModel;\\n\\n    var zr = this._api.getZr();\\n\\n    var handle = this._handle;\\n    var handleModel = axisPointerModel.getModel('handle');\\n    var status = axisPointerModel.get('status');\\n\\n    if (!handleModel.get('show') || !status || status === 'hide') {\\n      handle && zr.remove(handle);\\n      this._handle = null;\\n      return;\\n    }\\n\\n    var isInit;\\n\\n    if (!this._handle) {\\n      isInit = true;\\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\\n        cursor: 'move',\\n        draggable: true,\\n        onmousemove: function (e) {\\n          // Fot mobile devicem, prevent screen slider on the button.\\n          eventTool.stop(e.event);\\n        },\\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\\n        drift: bind(this._onHandleDragMove, this),\\n        ondragend: bind(this._onHandleDragEnd, this)\\n      });\\n      zr.add(handle);\\n    }\\n\\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\\n\\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\\n\\n    var handleSize = handleModel.get('size');\\n\\n    if (!zrUtil.isArray(handleSize)) {\\n      handleSize = [handleSize, handleSize];\\n    }\\n\\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\\n\\n    this._moveHandleToValue(value, isInit);\\n  },\\n\\n  /**\\n   * @private\\n   */\\n  _moveHandleToValue: function (value, isInit) {\\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\\n  },\\n\\n  /**\\n   * @private\\n   */\\n  _onHandleDragMove: function (dx, dy) {\\n    var handle = this._handle;\\n\\n    if (!handle) {\\n      return;\\n    }\\n\\n    this._dragging = true; // Persistent for throttle.\\n\\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\\n    this._payloadInfo = trans;\\n    handle.stopAnimation();\\n    handle.attr(getHandleTransProps(trans));\\n    inner(handle).lastProp = null;\\n\\n    this._doDispatchAxisPointer();\\n  },\\n\\n  /**\\n   * Throttled method.\\n   * @private\\n   */\\n  _doDispatchAxisPointer: function () {\\n    var handle = this._handle;\\n\\n    if (!handle) {\\n      return;\\n    }\\n\\n    var payloadInfo = this._payloadInfo;\\n    var axisModel = this._axisModel;\\n\\n    this._api.dispatchAction({\\n      type: 'updateAxisPointer',\\n      x: payloadInfo.cursorPoint[0],\\n      y: payloadInfo.cursorPoint[1],\\n      tooltipOption: payloadInfo.tooltipOption,\\n      axesInfo: [{\\n        axisDim: axisModel.axis.dim,\\n        axisIndex: axisModel.componentIndex\\n      }]\\n    });\\n  },\\n\\n  /**\\n   * @private\\n   */\\n  _onHandleDragEnd: function (moveAnimation) {\\n    this._dragging = false;\\n    var handle = this._handle;\\n\\n    if (!handle) {\\n      return;\\n    }\\n\\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\\n    // axisPointer. So move handle to align the exact value position when\\n    // drag ended.\\n\\n\\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\\n    // button, and will be hidden after finger left handle button.\\n\\n\\n    this._api.dispatchAction({\\n      type: 'hideTip'\\n    });\\n  },\\n\\n  /**\\n   * Should be implemenented by sub-class if support `handle`.\\n   * @protected\\n   * @param {number} value\\n   * @param {module:echarts/model/Model} axisModel\\n   * @param {module:echarts/model/Model} axisPointerModel\\n   * @return {Object} {position: [x, y], rotation: 0}\\n   */\\n  getHandleTransform: null,\\n\\n  /**\\n   * * Should be implemenented by sub-class if support `handle`.\\n   * @protected\\n   * @param {Object} transform {position, rotation}\\n   * @param {Array.<number>} delta [dx, dy]\\n   * @param {module:echarts/model/Model} axisModel\\n   * @param {module:echarts/model/Model} axisPointerModel\\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\\n   */\\n  updateHandleTransform: null,\\n\\n  /**\\n   * @private\\n   */\\n  clear: function (api) {\\n    this._lastValue = null;\\n    this._lastStatus = null;\\n    var zr = api.getZr();\\n    var group = this._group;\\n    var handle = this._handle;\\n\\n    if (zr && group) {\\n      this._lastGraphicKey = null;\\n      group && zr.remove(group);\\n      handle && zr.remove(handle);\\n      this._group = null;\\n      this._handle = null;\\n      this._payloadInfo = null;\\n    }\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  doClear: function () {// Implemented by sub-class if necessary.\\n  },\\n\\n  /**\\n   * @protected\\n   * @param {Array.<number>} xy\\n   * @param {Array.<number>} wh\\n   * @param {number} [xDimIndex=0] or 1\\n   */\\n  buildLabel: function (xy, wh, xDimIndex) {\\n    xDimIndex = xDimIndex || 0;\\n    return {\\n      x: xy[xDimIndex],\\n      y: xy[1 - xDimIndex],\\n      width: wh[xDimIndex],\\n      height: wh[1 - xDimIndex]\\n    };\\n  }\\n};\\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\\n\\nfunction updateProps(animationModel, moveAnimation, el, props) {\\n  // Animation optimize.\\n  if (!propsEqual(inner(el).lastProp, props)) {\\n    inner(el).lastProp = props;\\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\\n  }\\n}\\n\\nfunction propsEqual(lastProps, newProps) {\\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\\n    var equals = true;\\n    zrUtil.each(newProps, function (item, key) {\\n      equals = equals && propsEqual(lastProps[key], item);\\n    });\\n    return !!equals;\\n  } else {\\n    return lastProps === newProps;\\n  }\\n}\\n\\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\\n}\\n\\nfunction getHandleTransProps(trans) {\\n  return {\\n    position: trans.position.slice(),\\n    rotation: trans.rotation || 0\\n  };\\n}\\n\\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\\n  var z = axisPointerModel.get('z');\\n  var zlevel = axisPointerModel.get('zlevel');\\n  group && group.traverse(function (el) {\\n    if (el.type !== 'group') {\\n      z != null && (el.z = z);\\n      zlevel != null && (el.zlevel = zlevel);\\n      el.silent = silent;\\n    }\\n  });\\n}\\n\\nclazzUtil.enableClassExtend(BaseAxisPointer);\\nvar _default = BaseAxisPointer;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///279\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar echarts = __webpack_require__(68);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar _default = echarts.extendComponentModel({\\n  type: 'tooltip',\\n  dependencies: ['axisPointer'],\\n  defaultOption: {\\n    zlevel: 0,\\n    z: 60,\\n    show: true,\\n    // tooltip主体内容\\n    showContent: true,\\n    // 'trigger' only works on coordinate system.\\n    // 'item' | 'axis' | 'none'\\n    trigger: 'item',\\n    // 'click' | 'mousemove' | 'none'\\n    triggerOn: 'mousemove|click',\\n    alwaysShowContent: false,\\n    displayMode: 'single',\\n    // 'single' | 'multipleByCoordSys'\\n    renderMode: 'auto',\\n    // 'auto' | 'html' | 'richText'\\n    // 'auto': use html by default, and use non-html if `document` is not defined\\n    // 'html': use html for tooltip\\n    // 'richText': use canvas, svg, and etc. for tooltip\\n    // 位置 {Array} | {Function}\\n    // position: null\\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\\n    // align: null,\\n    // verticalAlign: null,\\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\\n    confine: false,\\n    // 内容格式器：{string}（Template） ¦ {Function}\\n    // formatter: null\\n    showDelay: 0,\\n    // 隐藏延迟，单位ms\\n    hideDelay: 100,\\n    // 动画变换时间，单位s\\n    transitionDuration: 0.4,\\n    enterable: false,\\n    // 提示背景颜色，默认为透明度为0.7的黑色\\n    backgroundColor: 'rgba(50,50,50,0.7)',\\n    // 提示边框颜色\\n    borderColor: '#333',\\n    // 提示边框圆角，单位px，默认为4\\n    borderRadius: 4,\\n    // 提示边框线宽，单位px，默认为0（无边框）\\n    borderWidth: 0,\\n    // 提示内边距，单位px，默认各方向内边距为5，\\n    // 接受数组分别设定上右下左边距，同css\\n    padding: 5,\\n    // Extra css text\\n    extraCssText: '',\\n    // 坐标轴指示器，坐标轴触发有效\\n    axisPointer: {\\n      // 默认为直线\\n      // 可选为：'line' | 'shadow' | 'cross'\\n      type: 'line',\\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\\n      // 极坐标系会默认选择 angle 轴\\n      axis: 'auto',\\n      animation: 'auto',\\n      animationDurationUpdate: 200,\\n      animationEasingUpdate: 'exponentialOut',\\n      crossStyle: {\\n        color: '#999',\\n        width: 1,\\n        type: 'dashed',\\n        // TODO formatter\\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\\n        // otherwise it will always override those styles on option.axisPointer.\\n\\n      }\\n    },\\n    textStyle: {\\n      color: '#fff',\\n      fontSize: 14\\n    }\\n  }\\n});\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9saWIvY29tcG9uZW50L3Rvb2x0aXAvVG9vbHRpcE1vZGVsLmpzP2E5NmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxFQUFlOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNLElBQUk7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxPQUFPLGNBQWM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiIyODAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG4qIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4qIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4qIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4qIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4qIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4qIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4qIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxudmFyIGVjaGFydHMgPSByZXF1aXJlKFwiLi4vLi4vZWNoYXJ0c1wiKTtcblxuLypcbiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4qIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4qXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4qXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4qIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiogdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xudmFyIF9kZWZhdWx0ID0gZWNoYXJ0cy5leHRlbmRDb21wb25lbnRNb2RlbCh7XG4gIHR5cGU6ICd0b29sdGlwJyxcbiAgZGVwZW5kZW5jaWVzOiBbJ2F4aXNQb2ludGVyJ10sXG4gIGRlZmF1bHRPcHRpb246IHtcbiAgICB6bGV2ZWw6IDAsXG4gICAgejogNjAsXG4gICAgc2hvdzogdHJ1ZSxcbiAgICAvLyB0b29sdGlw5Li75L2T5YaF5a65XG4gICAgc2hvd0NvbnRlbnQ6IHRydWUsXG4gICAgLy8gJ3RyaWdnZXInIG9ubHkgd29ya3Mgb24gY29vcmRpbmF0ZSBzeXN0ZW0uXG4gICAgLy8gJ2l0ZW0nIHwgJ2F4aXMnIHwgJ25vbmUnXG4gICAgdHJpZ2dlcjogJ2l0ZW0nLFxuICAgIC8vICdjbGljaycgfCAnbW91c2Vtb3ZlJyB8ICdub25lJ1xuICAgIHRyaWdnZXJPbjogJ21vdXNlbW92ZXxjbGljaycsXG4gICAgYWx3YXlzU2hvd0NvbnRlbnQ6IGZhbHNlLFxuICAgIGRpc3BsYXlNb2RlOiAnc2luZ2xlJyxcbiAgICAvLyAnc2luZ2xlJyB8ICdtdWx0aXBsZUJ5Q29vcmRTeXMnXG4gICAgcmVuZGVyTW9kZTogJ2F1dG8nLFxuICAgIC8vICdhdXRvJyB8ICdodG1sJyB8ICdyaWNoVGV4dCdcbiAgICAvLyAnYXV0byc6IHVzZSBodG1sIGJ5IGRlZmF1bHQsIGFuZCB1c2Ugbm9uLWh0bWwgaWYgYGRvY3VtZW50YCBpcyBub3QgZGVmaW5lZFxuICAgIC8vICdodG1sJzogdXNlIGh0bWwgZm9yIHRvb2x0aXBcbiAgICAvLyAncmljaFRleHQnOiB1c2UgY2FudmFzLCBzdmcsIGFuZCBldGMuIGZvciB0b29sdGlwXG4gICAgLy8g5L2N572uIHtBcnJheX0gfCB7RnVuY3Rpb259XG4gICAgLy8gcG9zaXRpb246IG51bGxcbiAgICAvLyBDb25zaWRlciB0cmlnZ2VyZWQgZnJvbSBheGlzUG9pbnRlciBoYW5kbGUsIHZlcnRpY2FsQWxpZ24gc2hvdWxkIGJlICdtaWRkbGUnXG4gICAgLy8gYWxpZ246IG51bGwsXG4gICAgLy8gdmVydGljYWxBbGlnbjogbnVsbCxcbiAgICAvLyDmmK/lkKbnuqbmnZ8gY29udGVudCDlnKggdmlld1JlY3Qg5Lit44CC6buY6K6kIGZhbHNlIOaYr+S4uuS6huWFvOWuueS7peWJjeeJiOacrOOAglxuICAgIGNvbmZpbmU6IGZhbHNlLFxuICAgIC8vIOWGheWuueagvOW8j+WZqO+8mntzdHJpbmd977yIVGVtcGxhdGXvvIkgwqYge0Z1bmN0aW9ufVxuICAgIC8vIGZvcm1hdHRlcjogbnVsbFxuICAgIHNob3dEZWxheTogMCxcbiAgICAvLyDpmpDol4/lu7bov5/vvIzljZXkvY1tc1xuICAgIGhpZGVEZWxheTogMTAwLFxuICAgIC8vIOWKqOeUu+WPmOaNouaXtumXtO+8jOWNleS9jXNcbiAgICB0cmFuc2l0aW9uRHVyYXRpb246IDAuNCxcbiAgICBlbnRlcmFibGU6IGZhbHNlLFxuICAgIC8vIOaPkOekuuiDjOaZr+minOiJsu+8jOm7mOiupOS4uumAj+aYjuW6puS4ujAuN+eahOm7keiJslxuICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoNTAsNTAsNTAsMC43KScsXG4gICAgLy8g5o+Q56S66L655qGG6aKc6ImyXG4gICAgYm9yZGVyQ29sb3I6ICcjMzMzJyxcbiAgICAvLyDmj5DnpLrovrnmoYblnIbop5LvvIzljZXkvY1weO+8jOm7mOiupOS4ujRcbiAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgLy8g5o+Q56S66L655qGG57q/5a6977yM5Y2V5L2NcHjvvIzpu5jorqTkuLow77yI5peg6L655qGG77yJXG4gICAgYm9yZGVyV2lkdGg6IDAsXG4gICAgLy8g5o+Q56S65YaF6L656Led77yM5Y2V5L2NcHjvvIzpu5jorqTlkITmlrnlkJHlhoXovrnot53kuLo177yMXG4gICAgLy8g5o6l5Y+X5pWw57uE5YiG5Yir6K6+5a6a5LiK5Y+z5LiL5bem6L656Led77yM5ZCMY3NzXG4gICAgcGFkZGluZzogNSxcbiAgICAvLyBFeHRyYSBjc3MgdGV4dFxuICAgIGV4dHJhQ3NzVGV4dDogJycsXG4gICAgLy8g5Z2Q5qCH6L205oyH56S65Zmo77yM5Z2Q5qCH6L206Kem5Y+R5pyJ5pWIXG4gICAgYXhpc1BvaW50ZXI6IHtcbiAgICAgIC8vIOm7mOiupOS4uuebtOe6v1xuICAgICAgLy8g5Y+v6YCJ5Li677yaJ2xpbmUnIHwgJ3NoYWRvdycgfCAnY3Jvc3MnXG4gICAgICB0eXBlOiAnbGluZScsXG4gICAgICAvLyB0eXBlIOS4uiBsaW5lIOeahOaXtuWAmeacieaViO+8jOaMh+WumiB0b29sdGlwIGxpbmUg5omA5Zyo55qE6L2077yM5Y+v6YCJXG4gICAgICAvLyDlj6/pgIkgJ3gnIHwgJ3knIHwgJ2FuZ2xlJyB8ICdyYWRpdXMnIHwgJ2F1dG8nXG4gICAgICAvLyDpu5jorqQgJ2F1dG8n77yM5Lya6YCJ5oup57G75Z6L5Li6IGNhdGVnb3J5IOeahOi9tO+8jOWvueS6juWPjOaVsOWAvOi9tO+8jOesm+WNoeWwlOWdkOagh+ezu+S8mum7mOiupOmAieaLqSB4IOi9tFxuICAgICAgLy8g5p6B5Z2Q5qCH57O75Lya6buY6K6k6YCJ5oupIGFuZ2xlIOi9tFxuICAgICAgYXhpczogJ2F1dG8nLFxuICAgICAgYW5pbWF0aW9uOiAnYXV0bycsXG4gICAgICBhbmltYXRpb25EdXJhdGlvblVwZGF0ZTogMjAwLFxuICAgICAgYW5pbWF0aW9uRWFzaW5nVXBkYXRlOiAnZXhwb25lbnRpYWxPdXQnLFxuICAgICAgY3Jvc3NTdHlsZToge1xuICAgICAgICBjb2xvcjogJyM5OTknLFxuICAgICAgICB3aWR0aDogMSxcbiAgICAgICAgdHlwZTogJ2Rhc2hlZCcsXG4gICAgICAgIC8vIFRPRE8gZm9ybWF0dGVyXG4gICAgICAgIHRleHRTdHlsZToge30gLy8gbGluZVN0eWxlIGFuZCBzaGFkb3dTdHlsZSBzaG91bGQgbm90IGJlIHNwZWNpZmllZCBoZXJlLFxuICAgICAgICAvLyBvdGhlcndpc2UgaXQgd2lsbCBhbHdheXMgb3ZlcnJpZGUgdGhvc2Ugc3R5bGVzIG9uIG9wdGlvbi5heGlzUG9pbnRlci5cblxuICAgICAgfVxuICAgIH0sXG4gICAgdGV4dFN0eWxlOiB7XG4gICAgICBjb2xvcjogJyNmZmYnLFxuICAgICAgZm9udFNpemU6IDE0XG4gICAgfVxuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///280\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar echarts = __webpack_require__(68);\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar env = __webpack_require__(66);\\n\\nvar TooltipContent = __webpack_require__(282);\\n\\nvar TooltipRichContent = __webpack_require__(283);\\n\\nvar formatUtil = __webpack_require__(69);\\n\\nvar numberUtil = __webpack_require__(65);\\n\\nvar graphic = __webpack_require__(63);\\n\\nvar findPointFromSeries = __webpack_require__(172);\\n\\nvar layoutUtil = __webpack_require__(78);\\n\\nvar Model = __webpack_require__(70);\\n\\nvar globalListener = __webpack_require__(173);\\n\\nvar axisHelper = __webpack_require__(86);\\n\\nvar axisPointerViewHelper = __webpack_require__(174);\\n\\nvar _model = __webpack_require__(60);\\n\\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar bind = zrUtil.bind;\\nvar each = zrUtil.each;\\nvar parsePercent = numberUtil.parsePercent;\\nvar proxyRect = new graphic.Rect({\\n  shape: {\\n    x: -1,\\n    y: -1,\\n    width: 2,\\n    height: 2\\n  }\\n});\\n\\nvar _default = echarts.extendComponentView({\\n  type: 'tooltip',\\n  init: function (ecModel, api) {\\n    if (env.node) {\\n      return;\\n    }\\n\\n    var tooltipModel = ecModel.getComponent('tooltip');\\n    var renderMode = tooltipModel.get('renderMode');\\n    this._renderMode = getTooltipRenderMode(renderMode);\\n    var tooltipContent;\\n\\n    if (this._renderMode === 'html') {\\n      tooltipContent = new TooltipContent(api.getDom(), api);\\n      this._newLine = '<br/>';\\n    } else {\\n      tooltipContent = new TooltipRichContent(api);\\n      this._newLine = '\\\\n';\\n    }\\n\\n    this._tooltipContent = tooltipContent;\\n  },\\n  render: function (tooltipModel, ecModel, api) {\\n    if (env.node) {\\n      return;\\n    } // Reset\\n\\n\\n    this.group.removeAll();\\n    /**\\n     * @private\\n     * @type {module:echarts/component/tooltip/TooltipModel}\\n     */\\n\\n    this._tooltipModel = tooltipModel;\\n    /**\\n     * @private\\n     * @type {module:echarts/model/Global}\\n     */\\n\\n    this._ecModel = ecModel;\\n    /**\\n     * @private\\n     * @type {module:echarts/ExtensionAPI}\\n     */\\n\\n    this._api = api;\\n    /**\\n     * Should be cleaned when render.\\n     * @private\\n     * @type {Array.<Array.<Object>>}\\n     */\\n\\n    this._lastDataByCoordSys = null;\\n    /**\\n     * @private\\n     * @type {boolean}\\n     */\\n\\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\\n    var tooltipContent = this._tooltipContent;\\n    tooltipContent.update();\\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\\n\\n    this._initGlobalListener();\\n\\n    this._keepShow();\\n  },\\n  _initGlobalListener: function () {\\n    var tooltipModel = this._tooltipModel;\\n    var triggerOn = tooltipModel.get('triggerOn');\\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\\n      // If 'none', it is not controlled by mouse totally.\\n      if (triggerOn !== 'none') {\\n        if (triggerOn.indexOf(currTrigger) >= 0) {\\n          this._tryShow(e, dispatchAction);\\n        } else if (currTrigger === 'leave') {\\n          this._hide(dispatchAction);\\n        }\\n      }\\n    }, this));\\n  },\\n  _keepShow: function () {\\n    var tooltipModel = this._tooltipModel;\\n    var ecModel = this._ecModel;\\n    var api = this._api; // Try to keep the tooltip show when refreshing\\n\\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\\n    // which is not expected.\\n    && tooltipModel.get('triggerOn') !== 'none') {\\n      var self = this;\\n      clearTimeout(this._refreshUpdateTimeout);\\n      this._refreshUpdateTimeout = setTimeout(function () {\\n        // Show tip next tick after other charts are rendered\\n        // In case highlight action has wrong result\\n        // FIXME\\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\\n          x: self._lastX,\\n          y: self._lastY\\n        });\\n      });\\n    }\\n  },\\n\\n  /**\\n   * Show tip manually by\\n   * dispatchAction({\\n   *     type: 'showTip',\\n   *     x: 10,\\n   *     y: 10\\n   * });\\n   * Or\\n   * dispatchAction({\\n   *      type: 'showTip',\\n   *      seriesIndex: 0,\\n   *      dataIndex or dataIndexInside or name\\n   * });\\n   *\\n   *  TODO Batch\\n   */\\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\\n    if (payload.from === this.uid || env.node) {\\n      return;\\n    }\\n\\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\\n\\n    this._ticket = ''; // When triggered from axisPointer.\\n\\n    var dataByCoordSys = payload.dataByCoordSys;\\n\\n    if (payload.tooltip && payload.x != null && payload.y != null) {\\n      var el = proxyRect;\\n      el.position = [payload.x, payload.y];\\n      el.update();\\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\\n\\n      this._tryShow({\\n        offsetX: payload.x,\\n        offsetY: payload.y,\\n        target: el\\n      }, dispatchAction);\\n    } else if (dataByCoordSys) {\\n      this._tryShow({\\n        offsetX: payload.x,\\n        offsetY: payload.y,\\n        position: payload.position,\\n        event: {},\\n        dataByCoordSys: payload.dataByCoordSys,\\n        tooltipOption: payload.tooltipOption\\n      }, dispatchAction);\\n    } else if (payload.seriesIndex != null) {\\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\\n        return;\\n      }\\n\\n      var pointInfo = findPointFromSeries(payload, ecModel);\\n      var cx = pointInfo.point[0];\\n      var cy = pointInfo.point[1];\\n\\n      if (cx != null && cy != null) {\\n        this._tryShow({\\n          offsetX: cx,\\n          offsetY: cy,\\n          position: payload.position,\\n          target: pointInfo.el,\\n          event: {}\\n        }, dispatchAction);\\n      }\\n    } else if (payload.x != null && payload.y != null) {\\n      // FIXME\\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\\n      api.dispatchAction({\\n        type: 'updateAxisPointer',\\n        x: payload.x,\\n        y: payload.y\\n      });\\n\\n      this._tryShow({\\n        offsetX: payload.x,\\n        offsetY: payload.y,\\n        position: payload.position,\\n        target: api.getZr().findHover(payload.x, payload.y).target,\\n        event: {}\\n      }, dispatchAction);\\n    }\\n  },\\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\\n    var tooltipContent = this._tooltipContent;\\n\\n    if (!this._alwaysShowContent && this._tooltipModel) {\\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\\n    }\\n\\n    this._lastX = this._lastY = null;\\n\\n    if (payload.from !== this.uid) {\\n      this._hide(makeDispatchAction(payload, api));\\n    }\\n  },\\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\\n  // and tooltip.\\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\\n    var seriesIndex = payload.seriesIndex;\\n    var dataIndex = payload.dataIndex;\\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\\n\\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\\n      return;\\n    }\\n\\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\\n\\n    if (!seriesModel) {\\n      return;\\n    }\\n\\n    var data = seriesModel.getData();\\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\\n\\n    if (tooltipModel.get('trigger') !== 'axis') {\\n      return;\\n    }\\n\\n    api.dispatchAction({\\n      type: 'updateAxisPointer',\\n      seriesIndex: seriesIndex,\\n      dataIndex: dataIndex,\\n      position: payload.position\\n    });\\n    return true;\\n  },\\n  _tryShow: function (e, dispatchAction) {\\n    var el = e.target;\\n    var tooltipModel = this._tooltipModel;\\n\\n    if (!tooltipModel) {\\n      return;\\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\\n\\n\\n    this._lastX = e.offsetX;\\n    this._lastY = e.offsetY;\\n    var dataByCoordSys = e.dataByCoordSys;\\n\\n    if (dataByCoordSys && dataByCoordSys.length) {\\n      this._showAxisTooltip(dataByCoordSys, e);\\n    } // Always show item tooltip if mouse is on the element with dataIndex\\n    else if (el && el.dataIndex != null) {\\n        this._lastDataByCoordSys = null;\\n\\n        this._showSeriesItemTooltip(e, el, dispatchAction);\\n      } // Tooltip provided directly. Like legend.\\n      else if (el && el.tooltip) {\\n          this._lastDataByCoordSys = null;\\n\\n          this._showComponentItemTooltip(e, el, dispatchAction);\\n        } else {\\n          this._lastDataByCoordSys = null;\\n\\n          this._hide(dispatchAction);\\n        }\\n  },\\n  _showOrMove: function (tooltipModel, cb) {\\n    // showDelay is used in this case: tooltip.enterable is set\\n    // as true. User intent to move mouse into tooltip and click\\n    // something. `showDelay` makes it easyer to enter the content\\n    // but tooltip do not move immediately.\\n    var delay = tooltipModel.get('showDelay');\\n    cb = zrUtil.bind(cb, this);\\n    clearTimeout(this._showTimout);\\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\\n  },\\n  _showAxisTooltip: function (dataByCoordSys, e) {\\n    var ecModel = this._ecModel;\\n    var globalTooltipModel = this._tooltipModel;\\n    var point = [e.offsetX, e.offsetY];\\n    var singleDefaultHTML = [];\\n    var singleParamsList = [];\\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\\n    var renderMode = this._renderMode;\\n    var newLine = this._newLine;\\n    var markers = {};\\n    each(dataByCoordSys, function (itemCoordSys) {\\n      // var coordParamList = [];\\n      // var coordDefaultHTML = [];\\n      // var coordTooltipModel = buildTooltipModel([\\n      //     e.tooltipOption,\\n      //     itemCoordSys.tooltipOption,\\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\\n      //     globalTooltipModel\\n      // ]);\\n      // var displayMode = coordTooltipModel.get('displayMode');\\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\\n      each(itemCoordSys.dataByAxis, function (item) {\\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\\n        var axisValue = item.value;\\n        var seriesDefaultHTML = [];\\n\\n        if (!axisModel || axisValue == null) {\\n          return;\\n        }\\n\\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\\n          var dataIndex = idxItem.dataIndexInside;\\n          var dataParams = series && series.getDataParams(dataIndex);\\n          dataParams.axisDim = item.axisDim;\\n          dataParams.axisIndex = item.axisIndex;\\n          dataParams.axisType = item.axisType;\\n          dataParams.axisId = item.axisId;\\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\\n          dataParams.axisValueLabel = valueLabel;\\n\\n          if (dataParams) {\\n            singleParamsList.push(dataParams);\\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\\n            var html;\\n\\n            if (zrUtil.isObject(seriesTooltip)) {\\n              html = seriesTooltip.html;\\n              var newMarkers = seriesTooltip.markers;\\n              zrUtil.merge(markers, newMarkers);\\n            } else {\\n              html = seriesTooltip;\\n            }\\n\\n            seriesDefaultHTML.push(html);\\n          }\\n        }); // Default tooltip content\\n        // FIXME\\n        // (1) shold be the first data which has name?\\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\\n\\n        var firstLine = valueLabel;\\n\\n        if (renderMode !== 'html') {\\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\\n        } else {\\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\\n        }\\n      });\\n    }, this); // In most case, the second axis is shown upper than the first one.\\n\\n    singleDefaultHTML.reverse();\\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\\n    var positionExpr = e.position;\\n\\n    this._showOrMove(singleTooltipModel, function () {\\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\\n      } else {\\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\\n      }\\n    }); // Do not trigger events here, because this branch only be entered\\n    // from dispatchAction.\\n\\n  },\\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\\n    var ecModel = this._ecModel; // Use dataModel in element if possible\\n    // Used when mouseover on a element like markPoint or edge\\n    // In which case, the data is not main data in series.\\n\\n    var seriesIndex = el.seriesIndex;\\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\\n\\n    var dataModel = el.dataModel || seriesModel;\\n    var dataIndex = el.dataIndex;\\n    var dataType = el.dataType;\\n    var data = dataModel.getData();\\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\\n    var tooltipTrigger = tooltipModel.get('trigger');\\n\\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\\n      return;\\n    }\\n\\n    var params = dataModel.getDataParams(dataIndex, dataType);\\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\\n    var defaultHtml;\\n    var markers;\\n\\n    if (zrUtil.isObject(seriesTooltip)) {\\n      defaultHtml = seriesTooltip.html;\\n      markers = seriesTooltip.markers;\\n    } else {\\n      defaultHtml = seriesTooltip;\\n      markers = null;\\n    }\\n\\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\\n\\n    this._showOrMove(tooltipModel, function () {\\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\\n    }); // FIXME\\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\\n\\n\\n    dispatchAction({\\n      type: 'showTip',\\n      dataIndexInside: dataIndex,\\n      dataIndex: data.getRawIndex(dataIndex),\\n      seriesIndex: seriesIndex,\\n      from: this.uid\\n    });\\n  },\\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\\n    var tooltipOpt = el.tooltip;\\n\\n    if (typeof tooltipOpt === 'string') {\\n      var content = tooltipOpt;\\n      tooltipOpt = {\\n        content: content,\\n        // Fixed formatter\\n        formatter: content\\n      };\\n    }\\n\\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\\n    var defaultHtml = subTooltipModel.get('content');\\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\\n    // only works on cooridinate system. In fact, we have not found case\\n    // that requires setting `trigger` nothing on component yet.\\n\\n    this._showOrMove(subTooltipModel, function () {\\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\\n\\n\\n    dispatchAction({\\n      type: 'showTip',\\n      from: this.uid\\n    });\\n  },\\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\\n    // Reset ticket\\n    this._ticket = '';\\n\\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\\n      return;\\n    }\\n\\n    var tooltipContent = this._tooltipContent;\\n    var formatter = tooltipModel.get('formatter');\\n    positionExpr = positionExpr || tooltipModel.get('position');\\n    var html = defaultHtml;\\n\\n    if (formatter && typeof formatter === 'string') {\\n      html = formatUtil.formatTpl(formatter, params, true);\\n    } else if (typeof formatter === 'function') {\\n      var callback = bind(function (cbTicket, html) {\\n        if (cbTicket === this._ticket) {\\n          tooltipContent.setContent(html, markers, tooltipModel);\\n\\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\\n        }\\n      }, this);\\n      this._ticket = asyncTicket;\\n      html = formatter(params, asyncTicket, callback);\\n    }\\n\\n    tooltipContent.setContent(html, markers, tooltipModel);\\n    tooltipContent.show(tooltipModel);\\n\\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\\n  },\\n\\n  /**\\n   * @param  {string|Function|Array.<number>|Object} positionExpr\\n   * @param  {number} x Mouse x\\n   * @param  {number} y Mouse y\\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\\n   * @param  {Object|<Array.<Object>} params\\n   * @param  {module:zrender/Element} el target element\\n   * @param  {module:echarts/ExtensionAPI} api\\n   * @return {Array.<number>}\\n   */\\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\\n    var viewWidth = this._api.getWidth();\\n\\n    var viewHeight = this._api.getHeight();\\n\\n    positionExpr = positionExpr || tooltipModel.get('position');\\n    var contentSize = content.getSize();\\n    var align = tooltipModel.get('align');\\n    var vAlign = tooltipModel.get('verticalAlign');\\n    var rect = el && el.getBoundingRect().clone();\\n    el && rect.applyTransform(el.transform);\\n\\n    if (typeof positionExpr === 'function') {\\n      // Callback of position can be an array or a string specify the position\\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\\n        viewSize: [viewWidth, viewHeight],\\n        contentSize: contentSize.slice()\\n      });\\n    }\\n\\n    if (zrUtil.isArray(positionExpr)) {\\n      x = parsePercent(positionExpr[0], viewWidth);\\n      y = parsePercent(positionExpr[1], viewHeight);\\n    } else if (zrUtil.isObject(positionExpr)) {\\n      positionExpr.width = contentSize[0];\\n      positionExpr.height = contentSize[1];\\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\\n        width: viewWidth,\\n        height: viewHeight\\n      });\\n      x = layoutRect.x;\\n      y = layoutRect.y;\\n      align = null; // When positionExpr is left/top/right/bottom,\\n      // align and verticalAlign will not work.\\n\\n      vAlign = null;\\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\\n    else if (typeof positionExpr === 'string' && el) {\\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\\n        x = pos[0];\\n        y = pos[1];\\n      } else {\\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\\n        x = pos[0];\\n        y = pos[1];\\n      }\\n\\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\\n\\n    if (tooltipModel.get('confine')) {\\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\\n      x = pos[0];\\n      y = pos[1];\\n    }\\n\\n    content.moveTo(x, y);\\n  },\\n  // FIXME\\n  // Should we remove this but leave this to user?\\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\\n    var lastCoordSys = this._lastDataByCoordSys;\\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\\n        var thisItem = thisDataByAxis[indexAxis] || {};\\n        var lastIndices = lastItem.seriesDataIndices || [];\\n        var newIndices = thisItem.seriesDataIndices || [];\\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\\n          var newIdxItem = newIndices[j];\\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\\n        });\\n      });\\n    });\\n    this._lastDataByCoordSys = dataByCoordSys;\\n    return !!contentNotChanged;\\n  },\\n  _hide: function (dispatchAction) {\\n    // Do not directly hideLater here, because this behavior may be prevented\\n    // in dispatchAction when showTip is dispatched.\\n    // FIXME\\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\\n    this._lastDataByCoordSys = null;\\n    dispatchAction({\\n      type: 'hideTip',\\n      from: this.uid\\n    });\\n  },\\n  dispose: function (ecModel, api) {\\n    if (env.node) {\\n      return;\\n    }\\n\\n    this._tooltipContent.hide();\\n\\n    globalListener.unregister('itemTooltip', api);\\n  }\\n});\\n/**\\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\\n * From top to bottom. (the last one should be globalTooltipModel);\\n */\\n\\n\\nfunction buildTooltipModel(modelCascade) {\\n  var resultModel = modelCascade.pop();\\n\\n  while (modelCascade.length) {\\n    var tooltipOpt = modelCascade.pop();\\n\\n    if (tooltipOpt) {\\n      if (Model.isInstance(tooltipOpt)) {\\n        tooltipOpt = tooltipOpt.get('tooltip', true);\\n      } // In each data item tooltip can be simply write:\\n      // {\\n      //  value: 10,\\n      //  tooltip: 'Something you need to know'\\n      // }\\n\\n\\n      if (typeof tooltipOpt === 'string') {\\n        tooltipOpt = {\\n          formatter: tooltipOpt\\n        };\\n      }\\n\\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\\n    }\\n  }\\n\\n  return resultModel;\\n}\\n\\nfunction makeDispatchAction(payload, api) {\\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\\n}\\n\\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\\n  var size = content.getOuterSize();\\n  var width = size.width;\\n  var height = size.height;\\n\\n  if (gapH != null) {\\n    if (x + width + gapH > viewWidth) {\\n      x -= width + gapH;\\n    } else {\\n      x += gapH;\\n    }\\n  }\\n\\n  if (gapV != null) {\\n    if (y + height + gapV > viewHeight) {\\n      y -= height + gapV;\\n    } else {\\n      y += gapV;\\n    }\\n  }\\n\\n  return [x, y];\\n}\\n\\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\\n  var size = content.getOuterSize();\\n  var width = size.width;\\n  var height = size.height;\\n  x = Math.min(x + width, viewWidth) - width;\\n  y = Math.min(y + height, viewHeight) - height;\\n  x = Math.max(x, 0);\\n  y = Math.max(y, 0);\\n  return [x, y];\\n}\\n\\nfunction calcTooltipPosition(position, rect, contentSize) {\\n  var domWidth = contentSize[0];\\n  var domHeight = contentSize[1];\\n  var gap = 5;\\n  var x = 0;\\n  var y = 0;\\n  var rectWidth = rect.width;\\n  var rectHeight = rect.height;\\n\\n  switch (position) {\\n    case 'inside':\\n      x = rect.x + rectWidth / 2 - domWidth / 2;\\n      y = rect.y + rectHeight / 2 - domHeight / 2;\\n      break;\\n\\n    case 'top':\\n      x = rect.x + rectWidth / 2 - domWidth / 2;\\n      y = rect.y - domHeight - gap;\\n      break;\\n\\n    case 'bottom':\\n      x = rect.x + rectWidth / 2 - domWidth / 2;\\n      y = rect.y + rectHeight + gap;\\n      break;\\n\\n    case 'left':\\n      x = rect.x - domWidth - gap;\\n      y = rect.y + rectHeight / 2 - domHeight / 2;\\n      break;\\n\\n    case 'right':\\n      x = rect.x + rectWidth + gap;\\n      y = rect.y + rectHeight / 2 - domHeight / 2;\\n  }\\n\\n  return [x, y];\\n}\\n\\nfunction isCenterAlign(align) {\\n  return align === 'center' || align === 'middle';\\n}\\n\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///281\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar zrColor = __webpack_require__(82);\\n\\nvar eventUtil = __webpack_require__(75);\\n\\nvar env = __webpack_require__(66);\\n\\nvar formatUtil = __webpack_require__(69);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\nvar each = zrUtil.each;\\nvar toCamelCase = formatUtil.toCamelCase;\\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\\n/**\\n * @param {number} duration\\n * @return {string}\\n * @inner\\n */\\n\\nfunction assembleTransition(duration) {\\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\\n  return zrUtil.map(vendors, function (vendorPrefix) {\\n    return vendorPrefix + 'transition:' + transitionText;\\n  }).join(';');\\n}\\n/**\\n * @param {Object} textStyle\\n * @return {string}\\n * @inner\\n */\\n\\n\\nfunction assembleFont(textStyleModel) {\\n  var cssText = [];\\n  var fontSize = textStyleModel.get('fontSize');\\n  var color = textStyleModel.getTextColor();\\n  color && cssText.push('color:' + color);\\n  cssText.push('font:' + textStyleModel.getFont());\\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\\n  each(['decoration', 'align'], function (name) {\\n    var val = textStyleModel.get(name);\\n    val && cssText.push('text-' + name + ':' + val);\\n  });\\n  return cssText.join(';');\\n}\\n/**\\n * @param {Object} tooltipModel\\n * @return {string}\\n * @inner\\n */\\n\\n\\nfunction assembleCssText(tooltipModel) {\\n  var cssText = [];\\n  var transitionDuration = tooltipModel.get('transitionDuration');\\n  var backgroundColor = tooltipModel.get('backgroundColor');\\n  var textStyleModel = tooltipModel.getModel('textStyle');\\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\\n\\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\\n\\n  if (backgroundColor) {\\n    if (env.canvasSupported) {\\n      cssText.push('background-Color:' + backgroundColor);\\n    } else {\\n      // for ie\\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\\n      cssText.push('filter:alpha(opacity=70)');\\n    }\\n  } // Border style\\n\\n\\n  each(['width', 'color', 'radius'], function (name) {\\n    var borderName = 'border-' + name;\\n    var camelCase = toCamelCase(borderName);\\n    var val = tooltipModel.get(camelCase);\\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\\n  }); // Text style\\n\\n  cssText.push(assembleFont(textStyleModel)); // Padding\\n\\n  if (padding != null) {\\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\\n  }\\n\\n  return cssText.join(';') + ';';\\n}\\n/**\\n * @alias module:echarts/component/tooltip/TooltipContent\\n * @constructor\\n */\\n\\n\\nfunction TooltipContent(container, api) {\\n  if (env.wxa) {\\n    return null;\\n  }\\n\\n  var el = document.createElement('div');\\n  var zr = this._zr = api.getZr();\\n  this.el = el;\\n  this._x = api.getWidth() / 2;\\n  this._y = api.getHeight() / 2;\\n  container.appendChild(el);\\n  this._container = container;\\n  this._show = false;\\n  /**\\n   * @private\\n   */\\n\\n  this._hideTimeout;\\n  var self = this;\\n\\n  el.onmouseenter = function () {\\n    // clear the timeout in hideLater and keep showing tooltip\\n    if (self._enterable) {\\n      clearTimeout(self._hideTimeout);\\n      self._show = true;\\n    }\\n\\n    self._inContent = true;\\n  };\\n\\n  el.onmousemove = function (e) {\\n    e = e || window.event;\\n\\n    if (!self._enterable) {\\n      // Try trigger zrender event to avoid mouse\\n      // in and out shape too frequently\\n      var handler = zr.handler;\\n      eventUtil.normalizeEvent(container, e, true);\\n      handler.dispatch('mousemove', e);\\n    }\\n  };\\n\\n  el.onmouseleave = function () {\\n    if (self._enterable) {\\n      if (self._show) {\\n        self.hideLater(self._hideDelay);\\n      }\\n    }\\n\\n    self._inContent = false;\\n  };\\n}\\n\\nTooltipContent.prototype = {\\n  constructor: TooltipContent,\\n\\n  /**\\n   * @private\\n   * @type {boolean}\\n   */\\n  _enterable: true,\\n\\n  /**\\n   * Update when tooltip is rendered\\n   */\\n  update: function () {\\n    // FIXME\\n    // Move this logic to ec main?\\n    var container = this._container;\\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\\n    var domStyle = container.style;\\n\\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\\n      domStyle.position = 'relative';\\n    } // Hide the tooltip\\n    // PENDING\\n    // this.hide();\\n\\n  },\\n  show: function (tooltipModel) {\\n    clearTimeout(this._hideTimeout);\\n    var el = this.el;\\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\\n    el.style.display = el.innerHTML ? 'block' : 'none'; // If mouse occsionally move over the tooltip, a mouseout event will be\\n    // triggered by canvas, and cuase some unexpectable result like dragging\\n    // stop, \\\"unfocusAdjacency\\\". Here `pointer-events: none` is used to solve\\n    // it. Although it is not suppored by IE8~IE10, fortunately it is a rare\\n    // scenario.\\n\\n    el.style.pointerEvents = this._enterable ? 'auto' : 'none';\\n    this._show = true;\\n  },\\n  setContent: function (content) {\\n    this.el.innerHTML = content == null ? '' : content;\\n  },\\n  setEnterable: function (enterable) {\\n    this._enterable = enterable;\\n  },\\n  getSize: function () {\\n    var el = this.el;\\n    return [el.clientWidth, el.clientHeight];\\n  },\\n  moveTo: function (x, y) {\\n    // xy should be based on canvas root. But tooltipContent is\\n    // the sibling of canvas root. So padding of ec container\\n    // should be considered here.\\n    var zr = this._zr;\\n    var viewportRootOffset;\\n\\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\\n      x += viewportRootOffset.offsetLeft;\\n      y += viewportRootOffset.offsetTop;\\n    }\\n\\n    var style = this.el.style;\\n    style.left = x + 'px';\\n    style.top = y + 'px';\\n    this._x = x;\\n    this._y = y;\\n  },\\n  hide: function () {\\n    this.el.style.display = 'none';\\n    this._show = false;\\n  },\\n  hideLater: function (time) {\\n    if (this._show && !(this._inContent && this._enterable)) {\\n      if (time) {\\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\\n\\n        this._show = false;\\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\\n      } else {\\n        this.hide();\\n      }\\n    }\\n  },\\n  isShow: function () {\\n    return this._show;\\n  },\\n  getOuterSize: function () {\\n    var width = this.el.clientWidth;\\n    var height = this.el.clientHeight; // Consider browser compatibility.\\n    // IE8 does not support getComputedStyle.\\n\\n    if (document.defaultView && document.defaultView.getComputedStyle) {\\n      var stl = document.defaultView.getComputedStyle(this.el);\\n\\n      if (stl) {\\n        width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\\n        height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\\n      }\\n    }\\n\\n    return {\\n      width: width,\\n      height: height\\n    };\\n  }\\n};\\nvar _default = TooltipContent;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///282\\n\")},function(module,exports,__webpack_require__){eval(\"\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n\\nvar zrUtil = __webpack_require__(59);\\n\\nvar Text = __webpack_require__(105);\\n\\n/*\\n* Licensed to the Apache Software Foundation (ASF) under one\\n* or more contributor license agreements.  See the NOTICE file\\n* distributed with this work for additional information\\n* regarding copyright ownership.  The ASF licenses this file\\n* to you under the Apache License, Version 2.0 (the\\n* \\\"License\\\"); you may not use this file except in compliance\\n* with the License.  You may obtain a copy of the License at\\n*\\n*   http://www.apache.org/licenses/LICENSE-2.0\\n*\\n* Unless required by applicable law or agreed to in writing,\\n* software distributed under the License is distributed on an\\n* \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n* KIND, either express or implied.  See the License for the\\n* specific language governing permissions and limitations\\n* under the License.\\n*/\\n// import Group from 'zrender/src/container/Group';\\n\\n/**\\n * @alias module:echarts/component/tooltip/TooltipRichContent\\n * @constructor\\n */\\nfunction TooltipRichContent(api) {\\n  this._zr = api.getZr();\\n  this._show = false;\\n  /**\\n   * @private\\n   */\\n\\n  this._hideTimeout;\\n}\\n\\nTooltipRichContent.prototype = {\\n  constructor: TooltipRichContent,\\n\\n  /**\\n   * @private\\n   * @type {boolean}\\n   */\\n  _enterable: true,\\n\\n  /**\\n   * Update when tooltip is rendered\\n   */\\n  update: function () {// noop\\n  },\\n  show: function (tooltipModel) {\\n    if (this._hideTimeout) {\\n      clearTimeout(this._hideTimeout);\\n    }\\n\\n    this.el.attr('show', true);\\n    this._show = true;\\n  },\\n\\n  /**\\n   * Set tooltip content\\n   *\\n   * @param {string} content rich text string of content\\n   * @param {Object} markerRich rich text style\\n   * @param {Object} tooltipModel tooltip model\\n   */\\n  setContent: function (content, markerRich, tooltipModel) {\\n    if (this.el) {\\n      this._zr.remove(this.el);\\n    }\\n\\n    var markers = {};\\n    var text = content;\\n    var prefix = '{marker';\\n    var suffix = '|}';\\n    var startId = text.indexOf(prefix);\\n\\n    while (startId >= 0) {\\n      var endId = text.indexOf(suffix);\\n      var name = text.substr(startId + prefix.length, endId - startId - prefix.length);\\n\\n      if (name.indexOf('sub') > -1) {\\n        markers['marker' + name] = {\\n          textWidth: 4,\\n          textHeight: 4,\\n          textBorderRadius: 2,\\n          textBackgroundColor: markerRich[name],\\n          // TODO: textOffset is not implemented for rich text\\n          textOffset: [3, 0]\\n        };\\n      } else {\\n        markers['marker' + name] = {\\n          textWidth: 10,\\n          textHeight: 10,\\n          textBorderRadius: 5,\\n          textBackgroundColor: markerRich[name]\\n        };\\n      }\\n\\n      text = text.substr(endId + 1);\\n      startId = text.indexOf('{marker');\\n    }\\n\\n    this.el = new Text({\\n      style: {\\n        rich: markers,\\n        text: content,\\n        textLineHeight: 20,\\n        textBackgroundColor: tooltipModel.get('backgroundColor'),\\n        textBorderRadius: tooltipModel.get('borderRadius'),\\n        textFill: tooltipModel.get('textStyle.color'),\\n        textPadding: tooltipModel.get('padding')\\n      },\\n      z: tooltipModel.get('z')\\n    });\\n\\n    this._zr.add(this.el);\\n\\n    var self = this;\\n    this.el.on('mouseover', function () {\\n      // clear the timeout in hideLater and keep showing tooltip\\n      if (self._enterable) {\\n        clearTimeout(self._hideTimeout);\\n        self._show = true;\\n      }\\n\\n      self._inContent = true;\\n    });\\n    this.el.on('mouseout', function () {\\n      if (self._enterable) {\\n        if (self._show) {\\n          self.hideLater(self._hideDelay);\\n        }\\n      }\\n\\n      self._inContent = false;\\n    });\\n  },\\n  setEnterable: function (enterable) {\\n    this._enterable = enterable;\\n  },\\n  getSize: function () {\\n    var bounding = this.el.getBoundingRect();\\n    return [bounding.width, bounding.height];\\n  },\\n  moveTo: function (x, y) {\\n    if (this.el) {\\n      this.el.attr('position', [x, y]);\\n    }\\n  },\\n  hide: function () {\\n    this.el.hide();\\n    this._show = false;\\n  },\\n  hideLater: function (time) {\\n    if (this._show && !(this._inContent && this._enterable)) {\\n      if (time) {\\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\\n\\n        this._show = false;\\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\\n      } else {\\n        this.hide();\\n      }\\n    }\\n  },\\n  isShow: function () {\\n    return this._show;\\n  },\\n  getOuterSize: function () {\\n    return this.getSize();\\n  }\\n};\\nvar _default = TooltipRichContent;\\nmodule.exports = _default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///283\\n\")}])]);","extractedComments":[]}